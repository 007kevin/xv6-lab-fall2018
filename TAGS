
grade-lab1,445
r = Runner(save("jos.out"),r6,57
def test_jos():test_jos10,150
def test_printf():test_printf14,211
BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"BACKTRACE_RE17,275
def test_backtrace_count():test_backtrace_count20,386
def test_backtrace_arguments():test_backtrace_arguments25,544
def test_backtrace_symbols():test_backtrace_symbols31,777
def test_backtrace_lines():test_backtrace_lines37,1018

mergedep.pl,31
sub readdeps {readdeps27,909

lib/readline.c,106
#define BUFLEN BUFLEN4,47
static char buf[BUFLEN];buf5,67
readline(const char *prompt)readline8,100

lib/string.c,1018
#define ASM ASM9,264
strlen(const char *s)strlen12,283
strnlen(const char *s, size_t size)strnlen22,371
strcpy(char *dst, const char *src)strcpy32,496
strcat(char *dst, const char *src)strcat43,636
strncpy(char *dst, const char *src, size_t size) {strncpy51,745
strlcpy(char *dst, const char *src, size_t size)strlcpy66,998
strcmp(const char *p, const char *q)strcmp80,1201
strncmp(const char *p, const char *q, size_t n)strncmp88,1340
strchr(const char *s, char c)strchr101,1645
strfind(const char *s, char c)strfind112,1889
memset(void *v, int c, size_t n)memset122,2002
memmove(void *dst, const void *src, size_t n)memmove142,2359
memset(void *v, int c, size_t n)memset174,3099
memmove(void *dst, const void *src, size_t n)memmove188,3221
memcpy(void *dst, const void *src, size_t n)memcpy209,3470
memcmp(const void *v1, const void *v2, size_t n)memcmp215,3554
memfind(const void *s, int c, size_t n)memfind230,3801
strtol(const char *s, char **endptr, int base)strtol240,4001

lib/printfmt.c,845
static const char * const error_string[MAXERROR] =error_string21,589
printnum(void (*putch)(int, void*), void *putdat,printnum36,995
getuint(va_list *ap, int lflag)getuint55,1609
getint(va_list *ap, int lflag)getint68,1897
vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)vprintfmt83,2193
printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)printfmt247,5283
struct sprintbuf {sprintbuf256,5443
	char *buf;buf257,5462
	char *buf;sprintbuf::buf257,5462
	char *ebuf;ebuf258,5474
	char *ebuf;sprintbuf::ebuf258,5474
	int cnt;cnt259,5487
	int cnt;sprintbuf::cnt259,5487
sprintputch(int ch, struct sprintbuf *b)sprintputch263,5513
vsnprintf(char *buf, int n, const char *fmt, va_list ap)vsnprintf271,5615
snprintf(char *buf, int n, const char *fmt, ...)snprintf288,5913

inc/memlayout.h,1127
#define JOS_INC_MEMLAYOUT_HJOS_INC_MEMLAYOUT_H2,28
#define GD_KT GD_KT15,324
#define GD_KD GD_KD16,366
#define GD_UT GD_UT17,408
#define GD_UD GD_UD18,448
#define GD_TSS0 GD_TSS019,488
#define	KERNBASE	KERNBASE87,4609
#define IOPHYSMEM	IOPHYSMEM92,4813
#define EXTPHYSMEM	EXTPHYSMEM93,4840
#define KSTACKTOP	KSTACKTOP96,4886
#define KSTKSIZE	KSTKSIZE97,4913
#define KSTKGAP	KSTKGAP98,4971
#define MMIOLIM	MMIOLIM101,5057
#define MMIOBASE	MMIOBASE102,5095
#define ULIM	ULIM104,5132
#define UVPT	UVPT112,5360
#define UPAGES	UPAGES114,5433
#define UENVS	UENVS116,5514
#define UTOP	UTOP123,5649
#define UXSTACKTOP	UXSTACKTOP125,5709
#define USTACKTOP	USTACKTOP128,5836
#define UTEXT	UTEXT131,5912
#define UTEMP	UTEMP134,6007
#define PFTEMP	PFTEMP137,6167
#define USTABDATA	USTABDATA139,6264
typedef uint32_t pte_t;pte_t143,6319
typedef uint32_t pde_t;pde_t144,6343
struct PageInfo {PageInfo175,7642
	struct PageInfo *pp_link;pp_link177,7692
	struct PageInfo *pp_link;PageInfo::pp_link177,7692
	uint16_t pp_ref;pp_ref184,7950
	uint16_t pp_ref;PageInfo::pp_ref184,7950

inc/stab.h,1529
#define JOS_STAB_HJOS_STAB_H2,19
#define	N_GSYM	N_GSYM15,436
#define	N_FNAME	N_FNAME16,474
#define	N_FUN	N_FUN17,517
#define	N_STSYM	N_STSYM18,555
#define	N_LCSYM	N_LCSYM19,602
#define	N_MAIN	N_MAIN20,648
#define	N_PC	N_PC21,691
#define	N_RSYM	N_RSYM22,734
#define	N_SLINE	N_SLINE23,776
#define	N_DSLINE	N_DSLINE24,826
#define	N_BSLINE	N_BSLINE25,876
#define	N_SSYM	N_SSYM26,925
#define	N_SO	N_SO27,973
#define	N_LSYM	N_LSYM28,1017
#define	N_BINCL	N_BINCL29,1056
#define	N_SOL	N_SOL30,1104
#define	N_PSYM	N_PSYM31,1153
#define	N_EINCL	N_EINCL32,1196
#define	N_ENTRY	N_ENTRY33,1238
#define	N_LBRAC	N_LBRAC34,1285
#define	N_EXCL	N_EXCL35,1323
#define	N_RBRAC	N_RBRAC36,1368
#define	N_BCOMM	N_BCOMM37,1407
#define	N_ECOMM	N_ECOMM38,1445
#define	N_ECOML	N_ECOML39,1481
#define	N_LENG	N_LENG40,1530
struct Stab {Stab43,1637
	uint32_t n_strx;	// index into string table of namen_strx44,1651
	uint32_t n_strx;	// index into string table of nameStab::n_strx44,1651
	uint8_t n_type;         // type of symboln_type45,1704
	uint8_t n_type;         // type of symbolStab::n_type45,1704
	uint8_t n_other;        // misc info (usually empty)n_other46,1747
	uint8_t n_other;        // misc info (usually empty)Stab::n_other46,1747
	uint16_t n_desc;        // description fieldn_desc47,1801
	uint16_t n_desc;        // description fieldStab::n_desc47,1801
	uintptr_t n_value;	// value of symboln_value48,1847
	uintptr_t n_value;	// value of symbolStab::n_value48,1847

inc/string.h,47
#define JOS_INC_STRING_HJOS_INC_STRING_H2,25

inc/stdio.h,69
#define JOS_INC_STDIO_HJOS_INC_STDIO_H2,24
#define NULL	NULL7,87

inc/x86.h,1331
#define JOS_INC_X86_HJOS_INC_X86_H2,22
breakpoint(void)breakpoint7,88
inb(int port)inb13,155
insb(int port, void *addr, int cnt)insb21,278
inw(int port)inw30,481
insw(int port, void *addr, int cnt)insw38,605
inl(int port)inl47,808
insl(int port, void *addr, int cnt)insl55,932
outb(int port, uint8_t data)outb64,1131
outsb(int port, const void *addr, int cnt)outsb70,1241
outw(int port, uint16_t data)outw79,1438
outsw(int port, const void *addr, int cnt)outsw85,1549
outsl(int port, const void *addr, int cnt)outsl94,1746
outl(int port, uint32_t data)outl103,1943
invlpg(void *addr)invlpg109,2054
lidt(void *p)lidt115,2153
lgdt(void *p)lgdt121,2231
lldt(uint16_t sel)lldt127,2309
ltr(uint16_t sel)ltr133,2392
lcr0(uint32_t val)lcr0139,2473
rcr0(void)rcr0145,2566
rcr2(void)rcr2153,2678
lcr3(uint32_t val)lcr3161,2786
rcr3(void)rcr3167,2879
lcr4(uint32_t val)lcr4175,2987
rcr4(void)rcr4181,3080
tlbflush(void)tlbflush189,3188
read_eflags(void)read_eflags197,3337
write_eflags(uint32_t eflags)write_eflags205,3463
read_ebp(void)read_ebp211,3572
read_esp(void)read_esp219,3688
cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)cpuid227,3800
read_tsc(void)read_tsc244,4147
xchg(volatile uint32_t *addr, uint32_t newval)xchg252,4255

inc/elf.h,3208
#define JOS_INC_ELF_HJOS_INC_ELF_H2,22
#define ELF_MAGIC ELF_MAGIC4,45
struct Elf {Elf6,109
	uint32_t e_magic;	// must equal ELF_MAGICe_magic7,122
	uint32_t e_magic;	// must equal ELF_MAGICElf::e_magic7,122
	uint8_t e_elf[12];e_elf8,165
	uint8_t e_elf[12];Elf::e_elf8,165
	uint16_t e_type;e_type9,185
	uint16_t e_type;Elf::e_type9,185
	uint16_t e_machine;e_machine10,203
	uint16_t e_machine;Elf::e_machine10,203
	uint32_t e_version;e_version11,224
	uint32_t e_version;Elf::e_version11,224
	uint32_t e_entry;e_entry12,245
	uint32_t e_entry;Elf::e_entry12,245
	uint32_t e_phoff;e_phoff13,264
	uint32_t e_phoff;Elf::e_phoff13,264
	uint32_t e_shoff;e_shoff14,283
	uint32_t e_shoff;Elf::e_shoff14,283
	uint32_t e_flags;e_flags15,302
	uint32_t e_flags;Elf::e_flags15,302
	uint16_t e_ehsize;e_ehsize16,321
	uint16_t e_ehsize;Elf::e_ehsize16,321
	uint16_t e_phentsize;e_phentsize17,341
	uint16_t e_phentsize;Elf::e_phentsize17,341
	uint16_t e_phnum;e_phnum18,364
	uint16_t e_phnum;Elf::e_phnum18,364
	uint16_t e_shentsize;e_shentsize19,383
	uint16_t e_shentsize;Elf::e_shentsize19,383
	uint16_t e_shnum;e_shnum20,406
	uint16_t e_shnum;Elf::e_shnum20,406
	uint16_t e_shstrndx;e_shstrndx21,425
	uint16_t e_shstrndx;Elf::e_shstrndx21,425
struct Proghdr {Proghdr24,451
	uint32_t p_type;p_type25,468
	uint32_t p_type;Proghdr::p_type25,468
	uint32_t p_offset;p_offset26,486
	uint32_t p_offset;Proghdr::p_offset26,486
	uint32_t p_va;p_va27,506
	uint32_t p_va;Proghdr::p_va27,506
	uint32_t p_pa;p_pa28,522
	uint32_t p_pa;Proghdr::p_pa28,522
	uint32_t p_filesz;p_filesz29,538
	uint32_t p_filesz;Proghdr::p_filesz29,538
	uint32_t p_memsz;p_memsz30,558
	uint32_t p_memsz;Proghdr::p_memsz30,558
	uint32_t p_flags;p_flags31,577
	uint32_t p_flags;Proghdr::p_flags31,577
	uint32_t p_align;p_align32,596
	uint32_t p_align;Proghdr::p_align32,596
struct Secthdr {Secthdr35,619
	uint32_t sh_name;sh_name36,636
	uint32_t sh_name;Secthdr::sh_name36,636
	uint32_t sh_type;sh_type37,655
	uint32_t sh_type;Secthdr::sh_type37,655
	uint32_t sh_flags;sh_flags38,674
	uint32_t sh_flags;Secthdr::sh_flags38,674
	uint32_t sh_addr;sh_addr39,694
	uint32_t sh_addr;Secthdr::sh_addr39,694
	uint32_t sh_offset;sh_offset40,713
	uint32_t sh_offset;Secthdr::sh_offset40,713
	uint32_t sh_size;sh_size41,734
	uint32_t sh_size;Secthdr::sh_size41,734
	uint32_t sh_link;sh_link42,753
	uint32_t sh_link;Secthdr::sh_link42,753
	uint32_t sh_info;sh_info43,772
	uint32_t sh_info;Secthdr::sh_info43,772
	uint32_t sh_addralign;sh_addralign44,791
	uint32_t sh_addralign;Secthdr::sh_addralign44,791
	uint32_t sh_entsize;sh_entsize45,815
	uint32_t sh_entsize;Secthdr::sh_entsize45,815
#define ELF_PROG_LOAD	ELF_PROG_LOAD49,871
#define ELF_PROG_FLAG_EXEC	ELF_PROG_FLAG_EXEC52,931
#define ELF_PROG_FLAG_WRITE	ELF_PROG_FLAG_WRITE53,960
#define ELF_PROG_FLAG_READ	ELF_PROG_FLAG_READ54,990
#define ELF_SHT_NULL	ELF_SHT_NULL57,1051
#define ELF_SHT_PROGBITS	ELF_SHT_PROGBITS58,1075
#define ELF_SHT_SYMTAB	ELF_SHT_SYMTAB59,1102
#define ELF_SHT_STRTAB	ELF_SHT_STRTAB60,1128
#define ELF_SHN_UNDEF	ELF_SHN_UNDEF63,1186

inc/mmu.h,10794
#define JOS_INC_MMU_HJOS_INC_MMU_H2,22
#define PGNUM(PGNUM30,964
#define PDX(PDX33,1040
#define PTX(PTX36,1121
#define PGOFF(PGOFF39,1200
#define PGADDR(PGADDR42,1300
#define NPDENTRIES	NPDENTRIES45,1421
#define NPTENTRIES	NPTENTRIES46,1491
#define PGSIZE	PGSIZE48,1554
#define PGSHIFT	PGSHIFT49,1602
#define PTSIZE	PTSIZE51,1640
#define PTSHIFT	PTSHIFT52,1718
#define PTXSHIFT	PTXSHIFT54,1756
#define PDXSHIFT	PDXSHIFT55,1814
#define PTE_P	PTE_P58,1910
#define PTE_W	PTE_W59,1942
#define PTE_U	PTE_U60,1976
#define PTE_PWT	PTE_PWT61,2005
#define PTE_PCD	PTE_PCD62,2045
#define PTE_A	PTE_A63,2085
#define PTE_D	PTE_D64,2118
#define PTE_PS	PTE_PS65,2148
#define PTE_G	PTE_G66,2183
#define PTE_AVAIL	PTE_AVAIL70,2353
#define PTE_SYSCALL	PTE_SYSCALL73,2480
#define PTE_ADDR(PTE_ADDR76,2586
#define CR0_PE	CR0_PE79,2665
#define CR0_MP	CR0_MP80,2713
#define CR0_EM	CR0_EM81,2763
#define CR0_TS	CR0_TS82,2803
#define CR0_ET	CR0_ET83,2847
#define CR0_NE	CR0_NE84,2892
#define CR0_WP	CR0_WP85,2937
#define CR0_AM	CR0_AM86,2981
#define CR0_NW	CR0_NW87,3026
#define CR0_CD	CR0_CD88,3073
#define CR0_PG	CR0_PG89,3117
#define CR4_PCE	CR4_PCE91,3155
#define CR4_MCE	CR4_MCE92,3213
#define CR4_PSE	CR4_PSE93,3265
#define CR4_DE	CR4_DE94,3317
#define CR4_TSD	CR4_TSD95,3368
#define CR4_PVI	CR4_PVI96,3418
#define CR4_VME	CR4_VME97,3483
#define FL_CF	FL_CF100,3554
#define FL_PF	FL_PF101,3594
#define FL_AF	FL_AF102,3635
#define FL_ZF	FL_ZF103,3685
#define FL_SF	FL_SF104,3724
#define FL_TF	FL_TF105,3763
#define FL_IF	FL_IF106,3802
#define FL_DF	FL_DF107,3846
#define FL_OF	FL_OF108,3890
#define FL_IOPL_MASK	FL_IOPL_MASK109,3933
#define FL_IOPL_0	FL_IOPL_0110,3996
#define FL_IOPL_1	FL_IOPL_1111,4040
#define FL_IOPL_2	FL_IOPL_2112,4084
#define FL_IOPL_3	FL_IOPL_3113,4128
#define FL_NT	FL_NT114,4172
#define FL_RF	FL_RF115,4213
#define FL_VM	FL_VM116,4254
#define FL_AC	FL_AC117,4301
#define FL_VIF	FL_VIF118,4346
#define FL_VIP	FL_VIP119,4399
#define FL_ID	FL_ID120,4455
#define FEC_PR	FEC_PR123,4519
#define FEC_WR	FEC_WR124,4584
#define FEC_U	FEC_U125,4636
#define SEG_NULL	SEG_NULL139,4841
#define SEG(SEG142,4903
struct Segdesc {Segdesc152,5176
	unsigned sd_lim_15_0 : 16;  // Low bits of segment limitsd_lim_15_0153,5193
	unsigned sd_lim_15_0 : 16;  // Low bits of segment limitSegdesc::sd_lim_15_0153,5193
	unsigned sd_base_15_0 : 16; // Low bits of segment base addresssd_base_15_0154,5251
	unsigned sd_base_15_0 : 16; // Low bits of segment base addressSegdesc::sd_base_15_0154,5251
	unsigned sd_base_23_16 : 8; // Middle bits of segment base addresssd_base_23_16155,5316
	unsigned sd_base_23_16 : 8; // Middle bits of segment base addressSegdesc::sd_base_23_16155,5316
	unsigned sd_type : 4;       // Segment type (see STS_ constants)sd_type156,5384
	unsigned sd_type : 4;       // Segment type (see STS_ constants)Segdesc::sd_type156,5384
	unsigned sd_s : 1;          // 0 = system, 1 = applicationsd_s157,5450
	unsigned sd_s : 1;          // 0 = system, 1 = applicationSegdesc::sd_s157,5450
	unsigned sd_dpl : 2;        // Descriptor Privilege Levelsd_dpl158,5510
	unsigned sd_dpl : 2;        // Descriptor Privilege LevelSegdesc::sd_dpl158,5510
	unsigned sd_p : 1;          // Presentsd_p159,5569
	unsigned sd_p : 1;          // PresentSegdesc::sd_p159,5569
	unsigned sd_lim_19_16 : 4;  // High bits of segment limitsd_lim_19_16160,5609
	unsigned sd_lim_19_16 : 4;  // High bits of segment limitSegdesc::sd_lim_19_16160,5609
	unsigned sd_avl : 1;        // Unused (available for software use)sd_avl161,5668
	unsigned sd_avl : 1;        // Unused (available for software use)Segdesc::sd_avl161,5668
	unsigned sd_rsv1 : 1;       // Reservedsd_rsv1162,5736
	unsigned sd_rsv1 : 1;       // ReservedSegdesc::sd_rsv1162,5736
	unsigned sd_db : 1;         // 0 = 16-bit segment, 1 = 32-bit segmentsd_db163,5777
	unsigned sd_db : 1;         // 0 = 16-bit segment, 1 = 32-bit segmentSegdesc::sd_db163,5777
	unsigned sd_g : 1;          // Granularity: limit scaled by 4K when setsd_g164,5848
	unsigned sd_g : 1;          // Granularity: limit scaled by 4K when setSegdesc::sd_g164,5848
	unsigned sd_base_31_24 : 8; // High bits of segment base addresssd_base_31_24165,5921
	unsigned sd_base_31_24 : 8; // High bits of segment base addressSegdesc::sd_base_31_24165,5921
#define SEG_NULL	SEG_NULL168,6006
#define SEG_FAULT	SEG_FAULT170,6114
#define SEG(SEG172,6192
#define SEG16(SEG16176,6391
#define STA_X	STA_X184,6662
#define STA_E	STA_E185,6707
#define STA_C	STA_C186,6771
#define STA_W	STA_W187,6839
#define STA_R	STA_R188,6901
#define STA_A	STA_A189,6958
#define STS_T16A	STS_T16A192,7022
#define STS_LDT	STS_LDT193,7071
#define STS_T16B	STS_T16B194,7122
#define STS_CG16	STS_CG16195,7166
#define STS_TG	STS_TG196,7211
#define STS_IG16	STS_IG16197,7268
#define STS_TG16	STS_TG16198,7318
#define STS_T32A	STS_T32A199,7363
#define STS_T32B	STS_T32B200,7412
#define STS_CG32	STS_CG32201,7456
#define STS_IG32	STS_IG32202,7501
#define STS_TG32	STS_TG32203,7551
struct Taskstate {Taskstate215,7731
	uint32_t ts_link;	// Old ts selectorts_link216,7750
	uint32_t ts_link;	// Old ts selectorTaskstate::ts_link216,7750
	uintptr_t ts_esp0;	// Stack pointers and segment selectorsts_esp0217,7788
	uintptr_t ts_esp0;	// Stack pointers and segment selectorsTaskstate::ts_esp0217,7788
	uint16_t ts_ss0;	//   after an increase in privilege levelts_ss0218,7848
	uint16_t ts_ss0;	//   after an increase in privilege levelTaskstate::ts_ss0218,7848
	uint16_t ts_padding1;ts_padding1219,7908
	uint16_t ts_padding1;Taskstate::ts_padding1219,7908
	uintptr_t ts_esp1;ts_esp1220,7931
	uintptr_t ts_esp1;Taskstate::ts_esp1220,7931
	uint16_t ts_ss1;ts_ss1221,7951
	uint16_t ts_ss1;Taskstate::ts_ss1221,7951
	uint16_t ts_padding2;ts_padding2222,7969
	uint16_t ts_padding2;Taskstate::ts_padding2222,7969
	uintptr_t ts_esp2;ts_esp2223,7992
	uintptr_t ts_esp2;Taskstate::ts_esp2223,7992
	uint16_t ts_ss2;ts_ss2224,8012
	uint16_t ts_ss2;Taskstate::ts_ss2224,8012
	uint16_t ts_padding3;ts_padding3225,8030
	uint16_t ts_padding3;Taskstate::ts_padding3225,8030
	physaddr_t ts_cr3;	// Page directory basets_cr3226,8053
	physaddr_t ts_cr3;	// Page directory baseTaskstate::ts_cr3226,8053
	uintptr_t ts_eip;	// Saved state from last task switchts_eip227,8096
	uintptr_t ts_eip;	// Saved state from last task switchTaskstate::ts_eip227,8096
	uint32_t ts_eflags;ts_eflags228,8152
	uint32_t ts_eflags;Taskstate::ts_eflags228,8152
	uint32_t ts_eax;	// More saved state (registers)ts_eax229,8173
	uint32_t ts_eax;	// More saved state (registers)Taskstate::ts_eax229,8173
	uint32_t ts_ecx;ts_ecx230,8223
	uint32_t ts_ecx;Taskstate::ts_ecx230,8223
	uint32_t ts_edx;ts_edx231,8241
	uint32_t ts_edx;Taskstate::ts_edx231,8241
	uint32_t ts_ebx;ts_ebx232,8259
	uint32_t ts_ebx;Taskstate::ts_ebx232,8259
	uintptr_t ts_esp;ts_esp233,8277
	uintptr_t ts_esp;Taskstate::ts_esp233,8277
	uintptr_t ts_ebp;ts_ebp234,8296
	uintptr_t ts_ebp;Taskstate::ts_ebp234,8296
	uint32_t ts_esi;ts_esi235,8315
	uint32_t ts_esi;Taskstate::ts_esi235,8315
	uint32_t ts_edi;ts_edi236,8333
	uint32_t ts_edi;Taskstate::ts_edi236,8333
	uint16_t ts_es;		// Even more saved state (segment selectors)ts_es237,8351
	uint16_t ts_es;		// Even more saved state (segment selectors)Taskstate::ts_es237,8351
	uint16_t ts_padding4;ts_padding4238,8414
	uint16_t ts_padding4;Taskstate::ts_padding4238,8414
	uint16_t ts_cs;ts_cs239,8437
	uint16_t ts_cs;Taskstate::ts_cs239,8437
	uint16_t ts_padding5;ts_padding5240,8454
	uint16_t ts_padding5;Taskstate::ts_padding5240,8454
	uint16_t ts_ss;ts_ss241,8477
	uint16_t ts_ss;Taskstate::ts_ss241,8477
	uint16_t ts_padding6;ts_padding6242,8494
	uint16_t ts_padding6;Taskstate::ts_padding6242,8494
	uint16_t ts_ds;ts_ds243,8517
	uint16_t ts_ds;Taskstate::ts_ds243,8517
	uint16_t ts_padding7;ts_padding7244,8534
	uint16_t ts_padding7;Taskstate::ts_padding7244,8534
	uint16_t ts_fs;ts_fs245,8557
	uint16_t ts_fs;Taskstate::ts_fs245,8557
	uint16_t ts_padding8;ts_padding8246,8574
	uint16_t ts_padding8;Taskstate::ts_padding8246,8574
	uint16_t ts_gs;ts_gs247,8597
	uint16_t ts_gs;Taskstate::ts_gs247,8597
	uint16_t ts_padding9;ts_padding9248,8614
	uint16_t ts_padding9;Taskstate::ts_padding9248,8614
	uint16_t ts_ldt;ts_ldt249,8637
	uint16_t ts_ldt;Taskstate::ts_ldt249,8637
	uint16_t ts_padding10;ts_padding10250,8655
	uint16_t ts_padding10;Taskstate::ts_padding10250,8655
	uint16_t ts_t;		// Trap on task switchts_t251,8679
	uint16_t ts_t;		// Trap on task switchTaskstate::ts_t251,8679
	uint16_t ts_iomb;	// I/O map base addressts_iomb252,8719
	uint16_t ts_iomb;	// I/O map base addressTaskstate::ts_iomb252,8719
struct Gatedesc {Gatedesc256,8811
	unsigned gd_off_15_0 : 16;   // low 16 bits of offset in segmentgd_off_15_0257,8829
	unsigned gd_off_15_0 : 16;   // low 16 bits of offset in segmentGatedesc::gd_off_15_0257,8829
	unsigned gd_sel : 16;        // segment selectorgd_sel258,8895
	unsigned gd_sel : 16;        // segment selectorGatedesc::gd_sel258,8895
	unsigned gd_args : 5;        // # args, 0 for interrupt/trap gatesgd_args259,8945
	unsigned gd_args : 5;        // # args, 0 for interrupt/trap gatesGatedesc::gd_args259,8945
	unsigned gd_rsv1 : 3;        // reserved(should be zero I guess)gd_rsv1260,9013
	unsigned gd_rsv1 : 3;        // reserved(should be zero I guess)Gatedesc::gd_rsv1260,9013
	unsigned gd_type : 4;        // type(STS_{TG,IG32,TG32})gd_type261,9079
	unsigned gd_type : 4;        // type(STS_{TG,IG32,TG32})Gatedesc::gd_type261,9079
	unsigned gd_s : 1;           // must be 0 (system)gd_s262,9137
	unsigned gd_s : 1;           // must be 0 (system)Gatedesc::gd_s262,9137
	unsigned gd_dpl : 2;         // descriptor(meaning new) privilege levelgd_dpl263,9189
	unsigned gd_dpl : 2;         // descriptor(meaning new) privilege levelGatedesc::gd_dpl263,9189
	unsigned gd_p : 1;           // Presentgd_p264,9262
	unsigned gd_p : 1;           // PresentGatedesc::gd_p264,9262
	unsigned gd_off_31_16 : 16;  // high bits of offset in segmentgd_off_31_16265,9303
	unsigned gd_off_31_16 : 16;  // high bits of offset in segmentGatedesc::gd_off_31_16265,9303
#define SETGATE(SETGATE282,10286
#define SETCALLGATE(SETCALLGATE296,10699
struct Pseudodesc {Pseudodesc310,11137
	uint16_t pd_lim;		// Limitpd_lim311,11157
	uint16_t pd_lim;		// LimitPseudodesc::pd_lim311,11157
	uint32_t pd_base;		// Base addresspd_base312,11185
	uint32_t pd_base;		// Base addressPseudodesc::pd_base312,11185

inc/stdarg.h,189
#define	JOS_INC_STDARG_HJOS_INC_STDARG_H4,91
typedef __builtin_va_list va_list;va_list6,117
#define va_start(va_start8,153
#define va_arg(va_arg10,210
#define va_end(va_end12,263

inc/error.h,460
#define JOS_INC_ERROR_HJOS_INC_ERROR_H4,72
	E_UNSPECIFIED	= 1,	// Unspecified or unknown problemE_UNSPECIFIED8,172
	E_BAD_ENV	,	// Environment doesn't exist or otherwiseE_BAD_ENV9,226
	E_INVAL		,	// Invalid parameterE_INVAL11,323
	E_NO_MEM	,	// Request failed due to memory shortageE_NO_MEM12,356
	E_NO_FREE_ENV	,	// Attempt to create a new environment beyondE_NO_FREE_ENV13,409
	E_FAULT		,	// Memory faultE_FAULT15,499
	MAXERRORMAXERROR17,528

inc/kbdreg.h,2510
#define JOS_KBDREG_HJOS_KBDREG_H2,21
#define KEY_HOME	KEY_HOME5,63
#define KEY_END	KEY_END6,85
#define KEY_UP	KEY_UP7,107
#define KEY_DN	KEY_DN8,128
#define KEY_LF	KEY_LF9,149
#define KEY_RT	KEY_RT10,170
#define KEY_PGUP	KEY_PGUP11,191
#define KEY_PGDN	KEY_PGDN12,213
#define KEY_INS	KEY_INS13,235
#define KEY_DEL	KEY_DEL14,257
#define	KBSTATP	KBSTATP19,331
#define	 KBS_DIB	KBS_DIB20,389
#define	 KBS_IBF	KBS_IBF21,436
#define	 KBS_WARM	KBS_WARM22,485
#define	 KBS_OCMD	KBS_OCMD23,535
#define	 KBS_NOSEC	KBS_NOSEC24,594
#define	 KBS_TERR	KBS_TERR25,654
#define	 KBS_RERR	KBS_RERR26,720
#define	 KBS_PERR	KBS_PERR27,767
#define	KBCMDP	KBCMDP29,814
#define	 KBC_RAMREAD	KBC_RAMREAD30,864
#define	 KBC_RAMWRITE	KBC_RAMWRITE31,910
#define	 KBC_AUXDISABLE	KBC_AUXDISABLE32,956
#define	 KBC_AUXENABLE	KBC_AUXENABLE33,1014
#define	 KBC_AUXTEST	KBC_AUXTEST34,1070
#define	 KBC_KBDECHO	KBC_KBDECHO35,1122
#define	 KBC_AUXECHO	KBC_AUXECHO36,1176
#define	 KBC_AUXWRITE	KBC_AUXWRITE37,1231
#define	 KBC_SELFTEST	KBC_SELFTEST38,1288
#define	 KBC_KBDTEST	KBC_KBDTEST39,1337
#define	 KBC_KBDDISABLE	KBC_KBDDISABLE40,1388
#define	 KBC_KBDENABLE	KBC_KBDENABLE41,1445
#define	 KBC_PULSE0	KBC_PULSE042,1500
#define	 KBC_PULSE1	KBC_PULSE143,1550
#define	 KBC_PULSE2	KBC_PULSE244,1600
#define	 KBC_PULSE3	KBC_PULSE345,1650
#define	KBDATAP	KBDATAP47,1701
#define	KBOUTP	KBOUTP48,1746
#define	K_RDCMDBYTE	K_RDCMDBYTE50,1791
#define	K_LDCMDBYTE	K_LDCMDBYTE51,1816
#define	KC8_TRANS	KC8_TRANS53,1842
#define	KC8_MDISABLE	KC8_MDISABLE54,1897
#define	KC8_KDISABLE	KC8_KDISABLE55,1943
#define	KC8_IGNSEC	KC8_IGNSEC56,1992
#define	KC8_CPU	KC8_CPU57,2043
#define	KC8_MENABLE	KC8_MENABLE58,2102
#define	KC8_KENABLE	KC8_KENABLE59,2156
#define	CMDBYTE	CMDBYTE60,2213
#define	KBC_RESET	KBC_RESET63,2299
#define	KBC_RESEND	KBC_RESEND64,2347
#define	KBC_SETDEFAULT	KBC_SETDEFAULT65,2419
#define	KBC_DISABLE	KBC_DISABLE66,2494
#define	KBC_ENABLE	KBC_ENABLE67,2578
#define	KBC_TYPEMATIC	KBC_TYPEMATIC68,2628
#define	KBC_SETTABLE	KBC_SETTABLE69,2690
#define	KBC_MODEIND	KBC_MODEIND70,2753
#define	KBC_ECHO	KBC_ECHO71,2815
#define	KBR_EXTENDED	KBR_EXTENDED74,2903
#define	KBR_RESEND	KBR_RESEND75,2957
#define	KBR_ACK	KBR_ACK76,3011
#define	KBR_OVERRUN	KBR_OVERRUN77,3064
#define	KBR_FAILURE	KBR_FAILURE78,3103
#define	KBR_BREAK	KBR_BREAK79,3152
#define	KBR_RSTDONE	KBR_RSTDONE80,3221
#define	KBR_ECHO	KBR_ECHO81,3267

inc/types.h,1005
#define JOS_INC_TYPES_HJOS_INC_TYPES_H2,24
#define NULL NULL5,62
typedef _Bool bool;bool9,130
enum { false, true };false10,150
enum { false, true };true10,150
typedef __signed char int8_t;int8_t13,219
typedef unsigned char uint8_t;uint8_t14,249
typedef short int16_t;int16_t15,280
typedef unsigned short uint16_t;uint16_t16,303
typedef int int32_t;int32_t17,336
typedef unsigned int uint32_t;uint32_t18,357
typedef long long int64_t;int64_t19,388
typedef unsigned long long uint64_t;uint64_t20,415
typedef int32_t intptr_t;intptr_t26,673
typedef uint32_t uintptr_t;uintptr_t27,699
typedef uint32_t physaddr_t;physaddr_t28,727
typedef uint32_t ppn_t;ppn_t31,791
typedef uint32_t size_t;size_t34,859
typedef int32_t ssize_t;ssize_t37,975
typedef int32_t off_t;off_t40,1048
#define MIN(MIN43,1108
#define MAX(MAX49,1241
#define ROUNDDOWN(ROUNDDOWN58,1476
#define ROUNDUP(ROUNDUP64,1637
#define ARRAY_SIZE(ARRAY_SIZE70,1778
#define offsetof(offsetof73,1904

inc/assert.h,175
#define JOS_INC_ASSERT_HJOS_INC_ASSERT_H4,73
#define warn(warn11,247
#define panic(panic12,304
#define assert(assert14,364
#define static_assert(static_assert18,521

boot/sign.pl,0

boot/main.c,255
#define SECTSIZE	SECTSIZE32,1131
#define ELFHDR	ELFHDR33,1152
bootmain(void)bootmain39,1293
readseg(uint32_t pa, uint32_t count, uint32_t offset)readseg72,2092
waitdisk(void)waitdisk99,2821
readsect(void *dst, uint32_t offset)readsect107,2928

boot/boot.S,108
start:start13,454
protcseg:protcseg58,1983
spin:spin72,2497
gdt:gdt77,2598
gdtdesc:gdtdesc82,2757

obj/boot/boot.asm,729
Disassembly of section .text:Disassembly5,49
start:start11,174
protcseg:protcseg84,2893
spin:spin108,3821
voidvoid132,4396
static inline uint8_tstatic137,4463
voidvoid157,5076
static inline voidstatic169,5412
	offset = (offset / SECTSIZE) + 1;offset226,7583
	end_pa = pa + count;end_pa230,7719
	offset = (offset / SECTSIZE) + 1;offset234,7851
	end_pa = pa + count;end_pa236,7935
	offset = (offset / SECTSIZE) + 1;offset238,8006
	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);ph282,9731
	eph = ph + ELFHDR->e_phnum;eph284,9848
	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);ph286,9929
	eph = ph + ELFHDR->e_phnum;eph288,10052
static inline voidstatic309,10911

obj/kern/kernel.asm,386958
Disassembly of section .text:Disassembly5,47
f0100000 <_start+0xeffffff4>:f01000007,78
_start = RELOC(entry)_start9,123
entry:entry12,159
f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dhf010000014,200
f0100006:	00 00                	add    %al,(%eax)f010000615,256
f0100008:	fe 4f 52             	decb   0x52(%edi)f010000816,306
f010000b:	e4                   	.byte 0xe4f010000b17,356
f010000c <entry>:f010000c19,400
f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472f010000c20,418
f0100013:	34 12 f010001321,471
f0100015:	b8 00 80 11 00       	mov    $0x118000,%eaxf010001528,696
f010001a:	0f 22 d8             	mov    %eax,%cr3f010001a30,767
f010001d:	0f 20 c0             	mov    %cr0,%eaxf010001d33,852
f0100020:	0d 01 00 01 80       	or     $0x80010001,%eaxf010002035,936
f0100025:	0f 22 c0             	mov    %eax,%cr0f010002537,1009
f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eaxf010002843,1219
f010002d:	ff e0                	jmp    *%eaxf010002d45,1286
f010002f <relocated>:f010002f47,1332
relocated:relocated48,1354
f010002f:	bd 00 00 00 00       	mov    $0x0,%ebpf010002f54,1542
f0100034:	bc 00 60 11 f0       	mov    $0xf0116000,%espf010003458,1644
f0100039:	e8 02 00 00 00       	call   f0100040 <i386_init>f010003962,1734
f010003e <spin>:f010003e64,1795
spin:	jmp	spinspin67,1869
f010003e:	eb fe                	jmp    f010003e <spin>f010003e68,1884
f0100040 <i386_init>:f010004070,1940
voidvoid74,1989
f0100040:	55                   	push   %ebpf010004077,2012
f0100041:	89 e5                	mov    %esp,%ebpf010004178,2056
f0100043:	53                   	push   %ebxf010004379,2105
f0100044:	83 ec 08             	sub    $0x8,%espf010004480,2149
f0100047:	e8 03 01 00 00       	call   f010014f <__x86.get_pc_thunk.bx>f010004781,2198
f010004c:	81 c3 c0 72 01 00    	add    $0x172c0,%ebxf010004c82,2270
f0100052:	c7 c2 60 90 11 f0    	mov    $0xf0119060,%edxf010005289,2587
f0100058:	c7 c0 c0 96 11 f0    	mov    $0xf01196c0,%eaxf010005890,2643
f010005e:	29 d0                	sub    %edx,%eaxf010005e91,2699
f0100060:	50                   	push   %eaxf010006092,2748
f0100061:	6a 00                	push   $0x0f010006193,2792
f0100063:	52                   	push   %edxf010006394,2836
f0100064:	e8 3f 3c 00 00       	call   f0103ca8 <memset>f010006495,2880
f0100069:	e8 36 05 00 00       	call   f01005a4 <cons_init>f0100069100,3027
f010006e:	83 c4 08             	add    $0x8,%espf010006e103,3135
f0100071:	68 ac 1a 00 00       	push   $0x1aacf0100071104,3184
f0100076:	8d 83 f4 cd fe ff    	lea    -0x1320c(%ebx),%eaxf0100076105,3231
f010007c:	50                   	push   %eaxf010007c106,3290
f010007d:	e8 ca 30 00 00       	call   f010314c <cprintf>f010007d107,3334
f0100082:	e8 4b 13 00 00       	call   f01013d2 <mem_init>f0100082111,3459
f0100087:	83 c4 10             	add    $0x10,%espf0100087112,3518
f010008a:	83 ec 0c             	sub    $0xc,%espf010008a117,3631
f010008d:	6a 00                	push   $0x0f010008d118,3680
f010008f:	e8 98 08 00 00       	call   f010092c <monitor>f010008f119,3724
f0100094:	83 c4 10             	add    $0x10,%espf0100094120,3782
f0100097:	eb f1                	jmp    f010008a <i386_init+0x4a>f0100097121,3832
f0100099 <_panic>:f0100099123,3898
voidvoid127,4034
f0100099:	55                   	push   %ebpf0100099130,4097
f010009a:	89 e5                	mov    %esp,%ebpf010009a131,4141
f010009c:	57                   	push   %edif010009c132,4190
f010009d:	56                   	push   %esif010009d133,4234
f010009e:	53                   	push   %ebxf010009e134,4278
f010009f:	83 ec 0c             	sub    $0xc,%espf010009f135,4322
f01000a2:	e8 a8 00 00 00       	call   f010014f <__x86.get_pc_thunk.bx>f01000a2136,4371
f01000a7:	81 c3 65 72 01 00    	add    $0x17265,%ebxf01000a7137,4443
f01000ad:	8b 7d 10             	mov    0x10(%ebp),%edif01000ad138,4496
f01000b0:	c7 c0 c4 96 11 f0    	mov    $0xf01196c4,%eaxf01000b0142,4580
f01000b6:	83 38 00             	cmpl   $0x0,(%eax)f01000b6143,4636
f01000b9:	74 0f                	je     f01000ca <_panic+0x31>f01000b9144,4687
dead:dead147,4763
f01000bb:	83 ec 0c             	sub    $0xc,%espf01000bb151,4834
f01000be:	6a 00                	push   $0x0f01000be152,4883
f01000c0:	e8 67 08 00 00       	call   f010092c <monitor>f01000c0153,4927
f01000c5:	83 c4 10             	add    $0x10,%espf01000c5154,4985
f01000c8:	eb f1                	jmp    f01000bb <_panic+0x22>f01000c8155,5035
	panicstr = fmt;panicstr156,5097
f01000ca:	89 38                	mov    %edi,(%eax)f01000ca157,5114
f01000cc:	fa                   	cli    f01000cc159,5192
f01000cd:	fc                   	cld    f01000cd160,5232
f01000ce:	8d 75 14             	lea    0x14(%ebp),%esif01000ce162,5292
f01000d1:	83 ec 04             	sub    $0x4,%espf01000d1164,5396
f01000d4:	ff 75 0c             	pushl  0xc(%ebp)f01000d4165,5445
f01000d7:	ff 75 08             	pushl  0x8(%ebp)f01000d7166,5494
f01000da:	8d 83 0f ce fe ff    	lea    -0x131f1(%ebx),%eaxf01000da167,5543
f01000e0:	50                   	push   %eaxf01000e0168,5602
f01000e1:	e8 66 30 00 00       	call   f010314c <cprintf>f01000e1169,5646
f01000e6:	83 c4 08             	add    $0x8,%espf01000e6171,5724
f01000e9:	56                   	push   %esif01000e9172,5773
f01000ea:	57                   	push   %edif01000ea173,5817
f01000eb:	e8 25 30 00 00       	call   f0103115 <vcprintf>f01000eb174,5861
f01000f0:	8d 83 09 de fe ff    	lea    -0x121f7(%ebx),%eaxf01000f0176,5936
f01000f6:	89 04 24             	mov    %eax,(%esp)f01000f6177,5995
f01000f9:	e8 4e 30 00 00       	call   f010314c <cprintf>f01000f9178,6046
f01000fe:	83 c4 10             	add    $0x10,%espf01000fe179,6104
f0100101:	eb b8                	jmp    f01000bb <_panic+0x22>f0100101180,6154
f0100103 <_warn>:f0100103182,6217
voidvoid186,6266
f0100103:	55                   	push   %ebpf0100103189,6328
f0100104:	89 e5                	mov    %esp,%ebpf0100104190,6372
f0100106:	56                   	push   %esif0100106191,6421
f0100107:	53                   	push   %ebxf0100107192,6465
f0100108:	e8 42 00 00 00       	call   f010014f <__x86.get_pc_thunk.bx>f0100108193,6509
f010010d:	81 c3 ff 71 01 00    	add    $0x171ff,%ebxf010010d194,6581
f0100113:	8d 75 14             	lea    0x14(%ebp),%esif0100113198,6668
f0100116:	83 ec 04             	sub    $0x4,%espf0100116200,6774
f0100119:	ff 75 0c             	pushl  0xc(%ebp)f0100119201,6823
f010011c:	ff 75 08             	pushl  0x8(%ebp)f010011c202,6872
f010011f:	8d 83 27 ce fe ff    	lea    -0x131d9(%ebx),%eaxf010011f203,6921
f0100125:	50                   	push   %eaxf0100125204,6980
f0100126:	e8 21 30 00 00       	call   f010314c <cprintf>f0100126205,7024
f010012b:	83 c4 08             	add    $0x8,%espf010012b207,7102
f010012e:	56                   	push   %esif010012e208,7151
f010012f:	ff 75 10             	pushl  0x10(%ebp)f010012f209,7195
f0100132:	e8 de 2f 00 00       	call   f0103115 <vcprintf>f0100132210,7245
f0100137:	8d 83 09 de fe ff    	lea    -0x121f7(%ebx),%eaxf0100137212,7320
f010013d:	89 04 24             	mov    %eax,(%esp)f010013d213,7379
f0100140:	e8 07 30 00 00       	call   f010314c <cprintf>f0100140214,7430
f0100145:	83 c4 10             	add    $0x10,%espf0100145217,7503
f0100148:	8d 65 f8             	lea    -0x8(%ebp),%espf0100148218,7553
f010014b:	5b                   	pop    %ebxf010014b219,7608
f010014c:	5e                   	pop    %esif010014c220,7652
f010014d:	5d                   	pop    %ebpf010014d221,7696
f010014e:	c3                   	ret    f010014e222,7740
f010014f <__x86.get_pc_thunk.bx>:f010014f224,7781
f010014f:	8b 1c 24             	mov    (%esp),%ebxf010014f225,7815
f0100152:	c3                   	ret    f0100152226,7866
f0100153 <serial_proc_data>:f0100153228,7907
static bool serial_exists;static230,7937
static intstatic232,7965
f0100153:	55                   	push   %ebpf0100153235,8001
f0100154:	89 e5                	mov    %esp,%ebpf0100154236,8045
static inline uint8_tstatic238,8095
f0100156:	ba fd 03 00 00       	mov    $0x3fd,%edxf0100156243,8204
f010015b:	ec                   	in     (%dx),%alf010015b244,8255
f010015c:	a8 01                	test   $0x1,%alf010015c246,8346
f010015e:	74 0b                	je     f010016b <serial_proc_data+0x18>f010015e247,8394
f0100160:	ba f8 03 00 00       	mov    $0x3f8,%edxf0100160248,8466
f0100165:	ec                   	in     (%dx),%alf0100165249,8517
f0100166:	0f b6 c0             	movzbl %al,%eaxf0100166252,8605
f0100169:	5d                   	pop    %ebpf0100169254,8655
f010016a:	c3                   	ret    f010016a255,8699
f010016b:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf010016b257,8752
f0100170:	eb f7                	jmp    f0100169 <serial_proc_data+0x16>f0100170258,8808
f0100172 <cons_intr>:f0100172260,8881
static voidstatic264,9011
f0100172:	55                   	push   %ebpf0100172267,9054
f0100173:	89 e5                	mov    %esp,%ebpf0100173268,9098
f0100175:	56                   	push   %esif0100175269,9147
f0100176:	53                   	push   %ebxf0100176270,9191
f0100177:	e8 d3 ff ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0100177271,9235
f010017c:	81 c3 90 71 01 00    	add    $0x17190,%ebxf010017c272,9307
f0100182:	89 c6                	mov    %eax,%esif0100182273,9360
f0100184:	ff d6                	call   *%esif0100184277,9451
f0100186:	83 f8 ff             	cmp    $0xffffffff,%eaxf0100186278,9496
f0100189:	74 2e                	je     f01001b9 <cons_intr+0x47>f0100189279,9552
f010018b:	85 c0                	test   %eax,%eaxf010018b281,9631
f010018d:	74 f5                	je     f0100184 <cons_intr+0x12>f010018d282,9680
f010018f:	8b 8b 78 1f 00 00    	mov    0x1f78(%ebx),%ecxf010018f285,9787
f0100195:	8d 51 01             	lea    0x1(%ecx),%edxf0100195286,9844
f0100198:	89 93 78 1f 00 00    	mov    %edx,0x1f78(%ebx)f0100198287,9898
f010019e:	88 84 0b 74 1d 00 00 	mov    %al,0x1d74(%ebx,%ecx,1)f010019e288,9955
f01001a5:	81 fa 00 02 00 00    	cmp    $0x200,%edxf01001a5290,10050
f01001ab:	75 d7                	jne    f0100184 <cons_intr+0x12>f01001ab291,10101
f01001ad:	c7 83 78 1f 00 00 00 	movl   $0x0,0x1f78(%ebx)f01001ad293,10184
f01001b4:	00 00 00 f01001b4294,10241
f01001b7:	eb cb                	jmp    f0100184 <cons_intr+0x12>f01001b7295,10261
f01001b9:	5b                   	pop    %ebxf01001b9298,10331
f01001ba:	5e                   	pop    %esif01001ba299,10375
f01001bb:	5d                   	pop    %ebpf01001bb300,10419
f01001bc:	c3                   	ret    f01001bc301,10463
f01001bd <kbd_proc_data>:f01001bd303,10504
f01001bd:	55                   	push   %ebpf01001bd305,10532
f01001be:	89 e5                	mov    %esp,%ebpf01001be306,10576
f01001c0:	56                   	push   %esif01001c0307,10625
f01001c1:	53                   	push   %ebxf01001c1308,10669
f01001c2:	e8 88 ff ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01001c2309,10713
f01001c7:	81 c3 45 71 01 00    	add    $0x17145,%ebxf01001c7310,10785
f01001cd:	ba 64 00 00 00       	mov    $0x64,%edxf01001cd311,10838
f01001d2:	ec                   	in     (%dx),%alf01001d2312,10888
f01001d3:	a8 01                	test   $0x1,%alf01001d3314,10965
f01001d5:	0f 84 06 01 00 00    	je     f01002e1 <kbd_proc_data+0x124>f01001d5315,11013
f01001db:	a8 20                	test   $0x20,%alf01001db317,11105
f01001dd:	0f 85 05 01 00 00    	jne    f01002e8 <kbd_proc_data+0x12b>f01001dd318,11154
f01001e3:	ba 60 00 00 00       	mov    $0x60,%edxf01001e3319,11224
f01001e8:	ec                   	in     (%dx),%alf01001e8320,11274
f01001e9:	89 c2                	mov    %eax,%edxf01001e9321,11323
f01001eb:	3c e0                	cmp    $0xe0,%alf01001eb323,11393
f01001ed:	0f 84 93 00 00 00    	je     f0100286 <kbd_proc_data+0xc9>f01001ed324,11442
f01001f3:	84 c0                	test   %al,%alf01001f3326,11538
f01001f5:	0f 88 a0 00 00 00    	js     f010029b <kbd_proc_data+0xde>f01001f5327,11585
f01001fb:	8b 8b 54 1d 00 00    	mov    0x1d54(%ebx),%ecxf01001fb329,11683
f0100201:	f6 c1 40             	test   $0x40,%clf0100201330,11740
f0100204:	74 0e                	je     f0100214 <kbd_proc_data+0x57>f0100204331,11789
f0100206:	83 c8 80             	or     $0xffffff80,%eaxf0100206333,11874
f0100209:	89 c2                	mov    %eax,%edxf0100209334,11930
f010020b:	83 e1 bf             	and    $0xffffffbf,%ecxf010020b336,11998
f010020e:	89 8b 54 1d 00 00    	mov    %ecx,0x1d54(%ebx)f010020e337,12054
f0100214:	0f b6 d2             	movzbl %dl,%edxf0100214339,12138
f0100217:	0f b6 84 13 74 cf fe 	movzbl -0x1308c(%ebx,%edx,1),%eaxf0100217340,12186
f010021e:	ff f010021e341,12252
f010021f:	0b 83 54 1d 00 00    	or     0x1d54(%ebx),%eaxf010021f342,12266
f0100225:	0f b6 8c 13 74 ce fe 	movzbl -0x1318c(%ebx,%edx,1),%ecxf0100225344,12351
f010022c:	ff f010022c345,12417
f010022d:	31 c8                	xor    %ecx,%eaxf010022d346,12431
f010022f:	89 83 54 1d 00 00    	mov    %eax,0x1d54(%ebx)f010022f347,12480
	c = charcode[shift & (CTL | SHIFT)][data];c348,12537
f0100235:	89 c1                	mov    %eax,%ecxf0100235349,12581
f0100237:	83 e1 03             	and    $0x3,%ecxf0100237350,12630
f010023a:	8b 8c 8b f4 1c 00 00 	mov    0x1cf4(%ebx,%ecx,4),%ecxf010023a351,12679
f0100241:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edxf0100241352,12743
f0100245:	0f b6 f2             	movzbl %dl,%esif0100245353,12801
f0100248:	a8 08                	test   $0x8,%alf0100248355,12874
f010024a:	74 0d                	je     f0100259 <kbd_proc_data+0x9c>f010024a356,12922
f010024c:	89 f2                	mov    %esi,%edxf010024c358,13019
f010024e:	8d 4e 9f             	lea    -0x61(%esi),%ecxf010024e359,13068
f0100251:	83 f9 19             	cmp    $0x19,%ecxf0100251360,13124
f0100254:	77 7a                	ja     f01002d0 <kbd_proc_data+0x113>f0100254361,13174
f0100256:	83 ee 20             	sub    $0x20,%esif0100256363,13263
f0100259:	f7 d0                	not    %eaxf0100259365,13361
f010025b:	a8 06                	test   $0x6,%alf010025b366,13405
f010025d:	75 33                	jne    f0100292 <kbd_proc_data+0xd5>f010025d367,13453
f010025f:	81 fe e9 00 00 00    	cmp    $0xe9,%esif010025f368,13522
f0100265:	75 2b                	jne    f0100292 <kbd_proc_data+0xd5>f0100265369,13572
f0100267:	83 ec 0c             	sub    $0xc,%espf0100267371,13668
f010026a:	8d 83 41 ce fe ff    	lea    -0x131bf(%ebx),%eaxf010026a372,13717
f0100270:	50                   	push   %eaxf0100270373,13776
f0100271:	e8 d6 2e 00 00       	call   f010314c <cprintf>f0100271374,13820
static inline voidstatic377,13881
f0100276:	b8 03 00 00 00       	mov    $0x3,%eaxf0100276381,13988
f010027b:	ba 92 00 00 00       	mov    $0x92,%edxf010027b382,14037
f0100280:	ee                   	out    %al,(%dx)f0100280383,14087
f0100281:	83 c4 10             	add    $0x10,%espf0100281384,14136
f0100284:	eb 0c                	jmp    f0100292 <kbd_proc_data+0xd5>f0100284385,14186
f0100286:	83 8b 54 1d 00 00 40 	orl    $0x40,0x1d54(%ebx)f0100286387,14273
f010028d:	be 00 00 00 00       	mov    $0x0,%esif010028d389,14343
f0100292:	89 f0                	mov    %esi,%eaxf0100292391,14394
f0100294:	8d 65 f8             	lea    -0x8(%ebp),%espf0100294392,14443
f0100297:	5b                   	pop    %ebxf0100297393,14498
f0100298:	5e                   	pop    %esif0100298394,14542
f0100299:	5d                   	pop    %ebpf0100299395,14586
f010029a:	c3                   	ret    f010029a396,14630
		data = (shift & E0ESC ? data : data & 0x7F);data397,14670
f010029b:	8b 8b 54 1d 00 00    	mov    0x1d54(%ebx),%ecxf010029b398,14717
f01002a1:	89 ce                	mov    %ecx,%esif01002a1399,14774
f01002a3:	83 e6 40             	and    $0x40,%esif01002a3400,14823
f01002a6:	83 e0 7f             	and    $0x7f,%eaxf01002a6401,14873
f01002a9:	85 f6                	test   %esi,%esif01002a9402,14923
f01002ab:	0f 44 d0             	cmove  %eax,%edxf01002ab403,14972
f01002ae:	0f b6 d2             	movzbl %dl,%edxf01002ae405,15060
f01002b1:	0f b6 84 13 74 cf fe 	movzbl -0x1308c(%ebx,%edx,1),%eaxf01002b1406,15108
f01002b8:	ff f01002b8407,15174
f01002b9:	83 c8 40             	or     $0x40,%eaxf01002b9408,15188
f01002bc:	0f b6 c0             	movzbl %al,%eaxf01002bc409,15238
f01002bf:	f7 d0                	not    %eaxf01002bf410,15286
f01002c1:	21 c8                	and    %ecx,%eaxf01002c1411,15330
f01002c3:	89 83 54 1d 00 00    	mov    %eax,0x1d54(%ebx)f01002c3412,15379
f01002c9:	be 00 00 00 00       	mov    $0x0,%esif01002c9414,15448
f01002ce:	eb c2                	jmp    f0100292 <kbd_proc_data+0xd5>f01002ce415,15497
f01002d0:	83 ea 41             	sub    $0x41,%edxf01002d0417,15599
f01002d3:	8d 4e 20             	lea    0x20(%esi),%ecxf01002d3419,15668
f01002d6:	83 fa 1a             	cmp    $0x1a,%edxf01002d6420,15723
f01002d9:	0f 42 f1             	cmovb  %ecx,%esif01002d9421,15773
f01002dc:	e9 78 ff ff ff       	jmp    f0100259 <kbd_proc_data+0x9c>f01002dc422,15822
f01002e1:	be ff ff ff ff       	mov    $0xffffffff,%esif01002e1424,15904
f01002e6:	eb aa                	jmp    f0100292 <kbd_proc_data+0xd5>f01002e6425,15960
f01002e8:	be ff ff ff ff       	mov    $0xffffffff,%esif01002e8427,16042
f01002ed:	eb a3                	jmp    f0100292 <kbd_proc_data+0xd5>f01002ed428,16098
f01002ef <cons_putc>:f01002ef430,16168
static voidstatic434,16230
f01002ef:	55                   	push   %ebpf01002ef437,16261
f01002f0:	89 e5                	mov    %esp,%ebpf01002f0438,16305
f01002f2:	57                   	push   %edif01002f2439,16354
f01002f3:	56                   	push   %esif01002f3440,16398
f01002f4:	53                   	push   %ebxf01002f4441,16442
f01002f5:	83 ec 1c             	sub    $0x1c,%espf01002f5442,16486
f01002f8:	e8 52 fe ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01002f8443,16536
f01002fd:	81 c3 0f 70 01 00    	add    $0x1700f,%ebxf01002fd444,16608
f0100303:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0100303445,16661
f0100306:	be 00 00 00 00       	mov    $0x0,%esif0100306447,16730
f010030b:	bf fd 03 00 00       	mov    $0x3fd,%edif010030b449,16835
f0100310:	b9 84 00 00 00       	mov    $0x84,%ecxf0100310450,16886
f0100315:	eb 09                	jmp    f0100320 <cons_putc+0x31>f0100315451,16936
f0100317:	89 ca                	mov    %ecx,%edxf0100317452,17001
f0100319:	ec                   	in     (%dx),%alf0100319453,17050
f010031a:	ec                   	in     (%dx),%alf010031a454,17099
f010031b:	ec                   	in     (%dx),%alf010031b455,17148
f010031c:	ec                   	in     (%dx),%alf010031c456,17197
f010031d:	83 c6 01             	add    $0x1,%esif010031d458,17257
f0100320:	89 fa                	mov    %edi,%edxf0100320459,17306
f0100322:	ec                   	in     (%dx),%alf0100322460,17355
f0100323:	a8 20                	test   $0x20,%alf0100323462,17463
f0100325:	75 08                	jne    f010032f <cons_putc+0x40>f0100325463,17512
f0100327:	81 fe ff 31 00 00    	cmp    $0x31ff,%esif0100327464,17577
f010032d:	7e e8                	jle    f0100317 <cons_putc+0x28>f010032d465,17629
f010032f:	8b 7d e4             	mov    -0x1c(%ebp),%edif010032f467,17719
f0100332:	89 f8                	mov    %edi,%eaxf0100332468,17775
f0100334:	88 45 e3             	mov    %al,-0x1d(%ebp)f0100334469,17824
f0100337:	ba f8 03 00 00       	mov    $0x3f8,%edxf0100337471,17936
f010033c:	ee                   	out    %al,(%dx)f010033c472,17987
f010033d:	be 00 00 00 00       	mov    $0x0,%esif010033d474,18091
f0100342:	bf 79 03 00 00       	mov    $0x379,%edif0100342476,18196
f0100347:	b9 84 00 00 00       	mov    $0x84,%ecxf0100347477,18247
f010034c:	eb 09                	jmp    f0100357 <cons_putc+0x68>f010034c478,18297
f010034e:	89 ca                	mov    %ecx,%edxf010034e479,18362
f0100350:	ec                   	in     (%dx),%alf0100350480,18411
f0100351:	ec                   	in     (%dx),%alf0100351481,18460
f0100352:	ec                   	in     (%dx),%alf0100352482,18509
f0100353:	ec                   	in     (%dx),%alf0100353483,18558
f0100354:	83 c6 01             	add    $0x1,%esif0100354484,18607
f0100357:	89 fa                	mov    %edi,%edxf0100357485,18656
f0100359:	ec                   	in     (%dx),%alf0100359486,18705
f010035a:	81 fe ff 31 00 00    	cmp    $0x31ff,%esif010035a487,18754
f0100360:	7f 04                	jg     f0100366 <cons_putc+0x77>f0100360488,18806
f0100362:	84 c0                	test   %al,%alf0100362489,18871
f0100364:	79 e8                	jns    f010034e <cons_putc+0x5f>f0100364490,18918
f0100366:	ba 78 03 00 00       	mov    $0x378,%edxf0100366492,19040
f010036b:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eaxf010036b493,19091
f010036f:	ee                   	out    %al,(%dx)f010036f494,19147
f0100370:	ba 7a 03 00 00       	mov    $0x37a,%edxf0100370495,19196
f0100375:	b8 0d 00 00 00       	mov    $0xd,%eaxf0100375496,19247
f010037a:	ee                   	out    %al,(%dx)f010037a497,19296
f010037b:	b8 08 00 00 00       	mov    $0x8,%eaxf010037b498,19345
f0100380:	ee                   	out    %al,(%dx)f0100380499,19394
f0100381:	8b 7d e4             	mov    -0x1c(%ebp),%edif0100381501,19462
f0100384:	89 fa                	mov    %edi,%edxf0100384502,19518
f0100386:	81 e2 00 ff ff ff    	and    $0xffffff00,%edxf0100386503,19567
f010038c:	89 f8                	mov    %edi,%eaxf010038c505,19638
f010038e:	80 cc 07             	or     $0x7,%ahf010038e506,19687
f0100391:	85 d2                	test   %edx,%edxf0100391507,19735
f0100393:	0f 45 c7             	cmovne %edi,%eaxf0100393508,19784
f0100396:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0100396509,19833
f0100399:	0f b6 c0             	movzbl %al,%eaxf0100399511,19910
f010039c:	83 f8 09             	cmp    $0x9,%eaxf010039c512,19958
f010039f:	0f 84 b9 00 00 00    	je     f010045e <cons_putc+0x16f>f010039f513,20007
f01003a5:	83 f8 09             	cmp    $0x9,%eaxf01003a5514,20073
f01003a8:	7e 74                	jle    f010041e <cons_putc+0x12f>f01003a8515,20122
f01003aa:	83 f8 0a             	cmp    $0xa,%eaxf01003aa516,20188
f01003ad:	0f 84 9e 00 00 00    	je     f0100451 <cons_putc+0x162>f01003ad517,20237
f01003b3:	83 f8 0d             	cmp    $0xd,%eaxf01003b3518,20303
f01003b6:	0f 85 d9 00 00 00    	jne    f0100495 <cons_putc+0x1a6>f01003b6519,20352
f01003bc:	0f b7 83 7c 1f 00 00 	movzwl 0x1f7c(%ebx),%eaxf01003bc521,20453
f01003c3:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eaxf01003c3522,20510
f01003c9:	c1 e8 16             	shr    $0x16,%eaxf01003c9523,20567
f01003cc:	8d 04 80             	lea    (%eax,%eax,4),%eaxf01003cc524,20617
f01003cf:	c1 e0 04             	shl    $0x4,%eaxf01003cf525,20675
f01003d2:	66 89 83 7c 1f 00 00 	mov    %ax,0x1f7c(%ebx)f01003d2526,20724
f01003d9:	66 81 bb 7c 1f 00 00 	cmpw   $0x7cf,0x1f7c(%ebx)f01003d9528,20808
f01003e0:	cf 07 f01003e0529,20867
f01003e2:	0f 87 d4 00 00 00    	ja     f01004bc <cons_putc+0x1cd>f01003e2530,20884
f01003e8:	8b 8b 84 1f 00 00    	mov    0x1f84(%ebx),%ecxf01003e8532,20972
f01003ee:	b8 0e 00 00 00       	mov    $0xe,%eaxf01003ee533,21029
f01003f3:	89 ca                	mov    %ecx,%edxf01003f3534,21078
f01003f5:	ee                   	out    %al,(%dx)f01003f5535,21127
f01003f6:	0f b7 9b 7c 1f 00 00 	movzwl 0x1f7c(%ebx),%ebxf01003f6537,21212
f01003fd:	8d 71 01             	lea    0x1(%ecx),%esif01003fd538,21269
f0100400:	89 d8                	mov    %ebx,%eaxf0100400539,21323
f0100402:	66 c1 e8 08          	shr    $0x8,%axf0100402540,21372
f0100406:	89 f2                	mov    %esi,%edxf0100406541,21420
f0100408:	ee                   	out    %al,(%dx)f0100408542,21469
f0100409:	b8 0f 00 00 00       	mov    $0xf,%eaxf0100409543,21518
f010040e:	89 ca                	mov    %ecx,%edxf010040e544,21567
f0100410:	ee                   	out    %al,(%dx)f0100410545,21616
f0100411:	89 d8                	mov    %ebx,%eaxf0100411546,21665
f0100413:	89 f2                	mov    %esi,%edxf0100413547,21714
f0100415:	ee                   	out    %al,(%dx)f0100415548,21763
f0100416:	8d 65 f4             	lea    -0xc(%ebp),%espf0100416553,21859
f0100419:	5b                   	pop    %ebxf0100419554,21914
f010041a:	5e                   	pop    %esif010041a555,21958
f010041b:	5f                   	pop    %edif010041b556,22002
f010041c:	5d                   	pop    %ebpf010041c557,22046
f010041d:	c3                   	ret    f010041d558,22090
f010041e:	83 f8 08             	cmp    $0x8,%eaxf010041e560,22151
f0100421:	75 72                	jne    f0100495 <cons_putc+0x1a6>f0100421561,22200
f0100423:	0f b7 83 7c 1f 00 00 	movzwl 0x1f7c(%ebx),%eaxf0100423563,22287
f010042a:	66 85 c0             	test   %ax,%axf010042a564,22344
f010042d:	74 b9                	je     f01003e8 <cons_putc+0xf9>f010042d565,22391
f010042f:	83 e8 01             	sub    $0x1,%eaxf010042f567,22470
f0100432:	66 89 83 7c 1f 00 00 	mov    %ax,0x1f7c(%ebx)f0100432568,22519
f0100439:	0f b7 c0             	movzwl %ax,%eaxf0100439570,22616
f010043c:	0f b7 55 e4          	movzwl -0x1c(%ebp),%edxf010043c571,22664
f0100440:	b2 00                	mov    $0x0,%dlf0100440572,22720
f0100442:	83 ca 20             	or     $0x20,%edxf0100442573,22768
f0100445:	8b 8b 80 1f 00 00    	mov    0x1f80(%ebx),%ecxf0100445574,22818
f010044b:	66 89 14 41          	mov    %dx,(%ecx,%eax,2)f010044b575,22875
f010044f:	eb 88                	jmp    f01003d9 <cons_putc+0xea>f010044f576,22932
f0100451:	66 83 83 7c 1f 00 00 	addw   $0x50,0x1f7c(%ebx)f0100451578,23020
f0100458:	50 f0100458579,23078
f0100459:	e9 5e ff ff ff       	jmp    f01003bc <cons_putc+0xcd>f0100459580,23092
f010045e:	b8 20 00 00 00       	mov    $0x20,%eaxf010045e582,23175
f0100463:	e8 87 fe ff ff       	call   f01002ef <cons_putc>f0100463583,23225
f0100468:	b8 20 00 00 00       	mov    $0x20,%eaxf0100468585,23303
f010046d:	e8 7d fe ff ff       	call   f01002ef <cons_putc>f010046d586,23353
f0100472:	b8 20 00 00 00       	mov    $0x20,%eaxf0100472588,23431
f0100477:	e8 73 fe ff ff       	call   f01002ef <cons_putc>f0100477589,23481
f010047c:	b8 20 00 00 00       	mov    $0x20,%eaxf010047c591,23559
f0100481:	e8 69 fe ff ff       	call   f01002ef <cons_putc>f0100481592,23609
f0100486:	b8 20 00 00 00       	mov    $0x20,%eaxf0100486594,23687
f010048b:	e8 5f fe ff ff       	call   f01002ef <cons_putc>f010048b595,23737
f0100490:	e9 44 ff ff ff       	jmp    f01003d9 <cons_putc+0xea>f0100490596,23797
f0100495:	0f b7 83 7c 1f 00 00 	movzwl 0x1f7c(%ebx),%eaxf0100495598,23915
f010049c:	8d 50 01             	lea    0x1(%eax),%edxf010049c599,23972
f010049f:	66 89 93 7c 1f 00 00 	mov    %dx,0x1f7c(%ebx)f010049f600,24026
f01004a6:	0f b7 c0             	movzwl %ax,%eaxf01004a6601,24082
f01004a9:	8b 93 80 1f 00 00    	mov    0x1f80(%ebx),%edxf01004a9602,24130
f01004af:	0f b7 7d e4          	movzwl -0x1c(%ebp),%edif01004af603,24187
f01004b3:	66 89 3c 42          	mov    %di,(%edx,%eax,2)f01004b3604,24243
f01004b7:	e9 1d ff ff ff       	jmp    f01003d9 <cons_putc+0xea>f01004b7605,24300
f01004bc:	8b 83 80 1f 00 00    	mov    0x1f80(%ebx),%eaxf01004bc607,24447
f01004c2:	83 ec 04             	sub    $0x4,%espf01004c2608,24504
f01004c5:	68 00 0f 00 00       	push   $0xf00f01004c5609,24553
f01004ca:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edxf01004ca610,24599
f01004d0:	52                   	push   %edxf01004d0611,24654
f01004d1:	50                   	push   %eaxf01004d1612,24698
f01004d2:	e8 1e 38 00 00       	call   f0103cf5 <memmove>f01004d2613,24742
f01004d7:	8b 93 80 1f 00 00    	mov    0x1f80(%ebx),%edxf01004d7615,24830
f01004dd:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eaxf01004dd616,24887
f01004e3:	81 c2 a0 0f 00 00    	add    $0xfa0,%edxf01004e3617,24943
f01004e9:	83 c4 10             	add    $0x10,%espf01004e9618,24994
f01004ec:	66 c7 00 20 07       	movw   $0x720,(%eax)f01004ec619,25044
f01004f1:	83 c0 02             	add    $0x2,%eaxf01004f1620,25097
f01004f4:	39 d0                	cmp    %edx,%eaxf01004f4622,25197
f01004f6:	75 f4                	jne    f01004ec <cons_putc+0x1fd>f01004f6623,25246
f01004f8:	66 83 ab 7c 1f 00 00 	subw   $0x50,0x1f7c(%ebx)f01004f8625,25335
f01004ff:	50 f01004ff626,25393
f0100500:	e9 e3 fe ff ff       	jmp    f01003e8 <cons_putc+0xf9>f0100500627,25407
f0100505 <serial_intr>:f0100505629,25473
f0100505:	e8 e7 01 00 00       	call   f01006f1 <__x86.get_pc_thunk.ax>f0100505631,25499
f010050a:	05 02 6e 01 00       	add    $0x16e02,%eaxf010050a632,25571
f010050f:	80 b8 88 1f 00 00 00 	cmpb   $0x0,0x1f88(%eax)f010050f634,25644
f0100516:	75 02                	jne    f010051a <serial_intr+0x15>f0100516635,25701
f0100518:	f3 c3                	repz ret f0100518636,25768
f010051a:	55                   	push   %ebpf010051a638,25812
f010051b:	89 e5                	mov    %esp,%ebpf010051b639,25856
f010051d:	83 ec 08             	sub    $0x8,%espf010051d640,25905
f0100520:	8d 80 47 8e fe ff    	lea    -0x171b9(%eax),%eaxf0100520642,25985
f0100526:	e8 47 fc ff ff       	call   f0100172 <cons_intr>f0100526643,26044
f010052b:	c9                   	leave  f010052b645,26106
f010052c:	c3                   	ret    f010052c646,26146
f010052d <kbd_intr>:f010052d648,26187
f010052d:	55                   	push   %ebpf010052d650,26210
f010052e:	89 e5                	mov    %esp,%ebpf010052e651,26254
f0100530:	83 ec 08             	sub    $0x8,%espf0100530652,26303
f0100533:	e8 b9 01 00 00       	call   f01006f1 <__x86.get_pc_thunk.ax>f0100533653,26352
f0100538:	05 d4 6d 01 00       	add    $0x16dd4,%eaxf0100538654,26424
f010053d:	8d 80 b1 8e fe ff    	lea    -0x1714f(%eax),%eaxf010053d656,26504
f0100543:	e8 2a fc ff ff       	call   f0100172 <cons_intr>f0100543657,26563
f0100548:	c9                   	leave  f0100548659,26625
f0100549:	c3                   	ret    f0100549660,26665
f010054a <cons_getc>:f010054a662,26706
f010054a:	55                   	push   %ebpf010054a664,26730
f010054b:	89 e5                	mov    %esp,%ebpf010054b665,26774
f010054d:	53                   	push   %ebxf010054d666,26823
f010054e:	83 ec 04             	sub    $0x4,%espf010054e667,26867
f0100551:	e8 f9 fb ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0100551668,26916
f0100556:	81 c3 b6 6d 01 00    	add    $0x16db6,%ebxf0100556669,26988
f010055c:	e8 a4 ff ff ff       	call   f0100505 <serial_intr>f010055c671,27057
f0100561:	e8 c7 ff ff ff       	call   f010052d <kbd_intr>f0100561673,27132
f0100566:	8b 93 74 1f 00 00    	mov    0x1f74(%ebx),%edxf0100566675,27222
f010056c:	b8 00 00 00 00       	mov    $0x0,%eaxf010056c677,27290
f0100571:	3b 93 78 1f 00 00    	cmp    0x1f78(%ebx),%edxf0100571679,27370
f0100577:	74 19                	je     f0100592 <cons_getc+0x48>f0100577680,27427
		c = cons.buf[cons.rpos++];c681,27492
f0100579:	8d 4a 01             	lea    0x1(%edx),%ecxf0100579682,27521
f010057c:	89 8b 74 1f 00 00    	mov    %ecx,0x1f74(%ebx)f010057c683,27575
f0100582:	0f b6 84 13 74 1d 00 	movzbl 0x1d74(%ebx,%edx,1),%eaxf0100582684,27632
f0100589:	00 f0100589685,27696
f010058a:	81 f9 00 02 00 00    	cmp    $0x200,%ecxf010058a687,27742
f0100590:	74 06                	je     f0100598 <cons_getc+0x4e>f0100590688,27793
f0100592:	83 c4 04             	add    $0x4,%espf0100592690,27860
f0100595:	5b                   	pop    %ebxf0100595691,27909
f0100596:	5d                   	pop    %ebpf0100596692,27953
f0100597:	c3                   	ret    f0100597693,27997
f0100598:	c7 83 74 1f 00 00 00 	movl   $0x0,0x1f74(%ebx)f0100598695,28055
f010059f:	00 00 00 f010059f696,28112
f01005a2:	eb ee                	jmp    f0100592 <cons_getc+0x48>f01005a2697,28132
f01005a4 <cons_init>:f01005a4699,28198
voidvoid702,28255
f01005a4:	55                   	push   %ebpf01005a4705,28278
f01005a5:	89 e5                	mov    %esp,%ebpf01005a5706,28322
f01005a7:	57                   	push   %edif01005a7707,28371
f01005a8:	56                   	push   %esif01005a8708,28415
f01005a9:	53                   	push   %ebxf01005a9709,28459
f01005aa:	83 ec 1c             	sub    $0x1c,%espf01005aa710,28503
f01005ad:	e8 9d fb ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01005ad711,28553
f01005b2:	81 c3 5a 6d 01 00    	add    $0x16d5a,%ebxf01005b2712,28625
	was = *cp;was713,28678
f01005b8:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edxf01005b8714,28690
f01005bf:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000f01005bf716,28771
f01005c6:	5a a5 f01005c6717,28829
f01005c8:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eaxf01005c8719,28868
f01005cf:	66 3d 5a a5          	cmp    $0xa55a,%axf01005cf720,28923
f01005d3:	0f 84 bc 00 00 00    	je     f0100695 <cons_init+0xf1>f01005d3721,28974
		addr_6845 = MONO_BASE;addr_6845722,29039
f01005d9:	c7 83 84 1f 00 00 b4 	movl   $0x3b4,0x1f84(%ebx)f01005d9723,29064
f01005e0:	03 00 00 f01005e0724,29123
		cp = (uint16_t*) (KERNBASE + MONO_BUF);cp725,29143
f01005e3:	c7 45 e4 00 00 0b f0 	movl   $0xf00b0000,-0x1c(%ebp)f01005e3726,29185
f01005ea:	8b bb 84 1f 00 00    	mov    0x1f84(%ebx),%edif01005ea728,29270
f01005f0:	b8 0e 00 00 00       	mov    $0xe,%eaxf01005f0729,29327
f01005f5:	89 fa                	mov    %edi,%edxf01005f5730,29376
f01005f7:	ee                   	out    %al,(%dx)f01005f7731,29425
	pos = inb(addr_6845 + 1) << 8;pos732,29474
f01005f8:	8d 4f 01             	lea    0x1(%edi),%ecxf01005f8733,29506
f01005fb:	89 ca                	mov    %ecx,%edxf01005fb735,29616
f01005fd:	ec                   	in     (%dx),%alf01005fd736,29665
f01005fe:	0f b6 f0             	movzbl %al,%esif01005fe737,29714
f0100601:	c1 e6 08             	shl    $0x8,%esif0100601738,29762
f0100604:	b8 0f 00 00 00       	mov    $0xf,%eaxf0100604740,29868
f0100609:	89 fa                	mov    %edi,%edxf0100609741,29917
f010060b:	ee                   	out    %al,(%dx)f010060b742,29966
f010060c:	89 ca                	mov    %ecx,%edxf010060c744,30071
f010060e:	ec                   	in     (%dx),%alf010060e745,30120
	crt_buf = (uint16_t*) cp;crt_buf746,30169
f010060f:	8b 7d e4             	mov    -0x1c(%ebp),%edif010060f747,30196
f0100612:	89 bb 80 1f 00 00    	mov    %edi,0x1f80(%ebx)f0100612748,30252
f0100618:	0f b6 c0             	movzbl %al,%eaxf0100618750,30337
f010061b:	09 c6                	or     %eax,%esif010061b751,30385
	crt_pos = pos;crt_pos752,30434
f010061d:	66 89 b3 7c 1f 00 00 	mov    %si,0x1f7c(%ebx)f010061d753,30450
f0100624:	b9 00 00 00 00       	mov    $0x0,%ecxf0100624755,30563
f0100629:	89 c8                	mov    %ecx,%eaxf0100629756,30612
f010062b:	ba fa 03 00 00       	mov    $0x3fa,%edxf010062b757,30661
f0100630:	ee                   	out    %al,(%dx)f0100630758,30712
f0100631:	bf fb 03 00 00       	mov    $0x3fb,%edif0100631759,30761
f0100636:	b8 80 ff ff ff       	mov    $0xffffff80,%eaxf0100636760,30812
f010063b:	89 fa                	mov    %edi,%edxf010063b761,30868
f010063d:	ee                   	out    %al,(%dx)f010063d762,30917
f010063e:	b8 0c 00 00 00       	mov    $0xc,%eaxf010063e763,30966
f0100643:	ba f8 03 00 00       	mov    $0x3f8,%edxf0100643764,31015
f0100648:	ee                   	out    %al,(%dx)f0100648765,31066
f0100649:	be f9 03 00 00       	mov    $0x3f9,%esif0100649766,31115
f010064e:	89 c8                	mov    %ecx,%eaxf010064e767,31166
f0100650:	89 f2                	mov    %esi,%edxf0100650768,31215
f0100652:	ee                   	out    %al,(%dx)f0100652769,31264
f0100653:	b8 03 00 00 00       	mov    $0x3,%eaxf0100653770,31313
f0100658:	89 fa                	mov    %edi,%edxf0100658771,31362
f010065a:	ee                   	out    %al,(%dx)f010065a772,31411
f010065b:	ba fc 03 00 00       	mov    $0x3fc,%edxf010065b773,31460
f0100660:	89 c8                	mov    %ecx,%eaxf0100660774,31511
f0100662:	ee                   	out    %al,(%dx)f0100662775,31560
f0100663:	b8 01 00 00 00       	mov    $0x1,%eaxf0100663776,31609
f0100668:	89 f2                	mov    %esi,%edxf0100668777,31658
f010066a:	ee                   	out    %al,(%dx)f010066a778,31707
f010066b:	ba fd 03 00 00       	mov    $0x3fd,%edxf010066b780,31812
f0100670:	ec                   	in     (%dx),%alf0100670781,31863
f0100671:	89 c1                	mov    %eax,%ecxf0100671782,31912
	serial_exists = (inb(COM1+COM_LSR) != 0xFF);serial_exists783,31961
f0100673:	3c ff                	cmp    $0xff,%alf0100673784,32007
f0100675:	0f 95 83 88 1f 00 00 	setne  0x1f88(%ebx)f0100675785,32056
f010067c:	ba fa 03 00 00       	mov    $0x3fa,%edxf010067c786,32108
f0100681:	ec                   	in     (%dx),%alf0100681787,32159
f0100682:	ba f8 03 00 00       	mov    $0x3f8,%edxf0100682788,32208
f0100687:	ec                   	in     (%dx),%alf0100687789,32259
f0100688:	80 f9 ff             	cmp    $0xff,%clf0100688795,32372
f010068b:	74 25                	je     f01006b2 <cons_init+0x10e>f010068b796,32421
f010068d:	8d 65 f4             	lea    -0xc(%ebp),%espf010068d799,32533
f0100690:	5b                   	pop    %ebxf0100690800,32588
f0100691:	5e                   	pop    %esif0100691801,32632
f0100692:	5f                   	pop    %edif0100692802,32676
f0100693:	5d                   	pop    %ebpf0100693803,32720
f0100694:	c3                   	ret    f0100694804,32764
f0100695:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000f0100695806,32817
		addr_6845 = CGA_BASE;addr_6845807,32871
f010069c:	c7 83 84 1f 00 00 d4 	movl   $0x3d4,0x1f84(%ebx)f010069c808,32895
f01006a3:	03 00 00 f01006a3809,32954
	cp = (uint16_t*) (KERNBASE + CGA_BUF);cp810,32974
f01006a6:	c7 45 e4 00 80 0b f0 	movl   $0xf00b8000,-0x1c(%ebp)f01006a6811,33014
f01006ad:	e9 38 ff ff ff       	jmp    f01005ea <cons_init+0x46>f01006ad812,33077
f01006b2:	83 ec 0c             	sub    $0xc,%espf01006b2814,33186
f01006b5:	8d 83 4d ce fe ff    	lea    -0x131b3(%ebx),%eaxf01006b5815,33235
f01006bb:	50                   	push   %eaxf01006bb816,33294
f01006bc:	e8 8b 2a 00 00       	call   f010314c <cprintf>f01006bc817,33338
f01006c1:	83 c4 10             	add    $0x10,%espf01006c1818,33396
f01006c4:	eb c7                	jmp    f010068d <cons_init+0xe9>f01006c4820,33448
f01006c6 <cputchar>:f01006c6822,33514
voidvoid826,33597
f01006c6:	55                   	push   %ebpf01006c6829,33620
f01006c7:	89 e5                	mov    %esp,%ebpf01006c7830,33664
f01006c9:	83 ec 08             	sub    $0x8,%espf01006c9831,33713
f01006cc:	8b 45 08             	mov    0x8(%ebp),%eaxf01006cc833,33777
f01006cf:	e8 1b fc ff ff       	call   f01002ef <cons_putc>f01006cf834,33831
f01006d4:	c9                   	leave  f01006d4836,33893
f01006d5:	c3                   	ret    f01006d5837,33933
f01006d6 <getchar>:f01006d6839,33974
intint841,33995
f01006d6:	55                   	push   %ebpf01006d6844,34015
f01006d7:	89 e5                	mov    %esp,%ebpf01006d7845,34059
f01006d9:	83 ec 08             	sub    $0x8,%espf01006d9846,34108
f01006dc:	e8 69 fe ff ff       	call   f010054a <cons_getc>f01006dc850,34198
f01006e1:	85 c0                	test   %eax,%eaxf01006e1851,34258
f01006e3:	74 f7                	je     f01006dc <getchar+0x6>f01006e3852,34307
f01006e5:	c9                   	leave  f01006e5856,34402
f01006e6:	c3                   	ret    f01006e6857,34442
f01006e7 <iscons>:f01006e7859,34483
intint861,34503
f01006e7:	55                   	push   %ebpf01006e7864,34527
f01006e8:	89 e5                	mov    %esp,%ebpf01006e8865,34571
f01006ea:	b8 01 00 00 00       	mov    $0x1,%eaxf01006ea869,34654
f01006ef:	5d                   	pop    %ebpf01006ef870,34703
f01006f0:	c3                   	ret    f01006f0871,34747
f01006f1 <__x86.get_pc_thunk.ax>:f01006f1873,34788
f01006f1:	8b 04 24             	mov    (%esp),%eaxf01006f1874,34822
f01006f4:	c3                   	ret    f01006f4875,34873
f01006f5 <mon_help>:f01006f5877,34914
intint881,35000
f01006f5:	55                   	push   %ebpf01006f5884,35060
f01006f6:	89 e5                	mov    %esp,%ebpf01006f6885,35104
f01006f8:	56                   	push   %esif01006f8886,35153
f01006f9:	53                   	push   %ebxf01006f9887,35197
f01006fa:	e8 50 fa ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01006fa888,35241
f01006ff:	81 c3 0d 6c 01 00    	add    $0x16c0d,%ebxf01006ff889,35313
f0100705:	83 ec 04             	sub    $0x4,%espf0100705894,35479
f0100708:	8d 83 74 d0 fe ff    	lea    -0x12f8c(%ebx),%eaxf0100708895,35528
f010070e:	50                   	push   %eaxf010070e896,35587
f010070f:	8d 83 92 d0 fe ff    	lea    -0x12f6e(%ebx),%eaxf010070f897,35631
f0100715:	50                   	push   %eaxf0100715898,35690
f0100716:	8d b3 97 d0 fe ff    	lea    -0x12f69(%ebx),%esif0100716899,35734
f010071c:	56                   	push   %esif010071c900,35793
f010071d:	e8 2a 2a 00 00       	call   f010314c <cprintf>f010071d901,35837
f0100722:	83 c4 0c             	add    $0xc,%espf0100722902,35895
f0100725:	8d 83 48 d1 fe ff    	lea    -0x12eb8(%ebx),%eaxf0100725903,35944
f010072b:	50                   	push   %eaxf010072b904,36003
f010072c:	8d 83 a0 d0 fe ff    	lea    -0x12f60(%ebx),%eaxf010072c905,36047
f0100732:	50                   	push   %eaxf0100732906,36106
f0100733:	56                   	push   %esif0100733907,36150
f0100734:	e8 13 2a 00 00       	call   f010314c <cprintf>f0100734908,36194
f0100739:	83 c4 0c             	add    $0xc,%espf0100739909,36252
f010073c:	8d 83 a9 d0 fe ff    	lea    -0x12f57(%ebx),%eaxf010073c910,36301
f0100742:	50                   	push   %eaxf0100742911,36360
f0100743:	8d 83 b3 d0 fe ff    	lea    -0x12f4d(%ebx),%eaxf0100743912,36404
f0100749:	50                   	push   %eaxf0100749913,36463
f010074a:	56                   	push   %esif010074a914,36507
f010074b:	e8 fc 29 00 00       	call   f010314c <cprintf>f010074b915,36551
f0100750:	b8 00 00 00 00       	mov    $0x0,%eaxf0100750918,36622
f0100755:	8d 65 f8             	lea    -0x8(%ebp),%espf0100755919,36671
f0100758:	5b                   	pop    %ebxf0100758920,36726
f0100759:	5e                   	pop    %esif0100759921,36770
f010075a:	5d                   	pop    %ebpf010075a922,36814
f010075b:	c3                   	ret    f010075b923,36858
f010075c <mon_kerninfo>:f010075c925,36899
intint927,36925
f010075c:	55                   	push   %ebpf010075c930,36989
f010075d:	89 e5                	mov    %esp,%ebpf010075d931,37033
f010075f:	57                   	push   %edif010075f932,37082
f0100760:	56                   	push   %esif0100760933,37126
f0100761:	53                   	push   %ebxf0100761934,37170
f0100762:	83 ec 18             	sub    $0x18,%espf0100762935,37214
f0100765:	e8 e5 f9 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0100765936,37264
f010076a:	81 c3 a2 6b 01 00    	add    $0x16ba2,%ebxf010076a937,37336
f0100770:	8d 83 c0 d0 fe ff    	lea    -0x12f40(%ebx),%eaxf0100770941,37486
f0100776:	50                   	push   %eaxf0100776942,37545
f0100777:	e8 d0 29 00 00       	call   f010314c <cprintf>f0100777943,37589
f010077c:	83 c4 08             	add    $0x8,%espf010077c945,37708
f010077f:	ff b3 f4 ff ff ff    	pushl  -0xc(%ebx)f010077f946,37757
f0100785:	8d 83 70 d1 fe ff    	lea    -0x12e90(%ebx),%eaxf0100785947,37807
f010078b:	50                   	push   %eaxf010078b948,37866
f010078c:	e8 bb 29 00 00       	call   f010314c <cprintf>f010078c949,37910
f0100791:	83 c4 0c             	add    $0xc,%espf0100791951,38042
f0100794:	c7 c7 0c 00 10 f0    	mov    $0xf010000c,%edif0100794952,38091
f010079a:	8d 87 00 00 00 10    	lea    0x10000000(%edi),%eaxf010079a953,38147
f01007a0:	50                   	push   %eaxf01007a0954,38208
f01007a1:	57                   	push   %edif01007a1955,38252
f01007a2:	8d 83 98 d1 fe ff    	lea    -0x12e68(%ebx),%eaxf01007a2956,38296
f01007a8:	50                   	push   %eaxf01007a8957,38355
f01007a9:	e8 9e 29 00 00       	call   f010314c <cprintf>f01007a9958,38399
f01007ae:	83 c4 0c             	add    $0xc,%espf01007ae960,38531
f01007b1:	c7 c0 e9 40 10 f0    	mov    $0xf01040e9,%eaxf01007b1961,38580
f01007b7:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edxf01007b7962,38636
f01007bd:	52                   	push   %edxf01007bd963,38697
f01007be:	50                   	push   %eaxf01007be964,38741
f01007bf:	8d 83 bc d1 fe ff    	lea    -0x12e44(%ebx),%eaxf01007bf965,38785
f01007c5:	50                   	push   %eaxf01007c5966,38844
f01007c6:	e8 81 29 00 00       	call   f010314c <cprintf>f01007c6967,38888
f01007cb:	83 c4 0c             	add    $0xc,%espf01007cb969,39020
f01007ce:	c7 c0 60 90 11 f0    	mov    $0xf0119060,%eaxf01007ce970,39069
f01007d4:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edxf01007d4971,39125
f01007da:	52                   	push   %edxf01007da972,39186
f01007db:	50                   	push   %eaxf01007db973,39230
f01007dc:	8d 83 e0 d1 fe ff    	lea    -0x12e20(%ebx),%eaxf01007dc974,39274
f01007e2:	50                   	push   %eaxf01007e2975,39333
f01007e3:	e8 64 29 00 00       	call   f010314c <cprintf>f01007e3976,39377
f01007e8:	83 c4 0c             	add    $0xc,%espf01007e8978,39505
f01007eb:	c7 c6 c0 96 11 f0    	mov    $0xf01196c0,%esif01007eb979,39554
f01007f1:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eaxf01007f1980,39610
f01007f7:	50                   	push   %eaxf01007f7981,39671
f01007f8:	56                   	push   %esif01007f8982,39715
f01007f9:	8d 83 04 d2 fe ff    	lea    -0x12dfc(%ebx),%eaxf01007f9983,39759
f01007ff:	50                   	push   %eaxf01007ff984,39818
f0100800:	e8 47 29 00 00       	call   f010314c <cprintf>f0100800985,39862
f0100805:	83 c4 08             	add    $0x8,%espf0100805987,39975
f0100808:	81 c6 ff 03 00 00    	add    $0x3ff,%esif0100808989,40062
f010080e:	29 fe                	sub    %edi,%esif010080e990,40113
f0100810:	c1 fe 0a             	sar    $0xa,%esif0100810992,40217
f0100813:	56                   	push   %esif0100813993,40266
f0100814:	8d 83 28 d2 fe ff    	lea    -0x12dd8(%ebx),%eaxf0100814994,40310
f010081a:	50                   	push   %eaxf010081a995,40369
f010081b:	e8 2c 29 00 00       	call   f010314c <cprintf>f010081b996,40413
f0100820:	b8 00 00 00 00       	mov    $0x0,%eaxf0100820999,40484
f0100825:	8d 65 f4             	lea    -0xc(%ebp),%espf01008251000,40533
f0100828:	5b                   	pop    %ebxf01008281001,40588
f0100829:	5e                   	pop    %esif01008291002,40632
f010082a:	5f                   	pop    %edif010082a1003,40676
f010082b:	5d                   	pop    %ebpf010082b1004,40720
f010082c:	c3                   	ret    f010082c1005,40764
f010082d <mon_showmappings>:f010082d1007,40805
int mon_showmappings(int argc, char **argv, struct Trapframe *tf)int1012,40868
f010082d:	55                   	push   %ebpf010082d1014,40936
f010082e:	89 e5                	mov    %esp,%ebpf010082e1015,40980
f0100830:	57                   	push   %edif01008301016,41029
f0100831:	56                   	push   %esif01008311017,41073
f0100832:	53                   	push   %ebxf01008321018,41117
f0100833:	83 ec 1c             	sub    $0x1c,%espf01008331019,41161
f0100836:	e8 14 f9 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01008361020,41211
f010083b:	81 c3 d1 6a 01 00    	add    $0x16ad1,%ebxf010083b1021,41283
f0100841:	83 7d 08 03          	cmpl   $0x3,0x8(%ebp)f01008411023,41354
f0100845:	74 1f                	je     f0100866 <mon_showmappings+0x39>f01008451024,41408
f0100847:	83 ec 0c             	sub    $0xc,%espf01008471026,41520
f010084a:	8d 83 d9 d0 fe ff    	lea    -0x12f27(%ebx),%eaxf010084a1027,41569
f0100850:	50                   	push   %eaxf01008501028,41628
f0100851:	e8 f6 28 00 00       	call   f010314c <cprintf>f01008511029,41672
f0100856:	83 c4 10             	add    $0x10,%espf01008561031,41742
f0100859:	b8 01 00 00 00       	mov    $0x1,%eaxf01008591032,41792
f010085e:	8d 65 f4             	lea    -0xc(%ebp),%espf010085e1039,41900
f0100861:	5b                   	pop    %ebxf01008611040,41955
f0100862:	5e                   	pop    %esif01008621041,41999
f0100863:	5f                   	pop    %edif01008631042,42043
f0100864:	5d                   	pop    %ebpf01008641043,42087
f0100865:	c3                   	ret    f01008651044,42131
f0100866:	83 ec 04             	sub    $0x4,%espf01008661046,42251
f0100869:	6a 10                	push   $0x10f01008691047,42300
f010086b:	6a 00                	push   $0x0f010086b1048,42345
f010086d:	8b 45 0c             	mov    0xc(%ebp),%eaxf010086d1049,42389
f0100870:	ff 70 04             	pushl  0x4(%eax)f01008701050,42443
f0100873:	e8 4e 35 00 00       	call   f0103dc6 <strtol>f01008731051,42492
f0100878:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf01008781052,42549
f010087d:	89 c6                	mov    %eax,%esif010087d1053,42605
f010087f:	83 c4 0c             	add    $0xc,%espf010087f1055,42730
f0100882:	6a 10                	push   $0x10f01008821056,42779
f0100884:	6a 00                	push   $0x0f01008841057,42824
f0100886:	8b 45 0c             	mov    0xc(%ebp),%eaxf01008861058,42868
f0100889:	ff 70 08             	pushl  0x8(%eax)f01008891059,42922
f010088c:	e8 35 35 00 00       	call   f0103dc6 <strtol>f010088c1060,42971
f0100891:	8d b8 ff 0f 00 00    	lea    0xfff(%eax),%edif01008911061,43028
f0100897:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edif01008971062,43084
f010089d:	83 c4 0c             	add    $0xc,%espf010089d1064,43235
f01008a0:	57                   	push   %edif01008a01065,43284
f01008a1:	56                   	push   %esif01008a11066,43328
f01008a2:	8d 83 54 d2 fe ff    	lea    -0x12dac(%ebx),%eaxf01008a21067,43372
f01008a8:	50                   	push   %eaxf01008a81068,43431
f01008a9:	e8 9e 28 00 00       	call   f010314c <cprintf>f01008a91069,43475
f01008ae:	83 c4 10             	add    $0x10,%espf01008ae1071,43562
f01008b1:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf01008b11073,43672
f01008b7:	89 45 e4             	mov    %eax,-0x1c(%ebp)f01008b71074,43728
f01008ba:	8d 83 94 d2 fe ff    	lea    -0x12d6c(%ebx),%eaxf01008ba1076,43839
f01008c0:	89 45 e0             	mov    %eax,-0x20(%ebp)f01008c01077,43898
f01008c3:	eb 19                	jmp    f01008de <mon_showmappings+0xb1>f01008c31079,43983
f01008c5:	83 ec 08             	sub    $0x8,%espf01008c51081,44106
f01008c8:	56                   	push   %esif01008c81082,44155
f01008c9:	8d 83 f2 d0 fe ff    	lea    -0x12f0e(%ebx),%eaxf01008c91083,44199
f01008cf:	50                   	push   %eaxf01008cf1084,44258
f01008d0:	e8 77 28 00 00       	call   f010314c <cprintf>f01008d01085,44302
f01008d5:	83 c4 10             	add    $0x10,%espf01008d51086,44360
f01008d8:	81 c6 00 10 00 00    	add    $0x1000,%esif01008d81088,44430
f01008de:	39 f7                	cmp    %esi,%edif01008de1090,44511
f01008e0:	72 36                	jb     f0100918 <mon_showmappings+0xeb>f01008e01091,44560
f01008e2:	83 ec 04             	sub    $0x4,%espf01008e21093,44692
f01008e5:	6a 00                	push   $0x0f01008e51094,44741
f01008e7:	56                   	push   %esif01008e71095,44785
f01008e8:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf01008e81096,44829
f01008eb:	ff 30                	pushl  (%eax)f01008eb1097,44885
f01008ed:	e8 69 08 00 00       	call   f010115b <pgdir_walk>f01008ed1098,44931
f01008f2:	83 c4 10             	add    $0x10,%espf01008f21100,45013
f01008f5:	85 c0                	test   %eax,%eaxf01008f51101,45063
f01008f7:	74 cc                	je     f01008c5 <mon_showmappings+0x98>f01008f71102,45112
f01008f9:	8b 00                	mov    (%eax),%eaxf01008f91104,45203
f01008fb:	89 c2                	mov    %eax,%edxf01008fb1106,45309
f01008fd:	81 e2 ff 0f 00 00    	and    $0xfff,%edxf01008fd1107,45358
f0100903:	52                   	push   %edxf01009031108,45409
f0100904:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf01009041110,45488
f0100909:	50                   	push   %eaxf01009091112,45599
f010090a:	56                   	push   %esif010090a1113,45643
f010090b:	ff 75 e0             	pushl  -0x20(%ebp)f010090b1114,45687
f010090e:	e8 39 28 00 00       	call   f010314c <cprintf>f010090e1115,45738
f0100913:	83 c4 10             	add    $0x10,%espf01009131116,45796
f0100916:	eb c0                	jmp    f01008d8 <mon_showmappings+0xab>f01009161117,45846
f0100918:	b8 00 00 00 00       	mov    $0x0,%eaxf01009181119,45929
f010091d:	e9 3c ff ff ff       	jmp    f010085e <mon_showmappings+0x31>f010091d1120,45978
f0100922 <mon_backtrace>:f01009221122,46051
f0100922:	55                   	push   %ebpf01009221124,46079
f0100923:	89 e5                	mov    %esp,%ebpf01009231125,46123
f0100925:	b8 00 00 00 00       	mov    $0x0,%eaxf01009251127,46174
f010092a:	5d                   	pop    %ebpf010092a1128,46223
f010092b:	c3                   	ret    f010092b1129,46267
f010092c <monitor>:f010092c1131,46308
voidvoid1135,46342
f010092c:	55                   	push   %ebpf010092c1138,46379
f010092d:	89 e5                	mov    %esp,%ebpf010092d1139,46423
f010092f:	57                   	push   %edif010092f1140,46472
f0100930:	56                   	push   %esif01009301141,46516
f0100931:	53                   	push   %ebxf01009311142,46560
f0100932:	83 ec 68             	sub    $0x68,%espf01009321143,46604
f0100935:	e8 15 f8 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01009351144,46654
f010093a:	81 c3 d2 69 01 00    	add    $0x169d2,%ebxf010093a1145,46726
f0100940:	8d 83 bc d2 fe ff    	lea    -0x12d44(%ebx),%eaxf01009401149,46842
f0100946:	50                   	push   %eaxf01009461150,46901
f0100947:	e8 00 28 00 00       	call   f010314c <cprintf>f01009471151,46945
f010094c:	8d 83 e0 d2 fe ff    	lea    -0x12d20(%ebx),%eaxf010094c1153,47054
f0100952:	89 04 24             	mov    %eax,(%esp)f01009521154,47113
f0100955:	e8 f2 27 00 00       	call   f010314c <cprintf>f01009551155,47164
f010095a:	83 c4 10             	add    $0x10,%espf010095a1156,47222
f010095d:	8d bb 0f d1 fe ff    	lea    -0x12ef1(%ebx),%edif010095d1158,47315
f0100963:	eb 4a                	jmp    f01009af <monitor+0x83>f01009631159,47374
f0100965:	83 ec 08             	sub    $0x8,%espf01009651160,47437
f0100968:	0f be c0             	movsbl %al,%eaxf01009681161,47486
f010096b:	50                   	push   %eaxf010096b1162,47534
f010096c:	57                   	push   %edif010096c1163,47578
f010096d:	e8 f9 32 00 00       	call   f0103c6b <strchr>f010096d1164,47622
f0100972:	83 c4 10             	add    $0x10,%espf01009721165,47679
f0100975:	85 c0                	test   %eax,%eaxf01009751166,47729
f0100977:	74 08                	je     f0100981 <monitor+0x55>f01009771167,47778
f0100979:	c6 06 00             	movb   $0x0,(%esi)f01009791169,47856
f010097c:	8d 76 01             	lea    0x1(%esi),%esif010097c1170,47907
f010097f:	eb 79                	jmp    f01009fa <monitor+0xce>f010097f1171,47961
f0100981:	80 3e 00             	cmpb   $0x0,(%esi)f01009811173,48041
f0100984:	74 7f                	je     f0100a05 <monitor+0xd9>f01009841174,48092
f0100986:	83 7d a4 0f          	cmpl   $0xf,-0x5c(%ebp)f01009861176,48182
f010098a:	74 0f                	je     f010099b <monitor+0x6f>f010098a1177,48238
f010098c:	8b 45 a4             	mov    -0x5c(%ebp),%eaxf010098c1179,48323
f010098f:	8d 48 01             	lea    0x1(%eax),%ecxf010098f1180,48379
f0100992:	89 4d a4             	mov    %ecx,-0x5c(%ebp)f01009921181,48433
f0100995:	89 74 85 a8          	mov    %esi,-0x58(%ebp,%eax,4)f01009951182,48489
f0100999:	eb 44                	jmp    f01009df <monitor+0xb3>f01009991183,48552
f010099b:	83 ec 08             	sub    $0x8,%espf010099b1185,48669
f010099e:	6a 10                	push   $0x10f010099e1186,48718
f01009a0:	8d 83 14 d1 fe ff    	lea    -0x12eec(%ebx),%eaxf01009a01187,48763
f01009a6:	50                   	push   %eaxf01009a61188,48822
f01009a7:	e8 a0 27 00 00       	call   f010314c <cprintf>f01009a71189,48866
f01009ac:	83 c4 10             	add    $0x10,%espf01009ac1190,48924
		buf = readline("K> ");buf1194,48989
f01009af:	8d 83 0b d1 fe ff    	lea    -0x12ef5(%ebx),%eaxf01009af1195,49014
f01009b5:	89 45 a4             	mov    %eax,-0x5c(%ebp)f01009b51196,49073
f01009b8:	83 ec 0c             	sub    $0xc,%espf01009b81197,49129
f01009bb:	ff 75 a4             	pushl  -0x5c(%ebp)f01009bb1198,49178
f01009be:	e8 70 30 00 00       	call   f0103a33 <readline>f01009be1199,49229
f01009c3:	89 c6                	mov    %eax,%esif01009c31200,49288
f01009c5:	83 c4 10             	add    $0x10,%espf01009c51202,49356
f01009c8:	85 c0                	test   %eax,%eaxf01009c81203,49406
f01009ca:	74 ec                	je     f01009b8 <monitor+0x8c>f01009ca1204,49455
f01009cc:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)f01009cc1206,49535
	argc = 0;argc1207,49591
f01009d3:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)f01009d31208,49602
f01009da:	eb 1e                	jmp    f01009fa <monitor+0xce>f01009da1209,49658
f01009dc:	83 c6 01             	add    $0x1,%esif01009dc1211,49731
f01009df:	0f b6 06             	movzbl (%esi),%eaxf01009df1213,49824
f01009e2:	84 c0                	test   %al,%alf01009e21214,49875
f01009e4:	74 14                	je     f01009fa <monitor+0xce>f01009e41215,49922
f01009e6:	83 ec 08             	sub    $0x8,%espf01009e61216,49985
f01009e9:	0f be c0             	movsbl %al,%eaxf01009e91217,50034
f01009ec:	50                   	push   %eaxf01009ec1218,50082
f01009ed:	57                   	push   %edif01009ed1219,50126
f01009ee:	e8 78 32 00 00       	call   f0103c6b <strchr>f01009ee1220,50170
f01009f3:	83 c4 10             	add    $0x10,%espf01009f31221,50227
f01009f6:	85 c0                	test   %eax,%eaxf01009f61222,50277
f01009f8:	74 e2                	je     f01009dc <monitor+0xb0>f01009f81223,50326
f01009fa:	0f b6 06             	movzbl (%esi),%eaxf01009fa1225,50432
f01009fd:	84 c0                	test   %al,%alf01009fd1226,50483
f01009ff:	0f 85 60 ff ff ff    	jne    f0100965 <monitor+0x39>f01009ff1227,50530
f0100a05:	8b 45 a4             	mov    -0x5c(%ebp),%eaxf0100a051229,50610
f0100a08:	c7 44 85 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%eax,4)f0100a081230,50666
f0100a0f:	00 f0100a0f1231,50729
f0100a10:	85 c0                	test   %eax,%eaxf0100a101233,50759
f0100a12:	74 9b                	je     f01009af <monitor+0x83>f0100a121234,50808
f0100a14:	8d b3 14 1d 00 00    	lea    0x1d14(%ebx),%esif0100a141235,50871
f0100a1a:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%ebp)f0100a1a1237,50974
f0100a21:	83 ec 08             	sub    $0x8,%espf0100a211239,51076
f0100a24:	ff 36                	pushl  (%esi)f0100a241240,51125
f0100a26:	ff 75 a8             	pushl  -0x58(%ebp)f0100a261241,51171
f0100a29:	e8 df 31 00 00       	call   f0103c0d <strcmp>f0100a291242,51222
f0100a2e:	83 c4 10             	add    $0x10,%espf0100a2e1243,51279
f0100a31:	85 c0                	test   %eax,%eaxf0100a311244,51329
f0100a33:	74 29                	je     f0100a5e <monitor+0x132>f0100a331245,51378
f0100a35:	83 45 a0 01          	addl   $0x1,-0x60(%ebp)f0100a351247,51488
f0100a39:	8b 45 a0             	mov    -0x60(%ebp),%eaxf0100a391248,51544
f0100a3c:	83 c6 0c             	add    $0xc,%esif0100a3c1249,51600
f0100a3f:	83 f8 03             	cmp    $0x3,%eaxf0100a3f1250,51649
f0100a42:	75 dd                	jne    f0100a21 <monitor+0xf5>f0100a421251,51698
f0100a44:	83 ec 08             	sub    $0x8,%espf0100a441253,51806
f0100a47:	ff 75 a8             	pushl  -0x58(%ebp)f0100a471254,51855
f0100a4a:	8d 83 31 d1 fe ff    	lea    -0x12ecf(%ebx),%eaxf0100a4a1255,51906
f0100a50:	50                   	push   %eaxf0100a501256,51965
f0100a51:	e8 f6 26 00 00       	call   f010314c <cprintf>f0100a511257,52009
f0100a56:	83 c4 10             	add    $0x10,%espf0100a561258,52067
f0100a59:	e9 51 ff ff ff       	jmp    f01009af <monitor+0x83>f0100a591259,52117
f0100a5e:	83 ec 04             	sub    $0x4,%espf0100a5e1261,52224
f0100a61:	8b 45 a0             	mov    -0x60(%ebp),%eaxf0100a611262,52273
f0100a64:	8d 04 40             	lea    (%eax,%eax,2),%eaxf0100a641263,52329
f0100a67:	ff 75 08             	pushl  0x8(%ebp)f0100a671264,52387
f0100a6a:	8d 55 a8             	lea    -0x58(%ebp),%edxf0100a6a1265,52436
f0100a6d:	52                   	push   %edxf0100a6d1266,52492
f0100a6e:	ff 75 a4             	pushl  -0x5c(%ebp)f0100a6e1267,52536
f0100a71:	ff 94 83 1c 1d 00 00 	call   *0x1d1c(%ebx,%eax,4)f0100a711268,52587
f0100a78:	83 c4 10             	add    $0x10,%espf0100a781270,52675
f0100a7b:	85 c0                	test   %eax,%eaxf0100a7b1271,52725
f0100a7d:	0f 89 2c ff ff ff    	jns    f01009af <monitor+0x83>f0100a7d1272,52774
f0100a83:	8d 65 f4             	lea    -0xc(%ebp),%espf0100a831276,52853
f0100a86:	5b                   	pop    %ebxf0100a861277,52908
f0100a87:	5e                   	pop    %esif0100a871278,52952
f0100a88:	5f                   	pop    %edif0100a881279,52996
f0100a89:	5d                   	pop    %ebpf0100a891280,53040
f0100a8a:	c3                   	ret    f0100a8a1281,53084
f0100a8b <nvram_read>:f0100a8b1283,53125
static intstatic1287,53258
f0100a8b:	55                   	push   %ebpf0100a8b1290,53289
f0100a8c:	89 e5                	mov    %esp,%ebpf0100a8c1291,53333
f0100a8e:	57                   	push   %edif0100a8e1292,53382
f0100a8f:	56                   	push   %esif0100a8f1293,53426
f0100a90:	53                   	push   %ebxf0100a901294,53470
f0100a91:	83 ec 18             	sub    $0x18,%espf0100a911295,53514
f0100a94:	e8 b6 f6 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0100a941296,53564
f0100a99:	81 c3 73 68 01 00    	add    $0x16873,%ebxf0100a991297,53636
f0100a9f:	89 c7                	mov    %eax,%edif0100a9f1298,53689
f0100aa1:	50                   	push   %eaxf0100aa11300,53794
f0100aa2:	e8 1e 26 00 00       	call   f01030c5 <mc146818_read>f0100aa21301,53838
f0100aa7:	89 c6                	mov    %eax,%esif0100aa71302,53902
f0100aa9:	83 c7 01             	add    $0x1,%edif0100aa91303,53951
f0100aac:	89 3c 24             	mov    %edi,(%esp)f0100aac1304,54000
f0100aaf:	e8 11 26 00 00       	call   f01030c5 <mc146818_read>f0100aaf1305,54051
f0100ab4:	c1 e0 08             	shl    $0x8,%eaxf0100ab41306,54115
f0100ab7:	09 f0                	or     %esi,%eaxf0100ab71307,54164
f0100ab9:	8d 65 f4             	lea    -0xc(%ebp),%espf0100ab91309,54215
f0100abc:	5b                   	pop    %ebxf0100abc1310,54270
f0100abd:	5e                   	pop    %esif0100abd1311,54314
f0100abe:	5f                   	pop    %edif0100abe1312,54358
f0100abf:	5d                   	pop    %ebpf0100abf1313,54402
f0100ac0:	c3                   	ret    f0100ac01314,54446
f0100ac1 <boot_alloc>:f0100ac11316,54487
static void *static1320,54670
f0100ac1:	55                   	push   %ebpf0100ac11323,54709
f0100ac2:	89 e5                	mov    %esp,%ebpf0100ac21324,54753
f0100ac4:	53                   	push   %ebxf0100ac41325,54802
f0100ac5:	83 ec 04             	sub    $0x4,%espf0100ac51326,54846
f0100ac8:	e8 ec 25 00 00       	call   f01030b9 <__x86.get_pc_thunk.cx>f0100ac81327,54895
f0100acd:	81 c1 3f 68 01 00    	add    $0x1683f,%ecxf0100acd1328,54967
f0100ad3:	89 c2                	mov    %eax,%edxf0100ad31329,55020
f0100ad5:	83 b9 8c 1f 00 00 00 	cmpl   $0x0,0x1f8c(%ecx)f0100ad51336,55369
f0100adc:	74 34                	je     f0100b12 <boot_alloc+0x51>f0100adc1337,55426
f0100ade:	8b 81 8c 1f 00 00    	mov    0x1f8c(%ecx),%eaxf0100ade1344,55758
f0100ae4:	8b 99 94 1f 00 00    	mov    0x1f94(%ecx),%ebxf0100ae41345,55815
f0100aea:	c1 e3 0c             	shl    $0xc,%ebxf0100aea1346,55872
f0100aed:	81 c3 c0 96 11 f0    	add    $0xf01196c0,%ebxf0100aed1347,55921
f0100af3:	29 c3                	sub    %eax,%ebxf0100af31348,55977
f0100af5:	39 d3                	cmp    %edx,%ebxf0100af51351,56054
f0100af7:	72 31                	jb     f0100b2a <boot_alloc+0x69>f0100af71352,56103
        result = nextfree;result1356,56305
f0100af9:	81 c2 ff 0f 00 00    	add    $0xfff,%edxf0100af91358,56372
f0100aff:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf0100aff1359,56423
f0100b05:	01 c2                	add    %eax,%edxf0100b051360,56479
f0100b07:	89 91 8c 1f 00 00    	mov    %edx,0x1f8c(%ecx)f0100b071361,56528
f0100b0d:	8b 5d fc             	mov    -0x4(%ebp),%ebxf0100b0d1364,56610
f0100b10:	c9                   	leave  f0100b101365,56665
f0100b11:	c3                   	ret    f0100b111366,56705
		nextfree = ROUNDUP((char *) end, PGSIZE);nextfree1367,56745
f0100b12:	c7 c0 c0 96 11 f0    	mov    $0xf01196c0,%eaxf0100b121368,56789
f0100b18:	05 ff 0f 00 00       	add    $0xfff,%eaxf0100b181369,56845
f0100b1d:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf0100b1d1370,56896
f0100b22:	89 81 8c 1f 00 00    	mov    %eax,0x1f8c(%ecx)f0100b221371,56952
f0100b28:	eb b4                	jmp    f0100ade <boot_alloc+0x1d>f0100b281372,57009
f0100b2a:	83 ec 0c             	sub    $0xc,%espf0100b2a1374,57173
f0100b2d:	53                   	push   %ebxf0100b2d1375,57222
f0100b2e:	52                   	push   %edxf0100b2e1376,57266
f0100b2f:	8d 81 08 d3 fe ff    	lea    -0x12cf8(%ecx),%eaxf0100b2f1377,57310
f0100b35:	50                   	push   %eaxf0100b351378,57369
f0100b36:	6a 6c                	push   $0x6cf0100b361379,57413
f0100b38:	8d 81 58 db fe ff    	lea    -0x124a8(%ecx),%eaxf0100b381380,57458
f0100b3e:	50                   	push   %eaxf0100b3e1381,57517
f0100b3f:	89 cb                	mov    %ecx,%ebxf0100b3f1382,57561
f0100b41:	e8 53 f5 ff ff       	call   f0100099 <_panic>f0100b411383,57610
f0100b46 <check_va2pa>:f0100b461385,57668
static physaddr_tstatic1389,57832
f0100b46:	55                   	push   %ebpf0100b461392,57892
f0100b47:	89 e5                	mov    %esp,%ebpf0100b471393,57936
f0100b49:	56                   	push   %esif0100b491394,57985
f0100b4a:	53                   	push   %ebxf0100b4a1395,58029
f0100b4b:	e8 69 25 00 00       	call   f01030b9 <__x86.get_pc_thunk.cx>f0100b4b1396,58073
f0100b50:	81 c1 bc 67 01 00    	add    $0x167bc,%ecxf0100b501397,58145
	pgdir = &pgdir[PDX(va)];pgdir1400,58210
f0100b56:	89 d3                	mov    %edx,%ebxf0100b561401,58236
f0100b58:	c1 eb 16             	shr    $0x16,%ebxf0100b581402,58285
f0100b5b:	8b 04 98             	mov    (%eax,%ebx,4),%eaxf0100b5b1404,58359
f0100b5e:	a8 01                	test   $0x1,%alf0100b5e1405,58417
f0100b60:	74 5a                	je     f0100bbc <check_va2pa+0x76>f0100b601406,58465
	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));p1408,58545
f0100b62:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf0100b621409,58584
#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)KADDR1410,58640
static inline void*static1412,58690
f0100b67:	89 c6                	mov    %eax,%esif0100b671416,58788
f0100b69:	c1 ee 0c             	shr    $0xc,%esif0100b691417,58837
f0100b6c:	c7 c3 c8 96 11 f0    	mov    $0xf01196c8,%ebxf0100b6c1418,58886
f0100b72:	3b 33                	cmp    (%ebx),%esif0100b721419,58942
f0100b74:	73 2b                	jae    f0100ba1 <check_va2pa+0x5b>f0100b741420,58993
f0100b76:	c1 ea 0c             	shr    $0xc,%edxf0100b761422,59088
f0100b79:	81 e2 ff 03 00 00    	and    $0x3ff,%edxf0100b791423,59137
f0100b7f:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eaxf0100b7f1424,59188
f0100b86:	89 c2                	mov    %eax,%edxf0100b861425,59257
f0100b88:	83 e2 01             	and    $0x1,%edxf0100b881426,59306
f0100b8b:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf0100b8b1429,59398
f0100b90:	85 d2                	test   %edx,%edxf0100b901430,59454
f0100b92:	ba ff ff ff ff       	mov    $0xffffffff,%edxf0100b921431,59503
f0100b97:	0f 44 c2             	cmove  %edx,%eaxf0100b971432,59559
f0100b9a:	8d 65 f8             	lea    -0x8(%ebp),%espf0100b9a1434,59610
f0100b9d:	5b                   	pop    %ebxf0100b9d1435,59665
f0100b9e:	5e                   	pop    %esif0100b9e1436,59709
f0100b9f:	5d                   	pop    %ebpf0100b9f1437,59753
f0100ba0:	c3                   	ret    f0100ba01438,59797
f0100ba1:	50                   	push   %eaxf0100ba11440,59901
f0100ba2:	8d 81 54 d3 fe ff    	lea    -0x12cac(%ecx),%eaxf0100ba21441,59945
f0100ba8:	50                   	push   %eaxf0100ba81442,60004
f0100ba9:	68 c4 02 00 00       	push   $0x2c4f0100ba91443,60048
f0100bae:	8d 81 58 db fe ff    	lea    -0x124a8(%ecx),%eaxf0100bae1444,60094
f0100bb4:	50                   	push   %eaxf0100bb41445,60153
f0100bb5:	89 cb                	mov    %ecx,%ebxf0100bb51446,60197
f0100bb7:	e8 dd f4 ff ff       	call   f0100099 <_panic>f0100bb71447,60246
f0100bbc:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf0100bbc1449,60316
f0100bc1:	eb d7                	jmp    f0100b9a <check_va2pa+0x54>f0100bc11450,60372
f0100bc3 <check_page_free_list>:f0100bc31452,60440
f0100bc3:	55                   	push   %ebpf0100bc31454,60475
f0100bc4:	89 e5                	mov    %esp,%ebpf0100bc41455,60519
f0100bc6:	57                   	push   %edif0100bc61456,60568
f0100bc7:	56                   	push   %esif0100bc71457,60612
f0100bc8:	53                   	push   %ebxf0100bc81458,60656
f0100bc9:	83 ec 3c             	sub    $0x3c,%espf0100bc91459,60700
f0100bcc:	e8 f0 24 00 00       	call   f01030c1 <__x86.get_pc_thunk.di>f0100bcc1460,60750
f0100bd1:	81 c7 3b 67 01 00    	add    $0x1673b,%edif0100bd11461,60822
f0100bd7:	89 7d c4             	mov    %edi,-0x3c(%ebp)f0100bd71462,60875
f0100bda:	84 c0                	test   %al,%alf0100bda1464,60987
f0100bdc:	0f 85 dd 02 00 00    	jne    f0100ebf <check_page_free_list+0x2fc>f0100bdc1465,61034
f0100be2:	8b 45 c4             	mov    -0x3c(%ebp),%eaxf0100be21467,61133
f0100be5:	83 b8 90 1f 00 00 00 	cmpl   $0x0,0x1f90(%eax)f0100be51468,61189
f0100bec:	74 0c                	je     f0100bfa <check_page_free_list+0x37>f0100bec1469,61246
f0100bee:	c7 45 d4 00 04 00 00 	movl   $0x400,-0x2c(%ebp)f0100bee1471,61378
f0100bf5:	e9 2f 03 00 00       	jmp    f0100f29 <check_page_free_list+0x366>f0100bf51472,61436
f0100bfa:	83 ec 04             	sub    $0x4,%espf0100bfa1474,61561
f0100bfd:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100bfd1475,61610
f0100c00:	8d 83 78 d3 fe ff    	lea    -0x12c88(%ebx),%eaxf0100c001476,61666
f0100c06:	50                   	push   %eaxf0100c061477,61725
f0100c07:	68 05 02 00 00       	push   $0x205f0100c071478,61769
f0100c0c:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0100c0c1479,61815
f0100c12:	50                   	push   %eaxf0100c121480,61874
f0100c13:	e8 81 f4 ff ff       	call   f0100099 <_panic>f0100c131481,61918
f0100c18:	50                   	push   %eaxf0100c181482,61975
f0100c19:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100c191483,62019
f0100c1c:	8d 83 54 d3 fe ff    	lea    -0x12cac(%ebx),%eaxf0100c1c1484,62075
f0100c22:	50                   	push   %eaxf0100c221485,62134
f0100c23:	6a 52                	push   $0x52f0100c231486,62178
f0100c25:	8d 83 64 db fe ff    	lea    -0x1249c(%ebx),%eaxf0100c251487,62223
f0100c2b:	50                   	push   %eaxf0100c2b1488,62282
f0100c2c:	e8 68 f4 ff ff       	call   f0100099 <_panic>f0100c2c1489,62326
f0100c31:	8b 36                	mov    (%esi),%esif0100c311491,62432
f0100c33:	85 f6                	test   %esi,%esif0100c331492,62483
f0100c35:	74 40                	je     f0100c77 <check_page_free_list+0xb4>f0100c351493,62532
void	tlb_invalidate(pde_t *pgdir, void *va);void1494,62608
static inline physaddr_tstatic1496,62654
f0100c37:	89 f0                	mov    %esi,%eaxf0100c371500,62743
f0100c39:	2b 07                	sub    (%edi),%eaxf0100c391501,62792
f0100c3b:	c1 f8 03             	sar    $0x3,%eaxf0100c3b1502,62843
f0100c3e:	c1 e0 0c             	shl    $0xc,%eaxf0100c3e1503,62892
f0100c41:	89 c2                	mov    %eax,%edxf0100c411505,62977
f0100c43:	c1 ea 16             	shr    $0x16,%edxf0100c431506,63026
f0100c46:	3b 55 d4             	cmp    -0x2c(%ebp),%edxf0100c461507,63076
f0100c49:	73 e6                	jae    f0100c31 <check_page_free_list+0x6e>f0100c491508,63132
f0100c4b:	89 c2                	mov    %eax,%edxf0100c4b1510,63234
f0100c4d:	c1 ea 0c             	shr    $0xc,%edxf0100c4d1511,63283
f0100c50:	8b 4d d0             	mov    -0x30(%ebp),%ecxf0100c501512,63332
f0100c53:	3b 11                	cmp    (%ecx),%edxf0100c531513,63388
f0100c55:	73 c1                	jae    f0100c18 <check_page_free_list+0x55>f0100c551514,63439
f0100c57:	83 ec 04             	sub    $0x4,%espf0100c571516,63551
f0100c5a:	68 80 00 00 00       	push   $0x80f0100c5a1517,63600
f0100c5f:	68 97 00 00 00       	push   $0x97f0100c5f1518,63645
f0100c64:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0100c641520,63723
f0100c69:	50                   	push   %eaxf0100c691521,63779
f0100c6a:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100c6a1522,63823
f0100c6d:	e8 36 30 00 00       	call   f0103ca8 <memset>f0100c6d1523,63879
f0100c72:	83 c4 10             	add    $0x10,%espf0100c721524,63936
f0100c75:	eb ba                	jmp    f0100c31 <check_page_free_list+0x6e>f0100c751525,63986
	first_free_page = (char *) boot_alloc(0);first_free_page1526,64062
f0100c77:	b8 00 00 00 00       	mov    $0x0,%eaxf0100c771527,64105
f0100c7c:	e8 40 fe ff ff       	call   f0100ac1 <boot_alloc>f0100c7c1528,64154
f0100c81:	89 45 c8             	mov    %eax,-0x38(%ebp)f0100c811529,64215
f0100c84:	8b 7d c4             	mov    -0x3c(%ebp),%edif0100c841531,64322
f0100c87:	8b 97 90 1f 00 00    	mov    0x1f90(%edi),%edxf0100c871532,64378
f0100c8d:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100c8d1534,64458
f0100c93:	8b 08                	mov    (%eax),%ecxf0100c931535,64514
f0100c95:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf0100c951537,64596
f0100c9b:	8b 00                	mov    (%eax),%eaxf0100c9b1538,64652
f0100c9d:	89 45 cc             	mov    %eax,-0x34(%ebp)f0100c9d1539,64703
f0100ca0:	8d 1c c1             	lea    (%ecx,%eax,8),%ebxf0100ca01540,64759
f0100ca3:	89 4d d4             	mov    %ecx,-0x2c(%ebp)f0100ca31542,64878
f0100ca6:	bf 00 00 00 00       	mov    $0x0,%edif0100ca61544,64976
f0100cab:	89 75 d0             	mov    %esi,-0x30(%ebp)f0100cab1545,65025
f0100cae:	e9 08 01 00 00       	jmp    f0100dbb <check_page_free_list+0x1f8>f0100cae1547,65132
f0100cb3:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100cb31549,65232
f0100cb6:	8d 83 72 db fe ff    	lea    -0x1248e(%ebx),%eaxf0100cb61550,65288
f0100cbc:	50                   	push   %eaxf0100cbc1551,65347
f0100cbd:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0100cbd1552,65391
f0100cc3:	50                   	push   %eaxf0100cc31553,65450
f0100cc4:	68 1f 02 00 00       	push   $0x21ff0100cc41554,65494
f0100cc9:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0100cc91555,65540
f0100ccf:	50                   	push   %eaxf0100ccf1556,65599
f0100cd0:	e8 c4 f3 ff ff       	call   f0100099 <_panic>f0100cd01557,65643
f0100cd5:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100cd51559,65731
f0100cd8:	8d 83 93 db fe ff    	lea    -0x1246d(%ebx),%eaxf0100cd81560,65787
f0100cde:	50                   	push   %eaxf0100cde1561,65846
f0100cdf:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0100cdf1562,65890
f0100ce5:	50                   	push   %eaxf0100ce51563,65949
f0100ce6:	68 20 02 00 00       	push   $0x220f0100ce61564,65993
f0100ceb:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0100ceb1565,66039
f0100cf1:	50                   	push   %eaxf0100cf11566,66098
f0100cf2:	e8 a2 f3 ff ff       	call   f0100099 <_panic>f0100cf21567,66142
f0100cf7:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100cf71569,66260
f0100cfa:	8d 83 9c d3 fe ff    	lea    -0x12c64(%ebx),%eaxf0100cfa1570,66316
f0100d00:	50                   	push   %eaxf0100d001571,66375
f0100d01:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0100d011572,66419
f0100d07:	50                   	push   %eaxf0100d071573,66478
f0100d08:	68 21 02 00 00       	push   $0x221f0100d081574,66522
f0100d0d:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0100d0d1575,66568
f0100d13:	50                   	push   %eaxf0100d131576,66627
f0100d14:	e8 80 f3 ff ff       	call   f0100099 <_panic>f0100d141577,66671
f0100d19:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d191579,66756
f0100d1c:	8d 83 a7 db fe ff    	lea    -0x12459(%ebx),%eaxf0100d1c1580,66812
f0100d22:	50                   	push   %eaxf0100d221581,66871
f0100d23:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0100d231582,66915
f0100d29:	50                   	push   %eaxf0100d291583,66974
f0100d2a:	68 24 02 00 00       	push   $0x224f0100d2a1584,67018
f0100d2f:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0100d2f1585,67064
f0100d35:	50                   	push   %eaxf0100d351586,67123
f0100d36:	e8 5e f3 ff ff       	call   f0100099 <_panic>f0100d361587,67167
f0100d3b:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d3b1589,67260
f0100d3e:	8d 83 b8 db fe ff    	lea    -0x12448(%ebx),%eaxf0100d3e1590,67316
f0100d44:	50                   	push   %eaxf0100d441591,67375
f0100d45:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0100d451592,67419
f0100d4b:	50                   	push   %eaxf0100d4b1593,67478
f0100d4c:	68 25 02 00 00       	push   $0x225f0100d4c1594,67522
f0100d51:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0100d511595,67568
f0100d57:	50                   	push   %eaxf0100d571596,67627
f0100d58:	e8 3c f3 ff ff       	call   f0100099 <_panic>f0100d581597,67671
f0100d5d:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d5d1599,67774
f0100d60:	8d 83 d0 d3 fe ff    	lea    -0x12c30(%ebx),%eaxf0100d601600,67830
f0100d66:	50                   	push   %eaxf0100d661601,67889
f0100d67:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0100d671602,67933
f0100d6d:	50                   	push   %eaxf0100d6d1603,67992
f0100d6e:	68 26 02 00 00       	push   $0x226f0100d6e1604,68036
f0100d73:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0100d731605,68082
f0100d79:	50                   	push   %eaxf0100d791606,68141
f0100d7a:	e8 1a f3 ff ff       	call   f0100099 <_panic>f0100d7a1607,68185
f0100d7f:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d7f1609,68279
f0100d82:	8d 83 d1 db fe ff    	lea    -0x1242f(%ebx),%eaxf0100d821610,68335
f0100d88:	50                   	push   %eaxf0100d881611,68394
f0100d89:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0100d891612,68438
f0100d8f:	50                   	push   %eaxf0100d8f1613,68497
f0100d90:	68 27 02 00 00       	push   $0x227f0100d901614,68541
f0100d95:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0100d951615,68587
f0100d9b:	50                   	push   %eaxf0100d9b1616,68646
f0100d9c:	e8 f8 f2 ff ff       	call   f0100099 <_panic>f0100d9c1617,68690
f0100da1:	89 c6                	mov    %eax,%esif0100da11619,68773
f0100da3:	c1 ee 0c             	shr    $0xc,%esif0100da31620,68822
f0100da6:	39 75 cc             	cmp    %esi,-0x34(%ebp)f0100da61621,68871
f0100da9:	76 70                	jbe    f0100e1b <check_page_free_list+0x258>f0100da91622,68927
f0100dab:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0100dab1624,69037
f0100db0:	39 45 c8             	cmp    %eax,-0x38(%ebp)f0100db01626,69173
f0100db3:	77 7f                	ja     f0100e34 <check_page_free_list+0x271>f0100db31627,69229
f0100db5:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)f0100db51629,69325
f0100db9:	8b 12                	mov    (%edx),%edxf0100db91631,69432
f0100dbb:	85 d2                	test   %edx,%edxf0100dbb1632,69483
f0100dbd:	0f 84 93 00 00 00    	je     f0100e56 <check_page_free_list+0x293>f0100dbd1633,69532
f0100dc3:	39 d1                	cmp    %edx,%ecxf0100dc31635,69632
f0100dc5:	0f 87 e8 fe ff ff    	ja     f0100cb3 <check_page_free_list+0xf0>f0100dc51636,69681
f0100dcb:	39 d3                	cmp    %edx,%ebxf0100dcb1638,69788
f0100dcd:	0f 86 02 ff ff ff    	jbe    f0100cd5 <check_page_free_list+0x112>f0100dcd1639,69837
f0100dd3:	89 d0                	mov    %edx,%eaxf0100dd31641,69975
f0100dd5:	2b 45 d4             	sub    -0x2c(%ebp),%eaxf0100dd51642,70024
f0100dd8:	a8 07                	test   $0x7,%alf0100dd81643,70080
f0100dda:	0f 85 17 ff ff ff    	jne    f0100cf7 <check_page_free_list+0x134>f0100dda1644,70128
f0100de0:	c1 f8 03             	sar    $0x3,%eaxf0100de01646,70238
f0100de3:	c1 e0 0c             	shl    $0xc,%eaxf0100de31647,70287
f0100de6:	85 c0                	test   %eax,%eaxf0100de61649,70364
f0100de8:	0f 84 2b ff ff ff    	je     f0100d19 <check_page_free_list+0x156>f0100de81650,70413
f0100dee:	3d 00 00 0a 00       	cmp    $0xa0000,%eaxf0100dee1652,70526
f0100df3:	0f 84 42 ff ff ff    	je     f0100d3b <check_page_free_list+0x178>f0100df31653,70579
f0100df9:	3d 00 f0 0f 00       	cmp    $0xff000,%eaxf0100df91655,70702
f0100dfe:	0f 84 59 ff ff ff    	je     f0100d5d <check_page_free_list+0x19a>f0100dfe1656,70755
f0100e04:	3d 00 00 10 00       	cmp    $0x100000,%eaxf0100e041658,70869
f0100e09:	0f 84 70 ff ff ff    	je     f0100d7f <check_page_free_list+0x1bc>f0100e091659,70923
f0100e0f:	3d ff ff 0f 00       	cmp    $0xfffff,%eaxf0100e0f1661,71080
f0100e14:	77 8b                	ja     f0100da1 <check_page_free_list+0x1de>f0100e141662,71133
f0100e16:	83 c7 01             	add    $0x1,%edif0100e161664,71230
f0100e19:	eb 9e                	jmp    f0100db9 <check_page_free_list+0x1f6>f0100e191665,71279
f0100e1b:	50                   	push   %eaxf0100e1b1667,71420
f0100e1c:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100e1c1668,71464
f0100e1f:	8d 83 54 d3 fe ff    	lea    -0x12cac(%ebx),%eaxf0100e1f1669,71520
f0100e25:	50                   	push   %eaxf0100e251670,71579
f0100e26:	6a 52                	push   $0x52f0100e261671,71623
f0100e28:	8d 83 64 db fe ff    	lea    -0x1249c(%ebx),%eaxf0100e281672,71668
f0100e2e:	50                   	push   %eaxf0100e2e1673,71727
f0100e2f:	e8 65 f2 ff ff       	call   f0100099 <_panic>f0100e2f1674,71771
f0100e34:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100e341676,71908
f0100e37:	8d 83 f4 d3 fe ff    	lea    -0x12c0c(%ebx),%eaxf0100e371677,71964
f0100e3d:	50                   	push   %eaxf0100e3d1678,72023
f0100e3e:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0100e3e1679,72067
f0100e44:	50                   	push   %eaxf0100e441680,72126
f0100e45:	68 28 02 00 00       	push   $0x228f0100e451681,72170
f0100e4a:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0100e4a1682,72216
f0100e50:	50                   	push   %eaxf0100e501683,72275
f0100e51:	e8 43 f2 ff ff       	call   f0100099 <_panic>f0100e511684,72319
f0100e56:	8b 75 d0             	mov    -0x30(%ebp),%esif0100e561685,72376
f0100e59:	85 ff                	test   %edi,%edif0100e591687,72460
f0100e5b:	7e 1e                	jle    f0100e7b <check_page_free_list+0x2b8>f0100e5b1688,72509
f0100e5d:	85 f6                	test   %esi,%esif0100e5d1690,72613
f0100e5f:	7e 3c                	jle    f0100e9d <check_page_free_list+0x2da>f0100e5f1691,72662
f0100e61:	83 ec 0c             	sub    $0xc,%espf0100e611693,72788
f0100e64:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100e641694,72837
f0100e67:	8d 83 3c d4 fe ff    	lea    -0x12bc4(%ebx),%eaxf0100e671695,72893
f0100e6d:	50                   	push   %eaxf0100e6d1696,72952
f0100e6e:	e8 d9 22 00 00       	call   f010314c <cprintf>f0100e6e1697,72996
f0100e73:	8d 65 f4             	lea    -0xc(%ebp),%espf0100e731699,73056
f0100e76:	5b                   	pop    %ebxf0100e761700,73111
f0100e77:	5e                   	pop    %esif0100e771701,73155
f0100e78:	5f                   	pop    %edif0100e781702,73199
f0100e79:	5d                   	pop    %ebpf0100e791703,73243
f0100e7a:	c3                   	ret    f0100e7a1704,73287
f0100e7b:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100e7b1706,73355
f0100e7e:	8d 83 eb db fe ff    	lea    -0x12415(%ebx),%eaxf0100e7e1707,73411
f0100e84:	50                   	push   %eaxf0100e841708,73470
f0100e85:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0100e851709,73514
f0100e8b:	50                   	push   %eaxf0100e8b1710,73573
f0100e8c:	68 30 02 00 00       	push   $0x230f0100e8c1711,73617
f0100e91:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0100e911712,73663
f0100e97:	50                   	push   %eaxf0100e971713,73722
f0100e98:	e8 fc f1 ff ff       	call   f0100099 <_panic>f0100e981714,73766
f0100e9d:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100e9d1716,73850
f0100ea0:	8d 83 fd db fe ff    	lea    -0x12403(%ebx),%eaxf0100ea01717,73906
f0100ea6:	50                   	push   %eaxf0100ea61718,73965
f0100ea7:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0100ea71719,74009
f0100ead:	50                   	push   %eaxf0100ead1720,74068
f0100eae:	68 31 02 00 00       	push   $0x231f0100eae1721,74112
f0100eb3:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0100eb31722,74158
f0100eb9:	50                   	push   %eaxf0100eb91723,74217
f0100eba:	e8 da f1 ff ff       	call   f0100099 <_panic>f0100eba1724,74261
f0100ebf:	8b 45 c4             	mov    -0x3c(%ebp),%eaxf0100ebf1726,74340
f0100ec2:	8b 80 90 1f 00 00    	mov    0x1f90(%eax),%eaxf0100ec21727,74396
f0100ec8:	85 c0                	test   %eax,%eaxf0100ec81728,74453
f0100eca:	0f 84 2a fd ff ff    	je     f0100bfa <check_page_free_list+0x37>f0100eca1729,74502
f0100ed0:	8d 55 d8             	lea    -0x28(%ebp),%edxf0100ed01731,74622
f0100ed3:	89 55 e0             	mov    %edx,-0x20(%ebp)f0100ed31732,74678
f0100ed6:	8d 55 dc             	lea    -0x24(%ebp),%edxf0100ed61733,74734
f0100ed9:	89 55 e4             	mov    %edx,-0x1c(%ebp)f0100ed91734,74790
f0100edc:	8b 7d c4             	mov    -0x3c(%ebp),%edif0100edc1736,74879
f0100edf:	c7 c3 d0 96 11 f0    	mov    $0xf01196d0,%ebxf0100edf1737,74935
f0100ee5:	89 c2                	mov    %eax,%edxf0100ee51738,74991
f0100ee7:	2b 13                	sub    (%ebx),%edxf0100ee71739,75040
f0100ee9:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edxf0100ee91741,75140
f0100eef:	0f 95 c2             	setne  %dlf0100eef1742,75194
f0100ef2:	0f b6 d2             	movzbl %dl,%edxf0100ef21743,75237
f0100ef5:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecxf0100ef51745,75308
f0100ef9:	89 01                	mov    %eax,(%ecx)f0100ef91746,75371
f0100efb:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)f0100efb1748,75454
f0100eff:	8b 00                	mov    (%eax),%eaxf0100eff1750,75569
f0100f01:	85 c0                	test   %eax,%eaxf0100f011751,75620
f0100f03:	75 e0                	jne    f0100ee5 <check_page_free_list+0x322>f0100f031752,75669
f0100f05:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf0100f051754,75760
f0100f08:	c7 00 00 00 00 00    	movl   $0x0,(%eax)f0100f081755,75816
f0100f0e:	8b 55 dc             	mov    -0x24(%ebp),%edxf0100f0e1757,75883
f0100f11:	8b 45 e0             	mov    -0x20(%ebp),%eaxf0100f111758,75939
f0100f14:	89 10                	mov    %edx,(%eax)f0100f141759,75995
		page_free_list = pp1;page_free_list1760,76046
f0100f16:	8b 45 d8             	mov    -0x28(%ebp),%eaxf0100f161761,76070
f0100f19:	8b 7d c4             	mov    -0x3c(%ebp),%edif0100f191762,76126
f0100f1c:	89 87 90 1f 00 00    	mov    %eax,0x1f90(%edi)f0100f1c1763,76182
f0100f22:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)f0100f221765,76295
f0100f29:	8b 45 c4             	mov    -0x3c(%ebp),%eaxf0100f291767,76400
f0100f2c:	8b b0 90 1f 00 00    	mov    0x1f90(%eax),%esif0100f2c1768,76456
f0100f32:	c7 c7 d0 96 11 f0    	mov    $0xf01196d0,%edif0100f321769,76513
f0100f38:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf0100f381771,76595
f0100f3e:	89 45 d0             	mov    %eax,-0x30(%ebp)f0100f3e1772,76651
f0100f41:	e9 ed fc ff ff       	jmp    f0100c33 <check_page_free_list+0x70>f0100f411773,76707
f0100f46 <page_init>:f0100f461775,76784
f0100f46:	55                   	push   %ebpf0100f461777,76808
f0100f47:	89 e5                	mov    %esp,%ebpf0100f471778,76852
f0100f49:	57                   	push   %edif0100f491779,76901
f0100f4a:	56                   	push   %esif0100f4a1780,76945
f0100f4b:	53                   	push   %ebxf0100f4b1781,76989
f0100f4c:	83 ec 1c             	sub    $0x1c,%espf0100f4c1782,77033
f0100f4f:	e8 69 21 00 00       	call   f01030bd <__x86.get_pc_thunk.si>f0100f4f1783,77083
f0100f54:	81 c6 b8 63 01 00    	add    $0x163b8,%esif0100f541784,77155
f0100f5a:	bb 00 00 00 00       	mov    $0x0,%ebxf0100f5a1786,77240
f0100f5f:	c7 c7 c8 96 11 f0    	mov    $0xf01196c8,%edif0100f5f1787,77289
f0100f65:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100f651789,77369
f0100f6b:	89 45 e0             	mov    %eax,-0x20(%ebp)f0100f6b1790,77425
f0100f6e:	eb 38                	jmp    f0100fa8 <page_init+0x62>f0100f6e1792,77513
f0100f70:	39 9e 94 1f 00 00    	cmp    %ebx,0x1f94(%esi)f0100f701794,77613
f0100f76:	76 52                	jbe    f0100fca <page_init+0x84>f0100f761795,77670
f0100f78:	8d 0c dd 00 00 00 00 	lea    0x0(,%ebx,8),%ecxf0100f781796,77735
f0100f7f:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100f7f1798,77816
f0100f85:	89 ca                	mov    %ecx,%edxf0100f851799,77872
f0100f87:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0100f871800,77921
f0100f8a:	03 10                	add    (%eax),%edxf0100f8a1801,77977
f0100f8c:	66 c7 42 04 00 00    	movw   $0x0,0x4(%edx)f0100f8c1802,78028
f0100f92:	8b 86 90 1f 00 00    	mov    0x1f90(%esi),%eaxf0100f921804,78120
f0100f98:	89 02                	mov    %eax,(%edx)f0100f981805,78177
			page_free_list = &pages[i];page_free_list1806,78228
f0100f9a:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf0100f9a1807,78259
f0100f9d:	03 08                	add    (%eax),%ecxf0100f9d1808,78315
f0100f9f:	89 8e 90 1f 00 00    	mov    %ecx,0x1f90(%esi)f0100f9f1809,78366
f0100fa5:	83 c3 01             	add    $0x1,%ebxf0100fa51811,78455
f0100fa8:	39 1f                	cmp    %ebx,(%edi)f0100fa81812,78504
f0100faa:	0f 86 80 00 00 00    	jbe    f0101030 <page_init+0xea>f0100faa1813,78555
f0100fb0:	85 db                	test   %ebx,%ebxf0100fb01815,78636
f0100fb2:	75 bc                	jne    f0100f70 <page_init+0x2a>f0100fb21816,78685
f0100fb4:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100fb41818,78774
f0100fba:	8b 00                	mov    (%eax),%eaxf0100fba1819,78830
f0100fbc:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)f0100fbc1820,78881
f0100fc2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)f0100fc21822,78963
f0100fc8:	eb db                	jmp    f0100fa5 <page_init+0x5f>f0100fc81823,79014
f0100fca:	81 fb ff 00 00 00    	cmp    $0xff,%ebxf0100fca1825,79169
f0100fd0:	77 16                	ja     f0100fe8 <page_init+0xa2>f0100fd01826,79219
f0100fd2:	8b 45 e0             	mov    -0x20(%ebp),%eaxf0100fd21828,79308
f0100fd5:	8b 00                	mov    (%eax),%eaxf0100fd51829,79364
f0100fd7:	8d 04 d8             	lea    (%eax,%ebx,8),%eaxf0100fd71830,79415
f0100fda:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)f0100fda1831,79473
f0100fe0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)f0100fe01833,79555
f0100fe6:	eb bd                	jmp    f0100fa5 <page_init+0x5f>f0100fe61834,79606
f0100fe8:	b8 00 00 00 00       	mov    $0x0,%eaxf0100fe81836,79761
f0100fed:	e8 cf fa ff ff       	call   f0100ac1 <boot_alloc>f0100fed1837,79810
f0100ff2:	05 00 00 00 10       	add    $0x10000000,%eaxf0100ff21838,79871
f0100ff7:	c1 e8 0c             	shr    $0xc,%eaxf0100ff71839,79927
f0100ffa:	39 d8                	cmp    %ebx,%eaxf0100ffa1840,79976
f0100ffc:	77 d4                	ja     f0100fd2 <page_init+0x8c>f0100ffc1841,80025
f0100ffe:	8d 0c dd 00 00 00 00 	lea    0x0(,%ebx,8),%ecxf0100ffe1842,80090
f0101005:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01010051844,80171
f010100b:	89 ca                	mov    %ecx,%edxf010100b1845,80227
f010100d:	89 45 e4             	mov    %eax,-0x1c(%ebp)f010100d1846,80276
f0101010:	03 10                	add    (%eax),%edxf01010101847,80332
f0101012:	66 c7 42 04 00 00    	movw   $0x0,0x4(%edx)f01010121848,80383
f0101018:	8b 86 90 1f 00 00    	mov    0x1f90(%esi),%eaxf01010181850,80475
f010101e:	89 02                	mov    %eax,(%edx)f010101e1851,80532
			page_free_list = &pages[i];page_free_list1852,80583
f0101020:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf01010201853,80614
f0101023:	03 08                	add    (%eax),%ecxf01010231854,80670
f0101025:	89 8e 90 1f 00 00    	mov    %ecx,0x1f90(%esi)f01010251855,80721
f010102b:	e9 75 ff ff ff       	jmp    f0100fa5 <page_init+0x5f>f010102b1856,80778
f0101030:	83 c4 1c             	add    $0x1c,%espf01010301858,80845
f0101033:	5b                   	pop    %ebxf01010331859,80895
f0101034:	5e                   	pop    %esif01010341860,80939
f0101035:	5f                   	pop    %edif01010351861,80983
f0101036:	5d                   	pop    %ebpf01010361862,81027
f0101037:	c3                   	ret    f01010371863,81071
f0101038 <page_alloc>:f01010381865,81112
f0101038:	55                   	push   %ebpf01010381867,81137
f0101039:	89 e5                	mov    %esp,%ebpf01010391868,81181
f010103b:	56                   	push   %esif010103b1869,81230
f010103c:	53                   	push   %ebxf010103c1870,81274
f010103d:	e8 0d f1 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f010103d1871,81318
f0101042:	81 c3 ca 62 01 00    	add    $0x162ca,%ebxf01010421872,81390
f0101048:	8b b3 90 1f 00 00    	mov    0x1f90(%ebx),%esif01010481874,81478
f010104e:	85 f6                	test   %esi,%esif010104e1875,81535
f0101050:	74 1a                	je     f010106c <page_alloc+0x34>f01010501876,81584
	page_free_list = result->pp_link;page_free_list1877,81650
f0101052:	8b 06                	mov    (%esi),%eaxf01010521878,81685
f0101054:	89 83 90 1f 00 00    	mov    %eax,0x1f90(%ebx)f01010541879,81736
f010105a:	c7 06 00 00 00 00    	movl   $0x0,(%esi)f010105a1881,81818
f0101060:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)f01010601883,81890
f0101066:	f6 45 08 01          	testb  $0x1,0x8(%ebp)f01010661885,81975
f010106a:	75 09                	jne    f0101075 <page_alloc+0x3d>f010106a1886,82029
f010106c:	89 f0                	mov    %esi,%eaxf010106c1888,82097
f010106e:	8d 65 f8             	lea    -0x8(%ebp),%espf010106e1889,82146
f0101071:	5b                   	pop    %ebxf01010711890,82201
f0101072:	5e                   	pop    %esif01010721891,82245
f0101073:	5d                   	pop    %ebpf01010731892,82289
f0101074:	c3                   	ret    f01010741893,82333
f0101075:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01010751895,82406
f010107b:	89 f2                	mov    %esi,%edxf010107b1896,82462
f010107d:	2b 10                	sub    (%eax),%edxf010107d1897,82511
f010107f:	89 d0                	mov    %edx,%eaxf010107f1898,82562
f0101081:	c1 f8 03             	sar    $0x3,%eaxf01010811899,82611
f0101084:	c1 e0 0c             	shl    $0xc,%eaxf01010841900,82660
f0101087:	89 c1                	mov    %eax,%ecxf01010871902,82735
f0101089:	c1 e9 0c             	shr    $0xc,%ecxf01010891903,82784
f010108c:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf010108c1904,82833
f0101092:	3b 0a                	cmp    (%edx),%ecxf01010921905,82889
f0101094:	73 1a                	jae    f01010b0 <page_alloc+0x78>f01010941906,82940
f0101096:	83 ec 04             	sub    $0x4,%espf01010961908,83045
f0101099:	68 00 10 00 00       	push   $0x1000f01010991909,83094
f010109e:	6a 00                	push   $0x0f010109e1910,83141
f01010a0:	2d 00 00 00 10       	sub    $0x10000000,%eaxf01010a01912,83218
f01010a5:	50                   	push   %eaxf01010a51913,83274
f01010a6:	e8 fd 2b 00 00       	call   f0103ca8 <memset>f01010a61914,83318
f01010ab:	83 c4 10             	add    $0x10,%espf01010ab1915,83375
f01010ae:	eb bc                	jmp    f010106c <page_alloc+0x34>f01010ae1916,83425
f01010b0:	50                   	push   %eaxf01010b01918,83555
f01010b1:	8d 83 54 d3 fe ff    	lea    -0x12cac(%ebx),%eaxf01010b11919,83599
f01010b7:	50                   	push   %eaxf01010b71920,83658
f01010b8:	6a 52                	push   $0x52f01010b81921,83702
f01010ba:	8d 83 64 db fe ff    	lea    -0x1249c(%ebx),%eaxf01010ba1922,83747
f01010c0:	50                   	push   %eaxf01010c01923,83806
f01010c1:	e8 d3 ef ff ff       	call   f0100099 <_panic>f01010c11924,83850
f01010c6 <page_free>:f01010c61926,83908
f01010c6:	55                   	push   %ebpf01010c61928,83932
f01010c7:	89 e5                	mov    %esp,%ebpf01010c71929,83976
f01010c9:	53                   	push   %ebxf01010c91930,84025
f01010ca:	83 ec 04             	sub    $0x4,%espf01010ca1931,84069
f01010cd:	e8 7d f0 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01010cd1932,84118
f01010d2:	81 c3 3a 62 01 00    	add    $0x1623a,%ebxf01010d21933,84190
f01010d8:	8b 45 08             	mov    0x8(%ebp),%eaxf01010d81934,84243
f01010db:	0f b7 48 04          	movzwl 0x4(%eax),%ecxf01010db1936,84313
f01010df:	66 85 c9             	test   %cx,%cxf01010df1937,84367
f01010e2:	75 19                	jne    f01010fd <page_free+0x37>f01010e21938,84414
f01010e4:	8b 08                	mov    (%eax),%ecxf01010e41940,84496
f01010e6:	85 c9                	test   %ecx,%ecxf01010e61941,84547
f01010e8:	75 2f                	jne    f0101119 <page_free+0x53>f01010e81942,84596
f01010ea:	8b 8b 90 1f 00 00    	mov    0x1f90(%ebx),%ecxf01010ea1944,84692
f01010f0:	89 08                	mov    %ecx,(%eax)f01010f01945,84749
	page_free_list = pp;page_free_list1946,84800
f01010f2:	89 83 90 1f 00 00    	mov    %eax,0x1f90(%ebx)f01010f21947,84822
f01010f8:	8b 5d fc             	mov    -0x4(%ebp),%ebxf01010f81949,84881
f01010fb:	c9                   	leave  f01010fb1950,84936
f01010fc:	c3                   	ret    f01010fc1951,84976
f01010fd:	0f b7 c9             	movzwl %cx,%ecxf01010fd1953,85083
f0101100:	51                   	push   %ecxf01011001954,85131
f0101101:	8d 83 60 d4 fe ff    	lea    -0x12ba0(%ebx),%eaxf01011011955,85175
f0101107:	50                   	push   %eaxf01011071956,85234
f0101108:	68 42 01 00 00       	push   $0x142f01011081957,85278
f010110d:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010110d1958,85324
f0101113:	50                   	push   %eaxf01011131959,85383
f0101114:	e8 80 ef ff ff       	call   f0100099 <_panic>f01011141960,85427
f0101119:	51                   	push   %ecxf01011191962,85548
f010111a:	8d 83 8c d4 fe ff    	lea    -0x12b74(%ebx),%eaxf010111a1963,85592
f0101120:	50                   	push   %eaxf01011201964,85651
f0101121:	68 44 01 00 00       	push   $0x144f01011211965,85695
f0101126:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01011261966,85741
f010112c:	50                   	push   %eaxf010112c1967,85800
f010112d:	e8 67 ef ff ff       	call   f0100099 <_panic>f010112d1968,85844
f0101132 <page_decref>:f01011321970,85902
f0101132:	55                   	push   %ebpf01011321972,85928
f0101133:	89 e5                	mov    %esp,%ebpf01011331973,85972
f0101135:	83 ec 08             	sub    $0x8,%espf01011351974,86021
f0101138:	8b 55 08             	mov    0x8(%ebp),%edxf01011381975,86070
f010113b:	0f b7 42 04          	movzwl 0x4(%edx),%eaxf010113b1977,86148
f010113f:	83 e8 01             	sub    $0x1,%eaxf010113f1978,86202
f0101142:	66 89 42 04          	mov    %ax,0x4(%edx)f01011421979,86251
f0101146:	66 85 c0             	test   %ax,%axf01011461980,86304
f0101149:	74 02                	je     f010114d <page_decref+0x1b>f01011491981,86351
f010114b:	c9                   	leave  f010114b1983,86420
f010114c:	c3                   	ret    f010114c1984,86460
f010114d:	83 ec 0c             	sub    $0xc,%espf010114d1986,86517
f0101150:	52                   	push   %edxf01011501987,86566
f0101151:	e8 70 ff ff ff       	call   f01010c6 <page_free>f01011511988,86610
f0101156:	83 c4 10             	add    $0x10,%espf01011561989,86670
f0101159:	eb f0                	jmp    f010114b <page_decref+0x19>f01011591991,86722
f010115b <pgdir_walk>:f010115b1993,86790
f010115b:	55                   	push   %ebpf010115b1995,86815
f010115c:	89 e5                	mov    %esp,%ebpf010115c1996,86859
f010115e:	57                   	push   %edif010115e1997,86908
f010115f:	56                   	push   %esif010115f1998,86952
f0101160:	53                   	push   %ebxf01011601999,86996
f0101161:	83 ec 0c             	sub    $0xc,%espf01011612000,87040
f0101164:	e8 e6 ef ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01011642001,87089
f0101169:	81 c3 a3 61 01 00    	add    $0x161a3,%ebxf01011692002,87161
f010116f:	8b 7d 0c             	mov    0xc(%ebp),%edif010116f2003,87214
	pde = pgdir+PDX(va);pde2004,87268
f0101172:	89 fe                	mov    %edi,%esif01011722005,87290
f0101174:	c1 ee 16             	shr    $0x16,%esif01011742006,87339
f0101177:	c1 e6 02             	shl    $0x2,%esif01011772007,87389
f010117a:	03 75 08             	add    0x8(%ebp),%esif010117a2008,87438
f010117d:	f6 06 01             	testb  $0x1,(%esi)f010117d2010,87515
f0101180:	75 30                	jne    f01011b2 <pgdir_walk+0x57>f01011802011,87566
f0101182:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)f01011822013,87659
f0101186:	74 71                	je     f01011f9 <pgdir_walk+0x9e>f01011862014,87714
		pp = page_alloc(ALLOC_ZERO);pp2015,87780
f0101188:	83 ec 0c             	sub    $0xc,%espf01011882016,87811
f010118b:	6a 01                	push   $0x1f010118b2017,87860
f010118d:	e8 a6 fe ff ff       	call   f0101038 <page_alloc>f010118d2018,87904
f0101192:	83 c4 10             	add    $0x10,%espf01011922020,87988
f0101195:	85 c0                	test   %eax,%eaxf01011952021,88038
f0101197:	74 67                	je     f0101200 <pgdir_walk+0xa5>f01011972022,88087
f0101199:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)f01011992024,88171
f010119f:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf010119f2026,88258
f01011a5:	2b 02                	sub    (%edx),%eaxf01011a52027,88314
f01011a7:	c1 f8 03             	sar    $0x3,%eaxf01011a72028,88365
f01011aa:	c1 e0 0c             	shl    $0xc,%eaxf01011aa2029,88414
f01011ad:	83 c8 07             	or     $0x7,%eaxf01011ad2031,88509
f01011b0:	89 06                	mov    %eax,(%esi)f01011b02032,88558
f01011b2:	8b 06                	mov    (%esi),%eaxf01011b22034,88662
f01011b4:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf01011b42035,88713
f01011b9:	89 c1                	mov    %eax,%ecxf01011b92037,88795
f01011bb:	c1 e9 0c             	shr    $0xc,%ecxf01011bb2038,88844
f01011be:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf01011be2039,88893
f01011c4:	3b 0a                	cmp    (%edx),%ecxf01011c42040,88949
f01011c6:	73 18                	jae    f01011e0 <pgdir_walk+0x85>f01011c62041,89000
f01011c8:	c1 ef 0a             	shr    $0xa,%edif01011c82042,89066
f01011cb:	81 e7 fc 0f 00 00    	and    $0xffc,%edif01011cb2043,89115
f01011d1:	8d 84 38 00 00 00 f0 	lea    -0x10000000(%eax,%edi,1),%eaxf01011d12044,89166
f01011d8:	8d 65 f4             	lea    -0xc(%ebp),%espf01011d82046,89237
f01011db:	5b                   	pop    %ebxf01011db2047,89292
f01011dc:	5e                   	pop    %esif01011dc2048,89336
f01011dd:	5f                   	pop    %edif01011dd2049,89380
f01011de:	5d                   	pop    %ebpf01011de2050,89424
f01011df:	c3                   	ret    f01011df2051,89468
f01011e0:	50                   	push   %eaxf01011e02053,89572
f01011e1:	8d 83 54 d3 fe ff    	lea    -0x12cac(%ebx),%eaxf01011e12054,89616
f01011e7:	50                   	push   %eaxf01011e72055,89675
f01011e8:	68 7b 01 00 00       	push   $0x17bf01011e82056,89719
f01011ed:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01011ed2057,89765
f01011f3:	50                   	push   %eaxf01011f32058,89824
f01011f4:	e8 a0 ee ff ff       	call   f0100099 <_panic>f01011f42059,89868
f01011f9:	b8 00 00 00 00       	mov    $0x0,%eaxf01011f92061,89952
f01011fe:	eb d8                	jmp    f01011d8 <pgdir_walk+0x7d>f01011fe2062,90001
f0101200:	b8 00 00 00 00       	mov    $0x0,%eaxf01012002064,90090
f0101205:	eb d1                	jmp    f01011d8 <pgdir_walk+0x7d>f01012052065,90139
f0101207 <boot_map_region>:f01012072067,90206
f0101207:	55                   	push   %ebpf01012072069,90236
f0101208:	89 e5                	mov    %esp,%ebpf01012082070,90280
f010120a:	57                   	push   %edif010120a2071,90329
f010120b:	56                   	push   %esif010120b2072,90373
f010120c:	53                   	push   %ebxf010120c2073,90417
f010120d:	83 ec 2c             	sub    $0x2c,%espf010120d2074,90461
f0101210:	e8 ac 1e 00 00       	call   f01030c1 <__x86.get_pc_thunk.di>f01012102075,90511
f0101215:	81 c7 f7 60 01 00    	add    $0x160f7,%edif01012152076,90583
f010121b:	89 7d d4             	mov    %edi,-0x2c(%ebp)f010121b2077,90636
f010121e:	89 45 dc             	mov    %eax,-0x24(%ebp)f010121e2078,90692
f0101221:	c1 e9 0c             	shr    $0xc,%ecxf01012212080,90788
f0101224:	89 4d e4             	mov    %ecx,-0x1c(%ebp)f01012242081,90837
f0101227:	89 d3                	mov    %edx,%ebxf01012272082,90893
f0101229:	bf 00 00 00 00       	mov    $0x0,%edif01012292083,90942
f010122e:	8b 45 08             	mov    0x8(%ebp),%eaxf010122e2084,90991
f0101231:	29 d0                	sub    %edx,%eaxf01012312085,91045
f0101233:	89 45 e0             	mov    %eax,-0x20(%ebp)f01012332086,91094
f0101236:	8b 45 0c             	mov    0xc(%ebp),%eaxf01012362088,91178
f0101239:	83 c8 01             	or     $0x1,%eaxf01012392089,91232
f010123c:	89 45 d8             	mov    %eax,-0x28(%ebp)f010123c2090,91281
f010123f:	8b 45 e0             	mov    -0x20(%ebp),%eaxf010123f2091,91337
f0101242:	8d 34 18             	lea    (%eax,%ebx,1),%esif01012422092,91393
f0101245:	3b 7d e4             	cmp    -0x1c(%ebp),%edif01012452094,91491
f0101248:	74 41                	je     f010128b <boot_map_region+0x84>f01012482095,91547
		pte = pgdir_walk(pgdir, (void *) va, 1);pte2096,91618
f010124a:	83 ec 04             	sub    $0x4,%espf010124a2097,91661
f010124d:	6a 01                	push   $0x1f010124d2098,91710
f010124f:	53                   	push   %ebxf010124f2099,91754
f0101250:	ff 75 dc             	pushl  -0x24(%ebp)f01012502100,91798
f0101253:	e8 03 ff ff ff       	call   f010115b <pgdir_walk>f01012532101,91849
f0101258:	83 c4 10             	add    $0x10,%espf01012582103,91929
f010125b:	85 c0                	test   %eax,%eaxf010125b2104,91979
f010125d:	74 10                	je     f010126f <boot_map_region+0x68>f010125d2105,92028
f010125f:	0b 75 d8             	or     -0x28(%ebp),%esif010125f2107,92127
f0101262:	89 30                	mov    %esi,(%eax)f01012622108,92183
f0101264:	81 c3 00 10 00 00    	add    $0x1000,%ebxf01012642110,92248
f010126a:	83 c7 01             	add    $0x1,%edif010126a2112,92340
f010126d:	eb d0                	jmp    f010123f <boot_map_region+0x38>f010126d2113,92389
f010126f:	53                   	push   %ebxf010126f2115,92534
f0101270:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01012702116,92578
f0101273:	8d 83 b4 d4 fe ff    	lea    -0x12b4c(%ebx),%eaxf01012732117,92634
f0101279:	50                   	push   %eaxf01012792118,92693
f010127a:	68 90 01 00 00       	push   $0x190f010127a2119,92737
f010127f:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010127f2120,92783
f0101285:	50                   	push   %eaxf01012852121,92842
f0101286:	e8 0e ee ff ff       	call   f0100099 <_panic>f01012862122,92886
f010128b:	8d 65 f4             	lea    -0xc(%ebp),%espf010128b2124,92945
f010128e:	5b                   	pop    %ebxf010128e2125,93000
f010128f:	5e                   	pop    %esif010128f2126,93044
f0101290:	5f                   	pop    %edif01012902127,93088
f0101291:	5d                   	pop    %ebpf01012912128,93132
f0101292:	c3                   	ret    f01012922129,93176
f0101293 <page_lookup>:f01012932131,93217
f0101293:	55                   	push   %ebpf01012932133,93243
f0101294:	89 e5                	mov    %esp,%ebpf01012942134,93287
f0101296:	56                   	push   %esif01012962135,93336
f0101297:	53                   	push   %ebxf01012972136,93380
f0101298:	e8 b2 ee ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01012982137,93424
f010129d:	81 c3 6f 60 01 00    	add    $0x1606f,%ebxf010129d2138,93496
f01012a3:	8b 75 10             	mov    0x10(%ebp),%esif01012a32139,93549
f01012a6:	83 ec 04             	sub    $0x4,%espf01012a62141,93644
f01012a9:	6a 00                	push   $0x0f01012a92142,93693
f01012ab:	ff 75 0c             	pushl  0xc(%ebp)f01012ab2143,93737
f01012ae:	ff 75 08             	pushl  0x8(%ebp)f01012ae2144,93786
f01012b1:	e8 a5 fe ff ff       	call   f010115b <pgdir_walk>f01012b12145,93835
f01012b6:	83 c4 10             	add    $0x10,%espf01012b62147,93930
f01012b9:	85 f6                	test   %esi,%esif01012b92148,93980
f01012bb:	74 02                	je     f01012bf <page_lookup+0x2c>f01012bb2149,94029
f01012bd:	89 06                	mov    %eax,(%esi)f01012bd2150,94096
f01012bf:	85 c0                	test   %eax,%eaxf01012bf2152,94199
f01012c1:	74 3d                	je     f0101300 <page_lookup+0x6d>f01012c12153,94248
f01012c3:	8b 00                	mov    (%eax),%eaxf01012c32154,94315
f01012c5:	a8 01                	test   $0x1,%alf01012c52155,94366
f01012c7:	74 3e                	je     f0101307 <page_lookup+0x74>f01012c72156,94414
static inline struct PageInfo*static2159,94484
f01012c9:	c1 e8 0c             	shr    $0xc,%eaxf01012c92163,94566
f01012cc:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf01012cc2164,94615
f01012d2:	3b 02                	cmp    (%edx),%eaxf01012d22165,94671
f01012d4:	73 12                	jae    f01012e8 <page_lookup+0x55>f01012d42166,94722
f01012d6:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf01012d62169,94859
f01012dc:	8b 12                	mov    (%edx),%edxf01012dc2170,94915
f01012de:	8d 04 c2             	lea    (%edx,%eax,8),%eaxf01012de2171,94966
f01012e1:	8d 65 f8             	lea    -0x8(%ebp),%espf01012e12173,95026
f01012e4:	5b                   	pop    %ebxf01012e42174,95081
f01012e5:	5e                   	pop    %esif01012e52175,95125
f01012e6:	5d                   	pop    %ebpf01012e62176,95169
f01012e7:	c3                   	ret    f01012e72177,95213
f01012e8:	83 ec 04             	sub    $0x4,%espf01012e82179,95296
f01012eb:	8d 83 ec d4 fe ff    	lea    -0x12b14(%ebx),%eaxf01012eb2180,95345
f01012f1:	50                   	push   %eaxf01012f12181,95404
f01012f2:	6a 4b                	push   $0x4bf01012f22182,95448
f01012f4:	8d 83 64 db fe ff    	lea    -0x1249c(%ebx),%eaxf01012f42183,95493
f01012fa:	50                   	push   %eaxf01012fa2184,95552
f01012fb:	e8 99 ed ff ff       	call   f0100099 <_panic>f01012fb2185,95596
f0101300:	b8 00 00 00 00       	mov    $0x0,%eaxf01013002187,95705
f0101305:	eb da                	jmp    f01012e1 <page_lookup+0x4e>f01013052188,95754
f0101307:	b8 00 00 00 00       	mov    $0x0,%eaxf01013072189,95821
f010130c:	eb d3                	jmp    f01012e1 <page_lookup+0x4e>f010130c2190,95870
f010130e <page_remove>:f010130e2192,95938
f010130e:	55                   	push   %ebpf010130e2194,95964
f010130f:	89 e5                	mov    %esp,%ebpf010130f2195,96008
f0101311:	57                   	push   %edif01013112196,96057
f0101312:	56                   	push   %esif01013122197,96101
f0101313:	53                   	push   %ebxf01013132198,96145
f0101314:	83 ec 10             	sub    $0x10,%espf01013142199,96189
f0101317:	8b 7d 08             	mov    0x8(%ebp),%edif01013172200,96239
f010131a:	8b 75 0c             	mov    0xc(%ebp),%esif010131a2201,96293
f010131d:	6a 00                	push   $0x0f010131d2203,96400
f010131f:	56                   	push   %esif010131f2204,96444
f0101320:	57                   	push   %edif01013202205,96488
f0101321:	e8 6d ff ff ff       	call   f0101293 <page_lookup>f01013212206,96532
f0101326:	83 c4 10             	add    $0x10,%espf01013262208,96619
f0101329:	85 c0                	test   %eax,%eaxf01013292209,96669
f010132b:	74 27                	je     f0101354 <page_remove+0x46>f010132b2210,96718
f010132d:	89 c3                	mov    %eax,%ebxf010132d2211,96785
f010132f:	83 ec 0c             	sub    $0xc,%espf010132f2213,96852
f0101332:	50                   	push   %eaxf01013322214,96901
f0101333:	e8 fa fd ff ff       	call   f0101132 <page_decref>f01013332215,96945
f0101338:	83 c4 0c             	add    $0xc,%espf01013382217,97039
f010133b:	6a 00                	push   $0x0f010133b2218,97088
f010133d:	56                   	push   %esif010133d2219,97132
f010133e:	57                   	push   %edif010133e2220,97176
f010133f:	e8 17 fe ff ff       	call   f010115b <pgdir_walk>f010133f2221,97220
f0101344:	c7 00 00 00 00 00    	movl   $0x0,(%eax)f01013442222,97281
f010134a:	83 c4 10             	add    $0x10,%espf010134a2224,97381
f010134d:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)f010134d2225,97431
f0101352:	74 08                	je     f010135c <page_remove+0x4e>f01013522226,97485
f0101354:	8d 65 f4             	lea    -0xc(%ebp),%espf01013542228,97554
f0101357:	5b                   	pop    %ebxf01013572229,97609
f0101358:	5e                   	pop    %esif01013582230,97653
f0101359:	5f                   	pop    %edif01013592231,97697
f010135a:	5d                   	pop    %ebpf010135a2232,97741
f010135b:	c3                   	ret    f010135b2233,97785
static inline voidstatic2236,97828
f010135c:	0f 01 3e             	invlpg (%esi)f010135c2240,97924
f010135f:	eb f3                	jmp    f0101354 <page_remove+0x46>f010135f2241,97970
f0101361 <page_insert>:f01013612243,98038
f0101361:	55                   	push   %ebpf01013612245,98064
f0101362:	89 e5                	mov    %esp,%ebpf01013622246,98108
f0101364:	57                   	push   %edif01013642247,98157
f0101365:	56                   	push   %esif01013652248,98201
f0101366:	53                   	push   %ebxf01013662249,98245
f0101367:	83 ec 10             	sub    $0x10,%espf01013672250,98289
f010136a:	e8 52 1d 00 00       	call   f01030c1 <__x86.get_pc_thunk.di>f010136a2251,98339
f010136f:	81 c7 9d 5f 01 00    	add    $0x15f9d,%edif010136f2252,98411
f0101375:	8b 75 0c             	mov    0xc(%ebp),%esif01013752253,98464
f0101378:	6a 01                	push   $0x1f01013782255,98558
f010137a:	ff 75 10             	pushl  0x10(%ebp)f010137a2256,98602
f010137d:	ff 75 08             	pushl  0x8(%ebp)f010137d2257,98652
f0101380:	e8 d6 fd ff ff       	call   f010115b <pgdir_walk>f01013802258,98701
f0101385:	83 c4 10             	add    $0x10,%espf01013852260,98791
f0101388:	85 c0                	test   %eax,%eaxf01013882261,98841
f010138a:	74 3f                	je     f01013cb <page_insert+0x6a>f010138a2262,98890
f010138c:	89 c3                	mov    %eax,%ebxf010138c2263,98957
f010138e:	66 83 46 04 01       	addw   $0x1,0x4(%esi)f010138e2265,99021
f0101393:	83 ec 08             	sub    $0x8,%espf01013932267,99100
f0101396:	ff 75 10             	pushl  0x10(%ebp)f01013962268,99149
f0101399:	ff 75 08             	pushl  0x8(%ebp)f01013992269,99199
f010139c:	e8 6d ff ff ff       	call   f010130e <page_remove>f010139c2270,99248
f01013a1:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01013a12272,99343
f01013a7:	2b 30                	sub    (%eax),%esif01013a72273,99399
f01013a9:	89 f0                	mov    %esi,%eaxf01013a92274,99450
f01013ab:	c1 f8 03             	sar    $0x3,%eaxf01013ab2275,99499
f01013ae:	c1 e0 0c             	shl    $0xc,%eaxf01013ae2276,99548
f01013b1:	8b 55 14             	mov    0x14(%ebp),%edxf01013b12278,99633
f01013b4:	83 ca 01             	or     $0x1,%edxf01013b42279,99688
f01013b7:	09 d0                	or     %edx,%eaxf01013b72280,99737
f01013b9:	89 03                	mov    %eax,(%ebx)f01013b92281,99786
f01013bb:	83 c4 10             	add    $0x10,%espf01013bb2283,99848
f01013be:	b8 00 00 00 00       	mov    $0x0,%eaxf01013be2284,99898
f01013c3:	8d 65 f4             	lea    -0xc(%ebp),%espf01013c32286,99949
f01013c6:	5b                   	pop    %ebxf01013c62287,100004
f01013c7:	5e                   	pop    %esif01013c72288,100048
f01013c8:	5f                   	pop    %edif01013c82289,100092
f01013c9:	5d                   	pop    %ebpf01013c92290,100136
f01013ca:	c3                   	ret    f01013ca2291,100180
f01013cb:	b8 fc ff ff ff       	mov    $0xfffffffc,%eaxf01013cb2293,100249
f01013d0:	eb f1                	jmp    f01013c3 <page_insert+0x62>f01013d02294,100305
f01013d2 <mem_init>:f01013d22296,100373
f01013d2:	55                   	push   %ebpf01013d22298,100396
f01013d3:	89 e5                	mov    %esp,%ebpf01013d32299,100440
f01013d5:	57                   	push   %edif01013d52300,100489
f01013d6:	56                   	push   %esif01013d62301,100533
f01013d7:	53                   	push   %ebxf01013d72302,100577
f01013d8:	83 ec 3c             	sub    $0x3c,%espf01013d82303,100621
f01013db:	e8 11 f3 ff ff       	call   f01006f1 <__x86.get_pc_thunk.ax>f01013db2304,100671
f01013e0:	05 2c 5f 01 00       	add    $0x15f2c,%eaxf01013e02305,100743
f01013e5:	89 45 d4             	mov    %eax,-0x2c(%ebp)f01013e52306,100796
	basemem = nvram_read(NVRAM_BASELO);basemem2307,100852
f01013e8:	b8 15 00 00 00       	mov    $0x15,%eaxf01013e82308,100889
f01013ed:	e8 99 f6 ff ff       	call   f0100a8b <nvram_read>f01013ed2309,100939
f01013f2:	89 c3                	mov    %eax,%ebxf01013f22310,101000
	extmem = nvram_read(NVRAM_EXTLO);extmem2311,101049
f01013f4:	b8 17 00 00 00       	mov    $0x17,%eaxf01013f42312,101084
f01013f9:	e8 8d f6 ff ff       	call   f0100a8b <nvram_read>f01013f92313,101134
f01013fe:	89 c6                	mov    %eax,%esif01013fe2314,101195
	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;ext16mem2315,101244
f0101400:	b8 34 00 00 00       	mov    $0x34,%eaxf01014002316,101288
f0101405:	e8 81 f6 ff ff       	call   f0100a8b <nvram_read>f01014052317,101338
f010140a:	c1 e0 06             	shl    $0x6,%eaxf010140a2318,101399
f010140d:	85 c0                	test   %eax,%eaxf010140d2320,101463
f010140f:	0f 85 cd 00 00 00    	jne    f01014e2 <mem_init+0x110>f010140f2321,101512
		totalmem = 1 * 1024 + extmem;totalmem2322,101577
f0101415:	8d 86 00 04 00 00    	lea    0x400(%esi),%eaxf01014152323,101609
f010141b:	85 f6                	test   %esi,%esif010141b2324,101665
f010141d:	0f 44 c3             	cmove  %ebx,%eaxf010141d2325,101714
	npages = totalmem / (PGSIZE / 1024);npages2326,101763
f0101420:	89 c1                	mov    %eax,%ecxf01014202327,101801
f0101422:	c1 e9 02             	shr    $0x2,%ecxf01014222328,101850
f0101425:	8b 7d d4             	mov    -0x2c(%ebp),%edif01014252329,101899
f0101428:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf01014282330,101955
f010142e:	89 0a                	mov    %ecx,(%edx)f010142e2331,102011
	npages_basemem = basemem / (PGSIZE / 1024);npages_basemem2332,102062
f0101430:	89 da                	mov    %ebx,%edxf01014302333,102107
f0101432:	c1 ea 02             	shr    $0x2,%edxf01014322334,102156
f0101435:	89 97 94 1f 00 00    	mov    %edx,0x1f94(%edi)f01014352335,102205
f010143b:	89 c2                	mov    %eax,%edxf010143b2337,102335
f010143d:	29 da                	sub    %ebx,%edxf010143d2338,102384
f010143f:	52                   	push   %edxf010143f2339,102433
f0101440:	53                   	push   %ebxf01014402340,102477
f0101441:	50                   	push   %eaxf01014412341,102521
f0101442:	8d 87 0c d5 fe ff    	lea    -0x12af4(%edi),%eaxf01014422342,102565
f0101448:	50                   	push   %eaxf01014482343,102624
f0101449:	89 fb                	mov    %edi,%ebxf01014492344,102668
f010144b:	e8 fc 1c 00 00       	call   f010314c <cprintf>f010144b2345,102717
	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);kern_pgdir2346,102775
f0101450:	b8 00 10 00 00       	mov    $0x1000,%eaxf01014502347,102819
f0101455:	e8 67 f6 ff ff       	call   f0100ac1 <boot_alloc>f01014552348,102871
f010145a:	c7 c6 cc 96 11 f0    	mov    $0xf01196cc,%esif010145a2349,102932
f0101460:	89 06                	mov    %eax,(%esi)f01014602350,102988
f0101462:	83 c4 0c             	add    $0xc,%espf01014622352,103071
f0101465:	68 00 10 00 00       	push   $0x1000f01014652353,103120
f010146a:	6a 00                	push   $0x0f010146a2354,103167
f010146c:	50                   	push   %eaxf010146c2355,103211
f010146d:	e8 36 28 00 00       	call   f0103ca8 <memset>f010146d2356,103255
f0101472:	8b 06                	mov    (%esi),%eaxf01014722358,103372
f0101474:	83 c4 10             	add    $0x10,%espf01014742360,103454
f0101477:	3d ff ff ff ef       	cmp    $0xefffffff,%eaxf01014772361,103504
f010147c:	76 6e                	jbe    f01014ec <mem_init+0x11a>f010147c2362,103560
f010147e:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edxf010147e2364,103661
f0101484:	83 ca 05             	or     $0x5,%edxf01014842365,103722
f0101487:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)f01014872366,103771
	pages = (struct PageInfo *) boot_alloc(sizeof(struct PageInfo) * npages);pages2367,103827
f010148d:	8b 7d d4             	mov    -0x2c(%ebp),%edif010148d2368,103902
f0101490:	c7 c3 c8 96 11 f0    	mov    $0xf01196c8,%ebxf01014902369,103958
f0101496:	8b 03                	mov    (%ebx),%eaxf01014962370,104014
f0101498:	c1 e0 03             	shl    $0x3,%eaxf01014982371,104065
f010149b:	e8 21 f6 ff ff       	call   f0100ac1 <boot_alloc>f010149b2372,104114
f01014a0:	c7 c6 d0 96 11 f0    	mov    $0xf01196d0,%esif01014a02373,104175
f01014a6:	89 06                	mov    %eax,(%esi)f01014a62374,104231
f01014a8:	83 ec 04             	sub    $0x4,%espf01014a82376,104335
f01014ab:	8b 13                	mov    (%ebx),%edxf01014ab2377,104384
f01014ad:	c1 e2 03             	shl    $0x3,%edxf01014ad2378,104435
f01014b0:	52                   	push   %edxf01014b02379,104484
f01014b1:	6a 00                	push   $0x0f01014b12380,104528
f01014b3:	50                   	push   %eaxf01014b32381,104572
f01014b4:	89 fb                	mov    %edi,%ebxf01014b42382,104616
f01014b6:	e8 ed 27 00 00       	call   f0103ca8 <memset>f01014b62383,104665
f01014bb:	e8 86 fa ff ff       	call   f0100f46 <page_init>f01014bb2385,104736
f01014c0:	b8 01 00 00 00       	mov    $0x1,%eaxf01014c02387,104822
f01014c5:	e8 f9 f6 ff ff       	call   f0100bc3 <check_page_free_list>f01014c52388,104871
f01014ca:	83 c4 10             	add    $0x10,%espf01014ca2390,104955
f01014cd:	83 3e 00             	cmpl   $0x0,(%esi)f01014cd2391,105005
f01014d0:	74 36                	je     f0101508 <mem_init+0x136>f01014d02392,105056
f01014d2:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf01014d22394,105181
f01014d5:	8b 80 90 1f 00 00    	mov    0x1f90(%eax),%eaxf01014d52395,105237
f01014db:	be 00 00 00 00       	mov    $0x0,%esif01014db2396,105294
f01014e0:	eb 49                	jmp    f010152b <mem_init+0x159>f01014e02397,105343
		totalmem = 16 * 1024 + ext16mem;totalmem2398,105408
f01014e2:	05 00 40 00 00       	add    $0x4000,%eaxf01014e22399,105443
f01014e7:	e9 34 ff ff ff       	jmp    f0101420 <mem_init+0x4e>f01014e72400,105495
f01014ec:	50                   	push   %eaxf01014ec2402,105625
f01014ed:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01014ed2403,105669
f01014f0:	8d 83 48 d5 fe ff    	lea    -0x12ab8(%ebx),%eaxf01014f02404,105725
f01014f6:	50                   	push   %eaxf01014f62405,105784
f01014f7:	68 91 00 00 00       	push   $0x91f01014f72406,105828
f01014fc:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01014fc2407,105873
f0101502:	50                   	push   %eaxf01015022408,105932
f0101503:	e8 91 eb ff ff       	call   f0100099 <_panic>f01015032409,105976
f0101508:	83 ec 04             	sub    $0x4,%espf01015082411,106072
f010150b:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010150b2412,106121
f010150e:	8d 83 0e dc fe ff    	lea    -0x123f2(%ebx),%eaxf010150e2413,106177
f0101514:	50                   	push   %eaxf01015142414,106236
f0101515:	68 44 02 00 00       	push   $0x244f01015152415,106280
f010151a:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010151a2416,106326
f0101520:	50                   	push   %eaxf01015202417,106385
f0101521:	e8 73 eb ff ff       	call   f0100099 <_panic>f01015212418,106429
f0101526:	83 c6 01             	add    $0x1,%esif01015262420,106497
f0101529:	8b 00                	mov    (%eax),%eaxf01015292422,106606
f010152b:	85 c0                	test   %eax,%eaxf010152b2423,106657
f010152d:	75 f7                	jne    f0101526 <mem_init+0x154>f010152d2424,106706
f010152f:	83 ec 0c             	sub    $0xc,%espf010152f2426,106803
f0101532:	6a 00                	push   $0x0f01015322427,106852
f0101534:	e8 ff fa ff ff       	call   f0101038 <page_alloc>f01015342428,106896
f0101539:	89 c3                	mov    %eax,%ebxf01015392429,106957
f010153b:	83 c4 10             	add    $0x10,%espf010153b2430,107006
f010153e:	85 c0                	test   %eax,%eaxf010153e2431,107056
f0101540:	0f 84 3b 02 00 00    	je     f0101781 <mem_init+0x3af>f01015402432,107105
f0101546:	83 ec 0c             	sub    $0xc,%espf01015462434,107202
f0101549:	6a 00                	push   $0x0f01015492435,107251
f010154b:	e8 e8 fa ff ff       	call   f0101038 <page_alloc>f010154b2436,107295
f0101550:	89 c7                	mov    %eax,%edif01015502437,107356
f0101552:	83 c4 10             	add    $0x10,%espf01015522438,107405
f0101555:	85 c0                	test   %eax,%eaxf01015552439,107455
f0101557:	0f 84 46 02 00 00    	je     f01017a3 <mem_init+0x3d1>f01015572440,107504
f010155d:	83 ec 0c             	sub    $0xc,%espf010155d2442,107601
f0101560:	6a 00                	push   $0x0f01015602443,107650
f0101562:	e8 d1 fa ff ff       	call   f0101038 <page_alloc>f01015622444,107694
f0101567:	89 45 d0             	mov    %eax,-0x30(%ebp)f01015672445,107755
f010156a:	83 c4 10             	add    $0x10,%espf010156a2446,107811
f010156d:	85 c0                	test   %eax,%eaxf010156d2447,107861
f010156f:	0f 84 50 02 00 00    	je     f01017c5 <mem_init+0x3f3>f010156f2448,107910
f0101575:	39 fb                	cmp    %edi,%ebxf01015752450,108003
f0101577:	0f 84 6a 02 00 00    	je     f01017e7 <mem_init+0x415>f01015772451,108052
f010157d:	8b 45 d0             	mov    -0x30(%ebp),%eaxf010157d2453,108159
f0101580:	39 c7                	cmp    %eax,%edif01015802454,108215
f0101582:	0f 84 81 02 00 00    	je     f0101809 <mem_init+0x437>f01015822455,108264
f0101588:	39 c3                	cmp    %eax,%ebxf01015882456,108329
f010158a:	0f 84 79 02 00 00    	je     f0101809 <mem_init+0x437>f010158a2457,108378
f0101590:	8b 55 d4             	mov    -0x2c(%ebp),%edxf01015902459,108476
f0101593:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01015932460,108532
f0101599:	8b 08                	mov    (%eax),%ecxf01015992461,108588
f010159b:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf010159b2463,108678
f01015a1:	8b 10                	mov    (%eax),%edxf01015a12464,108734
f01015a3:	c1 e2 0c             	shl    $0xc,%edxf01015a32465,108785
f01015a6:	89 d8                	mov    %ebx,%eaxf01015a62466,108834
f01015a8:	29 c8                	sub    %ecx,%eaxf01015a82467,108883
f01015aa:	c1 f8 03             	sar    $0x3,%eaxf01015aa2468,108932
f01015ad:	c1 e0 0c             	shl    $0xc,%eaxf01015ad2469,108981
f01015b0:	39 d0                	cmp    %edx,%eaxf01015b02470,109030
f01015b2:	0f 83 73 02 00 00    	jae    f010182b <mem_init+0x459>f01015b22471,109079
f01015b8:	89 f8                	mov    %edi,%eaxf01015b82472,109144
f01015ba:	29 c8                	sub    %ecx,%eaxf01015ba2473,109193
f01015bc:	c1 f8 03             	sar    $0x3,%eaxf01015bc2474,109242
f01015bf:	c1 e0 0c             	shl    $0xc,%eaxf01015bf2475,109291
f01015c2:	39 c2                	cmp    %eax,%edxf01015c22477,109379
f01015c4:	0f 86 83 02 00 00    	jbe    f010184d <mem_init+0x47b>f01015c42478,109428
f01015ca:	8b 45 d0             	mov    -0x30(%ebp),%eaxf01015ca2479,109493
f01015cd:	29 c8                	sub    %ecx,%eaxf01015cd2480,109549
f01015cf:	c1 f8 03             	sar    $0x3,%eaxf01015cf2481,109598
f01015d2:	c1 e0 0c             	shl    $0xc,%eaxf01015d22482,109647
f01015d5:	39 c2                	cmp    %eax,%edxf01015d52484,109735
f01015d7:	0f 86 92 02 00 00    	jbe    f010186f <mem_init+0x49d>f01015d72485,109784
	fl = page_free_list;fl2486,109849
f01015dd:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf01015dd2487,109871
f01015e0:	8b 88 90 1f 00 00    	mov    0x1f90(%eax),%ecxf01015e02488,109927
f01015e6:	89 4d c8             	mov    %ecx,-0x38(%ebp)f01015e62489,109984
	page_free_list = 0;page_free_list2490,110040
f01015e9:	c7 80 90 1f 00 00 00 	movl   $0x0,0x1f90(%eax)f01015e92491,110061
f01015f0:	00 00 00 f01015f02492,110118
f01015f3:	83 ec 0c             	sub    $0xc,%espf01015f32494,110163
f01015f6:	6a 00                	push   $0x0f01015f62495,110212
f01015f8:	e8 3b fa ff ff       	call   f0101038 <page_alloc>f01015f82496,110256
f01015fd:	83 c4 10             	add    $0x10,%espf01015fd2497,110317
f0101600:	85 c0                	test   %eax,%eaxf01016002498,110367
f0101602:	0f 85 89 02 00 00    	jne    f0101891 <mem_init+0x4bf>f01016022499,110416
f0101608:	83 ec 0c             	sub    $0xc,%espf01016082501,110498
f010160b:	53                   	push   %ebxf010160b2502,110547
f010160c:	e8 b5 fa ff ff       	call   f01010c6 <page_free>f010160c2503,110591
f0101611:	89 3c 24             	mov    %edi,(%esp)f01016112505,110668
f0101614:	e8 ad fa ff ff       	call   f01010c6 <page_free>f01016142506,110719
f0101619:	83 c4 04             	add    $0x4,%espf01016192508,110796
f010161c:	ff 75 d0             	pushl  -0x30(%ebp)f010161c2509,110845
f010161f:	e8 a2 fa ff ff       	call   f01010c6 <page_free>f010161f2510,110896
f0101624:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)f01016242512,110988
f010162b:	e8 08 fa ff ff       	call   f0101038 <page_alloc>f010162b2513,111039
f0101630:	89 c7                	mov    %eax,%edif01016302514,111100
f0101632:	83 c4 10             	add    $0x10,%espf01016322515,111149
f0101635:	85 c0                	test   %eax,%eaxf01016352516,111199
f0101637:	0f 84 76 02 00 00    	je     f01018b3 <mem_init+0x4e1>f01016372517,111248
f010163d:	83 ec 0c             	sub    $0xc,%espf010163d2519,111345
f0101640:	6a 00                	push   $0x0f01016402520,111394
f0101642:	e8 f1 f9 ff ff       	call   f0101038 <page_alloc>f01016422521,111438
f0101647:	89 45 d0             	mov    %eax,-0x30(%ebp)f01016472522,111499
f010164a:	83 c4 10             	add    $0x10,%espf010164a2523,111555
f010164d:	85 c0                	test   %eax,%eaxf010164d2524,111605
f010164f:	0f 84 80 02 00 00    	je     f01018d5 <mem_init+0x503>f010164f2525,111654
f0101655:	83 ec 0c             	sub    $0xc,%espf01016552527,111751
f0101658:	6a 00                	push   $0x0f01016582528,111800
f010165a:	e8 d9 f9 ff ff       	call   f0101038 <page_alloc>f010165a2529,111844
f010165f:	89 45 cc             	mov    %eax,-0x34(%ebp)f010165f2530,111905
f0101662:	83 c4 10             	add    $0x10,%espf01016622531,111961
f0101665:	85 c0                	test   %eax,%eaxf01016652532,112011
f0101667:	0f 84 8a 02 00 00    	je     f01018f7 <mem_init+0x525>f01016672533,112060
f010166d:	3b 7d d0             	cmp    -0x30(%ebp),%edif010166d2535,112153
f0101670:	0f 84 a3 02 00 00    	je     f0101919 <mem_init+0x547>f01016702536,112209
f0101676:	8b 45 cc             	mov    -0x34(%ebp),%eaxf01016762538,112316
f0101679:	39 45 d0             	cmp    %eax,-0x30(%ebp)f01016792539,112372
f010167c:	0f 84 b9 02 00 00    	je     f010193b <mem_init+0x569>f010167c2540,112428
f0101682:	39 c7                	cmp    %eax,%edif01016822541,112493
f0101684:	0f 84 b1 02 00 00    	je     f010193b <mem_init+0x569>f01016842542,112542
f010168a:	83 ec 0c             	sub    $0xc,%espf010168a2544,112632
f010168d:	6a 00                	push   $0x0f010168d2545,112681
f010168f:	e8 a4 f9 ff ff       	call   f0101038 <page_alloc>f010168f2546,112725
f0101694:	83 c4 10             	add    $0x10,%espf01016942547,112786
f0101697:	85 c0                	test   %eax,%eaxf01016972548,112836
f0101699:	0f 85 be 02 00 00    	jne    f010195d <mem_init+0x58b>f01016992549,112885
f010169f:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010169f2550,112950
f01016a2:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01016a22551,113006
f01016a8:	89 f9                	mov    %edi,%ecxf01016a82552,113062
f01016aa:	2b 08                	sub    (%eax),%ecxf01016aa2553,113111
f01016ac:	89 c8                	mov    %ecx,%eaxf01016ac2554,113162
f01016ae:	c1 f8 03             	sar    $0x3,%eaxf01016ae2555,113211
f01016b1:	c1 e0 0c             	shl    $0xc,%eaxf01016b12556,113260
f01016b4:	89 c1                	mov    %eax,%ecxf01016b42558,113335
f01016b6:	c1 e9 0c             	shr    $0xc,%ecxf01016b62559,113384
f01016b9:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf01016b92560,113433
f01016bf:	3b 0a                	cmp    (%edx),%ecxf01016bf2561,113489
f01016c1:	0f 83 b8 02 00 00    	jae    f010197f <mem_init+0x5ad>f01016c12562,113540
f01016c7:	83 ec 04             	sub    $0x4,%espf01016c72564,113640
f01016ca:	68 00 10 00 00       	push   $0x1000f01016ca2565,113689
f01016cf:	6a 01                	push   $0x1f01016cf2566,113736
f01016d1:	2d 00 00 00 10       	sub    $0x10000000,%eaxf01016d12568,113813
f01016d6:	50                   	push   %eaxf01016d62569,113869
f01016d7:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01016d72570,113913
f01016da:	e8 c9 25 00 00       	call   f0103ca8 <memset>f01016da2571,113969
f01016df:	89 3c 24             	mov    %edi,(%esp)f01016df2573,114043
f01016e2:	e8 df f9 ff ff       	call   f01010c6 <page_free>f01016e22574,114094
f01016e7:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)f01016e72576,114194
f01016ee:	e8 45 f9 ff ff       	call   f0101038 <page_alloc>f01016ee2577,114245
f01016f3:	83 c4 10             	add    $0x10,%espf01016f32578,114306
f01016f6:	85 c0                	test   %eax,%eaxf01016f62579,114356
f01016f8:	0f 84 97 02 00 00    	je     f0101995 <mem_init+0x5c3>f01016f82580,114405
f01016fe:	39 c7                	cmp    %eax,%edif01016fe2582,114496
f0101700:	0f 85 b1 02 00 00    	jne    f01019b7 <mem_init+0x5e5>f01017002583,114545
f0101706:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01017062585,114643
f0101709:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01017092586,114699
f010170f:	89 fa                	mov    %edi,%edxf010170f2587,114755
f0101711:	2b 10                	sub    (%eax),%edxf01017112588,114804
f0101713:	c1 fa 03             	sar    $0x3,%edxf01017132589,114855
f0101716:	c1 e2 0c             	shl    $0xc,%edxf01017162590,114904
f0101719:	89 d1                	mov    %edx,%ecxf01017192592,114979
f010171b:	c1 e9 0c             	shr    $0xc,%ecxf010171b2593,115028
f010171e:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf010171e2594,115077
f0101724:	3b 08                	cmp    (%eax),%ecxf01017242595,115133
f0101726:	0f 83 ad 02 00 00    	jae    f01019d9 <mem_init+0x607>f01017262596,115184
f010172c:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eaxf010172c2598,115282
f0101732:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edxf01017322599,115344
f0101738:	80 38 00             	cmpb   $0x0,(%eax)f01017382601,115420
f010173b:	0f 85 ae 02 00 00    	jne    f01019ef <mem_init+0x61d>f010173b2602,115471
f0101741:	83 c0 01             	add    $0x1,%eaxf01017412603,115536
f0101744:	39 d0                	cmp    %edx,%eaxf01017442605,115615
f0101746:	75 f0                	jne    f0101738 <mem_init+0x366>f01017462606,115664
	page_free_list = fl;page_free_list2607,115729
f0101748:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01017482608,115751
f010174b:	8b 4d c8             	mov    -0x38(%ebp),%ecxf010174b2609,115807
f010174e:	89 8b 90 1f 00 00    	mov    %ecx,0x1f90(%ebx)f010174e2610,115863
f0101754:	83 ec 0c             	sub    $0xc,%espf01017542612,115937
f0101757:	57                   	push   %edif01017572613,115986
f0101758:	e8 69 f9 ff ff       	call   f01010c6 <page_free>f01017582614,116030
f010175d:	83 c4 04             	add    $0x4,%espf010175d2616,116107
f0101760:	ff 75 d0             	pushl  -0x30(%ebp)f01017602617,116156
f0101763:	e8 5e f9 ff ff       	call   f01010c6 <page_free>f01017632618,116207
f0101768:	83 c4 04             	add    $0x4,%espf01017682620,116284
f010176b:	ff 75 cc             	pushl  -0x34(%ebp)f010176b2621,116333
f010176e:	e8 53 f9 ff ff       	call   f01010c6 <page_free>f010176e2622,116384
f0101773:	8b 83 90 1f 00 00    	mov    0x1f90(%ebx),%eaxf01017732624,116493
f0101779:	83 c4 10             	add    $0x10,%espf01017792625,116550
f010177c:	e9 95 02 00 00       	jmp    f0101a16 <mem_init+0x644>f010177c2626,116600
f0101781:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01017812628,116697
f0101784:	8d 83 29 dc fe ff    	lea    -0x123d7(%ebx),%eaxf01017842629,116753
f010178a:	50                   	push   %eaxf010178a2630,116812
f010178b:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf010178b2631,116856
f0101791:	50                   	push   %eaxf01017912632,116915
f0101792:	68 4c 02 00 00       	push   $0x24cf01017922633,116959
f0101797:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01017972634,117005
f010179d:	50                   	push   %eaxf010179d2635,117064
f010179e:	e8 f6 e8 ff ff       	call   f0100099 <_panic>f010179e2636,117108
f01017a3:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01017a32638,117197
f01017a6:	8d 83 3f dc fe ff    	lea    -0x123c1(%ebx),%eaxf01017a62639,117253
f01017ac:	50                   	push   %eaxf01017ac2640,117312
f01017ad:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01017ad2641,117356
f01017b3:	50                   	push   %eaxf01017b32642,117415
f01017b4:	68 4d 02 00 00       	push   $0x24df01017b42643,117459
f01017b9:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01017b92644,117505
f01017bf:	50                   	push   %eaxf01017bf2645,117564
f01017c0:	e8 d4 e8 ff ff       	call   f0100099 <_panic>f01017c02646,117608
f01017c5:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01017c52648,117697
f01017c8:	8d 83 55 dc fe ff    	lea    -0x123ab(%ebx),%eaxf01017c82649,117753
f01017ce:	50                   	push   %eaxf01017ce2650,117812
f01017cf:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01017cf2651,117856
f01017d5:	50                   	push   %eaxf01017d52652,117915
f01017d6:	68 4e 02 00 00       	push   $0x24ef01017d62653,117959
f01017db:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01017db2654,118005
f01017e1:	50                   	push   %eaxf01017e12655,118064
f01017e2:	e8 b2 e8 ff ff       	call   f0100099 <_panic>f01017e22656,118108
f01017e7:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01017e72658,118193
f01017ea:	8d 83 6b dc fe ff    	lea    -0x12395(%ebx),%eaxf01017ea2659,118249
f01017f0:	50                   	push   %eaxf01017f02660,118308
f01017f1:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01017f12661,118352
f01017f7:	50                   	push   %eaxf01017f72662,118411
f01017f8:	68 51 02 00 00       	push   $0x251f01017f82663,118455
f01017fd:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01017fd2664,118501
f0101803:	50                   	push   %eaxf01018032665,118560
f0101804:	e8 90 e8 ff ff       	call   f0100099 <_panic>f01018042666,118604
f0101809:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01018092668,118703
f010180c:	8d 83 6c d5 fe ff    	lea    -0x12a94(%ebx),%eaxf010180c2669,118759
f0101812:	50                   	push   %eaxf01018122670,118818
f0101813:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01018132671,118862
f0101819:	50                   	push   %eaxf01018192672,118921
f010181a:	68 52 02 00 00       	push   $0x252f010181a2673,118965
f010181f:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010181f2674,119011
f0101825:	50                   	push   %eaxf01018252675,119070
f0101826:	e8 6e e8 ff ff       	call   f0100099 <_panic>f01018262676,119114
f010182b:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010182b2678,119210
f010182e:	8d 83 7d dc fe ff    	lea    -0x12383(%ebx),%eaxf010182e2679,119266
f0101834:	50                   	push   %eaxf01018342680,119325
f0101835:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01018352681,119369
f010183b:	50                   	push   %eaxf010183b2682,119428
f010183c:	68 53 02 00 00       	push   $0x253f010183c2683,119472
f0101841:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01018412684,119518
f0101847:	50                   	push   %eaxf01018472685,119577
f0101848:	e8 4c e8 ff ff       	call   f0100099 <_panic>f01018482686,119621
f010184d:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010184d2688,119717
f0101850:	8d 83 9a dc fe ff    	lea    -0x12366(%ebx),%eaxf01018502689,119773
f0101856:	50                   	push   %eaxf01018562690,119832
f0101857:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01018572691,119876
f010185d:	50                   	push   %eaxf010185d2692,119935
f010185e:	68 54 02 00 00       	push   $0x254f010185e2693,119979
f0101863:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01018632694,120025
f0101869:	50                   	push   %eaxf01018692695,120084
f010186a:	e8 2a e8 ff ff       	call   f0100099 <_panic>f010186a2696,120128
f010186f:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010186f2698,120224
f0101872:	8d 83 b7 dc fe ff    	lea    -0x12349(%ebx),%eaxf01018722699,120280
f0101878:	50                   	push   %eaxf01018782700,120339
f0101879:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01018792701,120383
f010187f:	50                   	push   %eaxf010187f2702,120442
f0101880:	68 55 02 00 00       	push   $0x255f01018802703,120486
f0101885:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01018852704,120532
f010188b:	50                   	push   %eaxf010188b2705,120591
f010188c:	e8 08 e8 ff ff       	call   f0100099 <_panic>f010188c2706,120635
f0101891:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01018912708,120717
f0101894:	8d 83 d4 dc fe ff    	lea    -0x1232c(%ebx),%eaxf01018942709,120773
f010189a:	50                   	push   %eaxf010189a2710,120832
f010189b:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf010189b2711,120876
f01018a1:	50                   	push   %eaxf01018a12712,120935
f01018a2:	68 5c 02 00 00       	push   $0x25cf01018a22713,120979
f01018a7:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01018a72714,121025
f01018ad:	50                   	push   %eaxf01018ad2715,121084
f01018ae:	e8 e6 e7 ff ff       	call   f0100099 <_panic>f01018ae2716,121128
f01018b3:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01018b32718,121217
f01018b6:	8d 83 29 dc fe ff    	lea    -0x123d7(%ebx),%eaxf01018b62719,121273
f01018bc:	50                   	push   %eaxf01018bc2720,121332
f01018bd:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01018bd2721,121376
f01018c3:	50                   	push   %eaxf01018c32722,121435
f01018c4:	68 63 02 00 00       	push   $0x263f01018c42723,121479
f01018c9:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01018c92724,121525
f01018cf:	50                   	push   %eaxf01018cf2725,121584
f01018d0:	e8 c4 e7 ff ff       	call   f0100099 <_panic>f01018d02726,121628
f01018d5:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01018d52728,121717
f01018d8:	8d 83 3f dc fe ff    	lea    -0x123c1(%ebx),%eaxf01018d82729,121773
f01018de:	50                   	push   %eaxf01018de2730,121832
f01018df:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01018df2731,121876
f01018e5:	50                   	push   %eaxf01018e52732,121935
f01018e6:	68 64 02 00 00       	push   $0x264f01018e62733,121979
f01018eb:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01018eb2734,122025
f01018f1:	50                   	push   %eaxf01018f12735,122084
f01018f2:	e8 a2 e7 ff ff       	call   f0100099 <_panic>f01018f22736,122128
f01018f7:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01018f72738,122217
f01018fa:	8d 83 55 dc fe ff    	lea    -0x123ab(%ebx),%eaxf01018fa2739,122273
f0101900:	50                   	push   %eaxf01019002740,122332
f0101901:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01019012741,122376
f0101907:	50                   	push   %eaxf01019072742,122435
f0101908:	68 65 02 00 00       	push   $0x265f01019082743,122479
f010190d:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010190d2744,122525
f0101913:	50                   	push   %eaxf01019132745,122584
f0101914:	e8 80 e7 ff ff       	call   f0100099 <_panic>f01019142746,122628
f0101919:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01019192748,122713
f010191c:	8d 83 6b dc fe ff    	lea    -0x12395(%ebx),%eaxf010191c2749,122769
f0101922:	50                   	push   %eaxf01019222750,122828
f0101923:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01019232751,122872
f0101929:	50                   	push   %eaxf01019292752,122931
f010192a:	68 67 02 00 00       	push   $0x267f010192a2753,122975
f010192f:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010192f2754,123021
f0101935:	50                   	push   %eaxf01019352755,123080
f0101936:	e8 5e e7 ff ff       	call   f0100099 <_panic>f01019362756,123124
f010193b:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010193b2758,123223
f010193e:	8d 83 6c d5 fe ff    	lea    -0x12a94(%ebx),%eaxf010193e2759,123279
f0101944:	50                   	push   %eaxf01019442760,123338
f0101945:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01019452761,123382
f010194b:	50                   	push   %eaxf010194b2762,123441
f010194c:	68 68 02 00 00       	push   $0x268f010194c2763,123485
f0101951:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01019512764,123531
f0101957:	50                   	push   %eaxf01019572765,123590
f0101958:	e8 3c e7 ff ff       	call   f0100099 <_panic>f01019582766,123634
f010195d:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010195d2768,123716
f0101960:	8d 83 d4 dc fe ff    	lea    -0x1232c(%ebx),%eaxf01019602769,123772
f0101966:	50                   	push   %eaxf01019662770,123831
f0101967:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01019672771,123875
f010196d:	50                   	push   %eaxf010196d2772,123934
f010196e:	68 69 02 00 00       	push   $0x269f010196e2773,123978
f0101973:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01019732774,124024
f0101979:	50                   	push   %eaxf01019792775,124083
f010197a:	e8 1a e7 ff ff       	call   f0100099 <_panic>f010197a2776,124127
f010197f:	50                   	push   %eaxf010197f2778,124248
f0101980:	8d 83 54 d3 fe ff    	lea    -0x12cac(%ebx),%eaxf01019802779,124292
f0101986:	50                   	push   %eaxf01019862780,124351
f0101987:	6a 52                	push   $0x52f01019872781,124395
f0101989:	8d 83 64 db fe ff    	lea    -0x1249c(%ebx),%eaxf01019892782,124440
f010198f:	50                   	push   %eaxf010198f2783,124499
f0101990:	e8 04 e7 ff ff       	call   f0100099 <_panic>f01019902784,124543
f0101995:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01019952786,124640
f0101998:	8d 83 e3 dc fe ff    	lea    -0x1231d(%ebx),%eaxf01019982787,124696
f010199e:	50                   	push   %eaxf010199e2788,124755
f010199f:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf010199f2789,124799
f01019a5:	50                   	push   %eaxf01019a52790,124858
f01019a6:	68 6e 02 00 00       	push   $0x26ef01019a62791,124902
f01019ab:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01019ab2792,124948
f01019b1:	50                   	push   %eaxf01019b12793,125007
f01019b2:	e8 e2 e6 ff ff       	call   f0100099 <_panic>f01019b22794,125051
f01019b7:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01019b72796,125134
f01019ba:	8d 83 01 dd fe ff    	lea    -0x122ff(%ebx),%eaxf01019ba2797,125190
f01019c0:	50                   	push   %eaxf01019c02798,125249
f01019c1:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01019c12799,125293
f01019c7:	50                   	push   %eaxf01019c72800,125352
f01019c8:	68 6f 02 00 00       	push   $0x26ff01019c82801,125396
f01019cd:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01019cd2802,125442
f01019d3:	50                   	push   %eaxf01019d32803,125501
f01019d4:	e8 c0 e6 ff ff       	call   f0100099 <_panic>f01019d42804,125545
f01019d9:	52                   	push   %edxf01019d92805,125602
f01019da:	8d 83 54 d3 fe ff    	lea    -0x12cac(%ebx),%eaxf01019da2806,125646
f01019e0:	50                   	push   %eaxf01019e02807,125705
f01019e1:	6a 52                	push   $0x52f01019e12808,125749
f01019e3:	8d 83 64 db fe ff    	lea    -0x1249c(%ebx),%eaxf01019e32809,125794
f01019e9:	50                   	push   %eaxf01019e92810,125853
f01019ea:	e8 aa e6 ff ff       	call   f0100099 <_panic>f01019ea2811,125897
f01019ef:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01019ef2813,125975
f01019f2:	8d 83 11 dd fe ff    	lea    -0x122ef(%ebx),%eaxf01019f22814,126031
f01019f8:	50                   	push   %eaxf01019f82815,126090
f01019f9:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01019f92816,126134
f01019ff:	50                   	push   %eaxf01019ff2817,126193
f0101a00:	68 72 02 00 00       	push   $0x272f0101a002818,126237
f0101a05:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0101a052819,126283
f0101a0b:	50                   	push   %eaxf0101a0b2820,126342
f0101a0c:	e8 88 e6 ff ff       	call   f0100099 <_panic>f0101a0c2821,126386
f0101a11:	83 ee 01             	sub    $0x1,%esif0101a112823,126454
f0101a14:	8b 00                	mov    (%eax),%eaxf0101a142825,126552
f0101a16:	85 c0                	test   %eax,%eaxf0101a162826,126603
f0101a18:	75 f7                	jne    f0101a11 <mem_init+0x63f>f0101a182827,126652
f0101a1a:	85 f6                	test   %esi,%esif0101a1a2829,126738
f0101a1c:	0f 85 52 08 00 00    	jne    f0102274 <mem_init+0xea2>f0101a1c2830,126787
f0101a22:	83 ec 0c             	sub    $0xc,%espf0101a222832,126897
f0101a25:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0101a252833,126946
f0101a28:	8d 83 8c d5 fe ff    	lea    -0x12a74(%ebx),%eaxf0101a282834,127002
f0101a2e:	50                   	push   %eaxf0101a2e2835,127061
f0101a2f:	e8 18 17 00 00       	call   f010314c <cprintf>f0101a2f2836,127105
	pp0 = pp1 = pp2 = 0;pp02841,127244
f0101a34:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)f0101a342843,127298
f0101a3b:	e8 f8 f5 ff ff       	call   f0101038 <page_alloc>f0101a3b2844,127349
f0101a40:	89 c6                	mov    %eax,%esif0101a402845,127410
f0101a42:	83 c4 10             	add    $0x10,%espf0101a422846,127459
f0101a45:	85 c0                	test   %eax,%eaxf0101a452847,127509
f0101a47:	0f 84 49 08 00 00    	je     f0102296 <mem_init+0xec4>f0101a472848,127558
f0101a4d:	83 ec 0c             	sub    $0xc,%espf0101a4d2850,127655
f0101a50:	6a 00                	push   $0x0f0101a502851,127704
f0101a52:	e8 e1 f5 ff ff       	call   f0101038 <page_alloc>f0101a522852,127748
f0101a57:	89 c7                	mov    %eax,%edif0101a572853,127809
f0101a59:	83 c4 10             	add    $0x10,%espf0101a592854,127858
f0101a5c:	85 c0                	test   %eax,%eaxf0101a5c2855,127908
f0101a5e:	0f 84 54 08 00 00    	je     f01022b8 <mem_init+0xee6>f0101a5e2856,127957
f0101a64:	83 ec 0c             	sub    $0xc,%espf0101a642858,128054
f0101a67:	6a 00                	push   $0x0f0101a672859,128103
f0101a69:	e8 ca f5 ff ff       	call   f0101038 <page_alloc>f0101a692860,128147
f0101a6e:	89 45 d0             	mov    %eax,-0x30(%ebp)f0101a6e2861,128208
f0101a71:	83 c4 10             	add    $0x10,%espf0101a712862,128264
f0101a74:	85 c0                	test   %eax,%eaxf0101a742863,128314
f0101a76:	0f 84 5e 08 00 00    	je     f01022da <mem_init+0xf08>f0101a762864,128363
f0101a7c:	39 fe                	cmp    %edi,%esif0101a7c2868,128471
f0101a7e:	0f 84 78 08 00 00    	je     f01022fc <mem_init+0xf2a>f0101a7e2869,128520
f0101a84:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0101a842871,128627
f0101a87:	39 c6                	cmp    %eax,%esif0101a872872,128683
f0101a89:	0f 84 8f 08 00 00    	je     f010231e <mem_init+0xf4c>f0101a892873,128732
f0101a8f:	39 c7                	cmp    %eax,%edif0101a8f2874,128797
f0101a91:	0f 84 87 08 00 00    	je     f010231e <mem_init+0xf4c>f0101a912875,128846
	fl = page_free_list;fl2878,128961
f0101a97:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101a972879,128983
f0101a9a:	8b 88 90 1f 00 00    	mov    0x1f90(%eax),%ecxf0101a9a2880,129039
f0101aa0:	89 4d c8             	mov    %ecx,-0x38(%ebp)f0101aa02881,129096
	page_free_list = 0;page_free_list2882,129152
f0101aa3:	c7 80 90 1f 00 00 00 	movl   $0x0,0x1f90(%eax)f0101aa32883,129173
f0101aaa:	00 00 00 f0101aaa2884,129230
f0101aad:	83 ec 0c             	sub    $0xc,%espf0101aad2888,129305
f0101ab0:	6a 00                	push   $0x0f0101ab02889,129354
f0101ab2:	e8 81 f5 ff ff       	call   f0101038 <page_alloc>f0101ab22890,129398
f0101ab7:	83 c4 10             	add    $0x10,%espf0101ab72891,129459
f0101aba:	85 c0                	test   %eax,%eaxf0101aba2892,129509
f0101abc:	0f 85 7e 08 00 00    	jne    f0102340 <mem_init+0xf6e>f0101abc2893,129558
f0101ac2:	83 ec 04             	sub    $0x4,%espf0101ac22897,129731
f0101ac5:	8d 45 e4             	lea    -0x1c(%ebp),%eaxf0101ac52898,129780
f0101ac8:	50                   	push   %eaxf0101ac82899,129836
f0101ac9:	6a 00                	push   $0x0f0101ac92900,129880
f0101acb:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101acb2901,129924
f0101ace:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101ace2902,129980
f0101ad4:	ff 30                	pushl  (%eax)f0101ad42903,130036
f0101ad6:	e8 b8 f7 ff ff       	call   f0101293 <page_lookup>f0101ad62904,130082
f0101adb:	83 c4 10             	add    $0x10,%espf0101adb2905,130144
f0101ade:	85 c0                	test   %eax,%eaxf0101ade2906,130194
f0101ae0:	0f 85 7c 08 00 00    	jne    f0102362 <mem_init+0xf90>f0101ae02907,130243
f0101ae6:	6a 02                	push   $0x2f0101ae62911,130427
f0101ae8:	6a 00                	push   $0x0f0101ae82912,130471
f0101aea:	57                   	push   %edif0101aea2913,130515
f0101aeb:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101aeb2914,130559
f0101aee:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101aee2915,130615
f0101af4:	ff 30                	pushl  (%eax)f0101af42916,130671
f0101af6:	e8 66 f8 ff ff       	call   f0101361 <page_insert>f0101af62917,130717
f0101afb:	83 c4 10             	add    $0x10,%espf0101afb2918,130779
f0101afe:	85 c0                	test   %eax,%eaxf0101afe2919,130829
f0101b00:	0f 89 7e 08 00 00    	jns    f0102384 <mem_init+0xfb2>f0101b002920,130878
f0101b06:	83 ec 0c             	sub    $0xc,%espf0101b062924,131023
f0101b09:	56                   	push   %esif0101b092925,131072
f0101b0a:	e8 b7 f5 ff ff       	call   f01010c6 <page_free>f0101b0a2926,131116
f0101b0f:	6a 02                	push   $0x2f0101b0f2928,131232
f0101b11:	6a 00                	push   $0x0f0101b112929,131276
f0101b13:	57                   	push   %edif0101b132930,131320
f0101b14:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101b142931,131364
f0101b17:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101b172932,131420
f0101b1d:	ff 30                	pushl  (%eax)f0101b1d2933,131476
f0101b1f:	e8 3d f8 ff ff       	call   f0101361 <page_insert>f0101b1f2934,131522
f0101b24:	83 c4 20             	add    $0x20,%espf0101b242935,131584
f0101b27:	85 c0                	test   %eax,%eaxf0101b272936,131634
f0101b29:	0f 85 77 08 00 00    	jne    f01023a6 <mem_init+0xfd4>f0101b292937,131683
f0101b2f:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0101b2f2939,131798
f0101b32:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101b322940,131854
f0101b38:	8b 18                	mov    (%eax),%ebxf0101b382941,131910
f0101b3a:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0101b3a2943,131994
f0101b40:	8b 08                	mov    (%eax),%ecxf0101b402944,132050
f0101b42:	89 4d cc             	mov    %ecx,-0x34(%ebp)f0101b422945,132101
f0101b45:	8b 13                	mov    (%ebx),%edxf0101b452946,132157
f0101b47:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf0101b472947,132208
f0101b4d:	89 f0                	mov    %esi,%eaxf0101b4d2948,132264
f0101b4f:	29 c8                	sub    %ecx,%eaxf0101b4f2949,132313
f0101b51:	c1 f8 03             	sar    $0x3,%eaxf0101b512950,132362
f0101b54:	c1 e0 0c             	shl    $0xc,%eaxf0101b542951,132411
f0101b57:	39 c2                	cmp    %eax,%edxf0101b572952,132460
f0101b59:	0f 85 69 08 00 00    	jne    f01023c8 <mem_init+0xff6>f0101b592953,132509
f0101b5f:	ba 00 00 00 00       	mov    $0x0,%edxf0101b5f2955,132629
f0101b64:	89 d8                	mov    %ebx,%eaxf0101b642956,132678
f0101b66:	e8 db ef ff ff       	call   f0100b46 <check_va2pa>f0101b662957,132727
f0101b6b:	89 fa                	mov    %edi,%edxf0101b6b2958,132789
f0101b6d:	2b 55 cc             	sub    -0x34(%ebp),%edxf0101b6d2959,132838
f0101b70:	c1 fa 03             	sar    $0x3,%edxf0101b702960,132894
f0101b73:	c1 e2 0c             	shl    $0xc,%edxf0101b732961,132943
f0101b76:	39 d0                	cmp    %edx,%eaxf0101b762962,132992
f0101b78:	0f 85 6c 08 00 00    	jne    f01023ea <mem_init+0x1018>f0101b782963,133041
f0101b7e:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)f0101b7e2965,133134
f0101b83:	0f 85 83 08 00 00    	jne    f010240c <mem_init+0x103a>f0101b832966,133188
f0101b89:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)f0101b892968,133281
f0101b8e:	0f 85 9a 08 00 00    	jne    f010242e <mem_init+0x105c>f0101b8e2969,133335
f0101b94:	6a 02                	push   $0x2f0101b942973,133557
f0101b96:	68 00 10 00 00       	push   $0x1000f0101b962974,133601
f0101b9b:	ff 75 d0             	pushl  -0x30(%ebp)f0101b9b2975,133648
f0101b9e:	53                   	push   %ebxf0101b9e2976,133699
f0101b9f:	e8 bd f7 ff ff       	call   f0101361 <page_insert>f0101b9f2977,133743
f0101ba4:	83 c4 10             	add    $0x10,%espf0101ba42978,133805
f0101ba7:	85 c0                	test   %eax,%eaxf0101ba72979,133855
f0101ba9:	0f 85 a1 08 00 00    	jne    f0102450 <mem_init+0x107e>f0101ba92980,133904
f0101baf:	ba 00 10 00 00       	mov    $0x1000,%edxf0101baf2982,134028
f0101bb4:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0101bb42983,134080
f0101bb7:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101bb72984,134136
f0101bbd:	8b 00                	mov    (%eax),%eaxf0101bbd2985,134192
f0101bbf:	e8 82 ef ff ff       	call   f0100b46 <check_va2pa>f0101bbf2986,134243
f0101bc4:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf0101bc42987,134305
f0101bca:	8b 4d d0             	mov    -0x30(%ebp),%ecxf0101bca2988,134361
f0101bcd:	2b 0a                	sub    (%edx),%ecxf0101bcd2989,134417
f0101bcf:	89 ca                	mov    %ecx,%edxf0101bcf2990,134468
f0101bd1:	c1 fa 03             	sar    $0x3,%edxf0101bd12991,134517
f0101bd4:	c1 e2 0c             	shl    $0xc,%edxf0101bd42992,134566
f0101bd7:	39 d0                	cmp    %edx,%eaxf0101bd72993,134615
f0101bd9:	0f 85 93 08 00 00    	jne    f0102472 <mem_init+0x10a0>f0101bd92994,134664
f0101bdf:	83 ec 0c             	sub    $0xc,%espf0101bdf2998,134785
f0101be2:	6a 00                	push   $0x0f0101be22999,134834
f0101be4:	e8 4f f4 ff ff       	call   f0101038 <page_alloc>f0101be43000,134878
f0101be9:	83 c4 10             	add    $0x10,%espf0101be93001,134939
f0101bec:	85 c0                	test   %eax,%eaxf0101bec3002,134989
f0101bee:	0f 85 a0 08 00 00    	jne    f0102494 <mem_init+0x10c2>f0101bee3003,135038
f0101bf4:	6a 02                	push   $0x2f0101bf43007,135239
f0101bf6:	68 00 10 00 00       	push   $0x1000f0101bf63008,135283
f0101bfb:	ff 75 d0             	pushl  -0x30(%ebp)f0101bfb3009,135330
f0101bfe:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101bfe3010,135381
f0101c01:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101c013011,135437
f0101c07:	ff 30                	pushl  (%eax)f0101c073012,135493
f0101c09:	e8 53 f7 ff ff       	call   f0101361 <page_insert>f0101c093013,135539
f0101c0e:	83 c4 10             	add    $0x10,%espf0101c0e3014,135601
f0101c11:	85 c0                	test   %eax,%eaxf0101c113015,135651
f0101c13:	0f 85 9d 08 00 00    	jne    f01024b6 <mem_init+0x10e4>f0101c133016,135700
f0101c19:	ba 00 10 00 00       	mov    $0x1000,%edxf0101c193018,135824
f0101c1e:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0101c1e3019,135876
f0101c21:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101c213020,135932
f0101c27:	8b 00                	mov    (%eax),%eaxf0101c273021,135988
f0101c29:	e8 18 ef ff ff       	call   f0100b46 <check_va2pa>f0101c293022,136039
f0101c2e:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf0101c2e3023,136101
f0101c34:	8b 4d d0             	mov    -0x30(%ebp),%ecxf0101c343024,136157
f0101c37:	2b 0a                	sub    (%edx),%ecxf0101c373025,136213
f0101c39:	89 ca                	mov    %ecx,%edxf0101c393026,136264
f0101c3b:	c1 fa 03             	sar    $0x3,%edxf0101c3b3027,136313
f0101c3e:	c1 e2 0c             	shl    $0xc,%edxf0101c3e3028,136362
f0101c41:	39 d0                	cmp    %edx,%eaxf0101c413029,136411
f0101c43:	0f 85 8f 08 00 00    	jne    f01024d8 <mem_init+0x1106>f0101c433030,136460
f0101c49:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0101c493032,136553
f0101c4c:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)f0101c4c3033,136609
f0101c51:	0f 85 a3 08 00 00    	jne    f01024fa <mem_init+0x1128>f0101c513034,136663
f0101c57:	83 ec 0c             	sub    $0xc,%espf0101c573039,136861
f0101c5a:	6a 00                	push   $0x0f0101c5a3040,136910
f0101c5c:	e8 d7 f3 ff ff       	call   f0101038 <page_alloc>f0101c5c3041,136954
f0101c61:	83 c4 10             	add    $0x10,%espf0101c613042,137015
f0101c64:	85 c0                	test   %eax,%eaxf0101c643043,137065
f0101c66:	0f 85 b0 08 00 00    	jne    f010251c <mem_init+0x114a>f0101c663044,137114
	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));ptep3047,137236
f0101c6c:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0101c6c3048,137296
f0101c6f:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101c6f3049,137352
f0101c75:	8b 10                	mov    (%eax),%edxf0101c753050,137408
f0101c77:	8b 02                	mov    (%edx),%eaxf0101c773051,137459
f0101c79:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf0101c793052,137510
f0101c7e:	89 c3                	mov    %eax,%ebxf0101c7e3054,137592
f0101c80:	c1 eb 0c             	shr    $0xc,%ebxf0101c803055,137641
f0101c83:	c7 c1 c8 96 11 f0    	mov    $0xf01196c8,%ecxf0101c833056,137690
f0101c89:	3b 19                	cmp    (%ecx),%ebxf0101c893057,137746
f0101c8b:	0f 83 ad 08 00 00    	jae    f010253e <mem_init+0x116c>f0101c8b3058,137797
f0101c91:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0101c913060,137896
f0101c96:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0101c963061,137952
f0101c99:	83 ec 04             	sub    $0x4,%espf0101c993063,138079
f0101c9c:	6a 00                	push   $0x0f0101c9c3064,138128
f0101c9e:	68 00 10 00 00       	push   $0x1000f0101c9e3065,138172
f0101ca3:	52                   	push   %edxf0101ca33066,138219
f0101ca4:	e8 b2 f4 ff ff       	call   f010115b <pgdir_walk>f0101ca43067,138263
f0101ca9:	8b 4d e4             	mov    -0x1c(%ebp),%ecxf0101ca93068,138324
f0101cac:	8d 51 04             	lea    0x4(%ecx),%edxf0101cac3069,138380
f0101caf:	83 c4 10             	add    $0x10,%espf0101caf3070,138434
f0101cb2:	39 d0                	cmp    %edx,%eaxf0101cb23071,138484
f0101cb4:	0f 85 a0 08 00 00    	jne    f010255a <mem_init+0x1188>f0101cb43072,138533
f0101cba:	6a 06                	push   $0x6f0101cba3076,138719
f0101cbc:	68 00 10 00 00       	push   $0x1000f0101cbc3077,138763
f0101cc1:	ff 75 d0             	pushl  -0x30(%ebp)f0101cc13078,138810
f0101cc4:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101cc43079,138861
f0101cc7:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101cc73080,138917
f0101ccd:	ff 30                	pushl  (%eax)f0101ccd3081,138973
f0101ccf:	e8 8d f6 ff ff       	call   f0101361 <page_insert>f0101ccf3082,139019
f0101cd4:	83 c4 10             	add    $0x10,%espf0101cd43083,139081
f0101cd7:	85 c0                	test   %eax,%eaxf0101cd73084,139131
f0101cd9:	0f 85 9d 08 00 00    	jne    f010257c <mem_init+0x11aa>f0101cd93085,139180
f0101cdf:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101cdf3087,139304
f0101ce2:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101ce23088,139360
f0101ce8:	8b 18                	mov    (%eax),%ebxf0101ce83089,139416
f0101cea:	ba 00 10 00 00       	mov    $0x1000,%edxf0101cea3090,139467
f0101cef:	89 d8                	mov    %ebx,%eaxf0101cef3091,139519
f0101cf1:	e8 50 ee ff ff       	call   f0100b46 <check_va2pa>f0101cf13092,139568
f0101cf6:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0101cf63094,139663
f0101cf9:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf0101cf93095,139719
f0101cff:	8b 4d d0             	mov    -0x30(%ebp),%ecxf0101cff3096,139775
f0101d02:	2b 0a                	sub    (%edx),%ecxf0101d023097,139831
f0101d04:	89 ca                	mov    %ecx,%edxf0101d043098,139882
f0101d06:	c1 fa 03             	sar    $0x3,%edxf0101d063099,139931
f0101d09:	c1 e2 0c             	shl    $0xc,%edxf0101d093100,139980
f0101d0c:	39 d0                	cmp    %edx,%eaxf0101d0c3101,140029
f0101d0e:	0f 85 8a 08 00 00    	jne    f010259e <mem_init+0x11cc>f0101d0e3102,140078
f0101d14:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0101d143104,140171
f0101d17:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)f0101d173105,140227
f0101d1c:	0f 85 9e 08 00 00    	jne    f01025c0 <mem_init+0x11ee>f0101d1c3106,140281
f0101d22:	83 ec 04             	sub    $0x4,%espf0101d223108,140408
f0101d25:	6a 00                	push   $0x0f0101d253109,140457
f0101d27:	68 00 10 00 00       	push   $0x1000f0101d273110,140501
f0101d2c:	53                   	push   %ebxf0101d2c3111,140548
f0101d2d:	e8 29 f4 ff ff       	call   f010115b <pgdir_walk>f0101d2d3112,140592
f0101d32:	83 c4 10             	add    $0x10,%espf0101d323113,140653
f0101d35:	f6 00 04             	testb  $0x4,(%eax)f0101d353114,140703
f0101d38:	0f 84 a4 08 00 00    	je     f01025e2 <mem_init+0x1210>f0101d383115,140754
f0101d3e:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101d3e3117,140852
f0101d41:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101d413118,140908
f0101d47:	8b 00                	mov    (%eax),%eaxf0101d473119,140964
f0101d49:	f6 00 04             	testb  $0x4,(%eax)f0101d493120,141015
f0101d4c:	0f 84 b2 08 00 00    	je     f0102604 <mem_init+0x1232>f0101d4c3121,141066
f0101d52:	6a 02                	push   $0x2f0101d523125,141251
f0101d54:	68 00 10 00 00       	push   $0x1000f0101d543126,141295
f0101d59:	ff 75 d0             	pushl  -0x30(%ebp)f0101d593127,141342
f0101d5c:	50                   	push   %eaxf0101d5c3128,141393
f0101d5d:	e8 ff f5 ff ff       	call   f0101361 <page_insert>f0101d5d3129,141437
f0101d62:	83 c4 10             	add    $0x10,%espf0101d623130,141499
f0101d65:	85 c0                	test   %eax,%eaxf0101d653131,141549
f0101d67:	0f 85 b9 08 00 00    	jne    f0102626 <mem_init+0x1254>f0101d673132,141598
f0101d6d:	83 ec 04             	sub    $0x4,%espf0101d6d3134,141725
f0101d70:	6a 00                	push   $0x0f0101d703135,141774
f0101d72:	68 00 10 00 00       	push   $0x1000f0101d723136,141818
f0101d77:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101d773137,141865
f0101d7a:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101d7a3138,141921
f0101d80:	ff 30                	pushl  (%eax)f0101d803139,141977
f0101d82:	e8 d4 f3 ff ff       	call   f010115b <pgdir_walk>f0101d823140,142023
f0101d87:	83 c4 10             	add    $0x10,%espf0101d873141,142084
f0101d8a:	f6 00 02             	testb  $0x2,(%eax)f0101d8a3142,142134
f0101d8d:	0f 84 b5 08 00 00    	je     f0102648 <mem_init+0x1276>f0101d8d3143,142185
f0101d93:	83 ec 04             	sub    $0x4,%espf0101d933145,142315
f0101d96:	6a 00                	push   $0x0f0101d963146,142364
f0101d98:	68 00 10 00 00       	push   $0x1000f0101d983147,142408
f0101d9d:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101d9d3148,142455
f0101da0:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101da03149,142511
f0101da6:	ff 30                	pushl  (%eax)f0101da63150,142567
f0101da8:	e8 ae f3 ff ff       	call   f010115b <pgdir_walk>f0101da83151,142613
f0101dad:	83 c4 10             	add    $0x10,%espf0101dad3152,142674
f0101db0:	f6 00 04             	testb  $0x4,(%eax)f0101db03153,142724
f0101db3:	0f 85 b1 08 00 00    	jne    f010266a <mem_init+0x1298>f0101db33154,142775
f0101db9:	6a 02                	push   $0x2f0101db93158,142986
f0101dbb:	68 00 00 40 00       	push   $0x400000f0101dbb3159,143030
f0101dc0:	56                   	push   %esif0101dc03160,143079
f0101dc1:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101dc13161,143123
f0101dc4:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101dc43162,143179
f0101dca:	ff 30                	pushl  (%eax)f0101dca3163,143235
f0101dcc:	e8 90 f5 ff ff       	call   f0101361 <page_insert>f0101dcc3164,143281
f0101dd1:	83 c4 10             	add    $0x10,%espf0101dd13165,143343
f0101dd4:	85 c0                	test   %eax,%eaxf0101dd43166,143393
f0101dd6:	0f 89 b0 08 00 00    	jns    f010268c <mem_init+0x12ba>f0101dd63167,143442
f0101ddc:	6a 02                	push   $0x2f0101ddc3171,143617
f0101dde:	68 00 10 00 00       	push   $0x1000f0101dde3172,143661
f0101de3:	57                   	push   %edif0101de33173,143708
f0101de4:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101de43174,143752
f0101de7:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101de73175,143808
f0101ded:	ff 30                	pushl  (%eax)f0101ded3176,143864
f0101def:	e8 6d f5 ff ff       	call   f0101361 <page_insert>f0101def3177,143910
f0101df4:	83 c4 10             	add    $0x10,%espf0101df43178,143972
f0101df7:	85 c0                	test   %eax,%eaxf0101df73179,144022
f0101df9:	0f 85 af 08 00 00    	jne    f01026ae <mem_init+0x12dc>f0101df93180,144071
f0101dff:	83 ec 04             	sub    $0x4,%espf0101dff3182,144201
f0101e02:	6a 00                	push   $0x0f0101e023183,144250
f0101e04:	68 00 10 00 00       	push   $0x1000f0101e043184,144294
f0101e09:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101e093185,144341
f0101e0c:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101e0c3186,144397
f0101e12:	ff 30                	pushl  (%eax)f0101e123187,144453
f0101e14:	e8 42 f3 ff ff       	call   f010115b <pgdir_walk>f0101e143188,144499
f0101e19:	83 c4 10             	add    $0x10,%espf0101e193189,144560
f0101e1c:	f6 00 04             	testb  $0x4,(%eax)f0101e1c3190,144610
f0101e1f:	0f 85 ab 08 00 00    	jne    f01026d0 <mem_init+0x12fe>f0101e1f3191,144661
f0101e25:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101e253195,144840
f0101e28:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101e283196,144896
f0101e2e:	8b 18                	mov    (%eax),%ebxf0101e2e3197,144952
f0101e30:	ba 00 00 00 00       	mov    $0x0,%edxf0101e303198,145003
f0101e35:	89 d8                	mov    %ebx,%eaxf0101e353199,145052
f0101e37:	e8 0a ed ff ff       	call   f0100b46 <check_va2pa>f0101e373200,145101
f0101e3c:	89 c2                	mov    %eax,%edxf0101e3c3201,145163
f0101e3e:	89 45 cc             	mov    %eax,-0x34(%ebp)f0101e3e3202,145212
f0101e41:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0101e413203,145268
f0101e44:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0101e443204,145324
f0101e4a:	89 f9                	mov    %edi,%ecxf0101e4a3205,145380
f0101e4c:	2b 08                	sub    (%eax),%ecxf0101e4c3206,145429
f0101e4e:	89 c8                	mov    %ecx,%eaxf0101e4e3207,145480
f0101e50:	c1 f8 03             	sar    $0x3,%eaxf0101e503208,145529
f0101e53:	c1 e0 0c             	shl    $0xc,%eaxf0101e533209,145578
f0101e56:	39 c2                	cmp    %eax,%edxf0101e563210,145627
f0101e58:	0f 85 94 08 00 00    	jne    f01026f2 <mem_init+0x1320>f0101e583211,145676
f0101e5e:	ba 00 10 00 00       	mov    $0x1000,%edxf0101e5e3213,145800
f0101e63:	89 d8                	mov    %ebx,%eaxf0101e633214,145852
f0101e65:	e8 dc ec ff ff       	call   f0100b46 <check_va2pa>f0101e653215,145901
f0101e6a:	39 45 cc             	cmp    %eax,-0x34(%ebp)f0101e6a3216,145963
f0101e6d:	0f 85 a1 08 00 00    	jne    f0102714 <mem_init+0x1342>f0101e6d3217,146019
f0101e73:	66 83 7f 04 02       	cmpw   $0x2,0x4(%edi)f0101e733220,146155
f0101e78:	0f 85 b8 08 00 00    	jne    f0102736 <mem_init+0x1364>f0101e783221,146209
f0101e7e:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0101e7e3223,146302
f0101e81:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)f0101e813224,146358
f0101e86:	0f 85 cc 08 00 00    	jne    f0102758 <mem_init+0x1386>f0101e863225,146412
f0101e8c:	83 ec 0c             	sub    $0xc,%espf0101e8c3229,146564
f0101e8f:	6a 00                	push   $0x0f0101e8f3230,146613
f0101e91:	e8 a2 f1 ff ff       	call   f0101038 <page_alloc>f0101e913231,146657
f0101e96:	83 c4 10             	add    $0x10,%espf0101e963232,146718
f0101e99:	39 45 d0             	cmp    %eax,-0x30(%ebp)f0101e993233,146768
f0101e9c:	0f 85 d8 08 00 00    	jne    f010277a <mem_init+0x13a8>f0101e9c3234,146824
f0101ea2:	85 c0                	test   %eax,%eaxf0101ea23235,146890
f0101ea4:	0f 84 d0 08 00 00    	je     f010277a <mem_init+0x13a8>f0101ea43236,146939
f0101eaa:	83 ec 08             	sub    $0x8,%espf0101eaa3240,147086
f0101ead:	6a 00                	push   $0x0f0101ead3241,147135
f0101eaf:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101eaf3242,147179
f0101eb2:	c7 c3 cc 96 11 f0    	mov    $0xf01196cc,%ebxf0101eb23243,147235
f0101eb8:	ff 33                	pushl  (%ebx)f0101eb83244,147291
f0101eba:	e8 4f f4 ff ff       	call   f010130e <page_remove>f0101eba3245,147337
f0101ebf:	8b 1b                	mov    (%ebx),%ebxf0101ebf3247,147444
f0101ec1:	ba 00 00 00 00       	mov    $0x0,%edxf0101ec13248,147495
f0101ec6:	89 d8                	mov    %ebx,%eaxf0101ec63249,147544
f0101ec8:	e8 79 ec ff ff       	call   f0100b46 <check_va2pa>f0101ec83250,147593
f0101ecd:	83 c4 10             	add    $0x10,%espf0101ecd3251,147655
f0101ed0:	83 f8 ff             	cmp    $0xffffffff,%eaxf0101ed03252,147705
f0101ed3:	0f 85 c3 08 00 00    	jne    f010279c <mem_init+0x13ca>f0101ed33253,147761
f0101ed9:	ba 00 10 00 00       	mov    $0x1000,%edxf0101ed93255,147885
f0101ede:	89 d8                	mov    %ebx,%eaxf0101ede3256,147937
f0101ee0:	e8 61 ec ff ff       	call   f0100b46 <check_va2pa>f0101ee03257,147986
f0101ee5:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0101ee53258,148048
f0101ee8:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf0101ee83259,148104
f0101eee:	89 f9                	mov    %edi,%ecxf0101eee3260,148160
f0101ef0:	2b 0a                	sub    (%edx),%ecxf0101ef03261,148209
f0101ef2:	89 ca                	mov    %ecx,%edxf0101ef23262,148260
f0101ef4:	c1 fa 03             	sar    $0x3,%edxf0101ef43263,148309
f0101ef7:	c1 e2 0c             	shl    $0xc,%edxf0101ef73264,148358
f0101efa:	39 d0                	cmp    %edx,%eaxf0101efa3265,148407
f0101efc:	0f 85 bc 08 00 00    	jne    f01027be <mem_init+0x13ec>f0101efc3266,148456
f0101f02:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)f0101f023268,148549
f0101f07:	0f 85 d3 08 00 00    	jne    f01027e0 <mem_init+0x140e>f0101f073269,148603
f0101f0d:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0101f0d3271,148696
f0101f10:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)f0101f103272,148752
f0101f15:	0f 85 e7 08 00 00    	jne    f0102802 <mem_init+0x1430>f0101f153273,148806
f0101f1b:	6a 00                	push   $0x0f0101f1b3277,148972
f0101f1d:	68 00 10 00 00       	push   $0x1000f0101f1d3278,149016
f0101f22:	57                   	push   %edif0101f223279,149063
f0101f23:	53                   	push   %ebxf0101f233280,149107
f0101f24:	e8 38 f4 ff ff       	call   f0101361 <page_insert>f0101f243281,149151
f0101f29:	83 c4 10             	add    $0x10,%espf0101f293282,149213
f0101f2c:	85 c0                	test   %eax,%eaxf0101f2c3283,149263
f0101f2e:	0f 85 f0 08 00 00    	jne    f0102824 <mem_init+0x1452>f0101f2e3284,149312
f0101f34:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)f0101f343286,149400
f0101f39:	0f 84 07 09 00 00    	je     f0102846 <mem_init+0x1474>f0101f393287,149454
f0101f3f:	83 3f 00             	cmpl   $0x0,(%edi)f0101f3f3289,149551
f0101f42:	0f 85 20 09 00 00    	jne    f0102868 <mem_init+0x1496>f0101f423290,149602
f0101f48:	83 ec 08             	sub    $0x8,%espf0101f483294,149754
f0101f4b:	68 00 10 00 00       	push   $0x1000f0101f4b3295,149803
f0101f50:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101f503296,149850
f0101f53:	c7 c3 cc 96 11 f0    	mov    $0xf01196cc,%ebxf0101f533297,149906
f0101f59:	ff 33                	pushl  (%ebx)f0101f593298,149962
f0101f5b:	e8 ae f3 ff ff       	call   f010130e <page_remove>f0101f5b3299,150008
f0101f60:	8b 1b                	mov    (%ebx),%ebxf0101f603301,150115
f0101f62:	ba 00 00 00 00       	mov    $0x0,%edxf0101f623302,150166
f0101f67:	89 d8                	mov    %ebx,%eaxf0101f673303,150215
f0101f69:	e8 d8 eb ff ff       	call   f0100b46 <check_va2pa>f0101f693304,150264
f0101f6e:	83 c4 10             	add    $0x10,%espf0101f6e3305,150326
f0101f71:	83 f8 ff             	cmp    $0xffffffff,%eaxf0101f713306,150376
f0101f74:	0f 85 10 09 00 00    	jne    f010288a <mem_init+0x14b8>f0101f743307,150432
f0101f7a:	ba 00 10 00 00       	mov    $0x1000,%edxf0101f7a3309,150546
f0101f7f:	89 d8                	mov    %ebx,%eaxf0101f7f3310,150598
f0101f81:	e8 c0 eb ff ff       	call   f0100b46 <check_va2pa>f0101f813311,150647
f0101f86:	83 f8 ff             	cmp    $0xffffffff,%eaxf0101f863312,150709
f0101f89:	0f 85 1d 09 00 00    	jne    f01028ac <mem_init+0x14da>f0101f893313,150765
f0101f8f:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)f0101f8f3315,150858
f0101f94:	0f 85 34 09 00 00    	jne    f01028ce <mem_init+0x14fc>f0101f943316,150912
f0101f9a:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0101f9a3318,151005
f0101f9d:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)f0101f9d3319,151061
f0101fa2:	0f 85 48 09 00 00    	jne    f01028f0 <mem_init+0x151e>f0101fa23320,151115
f0101fa8:	83 ec 0c             	sub    $0xc,%espf0101fa83324,151269
f0101fab:	6a 00                	push   $0x0f0101fab3325,151318
f0101fad:	e8 86 f0 ff ff       	call   f0101038 <page_alloc>f0101fad3326,151362
f0101fb2:	83 c4 10             	add    $0x10,%espf0101fb23327,151423
f0101fb5:	85 c0                	test   %eax,%eaxf0101fb53328,151473
f0101fb7:	0f 84 55 09 00 00    	je     f0102912 <mem_init+0x1540>f0101fb73329,151522
f0101fbd:	39 c7                	cmp    %eax,%edif0101fbd3330,151588
f0101fbf:	0f 85 4d 09 00 00    	jne    f0102912 <mem_init+0x1540>f0101fbf3331,151637
f0101fc5:	83 ec 0c             	sub    $0xc,%espf0101fc53335,151758
f0101fc8:	6a 00                	push   $0x0f0101fc83336,151807
f0101fca:	e8 69 f0 ff ff       	call   f0101038 <page_alloc>f0101fca3337,151851
f0101fcf:	83 c4 10             	add    $0x10,%espf0101fcf3338,151912
f0101fd2:	85 c0                	test   %eax,%eaxf0101fd23339,151962
f0101fd4:	0f 85 5a 09 00 00    	jne    f0102934 <mem_init+0x1562>f0101fd43340,152011
f0101fda:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0101fda3344,152155
f0101fdd:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101fdd3345,152211
f0101fe3:	8b 08                	mov    (%eax),%ecxf0101fe33346,152267
f0101fe5:	8b 11                	mov    (%ecx),%edxf0101fe53347,152318
f0101fe7:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf0101fe73348,152369
f0101fed:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0101fed3349,152425
f0101ff3:	89 f3                	mov    %esi,%ebxf0101ff33350,152481
f0101ff5:	2b 18                	sub    (%eax),%ebxf0101ff53351,152530
f0101ff7:	89 d8                	mov    %ebx,%eaxf0101ff73352,152581
f0101ff9:	c1 f8 03             	sar    $0x3,%eaxf0101ff93353,152630
f0101ffc:	c1 e0 0c             	shl    $0xc,%eaxf0101ffc3354,152679
f0101fff:	39 c2                	cmp    %eax,%edxf0101fff3355,152728
f0102001:	0f 85 4f 09 00 00    	jne    f0102956 <mem_init+0x1584>f01020013356,152777
f0102007:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)f01020073358,152863
f010200d:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)f010200d3360,152941
f0102012:	0f 85 60 09 00 00    	jne    f0102978 <mem_init+0x15a6>f01020123361,152995
f0102018:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)f01020183363,153079
f010201e:	83 ec 0c             	sub    $0xc,%espf010201e3367,153194
f0102021:	56                   	push   %esif01020213368,153243
f0102022:	e8 9f f0 ff ff       	call   f01010c6 <page_free>f01020223369,153287
	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);va3370,153347
	ptep = pgdir_walk(kern_pgdir, va, 1);ptep3371,153392
f0102027:	83 c4 0c             	add    $0xc,%espf01020273372,153431
f010202a:	6a 01                	push   $0x1f010202a3373,153480
f010202c:	68 00 10 40 00       	push   $0x401000f010202c3374,153524
f0102031:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf01020313375,153573
f0102034:	c7 c3 cc 96 11 f0    	mov    $0xf01196cc,%ebxf01020343376,153629
f010203a:	ff 33                	pushl  (%ebx)f010203a3377,153685
f010203c:	e8 1a f1 ff ff       	call   f010115b <pgdir_walk>f010203c3378,153731
f0102041:	89 45 cc             	mov    %eax,-0x34(%ebp)f01020413379,153792
f0102044:	89 45 e4             	mov    %eax,-0x1c(%ebp)f01020443380,153848
	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));ptep13381,153904
f0102047:	8b 1b                	mov    (%ebx),%ebxf01020473382,153961
f0102049:	8b 53 04             	mov    0x4(%ebx),%edxf01020493383,154012
f010204c:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf010204c3384,154066
f0102052:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf01020523386,154148
f0102055:	c7 c1 c8 96 11 f0    	mov    $0xf01196c8,%ecxf01020553387,154204
f010205b:	8b 09                	mov    (%ecx),%ecxf010205b3388,154260
f010205d:	89 d0                	mov    %edx,%eaxf010205d3389,154311
f010205f:	c1 e8 0c             	shr    $0xc,%eaxf010205f3390,154360
f0102062:	83 c4 10             	add    $0x10,%espf01020623391,154409
f0102065:	39 c8                	cmp    %ecx,%eaxf01020653392,154459
f0102067:	0f 83 2d 09 00 00    	jae    f010299a <mem_init+0x15c8>f01020673393,154508
f010206d:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edxf010206d3395,154608
f0102073:	39 55 cc             	cmp    %edx,-0x34(%ebp)f01020733396,154663
f0102076:	0f 85 3a 09 00 00    	jne    f01029b6 <mem_init+0x15e4>f01020763397,154719
f010207c:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)f010207c3399,154811
f0102083:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)f01020833401,154883
f0102089:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf01020893403,154970
f010208c:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf010208c3404,155026
f0102092:	89 f3                	mov    %esi,%ebxf01020923405,155082
f0102094:	2b 18                	sub    (%eax),%ebxf01020943406,155131
f0102096:	89 d8                	mov    %ebx,%eaxf01020963407,155182
f0102098:	c1 f8 03             	sar    $0x3,%eaxf01020983408,155231
f010209b:	c1 e0 0c             	shl    $0xc,%eaxf010209b3409,155280
f010209e:	89 c2                	mov    %eax,%edxf010209e3411,155355
f01020a0:	c1 ea 0c             	shr    $0xc,%edxf01020a03412,155404
f01020a3:	39 d1                	cmp    %edx,%ecxf01020a33413,155453
f01020a5:	0f 86 2d 09 00 00    	jbe    f01029d8 <mem_init+0x1606>f01020a53414,155502
f01020ab:	83 ec 04             	sub    $0x4,%espf01020ab3418,155650
f01020ae:	68 00 10 00 00       	push   $0x1000f01020ae3419,155699
f01020b3:	68 ff 00 00 00       	push   $0xfff01020b33420,155746
f01020b8:	2d 00 00 00 10       	sub    $0x10000000,%eaxf01020b83422,155824
f01020bd:	50                   	push   %eaxf01020bd3423,155880
f01020be:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01020be3424,155924
f01020c1:	e8 e2 1b 00 00       	call   f0103ca8 <memset>f01020c13425,155980
f01020c6:	89 34 24             	mov    %esi,(%esp)f01020c63427,156054
f01020c9:	e8 f8 ef ff ff       	call   f01010c6 <page_free>f01020c93428,156105
f01020ce:	83 c4 0c             	add    $0xc,%espf01020ce3430,156198
f01020d1:	6a 01                	push   $0x1f01020d13431,156247
f01020d3:	6a 00                	push   $0x0f01020d33432,156291
f01020d5:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01020d53433,156335
f01020d8:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf01020d83434,156391
f01020de:	ff 30                	pushl  (%eax)f01020de3435,156447
f01020e0:	e8 76 f0 ff ff       	call   f010115b <pgdir_walk>f01020e03436,156493
f01020e5:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01020e53438,156587
f01020eb:	89 f2                	mov    %esi,%edxf01020eb3439,156643
f01020ed:	2b 10                	sub    (%eax),%edxf01020ed3440,156692
f01020ef:	c1 fa 03             	sar    $0x3,%edxf01020ef3441,156743
f01020f2:	c1 e2 0c             	shl    $0xc,%edxf01020f23442,156792
f01020f5:	89 d1                	mov    %edx,%ecxf01020f53444,156867
f01020f7:	c1 e9 0c             	shr    $0xc,%ecxf01020f73445,156916
f01020fa:	83 c4 10             	add    $0x10,%espf01020fa3446,156965
f01020fd:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf01020fd3447,157015
f0102103:	3b 08                	cmp    (%eax),%ecxf01021033448,157071
f0102105:	0f 83 e6 08 00 00    	jae    f01029f1 <mem_init+0x161f>f01021053449,157122
f010210b:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eaxf010210b3451,157221
	ptep = (pte_t *) page2kva(pp0);ptep3452,157283
f0102111:	89 45 e4             	mov    %eax,-0x1c(%ebp)f01021113453,157316
f0102114:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edxf01021143454,157372
f010211a:	f6 00 01             	testb  $0x1,(%eax)f010211a3457,157490
f010211d:	0f 85 e7 08 00 00    	jne    f0102a0a <mem_init+0x1638>f010211d3458,157541
f0102123:	83 c0 04             	add    $0x4,%eaxf01021233459,157607
f0102126:	39 d0                	cmp    %edx,%eaxf01021263461,157685
f0102128:	75 f0                	jne    f010211a <mem_init+0xd48>f01021283462,157734
f010212a:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010212a3464,157819
f010212d:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf010212d3465,157875
f0102133:	8b 00                	mov    (%eax),%eaxf01021333466,157931
f0102135:	c7 00 00 00 00 00    	movl   $0x0,(%eax)f01021353467,157982
f010213b:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)f010213b3469,158051
	page_free_list = fl;page_free_list3472,158130
f0102141:	8b 45 c8             	mov    -0x38(%ebp),%eaxf01021413473,158152
f0102144:	89 83 90 1f 00 00    	mov    %eax,0x1f90(%ebx)f01021443474,158208
f010214a:	83 ec 0c             	sub    $0xc,%espf010214a3478,158310
f010214d:	56                   	push   %esif010214d3479,158359
f010214e:	e8 73 ef ff ff       	call   f01010c6 <page_free>f010214e3480,158403
f0102153:	89 3c 24             	mov    %edi,(%esp)f01021533482,158480
f0102156:	e8 6b ef ff ff       	call   f01010c6 <page_free>f01021563483,158531
f010215b:	83 c4 04             	add    $0x4,%espf010215b3485,158608
f010215e:	ff 75 d0             	pushl  -0x30(%ebp)f010215e3486,158657
f0102161:	e8 60 ef ff ff       	call   f01010c6 <page_free>f01021613487,158708
f0102166:	8d 83 f2 dd fe ff    	lea    -0x1220e(%ebx),%eaxf01021663490,158808
f010216c:	89 04 24             	mov    %eax,(%esp)f010216c3491,158867
f010216f:	e8 d8 0f 00 00       	call   f010314c <cprintf>f010216f3492,158918
f0102174:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01021743494,159043
f010217a:	8b 00                	mov    (%eax),%eaxf010217a3495,159099
f010217c:	83 c4 10             	add    $0x10,%espf010217c3497,159181
f010217f:	3d ff ff ff ef       	cmp    $0xefffffff,%eaxf010217f3498,159231
f0102184:	0f 86 a2 08 00 00    	jbe    f0102a2c <mem_init+0x165a>f01021843499,159287
f010218a:	83 ec 08             	sub    $0x8,%espf010218a3500,159353
f010218d:	6a 04                	push   $0x4f010218d3501,159402
f010218f:	05 00 00 00 10       	add    $0x10000000,%eaxf010218f3503,159482
f0102194:	50                   	push   %eaxf01021943504,159538
f0102195:	b9 00 00 40 00       	mov    $0x400000,%ecxf01021953505,159582
f010219a:	ba 00 00 00 ef       	mov    $0xef000000,%edxf010219a3506,159636
f010219f:	8b 7d d4             	mov    -0x2c(%ebp),%edif010219f3507,159692
f01021a2:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf01021a23508,159748
f01021a8:	8b 00                	mov    (%eax),%eaxf01021a83509,159804
f01021aa:	e8 58 f0 ff ff       	call   f0101207 <boot_map_region>f01021aa3510,159855
f01021af:	c7 c0 00 e0 10 f0    	mov    $0xf010e000,%eaxf01021af3512,159952
f01021b5:	89 45 c8             	mov    %eax,-0x38(%ebp)f01021b53513,160008
f01021b8:	83 c4 10             	add    $0x10,%espf01021b83514,160064
f01021bb:	3d ff ff ff ef       	cmp    $0xefffffff,%eaxf01021bb3515,160114
f01021c0:	0f 86 82 08 00 00    	jbe    f0102a48 <mem_init+0x1676>f01021c03516,160170
f01021c6:	8b 7d d4             	mov    -0x2c(%ebp),%edif01021c63518,160323
f01021c9:	c7 c3 cc 96 11 f0    	mov    $0xf01196cc,%ebxf01021c93519,160379
f01021cf:	83 ec 08             	sub    $0x8,%espf01021cf3520,160435
f01021d2:	6a 02                	push   $0x2f01021d23521,160484
f01021d4:	8b 45 c8             	mov    -0x38(%ebp),%eaxf01021d43523,160564
f01021d7:	05 00 00 00 10       	add    $0x10000000,%eaxf01021d73524,160620
f01021dc:	50                   	push   %eaxf01021dc3525,160676
f01021dd:	b9 00 80 00 00       	mov    $0x8000,%ecxf01021dd3526,160720
f01021e2:	ba 00 80 ff ef       	mov    $0xefff8000,%edxf01021e23527,160772
f01021e7:	8b 03                	mov    (%ebx),%eaxf01021e73528,160828
f01021e9:	e8 19 f0 ff ff       	call   f0101207 <boot_map_region>f01021e93529,160879
f01021ee:	83 c4 08             	add    $0x8,%espf01021ee3531,161018
f01021f1:	6a 02                	push   $0x2f01021f13532,161067
f01021f3:	6a 00                	push   $0x0f01021f33533,161111
f01021f5:	b9 ff ff ff 0f       	mov    $0xfffffff,%ecxf01021f53534,161155
f01021fa:	ba 00 00 00 f0       	mov    $0xf0000000,%edxf01021fa3535,161210
f01021ff:	8b 03                	mov    (%ebx),%eaxf01021ff3536,161266
f0102201:	e8 01 f0 ff ff       	call   f0101207 <boot_map_region>f01022013537,161317
	pgdir = kern_pgdir;pgdir3538,161383
f0102206:	8b 33                	mov    (%ebx),%esif01022063539,161404
	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);n3540,161455
f0102208:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf01022083541,161509
f010220e:	8b 00                	mov    (%eax),%eaxf010220e3542,161565
f0102210:	89 45 c4             	mov    %eax,-0x3c(%ebp)f01022103543,161616
f0102213:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eaxf01022133544,161672
f010221a:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf010221a3545,161731
f010221f:	89 45 d0             	mov    %eax,-0x30(%ebp)f010221f3546,161787
f0102222:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01022223548,161905
f0102228:	8b 00                	mov    (%eax),%eaxf01022283549,161961
f010222a:	89 45 c0             	mov    %eax,-0x40(%ebp)f010222a3550,162012
f010222d:	89 45 cc             	mov    %eax,-0x34(%ebp)f010222d3552,162099
f0102230:	8d 98 00 00 00 10    	lea    0x10000000(%eax),%ebxf01022303554,162191
f0102236:	83 c4 10             	add    $0x10,%espf01022363555,162252
f0102239:	bf 00 00 00 00       	mov    $0x0,%edif01022393557,162335
f010223e:	39 7d d0             	cmp    %edi,-0x30(%ebp)f010223e3558,162384
f0102241:	0f 86 62 08 00 00    	jbe    f0102aa9 <mem_init+0x16d7>f01022413559,162440
f0102247:	8d 97 00 00 00 ef    	lea    -0x11000000(%edi),%edxf01022473561,162568
f010224d:	89 f0                	mov    %esi,%eaxf010224d3562,162630
f010224f:	e8 f2 e8 ff ff       	call   f0100b46 <check_va2pa>f010224f3563,162679
f0102254:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)f01022543565,162772
f010225b:	0f 86 08 08 00 00    	jbe    f0102a69 <mem_init+0x1697>f010225b3566,162835
f0102261:	8d 14 1f             	lea    (%edi,%ebx,1),%edxf01022613567,162901
f0102264:	39 c2                	cmp    %eax,%edxf01022643568,162959
f0102266:	0f 85 1b 08 00 00    	jne    f0102a87 <mem_init+0x16b5>f01022663569,163008
f010226c:	81 c7 00 10 00 00    	add    $0x1000,%edif010226c3571,163107
f0102272:	eb ca                	jmp    f010223e <mem_init+0xe6c>f01022723572,163159
f0102274:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01022743574,163245
f0102277:	8d 83 1b dd fe ff    	lea    -0x122e5(%ebx),%eaxf01022773575,163301
f010227d:	50                   	push   %eaxf010227d3576,163360
f010227e:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf010227e3577,163404
f0102284:	50                   	push   %eaxf01022843578,163463
f0102285:	68 7f 02 00 00       	push   $0x27ff01022853579,163507
f010228a:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010228a3580,163553
f0102290:	50                   	push   %eaxf01022903581,163612
f0102291:	e8 03 de ff ff       	call   f0100099 <_panic>f01022913582,163656
f0102296:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01022963584,163745
f0102299:	8d 83 29 dc fe ff    	lea    -0x123d7(%ebx),%eaxf01022993585,163801
f010229f:	50                   	push   %eaxf010229f3586,163860
f01022a0:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01022a03587,163904
f01022a6:	50                   	push   %eaxf01022a63588,163963
f01022a7:	68 d8 02 00 00       	push   $0x2d8f01022a73589,164007
f01022ac:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01022ac3590,164053
f01022b2:	50                   	push   %eaxf01022b23591,164112
f01022b3:	e8 e1 dd ff ff       	call   f0100099 <_panic>f01022b33592,164156
f01022b8:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01022b83594,164245
f01022bb:	8d 83 3f dc fe ff    	lea    -0x123c1(%ebx),%eaxf01022bb3595,164301
f01022c1:	50                   	push   %eaxf01022c13596,164360
f01022c2:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01022c23597,164404
f01022c8:	50                   	push   %eaxf01022c83598,164463
f01022c9:	68 d9 02 00 00       	push   $0x2d9f01022c93599,164507
f01022ce:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01022ce3600,164553
f01022d4:	50                   	push   %eaxf01022d43601,164612
f01022d5:	e8 bf dd ff ff       	call   f0100099 <_panic>f01022d53602,164656
f01022da:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01022da3604,164745
f01022dd:	8d 83 55 dc fe ff    	lea    -0x123ab(%ebx),%eaxf01022dd3605,164801
f01022e3:	50                   	push   %eaxf01022e33606,164860
f01022e4:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01022e43607,164904
f01022ea:	50                   	push   %eaxf01022ea3608,164963
f01022eb:	68 da 02 00 00       	push   $0x2daf01022eb3609,165007
f01022f0:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01022f03610,165053
f01022f6:	50                   	push   %eaxf01022f63611,165112
f01022f7:	e8 9d dd ff ff       	call   f0100099 <_panic>f01022f73612,165156
f01022fc:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01022fc3614,165241
f01022ff:	8d 83 6b dc fe ff    	lea    -0x12395(%ebx),%eaxf01022ff3615,165297
f0102305:	50                   	push   %eaxf01023053616,165356
f0102306:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01023063617,165400
f010230c:	50                   	push   %eaxf010230c3618,165459
f010230d:	68 dd 02 00 00       	push   $0x2ddf010230d3619,165503
f0102312:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01023123620,165549
f0102318:	50                   	push   %eaxf01023183621,165608
f0102319:	e8 7b dd ff ff       	call   f0100099 <_panic>f01023193622,165652
f010231e:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010231e3624,165751
f0102321:	8d 83 6c d5 fe ff    	lea    -0x12a94(%ebx),%eaxf01023213625,165807
f0102327:	50                   	push   %eaxf01023273626,165866
f0102328:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01023283627,165910
f010232e:	50                   	push   %eaxf010232e3628,165969
f010232f:	68 de 02 00 00       	push   $0x2def010232f3629,166013
f0102334:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01023343630,166059
f010233a:	50                   	push   %eaxf010233a3631,166118
f010233b:	e8 59 dd ff ff       	call   f0100099 <_panic>f010233b3632,166162
f0102340:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01023403634,166244
f0102343:	8d 83 d4 dc fe ff    	lea    -0x1232c(%ebx),%eaxf01023433635,166300
f0102349:	50                   	push   %eaxf01023493636,166359
f010234a:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf010234a3637,166403
f0102350:	50                   	push   %eaxf01023503638,166462
f0102351:	68 e5 02 00 00       	push   $0x2e5f01023513639,166506
f0102356:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01023563640,166552
f010235c:	50                   	push   %eaxf010235c3641,166611
f010235d:	e8 37 dd ff ff       	call   f0100099 <_panic>f010235d3642,166655
f0102362:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01023623644,166775
f0102365:	8d 83 ac d5 fe ff    	lea    -0x12a54(%ebx),%eaxf01023653645,166831
f010236b:	50                   	push   %eaxf010236b3646,166890
f010236c:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf010236c3647,166934
f0102372:	50                   	push   %eaxf01023723648,166993
f0102373:	68 e8 02 00 00       	push   $0x2e8f01023733649,167037
f0102378:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01023783650,167083
f010237e:	50                   	push   %eaxf010237e3651,167142
f010237f:	e8 15 dd ff ff       	call   f0100099 <_panic>f010237f3652,167186
f0102384:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01023843654,167298
f0102387:	8d 83 e4 d5 fe ff    	lea    -0x12a1c(%ebx),%eaxf01023873655,167354
f010238d:	50                   	push   %eaxf010238d3656,167413
f010238e:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf010238e3657,167457
f0102394:	50                   	push   %eaxf01023943658,167516
f0102395:	68 eb 02 00 00       	push   $0x2ebf01023953659,167560
f010239a:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010239a3660,167606
f01023a0:	50                   	push   %eaxf01023a03661,167665
f01023a1:	e8 f3 dc ff ff       	call   f0100099 <_panic>f01023a13662,167709
f01023a6:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01023a63664,167822
f01023a9:	8d 83 14 d6 fe ff    	lea    -0x129ec(%ebx),%eaxf01023a93665,167878
f01023af:	50                   	push   %eaxf01023af3666,167937
f01023b0:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01023b03667,167981
f01023b6:	50                   	push   %eaxf01023b63668,168040
f01023b7:	68 ef 02 00 00       	push   $0x2eff01023b73669,168084
f01023bc:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01023bc3670,168130
f01023c2:	50                   	push   %eaxf01023c23671,168189
f01023c3:	e8 d1 dc ff ff       	call   f0100099 <_panic>f01023c33672,168233
f01023c8:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01023c83674,168340
f01023cb:	8d 83 44 d6 fe ff    	lea    -0x129bc(%ebx),%eaxf01023cb3675,168396
f01023d1:	50                   	push   %eaxf01023d13676,168455
f01023d2:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01023d23677,168499
f01023d8:	50                   	push   %eaxf01023d83678,168558
f01023d9:	68 f0 02 00 00       	push   $0x2f0f01023d93679,168602
f01023de:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01023de3680,168648
f01023e4:	50                   	push   %eaxf01023e43681,168707
f01023e5:	e8 af dc ff ff       	call   f0100099 <_panic>f01023e53682,168751
f01023ea:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01023ea3684,168863
f01023ed:	8d 83 6c d6 fe ff    	lea    -0x12994(%ebx),%eaxf01023ed3685,168919
f01023f3:	50                   	push   %eaxf01023f33686,168978
f01023f4:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01023f43687,169022
f01023fa:	50                   	push   %eaxf01023fa3688,169081
f01023fb:	68 f1 02 00 00       	push   $0x2f1f01023fb3689,169125
f0102400:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01024003690,169171
f0102406:	50                   	push   %eaxf01024063691,169230
f0102407:	e8 8d dc ff ff       	call   f0100099 <_panic>f01024073692,169274
f010240c:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010240c3694,169358
f010240f:	8d 83 26 dd fe ff    	lea    -0x122da(%ebx),%eaxf010240f3695,169414
f0102415:	50                   	push   %eaxf01024153696,169473
f0102416:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01024163697,169517
f010241c:	50                   	push   %eaxf010241c3698,169576
f010241d:	68 f2 02 00 00       	push   $0x2f2f010241d3699,169620
f0102422:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01024223700,169666
f0102428:	50                   	push   %eaxf01024283701,169725
f0102429:	e8 6b dc ff ff       	call   f0100099 <_panic>f01024293702,169769
f010242e:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010242e3704,169853
f0102431:	8d 83 37 dd fe ff    	lea    -0x122c9(%ebx),%eaxf01024313705,169909
f0102437:	50                   	push   %eaxf01024373706,169968
f0102438:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01024383707,170012
f010243e:	50                   	push   %eaxf010243e3708,170071
f010243f:	68 f3 02 00 00       	push   $0x2f3f010243f3709,170115
f0102444:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01024443710,170161
f010244a:	50                   	push   %eaxf010244a3711,170220
f010244b:	e8 49 dc ff ff       	call   f0100099 <_panic>f010244b3712,170264
f0102450:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01024503714,170388
f0102453:	8d 83 9c d6 fe ff    	lea    -0x12964(%ebx),%eaxf01024533715,170444
f0102459:	50                   	push   %eaxf01024593716,170503
f010245a:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf010245a3717,170547
f0102460:	50                   	push   %eaxf01024603718,170606
f0102461:	68 f6 02 00 00       	push   $0x2f6f01024613719,170650
f0102466:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01024663720,170696
f010246c:	50                   	push   %eaxf010246c3721,170755
f010246d:	e8 27 dc ff ff       	call   f0100099 <_panic>f010246d3722,170799
f0102472:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01024723724,170914
f0102475:	8d 83 d8 d6 fe ff    	lea    -0x12928(%ebx),%eaxf01024753725,170970
f010247b:	50                   	push   %eaxf010247b3726,171029
f010247c:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf010247c3727,171073
f0102482:	50                   	push   %eaxf01024823728,171132
f0102483:	68 f7 02 00 00       	push   $0x2f7f01024833729,171176
f0102488:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01024883730,171222
f010248e:	50                   	push   %eaxf010248e3731,171281
f010248f:	e8 05 dc ff ff       	call   f0100099 <_panic>f010248f3732,171325
f0102494:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01024943734,171407
f0102497:	8d 83 d4 dc fe ff    	lea    -0x1232c(%ebx),%eaxf01024973735,171463
f010249d:	50                   	push   %eaxf010249d3736,171522
f010249e:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf010249e3737,171566
f01024a4:	50                   	push   %eaxf01024a43738,171625
f01024a5:	68 fa 02 00 00       	push   $0x2faf01024a53739,171669
f01024aa:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01024aa3740,171715
f01024b0:	50                   	push   %eaxf01024b03741,171774
f01024b1:	e8 e3 db ff ff       	call   f0100099 <_panic>f01024b13742,171818
f01024b6:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01024b63744,171942
f01024b9:	8d 83 9c d6 fe ff    	lea    -0x12964(%ebx),%eaxf01024b93745,171998
f01024bf:	50                   	push   %eaxf01024bf3746,172057
f01024c0:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01024c03747,172101
f01024c6:	50                   	push   %eaxf01024c63748,172160
f01024c7:	68 fd 02 00 00       	push   $0x2fdf01024c73749,172204
f01024cc:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01024cc3750,172250
f01024d2:	50                   	push   %eaxf01024d23751,172309
f01024d3:	e8 c1 db ff ff       	call   f0100099 <_panic>f01024d33752,172353
f01024d8:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01024d83754,172468
f01024db:	8d 83 d8 d6 fe ff    	lea    -0x12928(%ebx),%eaxf01024db3755,172524
f01024e1:	50                   	push   %eaxf01024e13756,172583
f01024e2:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01024e23757,172627
f01024e8:	50                   	push   %eaxf01024e83758,172686
f01024e9:	68 fe 02 00 00       	push   $0x2fef01024e93759,172730
f01024ee:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01024ee3760,172776
f01024f4:	50                   	push   %eaxf01024f43761,172835
f01024f5:	e8 9f db ff ff       	call   f0100099 <_panic>f01024f53762,172879
f01024fa:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01024fa3764,172963
f01024fd:	8d 83 48 dd fe ff    	lea    -0x122b8(%ebx),%eaxf01024fd3765,173019
f0102503:	50                   	push   %eaxf01025033766,173078
f0102504:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01025043767,173122
f010250a:	50                   	push   %eaxf010250a3768,173181
f010250b:	68 ff 02 00 00       	push   $0x2fff010250b3769,173225
f0102510:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01025103770,173271
f0102516:	50                   	push   %eaxf01025163771,173330
f0102517:	e8 7d db ff ff       	call   f0100099 <_panic>f01025173772,173374
f010251c:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010251c3774,173456
f010251f:	8d 83 d4 dc fe ff    	lea    -0x1232c(%ebx),%eaxf010251f3775,173512
f0102525:	50                   	push   %eaxf01025253776,173571
f0102526:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01025263777,173615
f010252c:	50                   	push   %eaxf010252c3778,173674
f010252d:	68 03 03 00 00       	push   $0x303f010252d3779,173718
f0102532:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01025323780,173764
f0102538:	50                   	push   %eaxf01025383781,173823
f0102539:	e8 5b db ff ff       	call   f0100099 <_panic>f01025393782,173867
f010253e:	50                   	push   %eaxf010253e3784,173988
f010253f:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010253f3785,174032
f0102542:	8d 83 54 d3 fe ff    	lea    -0x12cac(%ebx),%eaxf01025423786,174088
f0102548:	50                   	push   %eaxf01025483787,174147
f0102549:	68 06 03 00 00       	push   $0x306f01025493788,174191
f010254e:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010254e3789,174237
f0102554:	50                   	push   %eaxf01025543790,174296
f0102555:	e8 3f db ff ff       	call   f0100099 <_panic>f01025553791,174340
f010255a:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010255a3793,174468
f010255d:	8d 83 08 d7 fe ff    	lea    -0x128f8(%ebx),%eaxf010255d3794,174524
f0102563:	50                   	push   %eaxf01025633795,174583
f0102564:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01025643796,174627
f010256a:	50                   	push   %eaxf010256a3797,174686
f010256b:	68 07 03 00 00       	push   $0x307f010256b3798,174730
f0102570:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01025703799,174776
f0102576:	50                   	push   %eaxf01025763800,174835
f0102577:	e8 1d db ff ff       	call   f0100099 <_panic>f01025773801,174879
f010257c:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010257c3803,175009
f010257f:	8d 83 48 d7 fe ff    	lea    -0x128b8(%ebx),%eaxf010257f3804,175065
f0102585:	50                   	push   %eaxf01025853805,175124
f0102586:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01025863806,175168
f010258c:	50                   	push   %eaxf010258c3807,175227
f010258d:	68 0a 03 00 00       	push   $0x30af010258d3808,175271
f0102592:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01025923809,175317
f0102598:	50                   	push   %eaxf01025983810,175376
f0102599:	e8 fb da ff ff       	call   f0100099 <_panic>f01025993811,175420
f010259e:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010259e3813,175535
f01025a1:	8d 83 d8 d6 fe ff    	lea    -0x12928(%ebx),%eaxf01025a13814,175591
f01025a7:	50                   	push   %eaxf01025a73815,175650
f01025a8:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01025a83816,175694
f01025ae:	50                   	push   %eaxf01025ae3817,175753
f01025af:	68 0b 03 00 00       	push   $0x30bf01025af3818,175797
f01025b4:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01025b43819,175843
f01025ba:	50                   	push   %eaxf01025ba3820,175902
f01025bb:	e8 d9 da ff ff       	call   f0100099 <_panic>f01025bb3821,175946
f01025c0:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01025c03823,176030
f01025c3:	8d 83 48 dd fe ff    	lea    -0x122b8(%ebx),%eaxf01025c33824,176086
f01025c9:	50                   	push   %eaxf01025c93825,176145
f01025ca:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01025ca3826,176189
f01025d0:	50                   	push   %eaxf01025d03827,176248
f01025d1:	68 0c 03 00 00       	push   $0x30cf01025d13828,176292
f01025d6:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01025d63829,176338
f01025dc:	50                   	push   %eaxf01025dc3830,176397
f01025dd:	e8 b7 da ff ff       	call   f0100099 <_panic>f01025dd3831,176441
f01025e2:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01025e23833,176559
f01025e5:	8d 83 88 d7 fe ff    	lea    -0x12878(%ebx),%eaxf01025e53834,176615
f01025eb:	50                   	push   %eaxf01025eb3835,176674
f01025ec:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01025ec3836,176718
f01025f2:	50                   	push   %eaxf01025f23837,176777
f01025f3:	68 0d 03 00 00       	push   $0x30df01025f33838,176821
f01025f8:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01025f83839,176867
f01025fe:	50                   	push   %eaxf01025fe3840,176926
f01025ff:	e8 95 da ff ff       	call   f0100099 <_panic>f01025ff3841,176970
f0102604:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01026043843,177059
f0102607:	8d 83 59 dd fe ff    	lea    -0x122a7(%ebx),%eaxf01026073844,177115
f010260d:	50                   	push   %eaxf010260d3845,177174
f010260e:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf010260e3846,177218
f0102614:	50                   	push   %eaxf01026143847,177277
f0102615:	68 0e 03 00 00       	push   $0x30ef01026153848,177321
f010261a:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010261a3849,177367
f0102620:	50                   	push   %eaxf01026203850,177426
f0102621:	e8 73 da ff ff       	call   f0100099 <_panic>f01026213851,177470
f0102626:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01026263853,177594
f0102629:	8d 83 9c d6 fe ff    	lea    -0x12964(%ebx),%eaxf01026293854,177650
f010262f:	50                   	push   %eaxf010262f3855,177709
f0102630:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01026303856,177753
f0102636:	50                   	push   %eaxf01026363857,177812
f0102637:	68 11 03 00 00       	push   $0x311f01026373858,177856
f010263c:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010263c3859,177902
f0102642:	50                   	push   %eaxf01026423860,177961
f0102643:	e8 51 da ff ff       	call   f0100099 <_panic>f01026433861,178005
f0102648:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01026483863,178123
f010264b:	8d 83 bc d7 fe ff    	lea    -0x12844(%ebx),%eaxf010264b3864,178179
f0102651:	50                   	push   %eaxf01026513865,178238
f0102652:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01026523866,178282
f0102658:	50                   	push   %eaxf01026583867,178341
f0102659:	68 12 03 00 00       	push   $0x312f01026593868,178385
f010265e:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010265e3869,178431
f0102664:	50                   	push   %eaxf01026643870,178490
f0102665:	e8 2f da ff ff       	call   f0100099 <_panic>f01026653871,178534
f010266a:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010266a3873,178655
f010266d:	8d 83 f0 d7 fe ff    	lea    -0x12810(%ebx),%eaxf010266d3874,178711
f0102673:	50                   	push   %eaxf01026733875,178770
f0102674:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01026743876,178814
f010267a:	50                   	push   %eaxf010267a3877,178873
f010267b:	68 13 03 00 00       	push   $0x313f010267b3878,178917
f0102680:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01026803879,178963
f0102686:	50                   	push   %eaxf01026863880,179022
f0102687:	e8 0d da ff ff       	call   f0100099 <_panic>f01026873881,179066
f010268c:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010268c3883,179189
f010268f:	8d 83 28 d8 fe ff    	lea    -0x127d8(%ebx),%eaxf010268f3884,179245
f0102695:	50                   	push   %eaxf01026953885,179304
f0102696:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01026963886,179348
f010269c:	50                   	push   %eaxf010269c3887,179407
f010269d:	68 16 03 00 00       	push   $0x316f010269d3888,179451
f01026a2:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01026a23889,179497
f01026a8:	50                   	push   %eaxf01026a83890,179556
f01026a9:	e8 eb d9 ff ff       	call   f0100099 <_panic>f01026a93891,179600
f01026ae:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01026ae3893,179724
f01026b1:	8d 83 60 d8 fe ff    	lea    -0x127a0(%ebx),%eaxf01026b13894,179780
f01026b7:	50                   	push   %eaxf01026b73895,179839
f01026b8:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01026b83896,179883
f01026be:	50                   	push   %eaxf01026be3897,179942
f01026bf:	68 19 03 00 00       	push   $0x319f01026bf3898,179986
f01026c4:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01026c43899,180032
f01026ca:	50                   	push   %eaxf01026ca3900,180091
f01026cb:	e8 c9 d9 ff ff       	call   f0100099 <_panic>f01026cb3901,180135
f01026d0:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01026d03903,180256
f01026d3:	8d 83 f0 d7 fe ff    	lea    -0x12810(%ebx),%eaxf01026d33904,180312
f01026d9:	50                   	push   %eaxf01026d93905,180371
f01026da:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01026da3906,180415
f01026e0:	50                   	push   %eaxf01026e03907,180474
f01026e1:	68 1a 03 00 00       	push   $0x31af01026e13908,180518
f01026e6:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01026e63909,180564
f01026ec:	50                   	push   %eaxf01026ec3910,180623
f01026ed:	e8 a7 d9 ff ff       	call   f0100099 <_panic>f01026ed3911,180667
f01026f2:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01026f23913,180777
f01026f5:	8d 83 9c d8 fe ff    	lea    -0x12764(%ebx),%eaxf01026f53914,180833
f01026fb:	50                   	push   %eaxf01026fb3915,180892
f01026fc:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01026fc3916,180936
f0102702:	50                   	push   %eaxf01027023917,180995
f0102703:	68 1d 03 00 00       	push   $0x31df01027033918,181039
f0102708:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01027083919,181085
f010270e:	50                   	push   %eaxf010270e3920,181144
f010270f:	e8 85 d9 ff ff       	call   f0100099 <_panic>f010270f3921,181188
f0102714:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01027143923,181303
f0102717:	8d 83 c8 d8 fe ff    	lea    -0x12738(%ebx),%eaxf01027173924,181359
f010271d:	50                   	push   %eaxf010271d3925,181418
f010271e:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf010271e3926,181462
f0102724:	50                   	push   %eaxf01027243927,181521
f0102725:	68 1e 03 00 00       	push   $0x31ef01027253928,181565
f010272a:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010272a3929,181611
f0102730:	50                   	push   %eaxf01027303930,181670
f0102731:	e8 63 d9 ff ff       	call   f0100099 <_panic>f01027313931,181714
f0102736:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01027363933,181798
f0102739:	8d 83 6f dd fe ff    	lea    -0x12291(%ebx),%eaxf01027393934,181854
f010273f:	50                   	push   %eaxf010273f3935,181913
f0102740:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01027403936,181957
f0102746:	50                   	push   %eaxf01027463937,182016
f0102747:	68 20 03 00 00       	push   $0x320f01027473938,182060
f010274c:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010274c3939,182106
f0102752:	50                   	push   %eaxf01027523940,182165
f0102753:	e8 41 d9 ff ff       	call   f0100099 <_panic>f01027533941,182209
f0102758:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01027583943,182293
f010275b:	8d 83 80 dd fe ff    	lea    -0x12280(%ebx),%eaxf010275b3944,182349
f0102761:	50                   	push   %eaxf01027613945,182408
f0102762:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01027623946,182452
f0102768:	50                   	push   %eaxf01027683947,182511
f0102769:	68 21 03 00 00       	push   $0x321f01027693948,182555
f010276e:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010276e3949,182601
f0102774:	50                   	push   %eaxf01027743950,182660
f0102775:	e8 1f d9 ff ff       	call   f0100099 <_panic>f01027753951,182704
f010277a:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010277a3953,182805
f010277d:	8d 83 f8 d8 fe ff    	lea    -0x12708(%ebx),%eaxf010277d3954,182861
f0102783:	50                   	push   %eaxf01027833955,182920
f0102784:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01027843956,182964
f010278a:	50                   	push   %eaxf010278a3957,183023
f010278b:	68 24 03 00 00       	push   $0x324f010278b3958,183067
f0102790:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01027903959,183113
f0102796:	50                   	push   %eaxf01027963960,183172
f0102797:	e8 fd d8 ff ff       	call   f0100099 <_panic>f01027973961,183216
f010279c:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010279c3963,183318
f010279f:	8d 83 1c d9 fe ff    	lea    -0x126e4(%ebx),%eaxf010279f3964,183374
f01027a5:	50                   	push   %eaxf01027a53965,183433
f01027a6:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01027a63966,183477
f01027ac:	50                   	push   %eaxf01027ac3967,183536
f01027ad:	68 28 03 00 00       	push   $0x328f01027ad3968,183580
f01027b2:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01027b23969,183626
f01027b8:	50                   	push   %eaxf01027b83970,183685
f01027b9:	e8 db d8 ff ff       	call   f0100099 <_panic>f01027b93971,183729
f01027be:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01027be3973,183844
f01027c1:	8d 83 c8 d8 fe ff    	lea    -0x12738(%ebx),%eaxf01027c13974,183900
f01027c7:	50                   	push   %eaxf01027c73975,183959
f01027c8:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01027c83976,184003
f01027ce:	50                   	push   %eaxf01027ce3977,184062
f01027cf:	68 29 03 00 00       	push   $0x329f01027cf3978,184106
f01027d4:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01027d43979,184152
f01027da:	50                   	push   %eaxf01027da3980,184211
f01027db:	e8 b9 d8 ff ff       	call   f0100099 <_panic>f01027db3981,184255
f01027e0:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01027e03983,184339
f01027e3:	8d 83 26 dd fe ff    	lea    -0x122da(%ebx),%eaxf01027e33984,184395
f01027e9:	50                   	push   %eaxf01027e93985,184454
f01027ea:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01027ea3986,184498
f01027f0:	50                   	push   %eaxf01027f03987,184557
f01027f1:	68 2a 03 00 00       	push   $0x32af01027f13988,184601
f01027f6:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01027f63989,184647
f01027fc:	50                   	push   %eaxf01027fc3990,184706
f01027fd:	e8 97 d8 ff ff       	call   f0100099 <_panic>f01027fd3991,184750
f0102802:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01028023993,184834
f0102805:	8d 83 80 dd fe ff    	lea    -0x12280(%ebx),%eaxf01028053994,184890
f010280b:	50                   	push   %eaxf010280b3995,184949
f010280c:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf010280c3996,184993
f0102812:	50                   	push   %eaxf01028123997,185052
f0102813:	68 2b 03 00 00       	push   $0x32bf01028133998,185096
f0102818:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01028183999,185142
f010281e:	50                   	push   %eaxf010281e4000,185201
f010281f:	e8 75 d8 ff ff       	call   f0100099 <_panic>f010281f4001,185245
f0102824:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01028244003,185365
f0102827:	8d 83 40 d9 fe ff    	lea    -0x126c0(%ebx),%eaxf01028274004,185421
f010282d:	50                   	push   %eaxf010282d4005,185480
f010282e:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf010282e4006,185524
f0102834:	50                   	push   %eaxf01028344007,185583
f0102835:	68 2e 03 00 00       	push   $0x32ef01028354008,185627
f010283a:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010283a4009,185673
f0102840:	50                   	push   %eaxf01028404010,185732
f0102841:	e8 53 d8 ff ff       	call   f0100099 <_panic>f01028414011,185776
f0102846:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01028464013,185855
f0102849:	8d 83 91 dd fe ff    	lea    -0x1226f(%ebx),%eaxf01028494014,185911
f010284f:	50                   	push   %eaxf010284f4015,185970
f0102850:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01028504016,186014
f0102856:	50                   	push   %eaxf01028564017,186073
f0102857:	68 2f 03 00 00       	push   $0x32ff01028574018,186117
f010285c:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010285c4019,186163
f0102862:	50                   	push   %eaxf01028624020,186222
f0102863:	e8 31 d8 ff ff       	call   f0100099 <_panic>f01028634021,186266
f0102868:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01028684023,186354
f010286b:	8d 83 9d dd fe ff    	lea    -0x12263(%ebx),%eaxf010286b4024,186410
f0102871:	50                   	push   %eaxf01028714025,186469
f0102872:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01028724026,186513
f0102878:	50                   	push   %eaxf01028784027,186572
f0102879:	68 30 03 00 00       	push   $0x330f01028794028,186616
f010287e:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010287e4029,186662
f0102884:	50                   	push   %eaxf01028844030,186721
f0102885:	e8 0f d8 ff ff       	call   f0100099 <_panic>f01028854031,186765
f010288a:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010288a4033,186867
f010288d:	8d 83 1c d9 fe ff    	lea    -0x126e4(%ebx),%eaxf010288d4034,186923
f0102893:	50                   	push   %eaxf01028934035,186982
f0102894:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01028944036,187026
f010289a:	50                   	push   %eaxf010289a4037,187085
f010289b:	68 34 03 00 00       	push   $0x334f010289b4038,187129
f01028a0:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01028a04039,187175
f01028a6:	50                   	push   %eaxf01028a64040,187234
f01028a7:	e8 ed d7 ff ff       	call   f0100099 <_panic>f01028a74041,187278
f01028ac:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01028ac4043,187383
f01028af:	8d 83 78 d9 fe ff    	lea    -0x12688(%ebx),%eaxf01028af4044,187439
f01028b5:	50                   	push   %eaxf01028b54045,187498
f01028b6:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01028b64046,187542
f01028bc:	50                   	push   %eaxf01028bc4047,187601
f01028bd:	68 35 03 00 00       	push   $0x335f01028bd4048,187645
f01028c2:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01028c24049,187691
f01028c8:	50                   	push   %eaxf01028c84050,187750
f01028c9:	e8 cb d7 ff ff       	call   f0100099 <_panic>f01028c94051,187794
f01028ce:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01028ce4053,187878
f01028d1:	8d 83 b2 dd fe ff    	lea    -0x1224e(%ebx),%eaxf01028d14054,187934
f01028d7:	50                   	push   %eaxf01028d74055,187993
f01028d8:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01028d84056,188037
f01028de:	50                   	push   %eaxf01028de4057,188096
f01028df:	68 36 03 00 00       	push   $0x336f01028df4058,188140
f01028e4:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01028e44059,188186
f01028ea:	50                   	push   %eaxf01028ea4060,188245
f01028eb:	e8 a9 d7 ff ff       	call   f0100099 <_panic>f01028eb4061,188289
f01028f0:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01028f04063,188373
f01028f3:	8d 83 80 dd fe ff    	lea    -0x12280(%ebx),%eaxf01028f34064,188429
f01028f9:	50                   	push   %eaxf01028f94065,188488
f01028fa:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01028fa4066,188532
f0102900:	50                   	push   %eaxf01029004067,188591
f0102901:	68 37 03 00 00       	push   $0x337f01029014068,188635
f0102906:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01029064069,188681
f010290c:	50                   	push   %eaxf010290c4070,188740
f010290d:	e8 87 d7 ff ff       	call   f0100099 <_panic>f010290d4071,188784
f0102912:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01029124073,188885
f0102915:	8d 83 a0 d9 fe ff    	lea    -0x12660(%ebx),%eaxf01029154074,188941
f010291b:	50                   	push   %eaxf010291b4075,189000
f010291c:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf010291c4076,189044
f0102922:	50                   	push   %eaxf01029224077,189103
f0102923:	68 3a 03 00 00       	push   $0x33af01029234078,189147
f0102928:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01029284079,189193
f010292e:	50                   	push   %eaxf010292e4080,189252
f010292f:	e8 65 d7 ff ff       	call   f0100099 <_panic>f010292f4081,189296
f0102934:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01029344083,189378
f0102937:	8d 83 d4 dc fe ff    	lea    -0x1232c(%ebx),%eaxf01029374084,189434
f010293d:	50                   	push   %eaxf010293d4085,189493
f010293e:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf010293e4086,189537
f0102944:	50                   	push   %eaxf01029444087,189596
f0102945:	68 3d 03 00 00       	push   $0x33df01029454088,189640
f010294a:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010294a4089,189686
f0102950:	50                   	push   %eaxf01029504090,189745
f0102951:	e8 43 d7 ff ff       	call   f0100099 <_panic>f01029514091,189789
f0102956:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01029564093,189896
f0102959:	8d 83 44 d6 fe ff    	lea    -0x129bc(%ebx),%eaxf01029594094,189952
f010295f:	50                   	push   %eaxf010295f4095,190011
f0102960:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01029604096,190055
f0102966:	50                   	push   %eaxf01029664097,190114
f0102967:	68 40 03 00 00       	push   $0x340f01029674098,190158
f010296c:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010296c4099,190204
f0102972:	50                   	push   %eaxf01029724100,190263
f0102973:	e8 21 d7 ff ff       	call   f0100099 <_panic>f01029734101,190307
f0102978:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01029784103,190391
f010297b:	8d 83 37 dd fe ff    	lea    -0x122c9(%ebx),%eaxf010297b4104,190447
f0102981:	50                   	push   %eaxf01029814105,190506
f0102982:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01029824106,190550
f0102988:	50                   	push   %eaxf01029884107,190609
f0102989:	68 42 03 00 00       	push   $0x342f01029894108,190653
f010298e:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010298e4109,190699
f0102994:	50                   	push   %eaxf01029944110,190758
f0102995:	e8 ff d6 ff ff       	call   f0100099 <_panic>f01029954111,190802
f010299a:	52                   	push   %edxf010299a4112,190859
f010299b:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010299b4113,190903
f010299e:	8d 83 54 d3 fe ff    	lea    -0x12cac(%ebx),%eaxf010299e4114,190959
f01029a4:	50                   	push   %eaxf01029a44115,191018
f01029a5:	68 49 03 00 00       	push   $0x349f01029a54116,191062
f01029aa:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01029aa4117,191108
f01029b0:	50                   	push   %eaxf01029b04118,191167
f01029b1:	e8 e3 d6 ff ff       	call   f0100099 <_panic>f01029b14119,191211
f01029b6:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01029b64121,191302
f01029b9:	8d 83 c3 dd fe ff    	lea    -0x1223d(%ebx),%eaxf01029b94122,191358
f01029bf:	50                   	push   %eaxf01029bf4123,191417
f01029c0:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01029c04124,191461
f01029c6:	50                   	push   %eaxf01029c64125,191520
f01029c7:	68 4a 03 00 00       	push   $0x34af01029c74126,191564
f01029cc:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01029cc4127,191610
f01029d2:	50                   	push   %eaxf01029d24128,191669
f01029d3:	e8 c1 d6 ff ff       	call   f0100099 <_panic>f01029d34129,191713
f01029d8:	50                   	push   %eaxf01029d84130,191770
f01029d9:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01029d94131,191814
f01029dc:	8d 83 54 d3 fe ff    	lea    -0x12cac(%ebx),%eaxf01029dc4132,191870
f01029e2:	50                   	push   %eaxf01029e24133,191929
f01029e3:	6a 52                	push   $0x52f01029e34134,191973
f01029e5:	8d 83 64 db fe ff    	lea    -0x1249c(%ebx),%eaxf01029e54135,192018
f01029eb:	50                   	push   %eaxf01029eb4136,192077
f01029ec:	e8 a8 d6 ff ff       	call   f0100099 <_panic>f01029ec4137,192121
f01029f1:	52                   	push   %edxf01029f14138,192178
f01029f2:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01029f24139,192222
f01029f5:	8d 83 54 d3 fe ff    	lea    -0x12cac(%ebx),%eaxf01029f54140,192278
f01029fb:	50                   	push   %eaxf01029fb4141,192337
f01029fc:	6a 52                	push   $0x52f01029fc4142,192381
f01029fe:	8d 83 64 db fe ff    	lea    -0x1249c(%ebx),%eaxf01029fe4143,192426
f0102a04:	50                   	push   %eaxf0102a044144,192485
f0102a05:	e8 8f d6 ff ff       	call   f0100099 <_panic>f0102a054145,192529
f0102a0a:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102a0a4147,192620
f0102a0d:	8d 83 db dd fe ff    	lea    -0x12225(%ebx),%eaxf0102a0d4148,192676
f0102a13:	50                   	push   %eaxf0102a134149,192735
f0102a14:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0102a144150,192779
f0102a1a:	50                   	push   %eaxf0102a1a4151,192838
f0102a1b:	68 54 03 00 00       	push   $0x354f0102a1b4152,192882
f0102a20:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102a204153,192928
f0102a26:	50                   	push   %eaxf0102a264154,192987
f0102a27:	e8 6d d6 ff ff       	call   f0100099 <_panic>f0102a274155,193031
f0102a2c:	50                   	push   %eaxf0102a2c4157,193154
f0102a2d:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102a2d4158,193198
f0102a30:	8d 83 48 d5 fe ff    	lea    -0x12ab8(%ebx),%eaxf0102a304159,193254
f0102a36:	50                   	push   %eaxf0102a364160,193313
f0102a37:	68 b3 00 00 00       	push   $0xb3f0102a374161,193357
f0102a3c:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102a3c4162,193402
f0102a42:	50                   	push   %eaxf0102a424163,193461
f0102a43:	e8 51 d6 ff ff       	call   f0100099 <_panic>f0102a434164,193505
f0102a48:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102a484165,193562
f0102a4b:	ff b3 fc ff ff ff    	pushl  -0x4(%ebx)f0102a4b4166,193618
f0102a51:	8d 83 48 d5 fe ff    	lea    -0x12ab8(%ebx),%eaxf0102a514167,193668
f0102a57:	50                   	push   %eaxf0102a574168,193727
f0102a58:	68 c0 00 00 00       	push   $0xc0f0102a584169,193771
f0102a5d:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102a5d4170,193816
f0102a63:	50                   	push   %eaxf0102a634171,193875
f0102a64:	e8 30 d6 ff ff       	call   f0100099 <_panic>f0102a644172,193919
f0102a69:	ff 75 c0             	pushl  -0x40(%ebp)f0102a694173,193976
f0102a6c:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102a6c4174,194027
f0102a6f:	8d 83 48 d5 fe ff    	lea    -0x12ab8(%ebx),%eaxf0102a6f4175,194083
f0102a75:	50                   	push   %eaxf0102a754176,194142
f0102a76:	68 97 02 00 00       	push   $0x297f0102a764177,194186
f0102a7b:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102a7b4178,194232
f0102a81:	50                   	push   %eaxf0102a814179,194291
f0102a82:	e8 12 d6 ff ff       	call   f0100099 <_panic>f0102a824180,194335
f0102a87:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102a874182,194454
f0102a8a:	8d 83 c4 d9 fe ff    	lea    -0x1263c(%ebx),%eaxf0102a8a4183,194510
f0102a90:	50                   	push   %eaxf0102a904184,194569
f0102a91:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0102a914185,194613
f0102a97:	50                   	push   %eaxf0102a974186,194672
f0102a98:	68 97 02 00 00       	push   $0x297f0102a984187,194716
f0102a9d:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102a9d4188,194762
f0102aa3:	50                   	push   %eaxf0102aa34189,194821
f0102aa4:	e8 f0 d5 ff ff       	call   f0100099 <_panic>f0102aa44190,194865
f0102aa9:	8b 7d c4             	mov    -0x3c(%ebp),%edif0102aa94192,194969
f0102aac:	c1 e7 0c             	shl    $0xc,%edif0102aac4193,195025
f0102aaf:	bb 00 00 00 00       	mov    $0x0,%ebxf0102aaf4194,195074
f0102ab4:	39 fb                	cmp    %edi,%ebxf0102ab44195,195123
f0102ab6:	73 3b                	jae    f0102af3 <mem_init+0x1721>f0102ab64196,195172
f0102ab8:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edxf0102ab84198,195287
f0102abe:	89 f0                	mov    %esi,%eaxf0102abe4199,195349
f0102ac0:	e8 81 e0 ff ff       	call   f0100b46 <check_va2pa>f0102ac04200,195398
f0102ac5:	39 c3                	cmp    %eax,%ebxf0102ac54201,195460
f0102ac7:	75 08                	jne    f0102ad1 <mem_init+0x16ff>f0102ac74202,195509
f0102ac9:	81 c3 00 10 00 00    	add    $0x1000,%ebxf0102ac94204,195622
f0102acf:	eb e3                	jmp    f0102ab4 <mem_init+0x16e2>f0102acf4205,195674
f0102ad1:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102ad14207,195789
f0102ad4:	8d 83 f8 d9 fe ff    	lea    -0x12608(%ebx),%eaxf0102ad44208,195845
f0102ada:	50                   	push   %eaxf0102ada4209,195904
f0102adb:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0102adb4210,195948
f0102ae1:	50                   	push   %eaxf0102ae14211,196007
f0102ae2:	68 9c 02 00 00       	push   $0x29cf0102ae24212,196051
f0102ae7:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102ae74213,196097
f0102aed:	50                   	push   %eaxf0102aed4214,196156
f0102aee:	e8 a6 d5 ff ff       	call   f0100099 <_panic>f0102aee4215,196200
f0102af3:	bb 00 80 ff ef       	mov    $0xefff8000,%ebxf0102af34217,196304
f0102af8:	8b 7d c8             	mov    -0x38(%ebp),%edif0102af84219,196440
f0102afb:	81 c7 00 80 00 20    	add    $0x20008000,%edif0102afb4220,196496
f0102b01:	89 da                	mov    %ebx,%edxf0102b014221,196552
f0102b03:	89 f0                	mov    %esi,%eaxf0102b034222,196601
f0102b05:	e8 3c e0 ff ff       	call   f0100b46 <check_va2pa>f0102b054223,196650
f0102b0a:	8d 14 1f             	lea    (%edi,%ebx,1),%edxf0102b0a4224,196712
f0102b0d:	39 c2                	cmp    %eax,%edxf0102b0d4225,196770
f0102b0f:	75 26                	jne    f0102b37 <mem_init+0x1765>f0102b0f4226,196819
f0102b11:	81 c3 00 10 00 00    	add    $0x1000,%ebxf0102b114227,196885
f0102b17:	81 fb 00 00 00 f0    	cmp    $0xf0000000,%ebxf0102b174229,196977
f0102b1d:	75 e2                	jne    f0102b01 <mem_init+0x172f>f0102b1d4230,197033
f0102b1f:	ba 00 00 c0 ef       	mov    $0xefc00000,%edxf0102b1f4232,197154
f0102b24:	89 f0                	mov    %esi,%eaxf0102b244233,197210
f0102b26:	e8 1b e0 ff ff       	call   f0100b46 <check_va2pa>f0102b264234,197259
f0102b2b:	83 f8 ff             	cmp    $0xffffffff,%eaxf0102b2b4235,197321
f0102b2e:	75 29                	jne    f0102b59 <mem_init+0x1787>f0102b2e4236,197377
f0102b30:	b8 00 00 00 00       	mov    $0x0,%eaxf0102b304238,197479
f0102b35:	eb 6d                	jmp    f0102ba4 <mem_init+0x17d2>f0102b354239,197528
f0102b37:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102b374241,197674
f0102b3a:	8d 83 20 da fe ff    	lea    -0x125e0(%ebx),%eaxf0102b3a4242,197730
f0102b40:	50                   	push   %eaxf0102b404243,197789
f0102b41:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0102b414244,197833
f0102b47:	50                   	push   %eaxf0102b474245,197892
f0102b48:	68 a0 02 00 00       	push   $0x2a0f0102b484246,197936
f0102b4d:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102b4d4247,197982
f0102b53:	50                   	push   %eaxf0102b534248,198041
f0102b54:	e8 40 d5 ff ff       	call   f0100099 <_panic>f0102b544249,198085
f0102b59:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102b594251,198197
f0102b5c:	8d 83 68 da fe ff    	lea    -0x12598(%ebx),%eaxf0102b5c4252,198253
f0102b62:	50                   	push   %eaxf0102b624253,198312
f0102b63:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0102b634254,198356
f0102b69:	50                   	push   %eaxf0102b694255,198415
f0102b6a:	68 a1 02 00 00       	push   $0x2a1f0102b6a4256,198459
f0102b6f:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102b6f4257,198505
f0102b75:	50                   	push   %eaxf0102b754258,198564
f0102b76:	e8 1e d5 ff ff       	call   f0100099 <_panic>f0102b764259,198608
f0102b7b:	f6 04 86 01          	testb  $0x1,(%esi,%eax,4)f0102b7b4261,198694
f0102b7f:	74 52                	je     f0102bd3 <mem_init+0x1801>f0102b7f4262,198752
f0102b81:	83 c0 01             	add    $0x1,%eaxf0102b814264,198854
f0102b84:	3d ff 03 00 00       	cmp    $0x3ff,%eaxf0102b844265,198903
f0102b89:	0f 87 bb 00 00 00    	ja     f0102c4a <mem_init+0x1878>f0102b894266,198954
f0102b8f:	3d bc 03 00 00       	cmp    $0x3bc,%eaxf0102b8f4268,199035
f0102b94:	72 0e                	jb     f0102ba4 <mem_init+0x17d2>f0102b944269,199086
f0102b96:	3d bd 03 00 00       	cmp    $0x3bd,%eaxf0102b964270,199152
f0102b9b:	76 de                	jbe    f0102b7b <mem_init+0x17a9>f0102b9b4271,199203
f0102b9d:	3d bf 03 00 00       	cmp    $0x3bf,%eaxf0102b9d4272,199269
f0102ba2:	74 d7                	je     f0102b7b <mem_init+0x17a9>f0102ba24273,199320
f0102ba4:	3d bf 03 00 00       	cmp    $0x3bf,%eaxf0102ba44275,199415
f0102ba9:	77 4a                	ja     f0102bf5 <mem_init+0x1823>f0102ba94276,199466
f0102bab:	83 3c 86 00          	cmpl   $0x0,(%esi,%eax,4)f0102bab4278,199559
f0102baf:	74 d0                	je     f0102b81 <mem_init+0x17af>f0102baf4279,199617
f0102bb1:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102bb14280,199683
f0102bb4:	8d 83 2d de fe ff    	lea    -0x121d3(%ebx),%eaxf0102bb44281,199739
f0102bba:	50                   	push   %eaxf0102bba4282,199798
f0102bbb:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0102bbb4283,199842
f0102bc1:	50                   	push   %eaxf0102bc14284,199901
f0102bc2:	68 b0 02 00 00       	push   $0x2b0f0102bc24285,199945
f0102bc7:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102bc74286,199991
f0102bcd:	50                   	push   %eaxf0102bcd4287,200050
f0102bce:	e8 c6 d4 ff ff       	call   f0100099 <_panic>f0102bce4288,200094
f0102bd3:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102bd34290,200180
f0102bd6:	8d 83 0b de fe ff    	lea    -0x121f5(%ebx),%eaxf0102bd64291,200236
f0102bdc:	50                   	push   %eaxf0102bdc4292,200295
f0102bdd:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0102bdd4293,200339
f0102be3:	50                   	push   %eaxf0102be34294,200398
f0102be4:	68 a9 02 00 00       	push   $0x2a9f0102be44295,200442
f0102be9:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102be94296,200488
f0102bef:	50                   	push   %eaxf0102bef4297,200547
f0102bf0:	e8 a4 d4 ff ff       	call   f0100099 <_panic>f0102bf04298,200591
f0102bf5:	8b 14 86             	mov    (%esi,%eax,4),%edxf0102bf54300,200678
f0102bf8:	f6 c2 01             	test   $0x1,%dlf0102bf84301,200736
f0102bfb:	74 2b                	je     f0102c28 <mem_init+0x1856>f0102bfb4302,200784
f0102bfd:	f6 c2 02             	test   $0x2,%dlf0102bfd4304,200880
f0102c00:	0f 85 7b ff ff ff    	jne    f0102b81 <mem_init+0x17af>f0102c004305,200928
f0102c06:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102c064306,200994
f0102c09:	8d 83 1c de fe ff    	lea    -0x121e4(%ebx),%eaxf0102c094307,201050
f0102c0f:	50                   	push   %eaxf0102c0f4308,201109
f0102c10:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0102c104309,201153
f0102c16:	50                   	push   %eaxf0102c164310,201212
f0102c17:	68 ae 02 00 00       	push   $0x2aef0102c174311,201256
f0102c1c:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102c1c4312,201302
f0102c22:	50                   	push   %eaxf0102c224313,201361
f0102c23:	e8 71 d4 ff ff       	call   f0100099 <_panic>f0102c234314,201405
f0102c28:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102c284316,201492
f0102c2b:	8d 83 0b de fe ff    	lea    -0x121f5(%ebx),%eaxf0102c2b4317,201548
f0102c31:	50                   	push   %eaxf0102c314318,201607
f0102c32:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0102c324319,201651
f0102c38:	50                   	push   %eaxf0102c384320,201710
f0102c39:	68 ad 02 00 00       	push   $0x2adf0102c394321,201754
f0102c3e:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102c3e4322,201800
f0102c44:	50                   	push   %eaxf0102c444323,201859
f0102c45:	e8 4f d4 ff ff       	call   f0100099 <_panic>f0102c454324,201903
f0102c4a:	83 ec 0c             	sub    $0xc,%espf0102c4a4326,202005
f0102c4d:	8b 7d d4             	mov    -0x2c(%ebp),%edif0102c4d4327,202054
f0102c50:	8d 87 98 da fe ff    	lea    -0x12568(%edi),%eaxf0102c504328,202110
f0102c56:	50                   	push   %eaxf0102c564329,202169
f0102c57:	89 fb                	mov    %edi,%ebxf0102c574330,202213
f0102c59:	e8 ee 04 00 00       	call   f010314c <cprintf>f0102c594331,202262
f0102c5e:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0102c5e4333,202346
f0102c64:	8b 00                	mov    (%eax),%eaxf0102c644334,202402
f0102c66:	83 c4 10             	add    $0x10,%espf0102c664336,202484
f0102c69:	3d ff ff ff ef       	cmp    $0xefffffff,%eaxf0102c694337,202534
f0102c6e:	0f 86 44 02 00 00    	jbe    f0102eb8 <mem_init+0x1ae6>f0102c6e4338,202590
f0102c74:	05 00 00 00 10       	add    $0x10000000,%eaxf0102c744340,202692
static inline voidstatic4343,202751
f0102c79:	0f 22 d8             	mov    %eax,%cr3f0102c794347,202837
f0102c7c:	b8 00 00 00 00       	mov    $0x0,%eaxf0102c7c4349,202912
f0102c81:	e8 3d df ff ff       	call   f0100bc3 <check_page_free_list>f0102c814350,202961
f0102c86:	0f 20 c0             	mov    %cr0,%eaxf0102c864352,203077
f0102c89:	83 e0 f3             	and    $0xfffffff3,%eaxf0102c894354,203152
f0102c8c:	0d 23 00 05 80       	or     $0x80050023,%eaxf0102c8c4355,203208
f0102c91:	0f 22 c0             	mov    %eax,%cr0f0102c914357,203310
	pp1 = pp2 = 0;pp14362,203436
f0102c94:	83 ec 0c             	sub    $0xc,%espf0102c944364,203484
f0102c97:	6a 00                	push   $0x0f0102c974365,203533
f0102c99:	e8 9a e3 ff ff       	call   f0101038 <page_alloc>f0102c994366,203577
f0102c9e:	89 c6                	mov    %eax,%esif0102c9e4367,203638
f0102ca0:	83 c4 10             	add    $0x10,%espf0102ca04368,203687
f0102ca3:	85 c0                	test   %eax,%eaxf0102ca34369,203737
f0102ca5:	0f 84 29 02 00 00    	je     f0102ed4 <mem_init+0x1b02>f0102ca54370,203786
f0102cab:	83 ec 0c             	sub    $0xc,%espf0102cab4372,203884
f0102cae:	6a 00                	push   $0x0f0102cae4373,203933
f0102cb0:	e8 83 e3 ff ff       	call   f0101038 <page_alloc>f0102cb04374,203977
f0102cb5:	89 45 d0             	mov    %eax,-0x30(%ebp)f0102cb54375,204038
f0102cb8:	83 c4 10             	add    $0x10,%espf0102cb84376,204094
f0102cbb:	85 c0                	test   %eax,%eaxf0102cbb4377,204144
f0102cbd:	0f 84 33 02 00 00    	je     f0102ef6 <mem_init+0x1b24>f0102cbd4378,204193
f0102cc3:	83 ec 0c             	sub    $0xc,%espf0102cc34380,204291
f0102cc6:	6a 00                	push   $0x0f0102cc64381,204340
f0102cc8:	e8 6b e3 ff ff       	call   f0101038 <page_alloc>f0102cc84382,204384
f0102ccd:	89 c7                	mov    %eax,%edif0102ccd4383,204445
f0102ccf:	83 c4 10             	add    $0x10,%espf0102ccf4384,204494
f0102cd2:	85 c0                	test   %eax,%eaxf0102cd24385,204544
f0102cd4:	0f 84 3e 02 00 00    	je     f0102f18 <mem_init+0x1b46>f0102cd44386,204593
f0102cda:	83 ec 0c             	sub    $0xc,%espf0102cda4388,204676
f0102cdd:	56                   	push   %esif0102cdd4389,204725
f0102cde:	e8 e3 e3 ff ff       	call   f01010c6 <page_free>f0102cde4390,204769
f0102ce3:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102ce34392,204862
f0102ce6:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0102ce64393,204918
f0102cec:	8b 4d d0             	mov    -0x30(%ebp),%ecxf0102cec4394,204974
f0102cef:	2b 08                	sub    (%eax),%ecxf0102cef4395,205030
f0102cf1:	89 c8                	mov    %ecx,%eaxf0102cf14396,205081
f0102cf3:	c1 f8 03             	sar    $0x3,%eaxf0102cf34397,205130
f0102cf6:	c1 e0 0c             	shl    $0xc,%eaxf0102cf64398,205179
f0102cf9:	89 c1                	mov    %eax,%ecxf0102cf94400,205254
f0102cfb:	c1 e9 0c             	shr    $0xc,%ecxf0102cfb4401,205303
f0102cfe:	83 c4 10             	add    $0x10,%espf0102cfe4402,205352
f0102d01:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf0102d014403,205402
f0102d07:	3b 0a                	cmp    (%edx),%ecxf0102d074404,205458
f0102d09:	0f 83 2b 02 00 00    	jae    f0102f3a <mem_init+0x1b68>f0102d094405,205509
f0102d0f:	83 ec 04             	sub    $0x4,%espf0102d0f4407,205610
f0102d12:	68 00 10 00 00       	push   $0x1000f0102d124408,205659
f0102d17:	6a 01                	push   $0x1f0102d174409,205706
f0102d19:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0102d194411,205783
f0102d1e:	50                   	push   %eaxf0102d1e4412,205839
f0102d1f:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102d1f4413,205883
f0102d22:	e8 81 0f 00 00       	call   f0103ca8 <memset>f0102d224414,205939
f0102d27:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102d274416,206029
f0102d2a:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0102d2a4417,206085
f0102d30:	89 f9                	mov    %edi,%ecxf0102d304418,206141
f0102d32:	2b 08                	sub    (%eax),%ecxf0102d324419,206190
f0102d34:	89 c8                	mov    %ecx,%eaxf0102d344420,206241
f0102d36:	c1 f8 03             	sar    $0x3,%eaxf0102d364421,206290
f0102d39:	c1 e0 0c             	shl    $0xc,%eaxf0102d394422,206339
f0102d3c:	89 c1                	mov    %eax,%ecxf0102d3c4424,206414
f0102d3e:	c1 e9 0c             	shr    $0xc,%ecxf0102d3e4425,206463
f0102d41:	83 c4 10             	add    $0x10,%espf0102d414426,206512
f0102d44:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf0102d444427,206562
f0102d4a:	3b 0a                	cmp    (%edx),%ecxf0102d4a4428,206618
f0102d4c:	0f 83 fe 01 00 00    	jae    f0102f50 <mem_init+0x1b7e>f0102d4c4429,206669
f0102d52:	83 ec 04             	sub    $0x4,%espf0102d524431,206770
f0102d55:	68 00 10 00 00       	push   $0x1000f0102d554432,206819
f0102d5a:	6a 02                	push   $0x2f0102d5a4433,206866
f0102d5c:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0102d5c4435,206943
f0102d61:	50                   	push   %eaxf0102d614436,206999
f0102d62:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102d624437,207043
f0102d65:	e8 3e 0f 00 00       	call   f0103ca8 <memset>f0102d654438,207099
f0102d6a:	6a 02                	push   $0x2f0102d6a4440,207210
f0102d6c:	68 00 10 00 00       	push   $0x1000f0102d6c4441,207254
f0102d71:	8b 5d d0             	mov    -0x30(%ebp),%ebxf0102d714442,207301
f0102d74:	53                   	push   %ebxf0102d744443,207357
f0102d75:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0102d754444,207401
f0102d78:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0102d784445,207457
f0102d7e:	ff 30                	pushl  (%eax)f0102d7e4446,207513
f0102d80:	e8 dc e5 ff ff       	call   f0101361 <page_insert>f0102d804447,207559
f0102d85:	83 c4 20             	add    $0x20,%espf0102d854449,207648
f0102d88:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)f0102d884450,207698
f0102d8d:	0f 85 d3 01 00 00    	jne    f0102f66 <mem_init+0x1b94>f0102d8d4451,207752
f0102d93:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000f0102d934453,207863
f0102d9a:	01 01 01 f0102d9a4454,207920
f0102d9d:	0f 85 e5 01 00 00    	jne    f0102f88 <mem_init+0x1bb6>f0102d9d4455,207940
f0102da3:	6a 02                	push   $0x2f0102da34457,208060
f0102da5:	68 00 10 00 00       	push   $0x1000f0102da54458,208104
f0102daa:	57                   	push   %edif0102daa4459,208151
f0102dab:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0102dab4460,208195
f0102dae:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0102dae4461,208251
f0102db4:	ff 30                	pushl  (%eax)f0102db44462,208307
f0102db6:	e8 a6 e5 ff ff       	call   f0101361 <page_insert>f0102db64463,208353
f0102dbb:	83 c4 10             	add    $0x10,%espf0102dbb4465,208460
f0102dbe:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000f0102dbe4466,208510
f0102dc5:	02 02 02 f0102dc54467,208567
f0102dc8:	0f 85 dc 01 00 00    	jne    f0102faa <mem_init+0x1bd8>f0102dc84468,208587
f0102dce:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)f0102dce4470,208680
f0102dd3:	0f 85 f3 01 00 00    	jne    f0102fcc <mem_init+0x1bfa>f0102dd34471,208734
f0102dd9:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0102dd94473,208827
f0102ddc:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)f0102ddc4474,208883
f0102de1:	0f 85 07 02 00 00    	jne    f0102fee <mem_init+0x1c1c>f0102de14475,208937
f0102de7:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000f0102de74477,209039
f0102dee:	03 03 03 f0102dee4478,209096
f0102df1:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102df14480,209149
f0102df4:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0102df44481,209205
f0102dfa:	89 f9                	mov    %edi,%ecxf0102dfa4482,209261
f0102dfc:	2b 08                	sub    (%eax),%ecxf0102dfc4483,209310
f0102dfe:	89 c8                	mov    %ecx,%eaxf0102dfe4484,209361
f0102e00:	c1 f8 03             	sar    $0x3,%eaxf0102e004485,209410
f0102e03:	c1 e0 0c             	shl    $0xc,%eaxf0102e034486,209459
f0102e06:	89 c1                	mov    %eax,%ecxf0102e064488,209534
f0102e08:	c1 e9 0c             	shr    $0xc,%ecxf0102e084489,209583
f0102e0b:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf0102e0b4490,209632
f0102e11:	3b 0a                	cmp    (%edx),%ecxf0102e114491,209688
f0102e13:	0f 83 f7 01 00 00    	jae    f0103010 <mem_init+0x1c3e>f0102e134492,209739
f0102e19:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)f0102e194494,209857
f0102e20:	03 03 03 f0102e204495,209925
f0102e23:	0f 85 fd 01 00 00    	jne    f0103026 <mem_init+0x1c54>f0102e234496,209945
f0102e29:	83 ec 08             	sub    $0x8,%espf0102e294498,210053
f0102e2c:	68 00 10 00 00       	push   $0x1000f0102e2c4499,210102
f0102e31:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0102e314500,210149
f0102e34:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0102e344501,210205
f0102e3a:	ff 30                	pushl  (%eax)f0102e3a4502,210261
f0102e3c:	e8 cd e4 ff ff       	call   f010130e <page_remove>f0102e3c4503,210307
f0102e41:	83 c4 10             	add    $0x10,%espf0102e414505,210396
f0102e44:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)f0102e444506,210446
f0102e49:	0f 85 f9 01 00 00    	jne    f0103048 <mem_init+0x1c76>f0102e494507,210500
f0102e4f:	8b 7d d4             	mov    -0x2c(%ebp),%edif0102e4f4511,210644
f0102e52:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0102e524512,210700
f0102e58:	8b 08                	mov    (%eax),%ecxf0102e584513,210756
f0102e5a:	8b 11                	mov    (%ecx),%edxf0102e5a4514,210807
f0102e5c:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf0102e5c4515,210858
f0102e62:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0102e624517,210947
f0102e68:	89 f7                	mov    %esi,%edif0102e684518,211003
f0102e6a:	2b 38                	sub    (%eax),%edif0102e6a4519,211052
f0102e6c:	89 f8                	mov    %edi,%eaxf0102e6c4520,211103
f0102e6e:	c1 f8 03             	sar    $0x3,%eaxf0102e6e4521,211152
f0102e71:	c1 e0 0c             	shl    $0xc,%eaxf0102e714522,211201
f0102e74:	39 c2                	cmp    %eax,%edxf0102e744523,211250
f0102e76:	0f 85 ee 01 00 00    	jne    f010306a <mem_init+0x1c98>f0102e764524,211299
f0102e7c:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)f0102e7c4526,211385
f0102e82:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)f0102e824528,211463
f0102e87:	0f 85 ff 01 00 00    	jne    f010308c <mem_init+0x1cba>f0102e874529,211517
f0102e8d:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)f0102e8d4531,211601
f0102e93:	83 ec 0c             	sub    $0xc,%espf0102e934535,211700
f0102e96:	56                   	push   %esif0102e964536,211749
f0102e97:	e8 2a e2 ff ff       	call   f01010c6 <page_free>f0102e974537,211793
f0102e9c:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102e9c4540,211909
f0102e9f:	8d 83 2c db fe ff    	lea    -0x124d4(%ebx),%eaxf0102e9f4541,211965
f0102ea5:	89 04 24             	mov    %eax,(%esp)f0102ea54542,212024
f0102ea8:	e8 9f 02 00 00       	call   f010314c <cprintf>f0102ea84543,212075
f0102ead:	83 c4 10             	add    $0x10,%espf0102ead4545,212135
f0102eb0:	8d 65 f4             	lea    -0xc(%ebp),%espf0102eb04546,212185
f0102eb3:	5b                   	pop    %ebxf0102eb34547,212240
f0102eb4:	5e                   	pop    %esif0102eb44548,212284
f0102eb5:	5f                   	pop    %edif0102eb54549,212328
f0102eb6:	5d                   	pop    %ebpf0102eb64550,212372
f0102eb7:	c3                   	ret    f0102eb74551,212416
f0102eb8:	50                   	push   %eaxf0102eb84553,212522
f0102eb9:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102eb94554,212566
f0102ebc:	8d 83 48 d5 fe ff    	lea    -0x12ab8(%ebx),%eaxf0102ebc4555,212622
f0102ec2:	50                   	push   %eaxf0102ec24556,212681
f0102ec3:	68 d7 00 00 00       	push   $0xd7f0102ec34557,212725
f0102ec8:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102ec84558,212770
f0102ece:	50                   	push   %eaxf0102ece4559,212829
f0102ecf:	e8 c5 d1 ff ff       	call   f0100099 <_panic>f0102ecf4560,212873
f0102ed4:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102ed44562,212962
f0102ed7:	8d 83 29 dc fe ff    	lea    -0x123d7(%ebx),%eaxf0102ed74563,213018
f0102edd:	50                   	push   %eaxf0102edd4564,213077
f0102ede:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0102ede4565,213121
f0102ee4:	50                   	push   %eaxf0102ee44566,213180
f0102ee5:	68 6f 03 00 00       	push   $0x36ff0102ee54567,213224
f0102eea:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102eea4568,213270
f0102ef0:	50                   	push   %eaxf0102ef04569,213329
f0102ef1:	e8 a3 d1 ff ff       	call   f0100099 <_panic>f0102ef14570,213373
f0102ef6:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102ef64572,213462
f0102ef9:	8d 83 3f dc fe ff    	lea    -0x123c1(%ebx),%eaxf0102ef94573,213518
f0102eff:	50                   	push   %eaxf0102eff4574,213577
f0102f00:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0102f004575,213621
f0102f06:	50                   	push   %eaxf0102f064576,213680
f0102f07:	68 70 03 00 00       	push   $0x370f0102f074577,213724
f0102f0c:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102f0c4578,213770
f0102f12:	50                   	push   %eaxf0102f124579,213829
f0102f13:	e8 81 d1 ff ff       	call   f0100099 <_panic>f0102f134580,213873
f0102f18:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102f184582,213962
f0102f1b:	8d 83 55 dc fe ff    	lea    -0x123ab(%ebx),%eaxf0102f1b4583,214018
f0102f21:	50                   	push   %eaxf0102f214584,214077
f0102f22:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0102f224585,214121
f0102f28:	50                   	push   %eaxf0102f284586,214180
f0102f29:	68 71 03 00 00       	push   $0x371f0102f294587,214224
f0102f2e:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102f2e4588,214270
f0102f34:	50                   	push   %eaxf0102f344589,214329
f0102f35:	e8 5f d1 ff ff       	call   f0100099 <_panic>f0102f354590,214373
f0102f3a:	50                   	push   %eaxf0102f3a4592,214494
f0102f3b:	8d 83 54 d3 fe ff    	lea    -0x12cac(%ebx),%eaxf0102f3b4593,214538
f0102f41:	50                   	push   %eaxf0102f414594,214597
f0102f42:	6a 52                	push   $0x52f0102f424595,214641
f0102f44:	8d 83 64 db fe ff    	lea    -0x1249c(%ebx),%eaxf0102f444596,214686
f0102f4a:	50                   	push   %eaxf0102f4a4597,214745
f0102f4b:	e8 49 d1 ff ff       	call   f0100099 <_panic>f0102f4b4598,214789
f0102f50:	50                   	push   %eaxf0102f504599,214846
f0102f51:	8d 83 54 d3 fe ff    	lea    -0x12cac(%ebx),%eaxf0102f514600,214890
f0102f57:	50                   	push   %eaxf0102f574601,214949
f0102f58:	6a 52                	push   $0x52f0102f584602,214993
f0102f5a:	8d 83 64 db fe ff    	lea    -0x1249c(%ebx),%eaxf0102f5a4603,215038
f0102f60:	50                   	push   %eaxf0102f604604,215097
f0102f61:	e8 33 d1 ff ff       	call   f0100099 <_panic>f0102f614605,215141
f0102f66:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102f664607,215225
f0102f69:	8d 83 26 dd fe ff    	lea    -0x122da(%ebx),%eaxf0102f694608,215281
f0102f6f:	50                   	push   %eaxf0102f6f4609,215340
f0102f70:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0102f704610,215384
f0102f76:	50                   	push   %eaxf0102f764611,215443
f0102f77:	68 76 03 00 00       	push   $0x376f0102f774612,215487
f0102f7c:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102f7c4613,215533
f0102f82:	50                   	push   %eaxf0102f824614,215592
f0102f83:	e8 11 d1 ff ff       	call   f0100099 <_panic>f0102f834615,215636
f0102f88:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102f884617,215738
f0102f8b:	8d 83 b8 da fe ff    	lea    -0x12548(%ebx),%eaxf0102f8b4618,215794
f0102f91:	50                   	push   %eaxf0102f914619,215853
f0102f92:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0102f924620,215897
f0102f98:	50                   	push   %eaxf0102f984621,215956
f0102f99:	68 77 03 00 00       	push   $0x377f0102f994622,216000
f0102f9e:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102f9e4623,216046
f0102fa4:	50                   	push   %eaxf0102fa44624,216105
f0102fa5:	e8 ef d0 ff ff       	call   f0100099 <_panic>f0102fa54625,216149
f0102faa:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102faa4627,216251
f0102fad:	8d 83 dc da fe ff    	lea    -0x12524(%ebx),%eaxf0102fad4628,216307
f0102fb3:	50                   	push   %eaxf0102fb34629,216366
f0102fb4:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0102fb44630,216410
f0102fba:	50                   	push   %eaxf0102fba4631,216469
f0102fbb:	68 79 03 00 00       	push   $0x379f0102fbb4632,216513
f0102fc0:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102fc04633,216559
f0102fc6:	50                   	push   %eaxf0102fc64634,216618
f0102fc7:	e8 cd d0 ff ff       	call   f0100099 <_panic>f0102fc74635,216662
f0102fcc:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102fcc4637,216746
f0102fcf:	8d 83 48 dd fe ff    	lea    -0x122b8(%ebx),%eaxf0102fcf4638,216802
f0102fd5:	50                   	push   %eaxf0102fd54639,216861
f0102fd6:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0102fd64640,216905
f0102fdc:	50                   	push   %eaxf0102fdc4641,216964
f0102fdd:	68 7a 03 00 00       	push   $0x37af0102fdd4642,217008
f0102fe2:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf0102fe24643,217054
f0102fe8:	50                   	push   %eaxf0102fe84644,217113
f0102fe9:	e8 ab d0 ff ff       	call   f0100099 <_panic>f0102fe94645,217157
f0102fee:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102fee4647,217241
f0102ff1:	8d 83 b2 dd fe ff    	lea    -0x1224e(%ebx),%eaxf0102ff14648,217297
f0102ff7:	50                   	push   %eaxf0102ff74649,217356
f0102ff8:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf0102ff84650,217400
f0102ffe:	50                   	push   %eaxf0102ffe4651,217459
f0102fff:	68 7b 03 00 00       	push   $0x37bf0102fff4652,217503
f0103004:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01030044653,217549
f010300a:	50                   	push   %eaxf010300a4654,217608
f010300b:	e8 89 d0 ff ff       	call   f0100099 <_panic>f010300b4655,217652
f0103010:	50                   	push   %eaxf01030104656,217709
f0103011:	8d 83 54 d3 fe ff    	lea    -0x12cac(%ebx),%eaxf01030114657,217753
f0103017:	50                   	push   %eaxf01030174658,217812
f0103018:	6a 52                	push   $0x52f01030184659,217856
f010301a:	8d 83 64 db fe ff    	lea    -0x1249c(%ebx),%eaxf010301a4660,217901
f0103020:	50                   	push   %eaxf01030204661,217960
f0103021:	e8 73 d0 ff ff       	call   f0100099 <_panic>f01030214662,218004
f0103026:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01030264664,218113
f0103029:	8d 83 00 db fe ff    	lea    -0x12500(%ebx),%eaxf01030294665,218169
f010302f:	50                   	push   %eaxf010302f4666,218228
f0103030:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01030304667,218272
f0103036:	50                   	push   %eaxf01030364668,218331
f0103037:	68 7d 03 00 00       	push   $0x37df01030374669,218375
f010303c:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010303c4670,218421
f0103042:	50                   	push   %eaxf01030424671,218480
f0103043:	e8 51 d0 ff ff       	call   f0100099 <_panic>f01030434672,218524
f0103048:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01030484674,218608
f010304b:	8d 83 80 dd fe ff    	lea    -0x12280(%ebx),%eaxf010304b4675,218664
f0103051:	50                   	push   %eaxf01030514676,218723
f0103052:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01030524677,218767
f0103058:	50                   	push   %eaxf01030584678,218826
f0103059:	68 7f 03 00 00       	push   $0x37ff01030594679,218870
f010305e:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf010305e4680,218916
f0103064:	50                   	push   %eaxf01030644681,218975
f0103065:	e8 2f d0 ff ff       	call   f0100099 <_panic>f01030654682,219019
f010306a:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010306a4684,219126
f010306d:	8d 83 44 d6 fe ff    	lea    -0x129bc(%ebx),%eaxf010306d4685,219182
f0103073:	50                   	push   %eaxf01030734686,219241
f0103074:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01030744687,219285
f010307a:	50                   	push   %eaxf010307a4688,219344
f010307b:	68 82 03 00 00       	push   $0x382f010307b4689,219388
f0103080:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01030804690,219434
f0103086:	50                   	push   %eaxf01030864691,219493
f0103087:	e8 0d d0 ff ff       	call   f0100099 <_panic>f01030874692,219537
f010308c:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010308c4694,219621
f010308f:	8d 83 37 dd fe ff    	lea    -0x122c9(%ebx),%eaxf010308f4695,219677
f0103095:	50                   	push   %eaxf01030954696,219736
f0103096:	8d 83 7e db fe ff    	lea    -0x12482(%ebx),%eaxf01030964697,219780
f010309c:	50                   	push   %eaxf010309c4698,219839
f010309d:	68 84 03 00 00       	push   $0x384f010309d4699,219883
f01030a2:	8d 83 58 db fe ff    	lea    -0x124a8(%ebx),%eaxf01030a24700,219929
f01030a8:	50                   	push   %eaxf01030a84701,219988
f01030a9:	e8 eb cf ff ff       	call   f0100099 <_panic>f01030a94702,220032
f01030ae <tlb_invalidate>:f01030ae4704,220090
f01030ae:	55                   	push   %ebpf01030ae4706,220119
f01030af:	89 e5                	mov    %esp,%ebpf01030af4707,220163
f01030b1:	8b 45 0c             	mov    0xc(%ebp),%eaxf01030b14709,220268
f01030b4:	0f 01 38             	invlpg (%eax)f01030b44710,220322
f01030b7:	5d                   	pop    %ebpf01030b74712,220370
f01030b8:	c3                   	ret    f01030b84713,220414
f01030b9 <__x86.get_pc_thunk.cx>:f01030b94715,220455
f01030b9:	8b 0c 24             	mov    (%esp),%ecxf01030b94716,220489
f01030bc:	c3                   	ret    f01030bc4717,220540
f01030bd <__x86.get_pc_thunk.si>:f01030bd4719,220581
f01030bd:	8b 34 24             	mov    (%esp),%esif01030bd4720,220615
f01030c0:	c3                   	ret    f01030c04721,220666
f01030c1 <__x86.get_pc_thunk.di>:f01030c14723,220707
f01030c1:	8b 3c 24             	mov    (%esp),%edif01030c14724,220741
f01030c4:	c3                   	ret    f01030c44725,220792
f01030c5 <mc146818_read>:f01030c54727,220833
unsignedunsigned4731,220886
f01030c5:	55                   	push   %ebpf01030c54734,220925
f01030c6:	89 e5                	mov    %esp,%ebpf01030c64735,220969
f01030c8:	8b 45 08             	mov    0x8(%ebp),%eaxf01030c84737,221075
f01030cb:	ba 70 00 00 00       	mov    $0x70,%edxf01030cb4738,221129
f01030d0:	ee                   	out    %al,(%dx)f01030d04739,221179
f01030d1:	ba 71 00 00 00       	mov    $0x71,%edxf01030d14741,221284
f01030d6:	ec                   	in     (%dx),%alf01030d64742,221334
f01030d7:	0f b6 c0             	movzbl %al,%eaxf01030d74745,221426
f01030da:	5d                   	pop    %ebpf01030da4747,221476
f01030db:	c3                   	ret    f01030db4748,221520
f01030dc <mc146818_write>:f01030dc4750,221561
voidvoid4752,221589
f01030dc:	55                   	push   %ebpf01030dc4755,221641
f01030dd:	89 e5                	mov    %esp,%ebpf01030dd4756,221685
f01030df:	8b 45 08             	mov    0x8(%ebp),%eaxf01030df4758,221791
f01030e2:	ba 70 00 00 00       	mov    $0x70,%edxf01030e24759,221845
f01030e7:	ee                   	out    %al,(%dx)f01030e74760,221895
f01030e8:	8b 45 0c             	mov    0xc(%ebp),%eaxf01030e84761,221944
f01030eb:	ba 71 00 00 00       	mov    $0x71,%edxf01030eb4762,221998
f01030f0:	ee                   	out    %al,(%dx)f01030f04763,222048
f01030f1:	5d                   	pop    %ebpf01030f14767,222143
f01030f2:	c3                   	ret    f01030f24768,222187
f01030f3 <putch>:f01030f34770,222228
static voidstatic4774,222272
f01030f3:	55                   	push   %ebpf01030f34777,222310
f01030f4:	89 e5                	mov    %esp,%ebpf01030f44778,222354
f01030f6:	53                   	push   %ebxf01030f64779,222403
f01030f7:	83 ec 10             	sub    $0x10,%espf01030f74780,222447
f01030fa:	e8 50 d0 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01030fa4781,222497
f01030ff:	81 c3 0d 42 01 00    	add    $0x1420d,%ebxf01030ff4782,222569
f0103105:	ff 75 08             	pushl  0x8(%ebp)f01031054784,222637
f0103108:	e8 b9 d5 ff ff       	call   f01006c6 <cputchar>f01031084785,222686
f010310d:	83 c4 10             	add    $0x10,%espf010310d4788,222756
f0103110:	8b 5d fc             	mov    -0x4(%ebp),%ebxf01031104789,222806
f0103113:	c9                   	leave  f01031134790,222861
f0103114:	c3                   	ret    f01031144791,222901
f0103115 <vcprintf>:f01031154793,222942
intint4795,222964
f0103115:	55                   	push   %ebpf01031154798,223008
f0103116:	89 e5                	mov    %esp,%ebpf01031164799,223052
f0103118:	53                   	push   %ebxf01031184800,223101
f0103119:	83 ec 14             	sub    $0x14,%espf01031194801,223145
f010311c:	e8 2e d0 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f010311c4802,223195
f0103121:	81 c3 eb 41 01 00    	add    $0x141eb,%ebxf01031214803,223267
f0103127:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)f01031274805,223334
f010312e:	ff 75 0c             	pushl  0xc(%ebp)f010312e4808,223431
f0103131:	ff 75 08             	pushl  0x8(%ebp)f01031314809,223480
f0103134:	8d 45 f4             	lea    -0xc(%ebp),%eaxf01031344810,223529
f0103137:	50                   	push   %eaxf01031374811,223584
f0103138:	8d 83 e7 bd fe ff    	lea    -0x14219(%ebx),%eaxf01031384812,223628
f010313e:	50                   	push   %eaxf010313e4813,223687
f010313f:	e8 18 04 00 00       	call   f010355c <vprintfmt>f010313f4814,223731
f0103144:	8b 45 f4             	mov    -0xc(%ebp),%eaxf01031444817,223806
f0103147:	8b 5d fc             	mov    -0x4(%ebp),%ebxf01031474818,223861
f010314a:	c9                   	leave  f010314a4819,223916
f010314b:	c3                   	ret    f010314b4820,223956
f010314c <cprintf>:f010314c4822,223997
intint4824,224018
f010314c:	55                   	push   %ebpf010314c4827,224054
f010314d:	89 e5                	mov    %esp,%ebpf010314d4828,224098
f010314f:	83 ec 10             	sub    $0x10,%espf010314f4829,224147
f0103152:	8d 45 0c             	lea    0xc(%ebp),%eaxf01031524834,224241
	cnt = vcprintf(fmt, ap);cnt4835,224295
f0103155:	50                   	push   %eaxf01031554836,224321
f0103156:	ff 75 08             	pushl  0x8(%ebp)f01031564837,224365
f0103159:	e8 b7 ff ff ff       	call   f0103115 <vcprintf>f01031594838,224414
f010315e:	c9                   	leave  f010315e4843,224502
f010315f:	c3                   	ret    f010315f4844,224542
f0103160 <stab_binsearch>:f01031604846,224583
static voidstatic4849,224659
f0103160:	55                   	push   %ebpf01031604853,224785
f0103161:	89 e5                	mov    %esp,%ebpf01031614854,224829
f0103163:	57                   	push   %edif01031634855,224878
f0103164:	56                   	push   %esif01031644856,224922
f0103165:	53                   	push   %ebxf01031654857,224966
f0103166:	83 ec 14             	sub    $0x14,%espf01031664858,225010
f0103169:	89 45 ec             	mov    %eax,-0x14(%ebp)f01031694859,225060
f010316c:	89 55 e4             	mov    %edx,-0x1c(%ebp)f010316c4860,225116
f010316f:	89 4d e0             	mov    %ecx,-0x20(%ebp)f010316f4861,225172
f0103172:	8b 7d 08             	mov    0x8(%ebp),%edif01031724862,225228
f0103175:	8b 32                	mov    (%edx),%esif01031754864,225341
f0103177:	8b 01                	mov    (%ecx),%eaxf01031774865,225392
f0103179:	89 45 f0             	mov    %eax,-0x10(%ebp)f01031794866,225443
f010317c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)f010317c4867,225499
f0103183:	eb 2f                	jmp    f01031b4 <stab_binsearch+0x54>f01031834870,225574
f0103185:	83 e8 01             	sub    $0x1,%eaxf01031854876,225783
f0103188:	39 c6                	cmp    %eax,%esif01031884878,225876
f010318a:	7f 49                	jg     f01031d5 <stab_binsearch+0x75>f010318a4879,225925
f010318c:	0f b6 0a             	movzbl (%edx),%ecxf010318c4880,225995
f010318f:	83 ea 0c             	sub    $0xc,%edxf010318f4881,226046
f0103192:	39 f9                	cmp    %edi,%ecxf01031924882,226095
f0103194:	75 ef                	jne    f0103185 <stab_binsearch+0x25>f01031944883,226144
		any_matches = 1;any_matches4888,226258
f0103196:	8d 14 40             	lea    (%eax,%eax,2),%edxf01031964890,226310
f0103199:	8b 4d ec             	mov    -0x14(%ebp),%ecxf01031994891,226368
f010319c:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edxf010319c4892,226424
f01031a0:	3b 55 0c             	cmp    0xc(%ebp),%edxf01031a04893,226485
f01031a3:	73 35                	jae    f01031da <stab_binsearch+0x7a>f01031a34894,226539
f01031a5:	8b 75 e4             	mov    -0x1c(%ebp),%esif01031a54896,226630
f01031a8:	89 06                	mov    %eax,(%esi)f01031a84897,226686
			l = true_m + 1;l4898,226737
f01031aa:	8d 73 01             	lea    0x1(%ebx),%esif01031aa4899,226756
		any_matches = 1;any_matches4900,226810
f01031ad:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)f01031ad4901,226829
f01031b4:	3b 75 f0             	cmp    -0x10(%ebp),%esif01031b44903,226903
f01031b7:	7f 4e                	jg     f0103207 <stab_binsearch+0xa7>f01031b74904,226959
f01031b9:	8b 45 f0             	mov    -0x10(%ebp),%eaxf01031b94906,227069
f01031bc:	01 f0                	add    %esi,%eaxf01031bc4907,227125
f01031be:	89 c3                	mov    %eax,%ebxf01031be4908,227174
f01031c0:	c1 eb 1f             	shr    $0x1f,%ebxf01031c04909,227223
f01031c3:	01 c3                	add    %eax,%ebxf01031c34910,227273
f01031c5:	d1 fb                	sar    %ebxf01031c54911,227322
f01031c7:	8d 04 5b             	lea    (%ebx,%ebx,2),%eaxf01031c74912,227366
f01031ca:	8b 4d ec             	mov    -0x14(%ebp),%ecxf01031ca4913,227424
f01031cd:	8d 54 81 04          	lea    0x4(%ecx,%eax,4),%edxf01031cd4914,227480
f01031d1:	89 d8                	mov    %ebx,%eaxf01031d14915,227541
f01031d3:	eb b3                	jmp    f0103188 <stab_binsearch+0x28>f01031d34917,227634
			l = true_m + 1;l4918,227704
f01031d5:	8d 73 01             	lea    0x1(%ebx),%esif01031d54919,227723
f01031d8:	eb da                	jmp    f01031b4 <stab_binsearch+0x54>f01031d84921,227790
f01031da:	3b 55 0c             	cmp    0xc(%ebp),%edxf01031da4923,227900
f01031dd:	76 14                	jbe    f01031f3 <stab_binsearch+0x93>f01031dd4924,227954
f01031df:	83 e8 01             	sub    $0x1,%eaxf01031df4926,228050
f01031e2:	89 45 f0             	mov    %eax,-0x10(%ebp)f01031e24927,228099
f01031e5:	8b 5d e0             	mov    -0x20(%ebp),%ebxf01031e54928,228155
f01031e8:	89 03                	mov    %eax,(%ebx)f01031e84929,228211
		any_matches = 1;any_matches4930,228262
f01031ea:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)f01031ea4931,228281
f01031f1:	eb c1                	jmp    f01031b4 <stab_binsearch+0x54>f01031f14932,228337
			r = m - 1;r4933,228407
f01031f3:	8b 75 e4             	mov    -0x1c(%ebp),%esif01031f34938,228529
f01031f6:	89 06                	mov    %eax,(%esi)f01031f64939,228585
			l = m;l4940,228636
f01031f8:	83 45 0c 01          	addl   $0x1,0xc(%ebp)f01031f84942,228657
f01031fc:	89 c6                	mov    %eax,%esif01031fc4943,228711
		any_matches = 1;any_matches4944,228760
f01031fe:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)f01031fe4945,228779
f0103205:	eb ad                	jmp    f01031b4 <stab_binsearch+0x54>f01032054946,228835
f0103207:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)f01032074951,228932
f010320b:	74 16                	je     f0103223 <stab_binsearch+0xc3>f010320b4952,228988
f010320d:	8b 45 e0             	mov    -0x20(%ebp),%eaxf010320d4957,229173
f0103210:	8b 00                	mov    (%eax),%eaxf01032104958,229229
f0103212:	8b 75 e4             	mov    -0x1c(%ebp),%esif01032124960,229332
f0103215:	8b 0e                	mov    (%esi),%ecxf01032154961,229388
f0103217:	8d 14 40             	lea    (%eax,%eax,2),%edxf01032174962,229439
f010321a:	8b 75 ec             	mov    -0x14(%ebp),%esif010321a4963,229497
f010321d:	8d 54 96 04          	lea    0x4(%esi,%edx,4),%edxf010321d4964,229553
f0103221:	eb 12                	jmp    f0103235 <stab_binsearch+0xd5>f01032214966,229640
f0103223:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf01032234968,229746
f0103226:	8b 00                	mov    (%eax),%eaxf01032264969,229802
f0103228:	83 e8 01             	sub    $0x1,%eaxf01032284970,229853
f010322b:	8b 7d e0             	mov    -0x20(%ebp),%edif010322b4971,229902
f010322e:	89 07                	mov    %eax,(%edi)f010322e4972,229958
f0103230:	eb 16                	jmp    f0103248 <stab_binsearch+0xe8>f01032304973,230009
f0103232:	83 e8 01             	sub    $0x1,%eaxf01032324975,230091
f0103235:	39 c1                	cmp    %eax,%ecxf01032354977,230166
f0103237:	7d 0a                	jge    f0103243 <stab_binsearch+0xe3>f01032374978,230215
f0103239:	0f b6 1a             	movzbl (%edx),%ebxf01032394980,230337
f010323c:	83 ea 0c             	sub    $0xc,%edxf010323c4981,230388
f010323f:	39 fb                	cmp    %edi,%ebxf010323f4982,230437
f0103241:	75 ef                	jne    f0103232 <stab_binsearch+0xd2>f01032414983,230486
f0103243:	8b 7d e4             	mov    -0x1c(%ebp),%edif01032434986,230597
f0103246:	89 07                	mov    %eax,(%edi)f01032464987,230653
f0103248:	83 c4 14             	add    $0x14,%espf01032484990,230709
f010324b:	5b                   	pop    %ebxf010324b4991,230759
f010324c:	5e                   	pop    %esif010324c4992,230803
f010324d:	5f                   	pop    %edif010324d4993,230847
f010324e:	5d                   	pop    %ebpf010324e4994,230891
f010324f:	c3                   	ret    f010324f4995,230935
f0103250 <debuginfo_eip>:f01032504997,230976
intint5001,231106
f0103250:	55                   	push   %ebpf01032505004,231169
f0103251:	89 e5                	mov    %esp,%ebpf01032515005,231213
f0103253:	57                   	push   %edif01032535006,231262
f0103254:	56                   	push   %esif01032545007,231306
f0103255:	53                   	push   %ebxf01032555008,231350
f0103256:	83 ec 2c             	sub    $0x2c,%espf01032565009,231394
f0103259:	e8 5b fe ff ff       	call   f01030b9 <__x86.get_pc_thunk.cx>f01032595010,231444
f010325e:	81 c1 ae 40 01 00    	add    $0x140ae,%ecxf010325e5011,231516
f0103264:	89 4d d4             	mov    %ecx,-0x2c(%ebp)f01032645012,231569
f0103267:	8b 5d 08             	mov    0x8(%ebp),%ebxf01032675013,231625
f010326a:	8b 7d 0c             	mov    0xc(%ebp),%edif010326a5014,231679
	const struct Stab *stabs, *stab_end;const5015,231733
f010326d:	8d 81 3b de fe ff    	lea    -0x121c5(%ecx),%eaxf010326d5021,231905
f0103273:	89 07                	mov    %eax,(%edi)f01032735022,231964
f0103275:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)f01032755024,232036
f010327c:	89 47 08             	mov    %eax,0x8(%edi)f010327c5026,232124
f010327f:	c7 47 0c 09 00 00 00 	movl   $0x9,0xc(%edi)f010327f5028,232205
f0103286:	89 5f 10             	mov    %ebx,0x10(%edi)f01032865030,232286
f0103289:	c7 47 14 00 00 00 00 	movl   $0x0,0x14(%edi)f01032895032,232365
f0103290:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebxf01032905036,232477
f0103296:	0f 86 f4 00 00 00    	jbe    f0103390 <debuginfo_eip+0x140>f01032965037,232533
f010329c:	c7 c0 65 bb 10 f0    	mov    $0xf010bb65,%eaxf010329c5044,232775
f01032a2:	39 81 f8 ff ff ff    	cmp    %eax,-0x8(%ecx)f01032a25045,232831
f01032a8:	0f 86 88 01 00 00    	jbe    f0103436 <debuginfo_eip+0x1e6>f01032a85046,232886
f01032ae:	8b 75 d4             	mov    -0x2c(%ebp),%esif01032ae5047,232956
f01032b1:	c7 c0 95 d9 10 f0    	mov    $0xf010d995,%eaxf01032b15048,233012
f01032b7:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)f01032b75049,233068
f01032bb:	0f 85 7c 01 00 00    	jne    f010343d <debuginfo_eip+0x1ed>f01032bb5050,233123
	lfile = 0;lfile5056,233424
f01032c1:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)f01032c15057,233436
	rfile = (stab_end - stabs) - 1;rfile5058,233492
f01032c8:	c7 c0 60 53 10 f0    	mov    $0xf0105360,%eaxf01032c85059,233525
f01032ce:	c7 c2 64 bb 10 f0    	mov    $0xf010bb64,%edxf01032ce5060,233581
f01032d4:	29 c2                	sub    %eax,%edxf01032d45061,233637
f01032d6:	c1 fa 02             	sar    $0x2,%edxf01032d65062,233686
f01032d9:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edxf01032d95063,233735
f01032df:	83 ea 01             	sub    $0x1,%edxf01032df5064,233796
f01032e2:	89 55 e0             	mov    %edx,-0x20(%ebp)f01032e25065,233845
f01032e5:	8d 4d e0             	lea    -0x20(%ebp),%ecxf01032e55067,233953
f01032e8:	8d 55 e4             	lea    -0x1c(%ebp),%edxf01032e85068,234009
f01032eb:	83 ec 08             	sub    $0x8,%espf01032eb5069,234065
f01032ee:	53                   	push   %ebxf01032ee5070,234114
f01032ef:	6a 64                	push   $0x64f01032ef5071,234158
f01032f1:	e8 6a fe ff ff       	call   f0103160 <stab_binsearch>f01032f15072,234203
f01032f6:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf01032f65074,234285
f01032f9:	83 c4 10             	add    $0x10,%espf01032f95075,234341
f01032fc:	85 c0                	test   %eax,%eaxf01032fc5076,234391
f01032fe:	0f 84 40 01 00 00    	je     f0103444 <debuginfo_eip+0x1f4>f01032fe5077,234440
	lfun = lfile;lfun5082,234601
f0103304:	89 45 dc             	mov    %eax,-0x24(%ebp)f01033045083,234616
	rfun = rfile;rfun5084,234672
f0103307:	8b 45 e0             	mov    -0x20(%ebp),%eaxf01033075085,234687
f010330a:	89 45 d8             	mov    %eax,-0x28(%ebp)f010330a5086,234743
f010330d:	8d 4d d8             	lea    -0x28(%ebp),%ecxf010330d5088,234850
f0103310:	8d 55 dc             	lea    -0x24(%ebp),%edxf01033105089,234906
f0103313:	83 ec 08             	sub    $0x8,%espf01033135090,234962
f0103316:	53                   	push   %ebxf01033165091,235011
f0103317:	6a 24                	push   $0x24f01033175092,235055
f0103319:	89 75 d4             	mov    %esi,-0x2c(%ebp)f01033195093,235100
f010331c:	c7 c0 60 53 10 f0    	mov    $0xf0105360,%eaxf010331c5094,235156
f0103322:	e8 39 fe ff ff       	call   f0103160 <stab_binsearch>f01033225095,235212
f0103327:	8b 75 dc             	mov    -0x24(%ebp),%esif01033275098,235299
f010332a:	83 c4 10             	add    $0x10,%espf010332a5099,235355
f010332d:	3b 75 d8             	cmp    -0x28(%ebp),%esif010332d5100,235405
f0103330:	7f 79                	jg     f01033ab <debuginfo_eip+0x15b>f01033305101,235461
f0103332:	8d 04 76             	lea    (%esi,%esi,2),%eaxf01033325105,235683
f0103335:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01033355106,235741
f0103338:	c7 c2 60 53 10 f0    	mov    $0xf0105360,%edxf01033385107,235797
f010333e:	8d 0c 82             	lea    (%edx,%eax,4),%ecxf010333e5108,235853
f0103341:	8b 11                	mov    (%ecx),%edxf01033415109,235911
f0103343:	c7 c0 95 d9 10 f0    	mov    $0xf010d995,%eaxf01033435110,235962
f0103349:	81 e8 65 bb 10 f0    	sub    $0xf010bb65,%eaxf01033495111,236018
f010334f:	39 c2                	cmp    %eax,%edxf010334f5112,236074
f0103351:	73 09                	jae    f010335c <debuginfo_eip+0x10c>f01033515113,236123
f0103353:	81 c2 65 bb 10 f0    	add    $0xf010bb65,%edxf01033535115,236246
f0103359:	89 57 08             	mov    %edx,0x8(%edi)f01033595116,236302
f010335c:	8b 41 08             	mov    0x8(%ecx),%eaxf010335c5118,236399
f010335f:	89 47 10             	mov    %eax,0x10(%edi)f010335f5119,236453
		lline = lfile;lline5121,236536
		rline = rfile;rline5122,236553
f0103362:	83 ec 08             	sub    $0x8,%espf01033625126,236684
f0103365:	6a 3a                	push   $0x3af01033655127,236733
f0103367:	ff 77 08             	pushl  0x8(%edi)f01033675128,236778
f010336a:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010336a5129,236827
f010336d:	e8 1a 09 00 00       	call   f0103c8c <strfind>f010336d5130,236883
f0103372:	2b 47 08             	sub    0x8(%edi),%eaxf01033725131,236941
f0103375:	89 47 0c             	mov    %eax,0xc(%edi)f01033755132,236995
f0103378:	8b 5d e4             	mov    -0x1c(%ebp),%ebxf01033785139,237319
f010337b:	8d 04 76             	lea    (%esi,%esi,2),%eaxf010337b5140,237375
f010337e:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf010337e5141,237433
f0103381:	c7 c2 60 53 10 f0    	mov    $0xf0105360,%edxf01033815142,237489
f0103387:	8d 44 82 04          	lea    0x4(%edx,%eax,4),%eaxf01033875143,237545
f010338b:	83 c4 10             	add    $0x10,%espf010338b5144,237606
f010338e:	eb 29                	jmp    f01033b9 <debuginfo_eip+0x169>f010338e5145,237656
f0103390:	83 ec 04             	sub    $0x4,%espf01033905147,237760
f0103393:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01033935148,237809
f0103396:	8d 83 45 de fe ff    	lea    -0x121bb(%ebx),%eaxf01033965149,237865
f010339c:	50                   	push   %eaxf010339c5150,237924
f010339d:	6a 7f                	push   $0x7ff010339d5151,237968
f010339f:	8d 83 52 de fe ff    	lea    -0x121ae(%ebx),%eaxf010339f5152,238013
f01033a5:	50                   	push   %eaxf01033a55153,238072
f01033a6:	e8 ee cc ff ff       	call   f0100099 <_panic>f01033a65154,238116
f01033ab:	89 5f 10             	mov    %ebx,0x10(%edi)f01033ab5156,238201
		lline = lfile;lline5157,238256
f01033ae:	8b 75 e4             	mov    -0x1c(%ebp),%esif01033ae5158,238273
f01033b1:	eb af                	jmp    f0103362 <debuginfo_eip+0x112>f01033b15159,238329
f01033b3:	83 ee 01             	sub    $0x1,%esif01033b35163,238517
f01033b6:	83 e8 0c             	sub    $0xc,%eaxf01033b65164,238566
f01033b9:	39 f3                	cmp    %esi,%ebxf01033b95166,238638
f01033bb:	7f 3a                	jg     f01033f7 <debuginfo_eip+0x1a7>f01033bb5167,238687
f01033bd:	0f b6 10             	movzbl (%eax),%edxf01033bd5169,238797
f01033c0:	80 fa 84             	cmp    $0x84,%dlf01033c05170,238848
f01033c3:	74 0b                	je     f01033d0 <debuginfo_eip+0x180>f01033c35171,238897
f01033c5:	80 fa 64             	cmp    $0x64,%dlf01033c55173,239034
f01033c8:	75 e9                	jne    f01033b3 <debuginfo_eip+0x163>f01033c85174,239083
f01033ca:	83 78 04 00          	cmpl   $0x0,0x4(%eax)f01033ca5175,239153
f01033ce:	74 e3                	je     f01033b3 <debuginfo_eip+0x163>f01033ce5176,239207
f01033d0:	8d 14 76             	lea    (%esi,%esi,2),%edxf01033d05178,239345
f01033d3:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01033d35179,239403
f01033d6:	c7 c0 60 53 10 f0    	mov    $0xf0105360,%eaxf01033d65180,239459
f01033dc:	8b 14 90             	mov    (%eax,%edx,4),%edxf01033dc5181,239515
f01033df:	c7 c0 95 d9 10 f0    	mov    $0xf010d995,%eaxf01033df5182,239573
f01033e5:	81 e8 65 bb 10 f0    	sub    $0xf010bb65,%eaxf01033e55183,239629
f01033eb:	39 c2                	cmp    %eax,%edxf01033eb5184,239685
f01033ed:	73 08                	jae    f01033f7 <debuginfo_eip+0x1a7>f01033ed5185,239734
f01033ef:	81 c2 65 bb 10 f0    	add    $0xf010bb65,%edxf01033ef5187,239854
f01033f5:	89 17                	mov    %edx,(%edi)f01033f55188,239910
f01033f7:	8b 5d dc             	mov    -0x24(%ebp),%ebxf01033f75194,240097
f01033fa:	8b 4d d8             	mov    -0x28(%ebp),%ecxf01033fa5195,240153
f01033fd:	b8 00 00 00 00       	mov    $0x0,%eaxf01033fd5202,240340
f0103402:	39 cb                	cmp    %ecx,%ebxf01034025204,240407
f0103404:	7d 4a                	jge    f0103450 <debuginfo_eip+0x200>f01034045205,240456
f0103406:	8d 53 01             	lea    0x1(%ebx),%edxf01034065207,240551
f0103409:	8d 1c 5b             	lea    (%ebx,%ebx,2),%ebxf01034095208,240605
f010340c:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf010340c5209,240663
f010340f:	c7 c0 60 53 10 f0    	mov    $0xf0105360,%eaxf010340f5210,240719
f0103415:	8d 44 98 10          	lea    0x10(%eax,%ebx,4),%eaxf01034155211,240775
f0103419:	eb 07                	jmp    f0103422 <debuginfo_eip+0x1d2>f01034195212,240837
f010341b:	83 47 14 01          	addl   $0x1,0x14(%edi)f010341b5214,240931
f010341f:	83 c2 01             	add    $0x1,%edxf010341f5216,241002
f0103422:	39 d1                	cmp    %edx,%ecxf01034225218,241076
f0103424:	74 25                	je     f010344b <debuginfo_eip+0x1fb>f01034245219,241125
f0103426:	83 c0 0c             	add    $0xc,%eaxf01034265220,241195
f0103429:	80 78 f4 a0          	cmpb   $0xa0,-0xc(%eax)f01034295222,241298
f010342d:	74 ec                	je     f010341b <debuginfo_eip+0x1cb>f010342d5223,241354
f010342f:	b8 00 00 00 00       	mov    $0x0,%eaxf010342f5225,241435
f0103434:	eb 1a                	jmp    f0103450 <debuginfo_eip+0x200>f01034345226,241484
f0103436:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf01034365228,241567
f010343b:	eb 13                	jmp    f0103450 <debuginfo_eip+0x200>f010343b5229,241623
f010343d:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf010343d5230,241693
f0103442:	eb 0c                	jmp    f0103450 <debuginfo_eip+0x200>f01034425231,241749
f0103444:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf01034445233,241832
f0103449:	eb 05                	jmp    f0103450 <debuginfo_eip+0x200>f01034495234,241888
f010344b:	b8 00 00 00 00       	mov    $0x0,%eaxf010344b5236,241969
f0103450:	8d 65 f4             	lea    -0xc(%ebp),%espf01034505238,242020
f0103453:	5b                   	pop    %ebxf01034535239,242075
f0103454:	5e                   	pop    %esif01034545240,242119
f0103455:	5f                   	pop    %edif01034555241,242163
f0103456:	5d                   	pop    %ebpf01034565242,242207
f0103457:	c3                   	ret    f01034575243,242251
f0103458 <printnum>:f01034585245,242292
static voidstatic5248,242382
f0103458:	55                   	push   %ebpf01034585252,242508
f0103459:	89 e5                	mov    %esp,%ebpf01034595253,242552
f010345b:	57                   	push   %edif010345b5254,242601
f010345c:	56                   	push   %esif010345c5255,242645
f010345d:	53                   	push   %ebxf010345d5256,242689
f010345e:	83 ec 2c             	sub    $0x2c,%espf010345e5257,242733
f0103461:	e8 53 fc ff ff       	call   f01030b9 <__x86.get_pc_thunk.cx>f01034615258,242783
f0103466:	81 c1 a6 3e 01 00    	add    $0x13ea6,%ecxf01034665259,242855
f010346c:	89 4d e4             	mov    %ecx,-0x1c(%ebp)f010346c5260,242908
f010346f:	89 c7                	mov    %eax,%edif010346f5261,242964
f0103471:	89 d6                	mov    %edx,%esif01034715262,243013
f0103473:	8b 45 08             	mov    0x8(%ebp),%eaxf01034735263,243062
f0103476:	8b 55 0c             	mov    0xc(%ebp),%edxf01034765264,243116
f0103479:	89 45 d0             	mov    %eax,-0x30(%ebp)f01034795265,243170
f010347c:	89 55 d4             	mov    %edx,-0x2c(%ebp)f010347c5266,243226
f010347f:	8b 4d 10             	mov    0x10(%ebp),%ecxf010347f5269,243370
f0103482:	bb 00 00 00 00       	mov    $0x0,%ebxf01034825270,243425
f0103487:	89 4d d8             	mov    %ecx,-0x28(%ebp)f01034875271,243474
f010348a:	89 5d dc             	mov    %ebx,-0x24(%ebp)f010348a5272,243530
f010348d:	39 d3                	cmp    %edx,%ebxf010348d5273,243586
f010348f:	72 09                	jb     f010349a <printnum+0x42>f010348f5274,243635
f0103491:	39 45 10             	cmp    %eax,0x10(%ebp)f01034915275,243699
f0103494:	0f 87 83 00 00 00    	ja     f010351d <printnum+0xc5>f01034945276,243754
f010349a:	83 ec 0c             	sub    $0xc,%espf010349a5278,243880
f010349d:	ff 75 18             	pushl  0x18(%ebp)f010349d5279,243929
f01034a0:	8b 45 14             	mov    0x14(%ebp),%eaxf01034a05280,243979
f01034a3:	8d 58 ff             	lea    -0x1(%eax),%ebxf01034a35281,244034
f01034a6:	53                   	push   %ebxf01034a65282,244089
f01034a7:	ff 75 10             	pushl  0x10(%ebp)f01034a75283,244133
f01034aa:	83 ec 08             	sub    $0x8,%espf01034aa5284,244183
f01034ad:	ff 75 dc             	pushl  -0x24(%ebp)f01034ad5285,244232
f01034b0:	ff 75 d8             	pushl  -0x28(%ebp)f01034b05286,244283
f01034b3:	ff 75 d4             	pushl  -0x2c(%ebp)f01034b35287,244334
f01034b6:	ff 75 d0             	pushl  -0x30(%ebp)f01034b65288,244385
f01034b9:	8b 5d e4             	mov    -0x1c(%ebp),%ebxf01034b95289,244436
f01034bc:	e8 ef 09 00 00       	call   f0103eb0 <__udivdi3>f01034bc5290,244492
f01034c1:	83 c4 18             	add    $0x18,%espf01034c15291,244552
f01034c4:	52                   	push   %edxf01034c45292,244602
f01034c5:	50                   	push   %eaxf01034c55293,244646
f01034c6:	89 f2                	mov    %esi,%edxf01034c65294,244690
f01034c8:	89 f8                	mov    %edi,%eaxf01034c85295,244739
f01034ca:	e8 89 ff ff ff       	call   f0103458 <printnum>f01034ca5296,244788
f01034cf:	83 c4 20             	add    $0x20,%espf01034cf5297,244847
f01034d2:	eb 13                	jmp    f01034e7 <printnum+0x8f>f01034d25298,244897
f01034d4:	83 ec 08             	sub    $0x8,%espf01034d45303,245073
f01034d7:	56                   	push   %esif01034d75304,245122
f01034d8:	ff 75 18             	pushl  0x18(%ebp)f01034d85305,245166
f01034db:	ff d7                	call   *%edif01034db5306,245216
f01034dd:	83 c4 10             	add    $0x10,%espf01034dd5307,245261
f01034e0:	83 eb 01             	sub    $0x1,%ebxf01034e05309,245333
f01034e3:	85 db                	test   %ebx,%ebxf01034e35310,245382
f01034e5:	7f ed                	jg     f01034d4 <printnum+0x7c>f01034e55311,245431
f01034e7:	83 ec 08             	sub    $0x8,%espf01034e75316,245597
f01034ea:	56                   	push   %esif01034ea5317,245646
f01034eb:	83 ec 04             	sub    $0x4,%espf01034eb5318,245690
f01034ee:	ff 75 dc             	pushl  -0x24(%ebp)f01034ee5319,245739
f01034f1:	ff 75 d8             	pushl  -0x28(%ebp)f01034f15320,245790
f01034f4:	ff 75 d4             	pushl  -0x2c(%ebp)f01034f45321,245841
f01034f7:	ff 75 d0             	pushl  -0x30(%ebp)f01034f75322,245892
f01034fa:	8b 75 e4             	mov    -0x1c(%ebp),%esif01034fa5323,245943
f01034fd:	89 f3                	mov    %esi,%ebxf01034fd5324,245999
f01034ff:	e8 cc 0a 00 00       	call   f0103fd0 <__umoddi3>f01034ff5325,246048
f0103504:	83 c4 14             	add    $0x14,%espf01035045326,246108
f0103507:	0f be 84 06 60 de fe 	movsbl -0x121a0(%esi,%eax,1),%eaxf01035075327,246158
f010350e:	ff f010350e5328,246224
f010350f:	50                   	push   %eaxf010350f5329,246238
f0103510:	ff d7                	call   *%edif01035105330,246282
f0103512:	83 c4 10             	add    $0x10,%espf01035125332,246329
f0103515:	8d 65 f4             	lea    -0xc(%ebp),%espf01035155333,246379
f0103518:	5b                   	pop    %ebxf01035185334,246434
f0103519:	5e                   	pop    %esif01035195335,246478
f010351a:	5f                   	pop    %edif010351a5336,246522
f010351b:	5d                   	pop    %ebpf010351b5337,246566
f010351c:	c3                   	ret    f010351c5338,246610
f010351d:	8b 5d 14             	mov    0x14(%ebp),%ebxf010351d5339,246650
f0103520:	eb be                	jmp    f01034e0 <printnum+0x88>f01035205340,246705
f0103522 <sprintputch>:f01035225342,246770
static voidstatic5346,246808
f0103522:	55                   	push   %ebpf01035225349,246863
f0103523:	89 e5                	mov    %esp,%ebpf01035235350,246907
f0103525:	8b 45 0c             	mov    0xc(%ebp),%eaxf01035255351,246956
f0103528:	83 40 08 01          	addl   $0x1,0x8(%eax)f01035285353,247021
f010352c:	8b 10                	mov    (%eax),%edxf010352c5355,247098
f010352e:	3b 50 04             	cmp    0x4(%eax),%edxf010352e5356,247149
f0103531:	73 0a                	jae    f010353d <sprintputch+0x1b>f01035315357,247203
f0103533:	8d 4a 01             	lea    0x1(%edx),%ecxf01035335359,247288
f0103536:	89 08                	mov    %ecx,(%eax)f01035365360,247342
f0103538:	8b 45 08             	mov    0x8(%ebp),%eaxf01035385361,247393
f010353b:	88 02                	mov    %al,(%edx)f010353b5362,247447
f010353d:	5d                   	pop    %ebpf010353d5364,247499
f010353e:	c3                   	ret    f010353e5365,247543
f010353f <printfmt>:f010353f5367,247584
f010353f:	55                   	push   %ebpf010353f5369,247607
f0103540:	89 e5                	mov    %esp,%ebpf01035405370,247651
f0103542:	83 ec 08             	sub    $0x8,%espf01035425371,247700
f0103545:	8d 45 14             	lea    0x14(%ebp),%eaxf01035455373,247769
f0103548:	50                   	push   %eaxf01035485375,247860
f0103549:	ff 75 10             	pushl  0x10(%ebp)f01035495376,247904
f010354c:	ff 75 0c             	pushl  0xc(%ebp)f010354c5377,247954
f010354f:	ff 75 08             	pushl  0x8(%ebp)f010354f5378,248003
f0103552:	e8 05 00 00 00       	call   f010355c <vprintfmt>f01035525379,248052
f0103557:	83 c4 10             	add    $0x10,%espf01035575381,248114
f010355a:	c9                   	leave  f010355a5382,248164
f010355b:	c3                   	ret    f010355b5383,248204
f010355c <vprintfmt>:f010355c5385,248245
f010355c:	55                   	push   %ebpf010355c5387,248269
f010355d:	89 e5                	mov    %esp,%ebpf010355d5388,248313
f010355f:	57                   	push   %edif010355f5389,248362
f0103560:	56                   	push   %esif01035605390,248406
f0103561:	53                   	push   %ebxf01035615391,248450
f0103562:	83 ec 2c             	sub    $0x2c,%espf01035625392,248494
f0103565:	e8 e5 cb ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01035655393,248544
f010356a:	81 c3 a2 3d 01 00    	add    $0x13da2,%ebxf010356a5394,248616
f0103570:	8b 75 0c             	mov    0xc(%ebp),%esif01035705395,248669
f0103573:	8b 7d 10             	mov    0x10(%ebp),%edif01035735396,248723
f0103576:	e9 8e 03 00 00       	jmp    f0103909 <.L35+0x48>f01035765397,248778
		padc = ' ';padc5398,248838
f010357b:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)f010357b5399,248852
		altflag = 0;altflag5400,248909
f010357f:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)f010357f5401,248924
		precision = -1;precision5402,248980
f0103586:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)f01035865403,248998
		width = -1;width5404,249061
f010358d:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)f010358d5405,249075
		lflag = 0;lflag5406,249138
f0103594:	b9 00 00 00 00       	mov    $0x0,%ecxf01035945407,249151
f0103599:	89 4d cc             	mov    %ecx,-0x34(%ebp)f01035995408,249200
f010359c:	8d 47 01             	lea    0x1(%edi),%eaxf010359c5410,249299
f010359f:	89 45 e4             	mov    %eax,-0x1c(%ebp)f010359f5411,249353
f01035a2:	0f b6 17             	movzbl (%edi),%edxf01035a25412,249409
f01035a5:	8d 42 dd             	lea    -0x23(%edx),%eaxf01035a55413,249460
f01035a8:	3c 55                	cmp    $0x55,%alf01035a85414,249516
f01035aa:	0f 87 e1 03 00 00    	ja     f0103991 <.L22>f01035aa5415,249565
f01035b0:	0f b6 c0             	movzbl %al,%eaxf01035b05416,249620
f01035b3:	89 d9                	mov    %ebx,%ecxf01035b35417,249668
f01035b5:	03 8c 83 ec de fe ff 	add    -0x12114(%ebx,%eax,4),%ecxf01035b55418,249717
f01035bc:	ff e1                	jmp    *%ecxf01035bc5419,249783
f01035be <.L67>:f01035be5421,249829
f01035be:	8b 7d e4             	mov    -0x1c(%ebp),%edif01035be5422,249846
			padc = '-';padc5423,249902
f01035c1:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)f01035c15424,249917
f01035c5:	eb d5                	jmp    f010359c <vprintfmt+0x40>f01035c55425,249974
f01035c7 <.L28>:f01035c75427,250040
f01035c7:	8b 7d e4             	mov    -0x1c(%ebp),%edif01035c75429,250100
			padc = '0';padc5430,250156
f01035ca:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)f01035ca5431,250171
f01035ce:	eb cc                	jmp    f010359c <vprintfmt+0x40>f01035ce5432,250228
f01035d0 <.L29>:f01035d05434,250294
f01035d0:	0f b6 d2             	movzbl %dl,%edxf01035d05436,250354
f01035d3:	8b 7d e4             	mov    -0x1c(%ebp),%edif01035d35437,250402
f01035d6:	b8 00 00 00 00       	mov    $0x0,%eaxf01035d65439,250492
				precision = precision * 10 + ch - '0';precision5440,250541
f01035db:	8d 04 80             	lea    (%eax,%eax,4),%eaxf01035db5441,250584
f01035de:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eaxf01035de5442,250642
				ch = *fmt;ch5443,250705
f01035e2:	0f be 17             	movsbl (%edi),%edxf01035e25444,250720
f01035e5:	8d 4a d0             	lea    -0x30(%edx),%ecxf01035e55446,250801
f01035e8:	83 f9 09             	cmp    $0x9,%ecxf01035e85447,250857
f01035eb:	77 55                	ja     f0103642 <.L23+0xf>f01035eb5448,250906
f01035ed:	83 c7 01             	add    $0x1,%edif01035ed5450,250999
				precision = precision * 10 + ch - '0';precision5451,251048
f01035f0:	eb e9                	jmp    f01035db <.L29+0xb>f01035f05452,251091
f01035f2 <.L26>:f01035f25454,251151
			precision = va_arg(ap, int);precision5455,251168
f01035f2:	8b 45 14             	mov    0x14(%ebp),%eaxf01035f25456,251200
f01035f5:	8b 00                	mov    (%eax),%eaxf01035f55457,251255
f01035f7:	89 45 d0             	mov    %eax,-0x30(%ebp)f01035f75458,251306
f01035fa:	8b 45 14             	mov    0x14(%ebp),%eaxf01035fa5459,251362
f01035fd:	8d 40 04             	lea    0x4(%eax),%eaxf01035fd5460,251417
f0103600:	89 45 14             	mov    %eax,0x14(%ebp)f01036005461,251471
f0103603:	8b 7d e4             	mov    -0x1c(%ebp),%edif01036035463,251569
f0103606:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)f01036065465,251643
f010360a:	79 90                	jns    f010359c <vprintfmt+0x40>f010360a5466,251699
				width = precision, precision = -1;width5467,251764
f010360c:	8b 45 d0             	mov    -0x30(%ebp),%eaxf010360c5468,251803
f010360f:	89 45 e0             	mov    %eax,-0x20(%ebp)f010360f5469,251859
f0103612:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)f01036125470,251915
f0103619:	eb 81                	jmp    f010359c <vprintfmt+0x40>f01036195471,251978
f010361b <.L27>:f010361b5473,252044
f010361b:	8b 45 e0             	mov    -0x20(%ebp),%eaxf010361b5474,252061
f010361e:	85 c0                	test   %eax,%eaxf010361e5475,252117
f0103620:	ba 00 00 00 00       	mov    $0x0,%edxf01036205476,252166
f0103625:	0f 49 d0             	cmovns %eax,%edxf01036255477,252215
f0103628:	89 55 e0             	mov    %edx,-0x20(%ebp)f01036285478,252264
f010362b:	8b 7d e4             	mov    -0x1c(%ebp),%edif010362b5480,252363
f010362e:	e9 69 ff ff ff       	jmp    f010359c <vprintfmt+0x40>f010362e5481,252419
f0103633 <.L23>:f01036335483,252485
f0103633:	8b 7d e4             	mov    -0x1c(%ebp),%edif01036335484,252502
			altflag = 1;altflag5485,252558
f0103636:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)f01036365486,252574
f010363d:	e9 5a ff ff ff       	jmp    f010359c <vprintfmt+0x40>f010363d5488,252648
f0103642:	89 45 d0             	mov    %eax,-0x30(%ebp)f01036425489,252713
f0103645:	eb bf                	jmp    f0103606 <.L26+0x14>f01036455490,252769
f0103647 <.L33>:f01036475492,252830
f0103647:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)f01036475494,252859
f010364b:	8b 7d e4             	mov    -0x1c(%ebp),%edif010364b5496,252958
f010364e:	e9 49 ff ff ff       	jmp    f010359c <vprintfmt+0x40>f010364e5498,253032
f0103653 <.L30>:f01036535500,253098
f0103653:	8b 45 14             	mov    0x14(%ebp),%eaxf01036535502,253150
f0103656:	8d 78 04             	lea    0x4(%eax),%edif01036565503,253205
f0103659:	83 ec 08             	sub    $0x8,%espf01036595504,253259
f010365c:	56                   	push   %esif010365c5505,253308
f010365d:	ff 30                	pushl  (%eax)f010365d5506,253352
f010365f:	ff 55 08             	call   *0x8(%ebp)f010365f5507,253398
f0103662:	83 c4 10             	add    $0x10,%espf01036625509,253458
f0103665:	89 7d 14             	mov    %edi,0x14(%ebp)f01036655511,253543
f0103668:	e9 99 02 00 00       	jmp    f0103906 <.L35+0x45>f01036685513,253608
f010366d <.L32>:f010366d5515,253669
			err = va_arg(ap, int);err5516,253686
f010366d:	8b 45 14             	mov    0x14(%ebp),%eaxf010366d5517,253712
f0103670:	8d 78 04             	lea    0x4(%eax),%edif01036705518,253767
f0103673:	8b 00                	mov    (%eax),%eaxf01036735519,253821
f0103675:	99                   	cltd   f01036755520,253872
f0103676:	31 d0                	xor    %edx,%eaxf01036765521,253912
f0103678:	29 d0                	sub    %edx,%eaxf01036785522,253961
f010367a:	83 f8 06             	cmp    $0x6,%eaxf010367a5524,254069
f010367d:	7f 27                	jg     f01036a6 <.L32+0x39>f010367d5525,254118
f010367f:	8b 94 83 38 1d 00 00 	mov    0x1d38(%ebx,%eax,4),%edxf010367f5526,254178
f0103686:	85 d2                	test   %edx,%edxf01036865527,254242
f0103688:	74 1c                	je     f01036a6 <.L32+0x39>f01036885528,254291
f010368a:	52                   	push   %edxf010368a5530,254389
f010368b:	8d 83 90 db fe ff    	lea    -0x12470(%ebx),%eaxf010368b5531,254433
f0103691:	50                   	push   %eaxf01036915532,254492
f0103692:	56                   	push   %esif01036925533,254536
f0103693:	ff 75 08             	pushl  0x8(%ebp)f01036935534,254580
f0103696:	e8 a4 fe ff ff       	call   f010353f <printfmt>f01036965535,254629
f010369b:	83 c4 10             	add    $0x10,%espf010369b5536,254688
			err = va_arg(ap, int);err5537,254738
f010369e:	89 7d 14             	mov    %edi,0x14(%ebp)f010369e5538,254764
f01036a1:	e9 60 02 00 00       	jmp    f0103906 <.L35+0x45>f01036a15539,254819
f01036a6:	50                   	push   %eaxf01036a65541,254925
f01036a7:	8d 83 78 de fe ff    	lea    -0x12188(%ebx),%eaxf01036a75542,254969
f01036ad:	50                   	push   %eaxf01036ad5543,255028
f01036ae:	56                   	push   %esif01036ae5544,255072
f01036af:	ff 75 08             	pushl  0x8(%ebp)f01036af5545,255116
f01036b2:	e8 88 fe ff ff       	call   f010353f <printfmt>f01036b25546,255165
f01036b7:	83 c4 10             	add    $0x10,%espf01036b75547,255224
			err = va_arg(ap, int);err5548,255274
f01036ba:	89 7d 14             	mov    %edi,0x14(%ebp)f01036ba5549,255300
f01036bd:	e9 44 02 00 00       	jmp    f0103906 <.L35+0x45>f01036bd5551,255401
f01036c2 <.L36>:f01036c25553,255462
f01036c2:	8b 45 14             	mov    0x14(%ebp),%eaxf01036c25555,255520
f01036c5:	83 c0 04             	add    $0x4,%eaxf01036c55556,255575
f01036c8:	89 45 cc             	mov    %eax,-0x34(%ebp)f01036c85557,255624
f01036cb:	8b 45 14             	mov    0x14(%ebp),%eaxf01036cb5558,255680
f01036ce:	8b 38                	mov    (%eax),%edif01036ce5559,255735
				p = "(null)";p5560,255786
f01036d0:	85 ff                	test   %edi,%edif01036d05561,255804
f01036d2:	8d 83 71 de fe ff    	lea    -0x1218f(%ebx),%eaxf01036d25562,255853
f01036d8:	0f 44 f8             	cmove  %eax,%edif01036d85563,255912
f01036db:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)f01036db5565,255994
f01036df:	0f 8e b5 00 00 00    	jle    f010379a <.L36+0xd8>f01036df5566,256050
f01036e5:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)f01036e55567,256110
f01036e9:	75 08                	jne    f01036f3 <.L36+0x31>f01036e95568,256167
f01036eb:	89 75 0c             	mov    %esi,0xc(%ebp)f01036eb5569,256227
f01036ee:	8b 75 d0             	mov    -0x30(%ebp),%esif01036ee5570,256281
f01036f1:	eb 6d                	jmp    f0103760 <.L36+0x9e>f01036f15571,256337
f01036f3:	83 ec 08             	sub    $0x8,%espf01036f35573,256458
f01036f6:	ff 75 d0             	pushl  -0x30(%ebp)f01036f65574,256507
f01036f9:	57                   	push   %edif01036f95575,256558
f01036fa:	e8 49 04 00 00       	call   f0103b48 <strnlen>f01036fa5576,256602
f01036ff:	8b 55 e0             	mov    -0x20(%ebp),%edxf01036ff5577,256660
f0103702:	29 c2                	sub    %eax,%edxf01037025578,256716
f0103704:	89 55 c8             	mov    %edx,-0x38(%ebp)f01037045579,256765
f0103707:	83 c4 10             	add    $0x10,%espf01037075580,256821
f010370a:	0f be 45 d4          	movsbl -0x2c(%ebp),%eaxf010370a5582,256897
f010370e:	89 45 e0             	mov    %eax,-0x20(%ebp)f010370e5583,256953
f0103711:	89 7d d4             	mov    %edi,-0x2c(%ebp)f01037115584,257009
f0103714:	89 d7                	mov    %edx,%edif01037145585,257065
f0103716:	eb 10                	jmp    f0103728 <.L36+0x66>f01037165587,257175
f0103718:	83 ec 08             	sub    $0x8,%espf01037185589,257261
f010371b:	56                   	push   %esif010371b5590,257310
f010371c:	ff 75 e0             	pushl  -0x20(%ebp)f010371c5591,257354
f010371f:	ff 55 08             	call   *0x8(%ebp)f010371f5592,257405
f0103722:	83 ef 01             	sub    $0x1,%edif01037225594,257516
f0103725:	83 c4 10             	add    $0x10,%espf01037255595,257565
f0103728:	85 ff                	test   %edi,%edif01037285596,257615
f010372a:	7f ec                	jg     f0103718 <.L36+0x56>f010372a5597,257664
f010372c:	8b 7d d4             	mov    -0x2c(%ebp),%edif010372c5598,257724
f010372f:	8b 55 c8             	mov    -0x38(%ebp),%edxf010372f5599,257780
f0103732:	85 d2                	test   %edx,%edxf01037325600,257836
f0103734:	b8 00 00 00 00       	mov    $0x0,%eaxf01037345601,257885
f0103739:	0f 49 c2             	cmovns %edx,%eaxf01037395602,257934
f010373c:	29 c2                	sub    %eax,%edxf010373c5603,257983
f010373e:	89 55 e0             	mov    %edx,-0x20(%ebp)f010373e5604,258032
f0103741:	89 75 0c             	mov    %esi,0xc(%ebp)f01037415605,258088
f0103744:	8b 75 d0             	mov    -0x30(%ebp),%esif01037445606,258142
f0103747:	eb 17                	jmp    f0103760 <.L36+0x9e>f01037475607,258198
f0103749:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)f01037495609,258301
f010374d:	75 30                	jne    f010377f <.L36+0xbd>f010374d5610,258357
f010374f:	83 ec 08             	sub    $0x8,%espf010374f5612,258441
f0103752:	ff 75 0c             	pushl  0xc(%ebp)f01037525613,258490
f0103755:	50                   	push   %eaxf01037555614,258539
f0103756:	ff 55 08             	call   *0x8(%ebp)f01037565615,258583
f0103759:	83 c4 10             	add    $0x10,%espf01037595616,258633
f010375c:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)f010375c5618,258762
f0103760:	83 c7 01             	add    $0x1,%edif01037605619,258818
f0103763:	0f b6 57 ff          	movzbl -0x1(%edi),%edxf01037635620,258867
f0103767:	0f be c2             	movsbl %dl,%eaxf01037675621,258922
f010376a:	85 c0                	test   %eax,%eaxf010376a5622,258970
f010376c:	74 52                	je     f01037c0 <.L36+0xfe>f010376c5623,259019
f010376e:	85 f6                	test   %esi,%esif010376e5624,259079
f0103770:	78 d7                	js     f0103749 <.L36+0x87>f01037705625,259128
f0103772:	83 ee 01             	sub    $0x1,%esif01037725626,259188
f0103775:	79 d2                	jns    f0103749 <.L36+0x87>f01037755627,259237
f0103777:	8b 75 0c             	mov    0xc(%ebp),%esif01037775628,259297
f010377a:	8b 7d e0             	mov    -0x20(%ebp),%edif010377a5629,259351
f010377d:	eb 32                	jmp    f01037b1 <.L36+0xef>f010377d5630,259407
f010377f:	0f be d2             	movsbl %dl,%edxf010377f5632,259510
f0103782:	83 ea 20             	sub    $0x20,%edxf01037825633,259558
f0103785:	83 fa 5e             	cmp    $0x5e,%edxf01037855634,259608
f0103788:	76 c5                	jbe    f010374f <.L36+0x8d>f01037885635,259658
f010378a:	83 ec 08             	sub    $0x8,%espf010378a5637,259743
f010378d:	ff 75 0c             	pushl  0xc(%ebp)f010378d5638,259792
f0103790:	6a 3f                	push   $0x3ff01037905639,259841
f0103792:	ff 55 08             	call   *0x8(%ebp)f01037925640,259886
f0103795:	83 c4 10             	add    $0x10,%espf01037955641,259936
f0103798:	eb c2                	jmp    f010375c <.L36+0x9a>f01037985642,259986
f010379a:	89 75 0c             	mov    %esi,0xc(%ebp)f010379a5643,260046
f010379d:	8b 75 d0             	mov    -0x30(%ebp),%esif010379d5644,260100
f01037a0:	eb be                	jmp    f0103760 <.L36+0x9e>f01037a05645,260156
f01037a2:	83 ec 08             	sub    $0x8,%espf01037a25647,260240
f01037a5:	56                   	push   %esif01037a55648,260289
f01037a6:	6a 20                	push   $0x20f01037a65649,260333
f01037a8:	ff 55 08             	call   *0x8(%ebp)f01037a85650,260378
f01037ab:	83 ef 01             	sub    $0x1,%edif01037ab5652,260458
f01037ae:	83 c4 10             	add    $0x10,%espf01037ae5653,260507
f01037b1:	85 ff                	test   %edi,%edif01037b15654,260557
f01037b3:	7f ed                	jg     f01037a2 <.L36+0xe0>f01037b35655,260606
f01037b5:	8b 45 cc             	mov    -0x34(%ebp),%eaxf01037b55657,260707
f01037b8:	89 45 14             	mov    %eax,0x14(%ebp)f01037b85658,260763
f01037bb:	e9 46 01 00 00       	jmp    f0103906 <.L35+0x45>f01037bb5659,260818
f01037c0:	8b 7d e0             	mov    -0x20(%ebp),%edif01037c05660,260878
f01037c3:	8b 75 0c             	mov    0xc(%ebp),%esif01037c35661,260934
f01037c6:	eb e9                	jmp    f01037b1 <.L36+0xef>f01037c65662,260988
f01037c8 <.L31>:f01037c85664,261049
f01037c8:	8b 4d cc             	mov    -0x34(%ebp),%ecxf01037c85665,261066
f01037cb:	83 f9 01             	cmp    $0x1,%ecxf01037cb5667,261139
f01037ce:	7e 40                	jle    f0103810 <.L31+0x48>f01037ce5668,261188
f01037d0:	8b 45 14             	mov    0x14(%ebp),%eaxf01037d05670,261281
f01037d3:	8b 50 04             	mov    0x4(%eax),%edxf01037d35671,261336
f01037d6:	8b 00                	mov    (%eax),%eaxf01037d65672,261390
f01037d8:	89 45 d8             	mov    %eax,-0x28(%ebp)f01037d85673,261441
f01037db:	89 55 dc             	mov    %edx,-0x24(%ebp)f01037db5674,261497
f01037de:	8b 45 14             	mov    0x14(%ebp),%eaxf01037de5675,261553
f01037e1:	8d 40 08             	lea    0x8(%eax),%eaxf01037e15676,261608
f01037e4:	89 45 14             	mov    %eax,0x14(%ebp)f01037e45677,261662
f01037e7:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)f01037e75679,261747
f01037eb:	79 55                	jns    f0103842 <.L31+0x7a>f01037eb5680,261803
f01037ed:	83 ec 08             	sub    $0x8,%espf01037ed5682,261887
f01037f0:	56                   	push   %esif01037f05683,261936
f01037f1:	6a 2d                	push   $0x2df01037f15684,261980
f01037f3:	ff 55 08             	call   *0x8(%ebp)f01037f35685,262025
				num = -(long long) num;num5686,262075
f01037f6:	8b 55 d8             	mov    -0x28(%ebp),%edxf01037f65687,262103
f01037f9:	8b 4d dc             	mov    -0x24(%ebp),%ecxf01037f95688,262159
f01037fc:	f7 da                	neg    %edxf01037fc5689,262215
f01037fe:	83 d1 00             	adc    $0x0,%ecxf01037fe5690,262259
f0103801:	f7 d9                	neg    %ecxf01038015691,262308
f0103803:	83 c4 10             	add    $0x10,%espf01038035692,262352
			base = 10;base5693,262402
f0103806:	b8 0a 00 00 00       	mov    $0xa,%eaxf01038065694,262416
f010380b:	e9 db 00 00 00       	jmp    f01038eb <.L35+0x2a>f010380b5695,262465
f0103810:	85 c9                	test   %ecx,%ecxf01038105697,262542
f0103812:	75 17                	jne    f010382b <.L31+0x63>f01038125698,262591
f0103814:	8b 45 14             	mov    0x14(%ebp),%eaxf01038145700,262678
f0103817:	8b 00                	mov    (%eax),%eaxf01038175701,262733
f0103819:	89 45 d8             	mov    %eax,-0x28(%ebp)f01038195702,262784
f010381c:	99                   	cltd   f010381c5703,262840
f010381d:	89 55 dc             	mov    %edx,-0x24(%ebp)f010381d5704,262880
f0103820:	8b 45 14             	mov    0x14(%ebp),%eaxf01038205705,262936
f0103823:	8d 40 04             	lea    0x4(%eax),%eaxf01038235706,262991
f0103826:	89 45 14             	mov    %eax,0x14(%ebp)f01038265707,263045
f0103829:	eb bc                	jmp    f01037e7 <.L31+0x1f>f01038295708,263100
f010382b:	8b 45 14             	mov    0x14(%ebp),%eaxf010382b5710,263188
f010382e:	8b 00                	mov    (%eax),%eaxf010382e5711,263243
f0103830:	89 45 d8             	mov    %eax,-0x28(%ebp)f01038305712,263294
f0103833:	99                   	cltd   f01038335713,263350
f0103834:	89 55 dc             	mov    %edx,-0x24(%ebp)f01038345714,263390
f0103837:	8b 45 14             	mov    0x14(%ebp),%eaxf01038375715,263446
f010383a:	8d 40 04             	lea    0x4(%eax),%eaxf010383a5716,263501
f010383d:	89 45 14             	mov    %eax,0x14(%ebp)f010383d5717,263555
f0103840:	eb a5                	jmp    f01037e7 <.L31+0x1f>f01038405718,263610
			num = getint(&ap, lflag);num5719,263670
f0103842:	8b 55 d8             	mov    -0x28(%ebp),%edxf01038425720,263699
f0103845:	8b 4d dc             	mov    -0x24(%ebp),%ecxf01038455721,263755
			base = 10;base5722,263811
f0103848:	b8 0a 00 00 00       	mov    $0xa,%eaxf01038485723,263825
f010384d:	e9 99 00 00 00       	jmp    f01038eb <.L35+0x2a>f010384d5724,263874
f0103852 <.L37>:f01038525726,263935
f0103852:	8b 4d cc             	mov    -0x34(%ebp),%ecxf01038525727,263952
f0103855:	83 f9 01             	cmp    $0x1,%ecxf01038555729,264025
f0103858:	7e 15                	jle    f010386f <.L37+0x1d>f01038585730,264074
f010385a:	8b 45 14             	mov    0x14(%ebp),%eaxf010385a5732,264176
f010385d:	8b 10                	mov    (%eax),%edxf010385d5733,264231
f010385f:	8b 48 04             	mov    0x4(%eax),%ecxf010385f5734,264282
f0103862:	8d 40 08             	lea    0x8(%eax),%eaxf01038625735,264336
f0103865:	89 45 14             	mov    %eax,0x14(%ebp)f01038655736,264390
			base = 10;base5737,264445
f0103868:	b8 0a 00 00 00       	mov    $0xa,%eaxf01038685738,264459
f010386d:	eb 7c                	jmp    f01038eb <.L35+0x2a>f010386d5739,264508
f010386f:	85 c9                	test   %ecx,%ecxf010386f5741,264585
f0103871:	75 17                	jne    f010388a <.L37+0x38>f01038715742,264634
f0103873:	8b 45 14             	mov    0x14(%ebp),%eaxf01038735744,264730
f0103876:	8b 10                	mov    (%eax),%edxf01038765745,264785
f0103878:	b9 00 00 00 00       	mov    $0x0,%ecxf01038785746,264836
f010387d:	8d 40 04             	lea    0x4(%eax),%eaxf010387d5747,264885
f0103880:	89 45 14             	mov    %eax,0x14(%ebp)f01038805748,264939
			base = 10;base5749,264994
f0103883:	b8 0a 00 00 00       	mov    $0xa,%eaxf01038835750,265008
f0103888:	eb 61                	jmp    f01038eb <.L35+0x2a>f01038885751,265057
f010388a:	8b 45 14             	mov    0x14(%ebp),%eaxf010388a5753,265154
f010388d:	8b 10                	mov    (%eax),%edxf010388d5754,265209
f010388f:	b9 00 00 00 00       	mov    $0x0,%ecxf010388f5755,265260
f0103894:	8d 40 04             	lea    0x4(%eax),%eaxf01038945756,265309
f0103897:	89 45 14             	mov    %eax,0x14(%ebp)f01038975757,265363
			base = 10;base5758,265418
f010389a:	b8 0a 00 00 00       	mov    $0xa,%eaxf010389a5759,265432
f010389f:	eb 4a                	jmp    f01038eb <.L35+0x2a>f010389f5760,265481
f01038a1 <.L34>:f01038a15762,265542
f01038a1:	83 ec 08             	sub    $0x8,%espf01038a15764,265582
f01038a4:	56                   	push   %esif01038a45765,265631
f01038a5:	6a 58                	push   $0x58f01038a55766,265675
f01038a7:	ff 55 08             	call   *0x8(%ebp)f01038a75767,265720
f01038aa:	83 c4 08             	add    $0x8,%espf01038aa5769,265793
f01038ad:	56                   	push   %esif01038ad5770,265842
f01038ae:	6a 58                	push   $0x58f01038ae5771,265886
f01038b0:	ff 55 08             	call   *0x8(%ebp)f01038b05772,265931
f01038b3:	83 c4 08             	add    $0x8,%espf01038b35774,266004
f01038b6:	56                   	push   %esif01038b65775,266053
f01038b7:	6a 58                	push   $0x58f01038b75776,266097
f01038b9:	ff 55 08             	call   *0x8(%ebp)f01038b95777,266142
f01038bc:	83 c4 10             	add    $0x10,%espf01038bc5779,266202
f01038bf:	eb 45                	jmp    f0103906 <.L35+0x45>f01038bf5780,266252
f01038c1 <.L35>:f01038c15782,266313
f01038c1:	83 ec 08             	sub    $0x8,%espf01038c15784,266353
f01038c4:	56                   	push   %esif01038c45785,266402
f01038c5:	6a 30                	push   $0x30f01038c55786,266446
f01038c7:	ff 55 08             	call   *0x8(%ebp)f01038c75787,266491
f01038ca:	83 c4 08             	add    $0x8,%espf01038ca5789,266564
f01038cd:	56                   	push   %esif01038cd5790,266613
f01038ce:	6a 78                	push   $0x78f01038ce5791,266657
f01038d0:	ff 55 08             	call   *0x8(%ebp)f01038d05792,266702
			num = (unsigned long long)num5793,266752
f01038d3:	8b 45 14             	mov    0x14(%ebp),%eaxf01038d35794,266782
f01038d6:	8b 10                	mov    (%eax),%edxf01038d65795,266837
f01038d8:	b9 00 00 00 00       	mov    $0x0,%ecxf01038d85796,266888
f01038dd:	83 c4 10             	add    $0x10,%espf01038dd5798,266953
f01038e0:	8d 40 04             	lea    0x4(%eax),%eaxf01038e05800,267039
f01038e3:	89 45 14             	mov    %eax,0x14(%ebp)f01038e35801,267093
			base = 16;base5802,267148
f01038e6:	b8 10 00 00 00       	mov    $0x10,%eaxf01038e65803,267162
f01038eb:	83 ec 0c             	sub    $0xc,%espf01038eb5805,267264
f01038ee:	0f be 7d d4          	movsbl -0x2c(%ebp),%edif01038ee5806,267313
f01038f2:	57                   	push   %edif01038f25807,267369
f01038f3:	ff 75 e0             	pushl  -0x20(%ebp)f01038f35808,267413
f01038f6:	50                   	push   %eaxf01038f65809,267464
f01038f7:	51                   	push   %ecxf01038f75810,267508
f01038f8:	52                   	push   %edxf01038f85811,267552
f01038f9:	89 f2                	mov    %esi,%edxf01038f95812,267596
f01038fb:	8b 45 08             	mov    0x8(%ebp),%eaxf01038fb5813,267645
f01038fe:	e8 55 fb ff ff       	call   f0103458 <printnum>f01038fe5814,267699
f0103903:	83 c4 20             	add    $0x20,%espf01039035816,267768
			err = va_arg(ap, int);err5817,267818
f0103906:	8b 7d e4             	mov    -0x1c(%ebp),%edif01039065818,267844
f0103909:	83 c7 01             	add    $0x1,%edif01039095820,267951
f010390c:	0f b6 47 ff          	movzbl -0x1(%edi),%eaxf010390c5821,268000
f0103910:	83 f8 25             	cmp    $0x25,%eaxf01039105822,268055
f0103913:	0f 84 62 fc ff ff    	je     f010357b <vprintfmt+0x1f>f01039135823,268105
f0103919:	85 c0                	test   %eax,%eaxf01039195825,268189
f010391b:	0f 84 91 00 00 00    	je     f01039b2 <.L22+0x21>f010391b5826,268238
f0103921:	83 ec 08             	sub    $0x8,%espf01039215828,268320
f0103924:	56                   	push   %esif01039245829,268369
f0103925:	50                   	push   %eaxf01039255830,268413
f0103926:	ff 55 08             	call   *0x8(%ebp)f01039265831,268457
f0103929:	83 c4 10             	add    $0x10,%espf01039295832,268507
f010392c:	eb db                	jmp    f0103909 <.L35+0x48>f010392c5833,268557
f010392e <.L38>:f010392e5835,268618
f010392e:	8b 4d cc             	mov    -0x34(%ebp),%ecxf010392e5836,268635
f0103931:	83 f9 01             	cmp    $0x1,%ecxf01039315838,268708
f0103934:	7e 15                	jle    f010394b <.L38+0x1d>f01039345839,268757
f0103936:	8b 45 14             	mov    0x14(%ebp),%eaxf01039365841,268859
f0103939:	8b 10                	mov    (%eax),%edxf01039395842,268914
f010393b:	8b 48 04             	mov    0x4(%eax),%ecxf010393b5843,268965
f010393e:	8d 40 08             	lea    0x8(%eax),%eaxf010393e5844,269019
f0103941:	89 45 14             	mov    %eax,0x14(%ebp)f01039415845,269073
			base = 16;base5846,269128
f0103944:	b8 10 00 00 00       	mov    $0x10,%eaxf01039445847,269142
f0103949:	eb a0                	jmp    f01038eb <.L35+0x2a>f01039495848,269192
f010394b:	85 c9                	test   %ecx,%ecxf010394b5850,269269
f010394d:	75 17                	jne    f0103966 <.L38+0x38>f010394d5851,269318
f010394f:	8b 45 14             	mov    0x14(%ebp),%eaxf010394f5853,269414
f0103952:	8b 10                	mov    (%eax),%edxf01039525854,269469
f0103954:	b9 00 00 00 00       	mov    $0x0,%ecxf01039545855,269520
f0103959:	8d 40 04             	lea    0x4(%eax),%eaxf01039595856,269569
f010395c:	89 45 14             	mov    %eax,0x14(%ebp)f010395c5857,269623
			base = 16;base5858,269678
f010395f:	b8 10 00 00 00       	mov    $0x10,%eaxf010395f5859,269692
f0103964:	eb 85                	jmp    f01038eb <.L35+0x2a>f01039645860,269742
f0103966:	8b 45 14             	mov    0x14(%ebp),%eaxf01039665862,269839
f0103969:	8b 10                	mov    (%eax),%edxf01039695863,269894
f010396b:	b9 00 00 00 00       	mov    $0x0,%ecxf010396b5864,269945
f0103970:	8d 40 04             	lea    0x4(%eax),%eaxf01039705865,269994
f0103973:	89 45 14             	mov    %eax,0x14(%ebp)f01039735866,270048
			base = 16;base5867,270103
f0103976:	b8 10 00 00 00       	mov    $0x10,%eaxf01039765868,270117
f010397b:	e9 6b ff ff ff       	jmp    f01038eb <.L35+0x2a>f010397b5869,270167
f0103980 <.L25>:f01039805871,270228
f0103980:	83 ec 08             	sub    $0x8,%espf01039805873,270267
f0103983:	56                   	push   %esif01039835874,270316
f0103984:	6a 25                	push   $0x25f01039845875,270360
f0103986:	ff 55 08             	call   *0x8(%ebp)f01039865876,270405
f0103989:	83 c4 10             	add    $0x10,%espf01039895878,270465
f010398c:	e9 75 ff ff ff       	jmp    f0103906 <.L35+0x45>f010398c5879,270515
f0103991 <.L22>:f01039915881,270576
f0103991:	83 ec 08             	sub    $0x8,%espf01039915883,270616
f0103994:	56                   	push   %esif01039945884,270665
f0103995:	6a 25                	push   $0x25f01039955885,270709
f0103997:	ff 55 08             	call   *0x8(%ebp)f01039975886,270754
f010399a:	83 c4 10             	add    $0x10,%espf010399a5888,270842
f010399d:	89 f8                	mov    %edi,%eaxf010399d5889,270892
f010399f:	eb 03                	jmp    f01039a4 <.L22+0x13>f010399f5890,270941
f01039a1:	83 e8 01             	sub    $0x1,%eaxf01039a15891,271001
f01039a4:	80 78 ff 25          	cmpb   $0x25,-0x1(%eax)f01039a45892,271050
f01039a8:	75 f7                	jne    f01039a1 <.L22+0x10>f01039a85893,271106
f01039aa:	89 45 e4             	mov    %eax,-0x1c(%ebp)f01039aa5894,271166
f01039ad:	e9 54 ff ff ff       	jmp    f0103906 <.L35+0x45>f01039ad5895,271222
f01039b2:	8d 65 f4             	lea    -0xc(%ebp),%espf01039b25897,271284
f01039b5:	5b                   	pop    %ebxf01039b55898,271339
f01039b6:	5e                   	pop    %esif01039b65899,271383
f01039b7:	5f                   	pop    %edif01039b75900,271427
f01039b8:	5d                   	pop    %ebpf01039b85901,271471
f01039b9:	c3                   	ret    f01039b95902,271515
f01039ba <vsnprintf>:f01039ba5904,271556
intint5906,271579
f01039ba:	55                   	push   %ebpf01039ba5909,271642
f01039bb:	89 e5                	mov    %esp,%ebpf01039bb5910,271686
f01039bd:	53                   	push   %ebxf01039bd5911,271735
f01039be:	83 ec 14             	sub    $0x14,%espf01039be5912,271779
f01039c1:	e8 89 c7 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01039c15913,271829
f01039c6:	81 c3 46 39 01 00    	add    $0x13946,%ebxf01039c65914,271901
f01039cc:	8b 45 08             	mov    0x8(%ebp),%eaxf01039cc5915,271954
f01039cf:	8b 55 0c             	mov    0xc(%ebp),%edxf01039cf5916,272008
f01039d2:	89 45 ec             	mov    %eax,-0x14(%ebp)f01039d25918,272103
f01039d5:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecxf01039d55919,272159
f01039d9:	89 4d f0             	mov    %ecx,-0x10(%ebp)f01039d95920,272221
f01039dc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)f01039dc5921,272277
f01039e3:	85 c0                	test   %eax,%eaxf01039e35924,272360
f01039e5:	74 2b                	je     f0103a12 <vsnprintf+0x58>f01039e55925,272409
f01039e7:	85 d2                	test   %edx,%edxf01039e75926,272474
f01039e9:	7e 27                	jle    f0103a12 <vsnprintf+0x58>f01039e95927,272523
f01039eb:	ff 75 14             	pushl  0x14(%ebp)f01039eb5932,272688
f01039ee:	ff 75 10             	pushl  0x10(%ebp)f01039ee5933,272738
f01039f1:	8d 45 ec             	lea    -0x14(%ebp),%eaxf01039f15934,272788
f01039f4:	50                   	push   %eaxf01039f45935,272844
f01039f5:	8d 83 16 c2 fe ff    	lea    -0x13dea(%ebx),%eaxf01039f55936,272888
f01039fb:	50                   	push   %eaxf01039fb5937,272947
f01039fc:	e8 5b fb ff ff       	call   f010355c <vprintfmt>f01039fc5938,272991
f0103a01:	8b 45 ec             	mov    -0x14(%ebp),%eaxf0103a015942,273098
f0103a04:	c6 00 00             	movb   $0x0,(%eax)f0103a045943,273154
f0103a07:	8b 45 f4             	mov    -0xc(%ebp),%eaxf0103a075946,273221
f0103a0a:	83 c4 10             	add    $0x10,%espf0103a0a5947,273276
f0103a0d:	8b 5d fc             	mov    -0x4(%ebp),%ebxf0103a0d5949,273328
f0103a10:	c9                   	leave  f0103a105950,273383
f0103a11:	c3                   	ret    f0103a115951,273423
f0103a12:	b8 fd ff ff ff       	mov    $0xfffffffd,%eaxf0103a125953,273482
f0103a17:	eb f4                	jmp    f0103a0d <vsnprintf+0x53>f0103a175954,273538
f0103a19 <snprintf>:f0103a195956,273604
intint5958,273626
f0103a19:	55                   	push   %ebpf0103a195961,273681
f0103a1a:	89 e5                	mov    %esp,%ebpf0103a1a5962,273725
f0103a1c:	83 ec 08             	sub    $0x8,%espf0103a1c5963,273774
f0103a1f:	8d 45 14             	lea    0x14(%ebp),%eaxf0103a1f5968,273866
	rc = vsnprintf(buf, n, fmt, ap);rc5969,273921
f0103a22:	50                   	push   %eaxf0103a225970,273955
f0103a23:	ff 75 10             	pushl  0x10(%ebp)f0103a235971,273999
f0103a26:	ff 75 0c             	pushl  0xc(%ebp)f0103a265972,274049
f0103a29:	ff 75 08             	pushl  0x8(%ebp)f0103a295973,274098
f0103a2c:	e8 89 ff ff ff       	call   f01039ba <vsnprintf>f0103a2c5974,274147
f0103a31:	c9                   	leave  f0103a315979,274235
f0103a32:	c3                   	ret    f0103a325980,274275
f0103a33 <readline>:f0103a335982,274316
#define BUFLEN 1024BUFLEN5983,274337
static char buf[BUFLEN];static5984,274357
char *char5986,274383
f0103a33:	55                   	push   %ebpf0103a335989,274421
f0103a34:	89 e5                	mov    %esp,%ebpf0103a345990,274465
f0103a36:	57                   	push   %edif0103a365991,274514
f0103a37:	56                   	push   %esif0103a375992,274558
f0103a38:	53                   	push   %ebxf0103a385993,274602
f0103a39:	83 ec 1c             	sub    $0x1c,%espf0103a395994,274646
f0103a3c:	e8 0e c7 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0103a3c5995,274696
f0103a41:	81 c3 cb 38 01 00    	add    $0x138cb,%ebxf0103a415996,274768
f0103a47:	8b 45 08             	mov    0x8(%ebp),%eaxf0103a475997,274821
f0103a4a:	85 c0                	test   %eax,%eaxf0103a4a6001,274917
f0103a4c:	74 13                	je     f0103a61 <readline+0x2e>f0103a4c6002,274966
f0103a4e:	83 ec 08             	sub    $0x8,%espf0103a4e6004,275055
f0103a51:	50                   	push   %eaxf0103a516005,275104
f0103a52:	8d 83 90 db fe ff    	lea    -0x12470(%ebx),%eaxf0103a526006,275148
f0103a58:	50                   	push   %eaxf0103a586007,275207
f0103a59:	e8 ee f6 ff ff       	call   f010314c <cprintf>f0103a596008,275251
f0103a5e:	83 c4 10             	add    $0x10,%espf0103a5e6009,275309
	i = 0;i6011,275360
	echoing = iscons(0);echoing6012,275368
f0103a61:	83 ec 0c             	sub    $0xc,%espf0103a616013,275390
f0103a64:	6a 00                	push   $0x0f0103a646014,275439
f0103a66:	e8 7c cc ff ff       	call   f01006e7 <iscons>f0103a666015,275483
f0103a6b:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0103a6b6016,275540
f0103a6e:	83 c4 10             	add    $0x10,%espf0103a6e6017,275596
	i = 0;i6018,275646
f0103a71:	bf 00 00 00 00       	mov    $0x0,%edif0103a716019,275654
f0103a76:	eb 46                	jmp    f0103abe <readline+0x8b>f0103a766020,275703
		c = getchar();c6022,275780
f0103a78:	83 ec 08             	sub    $0x8,%espf0103a786025,275847
f0103a7b:	50                   	push   %eaxf0103a7b6026,275896
f0103a7c:	8d 83 44 e0 fe ff    	lea    -0x11fbc(%ebx),%eaxf0103a7c6027,275940
f0103a82:	50                   	push   %eaxf0103a826028,275999
f0103a83:	e8 c4 f6 ff ff       	call   f010314c <cprintf>f0103a836029,276043
f0103a88:	83 c4 10             	add    $0x10,%espf0103a886031,276117
f0103a8b:	b8 00 00 00 00       	mov    $0x0,%eaxf0103a8b6032,276167
f0103a90:	8d 65 f4             	lea    -0xc(%ebp),%espf0103a906039,276275
f0103a93:	5b                   	pop    %ebxf0103a936040,276330
f0103a94:	5e                   	pop    %esif0103a946041,276374
f0103a95:	5f                   	pop    %edif0103a956042,276418
f0103a96:	5d                   	pop    %ebpf0103a966043,276462
f0103a97:	c3                   	ret    f0103a976044,276506
f0103a98:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)f0103a986046,276562
f0103a9c:	75 05                	jne    f0103aa3 <readline+0x70>f0103a9c6047,276618
f0103a9e:	83 ef 01             	sub    $0x1,%edif0103a9e6049,276690
f0103aa1:	eb 1b                	jmp    f0103abe <readline+0x8b>f0103aa16050,276739
f0103aa3:	83 ec 0c             	sub    $0xc,%espf0103aa36052,276823
f0103aa6:	6a 08                	push   $0x8f0103aa66053,276872
f0103aa8:	e8 19 cc ff ff       	call   f01006c6 <cputchar>f0103aa86054,276916
f0103aad:	83 c4 10             	add    $0x10,%espf0103aad6055,276975
f0103ab0:	eb ec                	jmp    f0103a9e <readline+0x6b>f0103ab06056,277025
f0103ab2:	89 f0                	mov    %esi,%eaxf0103ab26058,277106
f0103ab4:	88 84 3b b4 1f 00 00 	mov    %al,0x1fb4(%ebx,%edi,1)f0103ab46059,277155
f0103abb:	8d 7f 01             	lea    0x1(%edi),%edif0103abb6060,277218
		c = getchar();c6061,277272
f0103abe:	e8 13 cc ff ff       	call   f01006d6 <getchar>f0103abe6062,277289
f0103ac3:	89 c6                	mov    %eax,%esif0103ac36063,277347
f0103ac5:	85 c0                	test   %eax,%eaxf0103ac56065,277411
f0103ac7:	78 af                	js     f0103a78 <readline+0x45>f0103ac76066,277460
f0103ac9:	83 f8 08             	cmp    $0x8,%eaxf0103ac96068,277576
f0103acc:	0f 94 c2             	sete   %dlf0103acc6069,277625
f0103acf:	83 f8 7f             	cmp    $0x7f,%eaxf0103acf6070,277668
f0103ad2:	0f 94 c0             	sete   %alf0103ad26071,277718
f0103ad5:	08 c2                	or     %al,%dlf0103ad56072,277761
f0103ad7:	74 04                	je     f0103add <readline+0xaa>f0103ad76073,277808
f0103ad9:	85 ff                	test   %edi,%edif0103ad96074,277872
f0103adb:	7f bb                	jg     f0103a98 <readline+0x65>f0103adb6075,277921
f0103add:	83 fe 1f             	cmp    $0x1f,%esif0103add6077,278026
f0103ae0:	7e 1c                	jle    f0103afe <readline+0xcb>f0103ae06078,278076
f0103ae2:	81 ff fe 03 00 00    	cmp    $0x3fe,%edif0103ae26079,278140
f0103ae8:	7f 14                	jg     f0103afe <readline+0xcb>f0103ae86080,278191
f0103aea:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)f0103aea6082,278271
f0103aee:	74 c2                	je     f0103ab2 <readline+0x7f>f0103aee6083,278327
f0103af0:	83 ec 0c             	sub    $0xc,%espf0103af06085,278408
f0103af3:	56                   	push   %esif0103af36086,278457
f0103af4:	e8 cd cb ff ff       	call   f01006c6 <cputchar>f0103af46087,278501
f0103af9:	83 c4 10             	add    $0x10,%espf0103af96088,278560
f0103afc:	eb b4                	jmp    f0103ab2 <readline+0x7f>f0103afc6089,278610
f0103afe:	83 fe 0a             	cmp    $0xa,%esif0103afe6091,278713
f0103b01:	74 05                	je     f0103b08 <readline+0xd5>f0103b016092,278762
f0103b03:	83 fe 0d             	cmp    $0xd,%esif0103b036093,278826
f0103b06:	75 b6                	jne    f0103abe <readline+0x8b>f0103b066094,278875
f0103b08:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)f0103b086096,278955
f0103b0c:	75 13                	jne    f0103b21 <readline+0xee>f0103b0c6097,279011
f0103b0e:	c6 84 3b b4 1f 00 00 	movb   $0x0,0x1fb4(%ebx,%edi,1)f0103b0e6099,279090
f0103b15:	00 f0103b156100,279154
f0103b16:	8d 83 b4 1f 00 00    	lea    0x1fb4(%ebx),%eaxf0103b166102,279183
f0103b1c:	e9 6f ff ff ff       	jmp    f0103a90 <readline+0x5d>f0103b1c6103,279240
f0103b21:	83 ec 0c             	sub    $0xc,%espf0103b216105,279324
f0103b24:	6a 0a                	push   $0xaf0103b246106,279373
f0103b26:	e8 9b cb ff ff       	call   f01006c6 <cputchar>f0103b266107,279417
f0103b2b:	83 c4 10             	add    $0x10,%espf0103b2b6108,279476
f0103b2e:	eb de                	jmp    f0103b0e <readline+0xdb>f0103b2e6109,279526
f0103b30 <strlen>:f0103b306111,279591
#define ASM 1ASM6113,279649
intint6115,279664
f0103b30:	55                   	push   %ebpf0103b306118,279692
f0103b31:	89 e5                	mov    %esp,%ebpf0103b316119,279736
f0103b33:	8b 55 08             	mov    0x8(%ebp),%edxf0103b336120,279785
f0103b36:	b8 00 00 00 00       	mov    $0x0,%eaxf0103b366124,279878
f0103b3b:	eb 03                	jmp    f0103b40 <strlen+0x10>f0103b3b6125,279927
f0103b3d:	83 c0 01             	add    $0x1,%eaxf0103b3d6127,279996
f0103b40:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)f0103b406129,280075
f0103b44:	75 f7                	jne    f0103b3d <strlen+0xd>f0103b446130,280133
f0103b46:	5d                   	pop    %ebpf0103b466133,280207
f0103b47:	c3                   	ret    f0103b476134,280251
f0103b48 <strnlen>:f0103b486136,280292
intint6138,280313
f0103b48:	55                   	push   %ebpf0103b486141,280355
f0103b49:	89 e5                	mov    %esp,%ebpf0103b496142,280399
f0103b4b:	8b 4d 08             	mov    0x8(%ebp),%ecxf0103b4b6143,280448
f0103b4e:	8b 55 0c             	mov    0xc(%ebp),%edxf0103b4e6144,280502
f0103b51:	b8 00 00 00 00       	mov    $0x0,%eaxf0103b516148,280615
f0103b56:	eb 03                	jmp    f0103b5b <strnlen+0x13>f0103b566149,280664
f0103b58:	83 c0 01             	add    $0x1,%eaxf0103b586151,280734
f0103b5b:	39 d0                	cmp    %edx,%eaxf0103b5b6153,280833
f0103b5d:	74 06                	je     f0103b65 <strnlen+0x1d>f0103b5d6154,280882
f0103b5f:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)f0103b5f6155,280945
f0103b63:	75 f3                	jne    f0103b58 <strnlen+0x10>f0103b636156,281003
f0103b65:	5d                   	pop    %ebpf0103b656159,281079
f0103b66:	c3                   	ret    f0103b666160,281123
f0103b67 <strcpy>:f0103b676162,281164
char *char6164,281184
f0103b67:	55                   	push   %ebpf0103b676167,281228
f0103b68:	89 e5                	mov    %esp,%ebpf0103b686168,281272
f0103b6a:	53                   	push   %ebxf0103b6a6169,281321
f0103b6b:	8b 45 08             	mov    0x8(%ebp),%eaxf0103b6b6170,281365
f0103b6e:	8b 4d 0c             	mov    0xc(%ebp),%ecxf0103b6e6171,281419
	ret = dst;ret6174,281486
f0103b71:	89 c2                	mov    %eax,%edxf0103b716176,281533
f0103b73:	83 c1 01             	add    $0x1,%ecxf0103b736177,281582
f0103b76:	83 c2 01             	add    $0x1,%edxf0103b766178,281631
f0103b79:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebxf0103b796179,281680
f0103b7d:	88 5a ff             	mov    %bl,-0x1(%edx)f0103b7d6180,281735
f0103b80:	84 db                	test   %bl,%blf0103b806181,281789
f0103b82:	75 ef                	jne    f0103b73 <strcpy+0xc>f0103b826182,281836
f0103b84:	5b                   	pop    %ebxf0103b846186,281932
f0103b85:	5d                   	pop    %ebpf0103b856187,281976
f0103b86:	c3                   	ret    f0103b866188,282020
f0103b87 <strcat>:f0103b876190,282061
char *char6192,282081
f0103b87:	55                   	push   %ebpf0103b876195,282125
f0103b88:	89 e5                	mov    %esp,%ebpf0103b886196,282169
f0103b8a:	53                   	push   %ebxf0103b8a6197,282218
f0103b8b:	8b 5d 08             	mov    0x8(%ebp),%ebxf0103b8b6198,282262
f0103b8e:	53                   	push   %ebxf0103b8e6200,282340
f0103b8f:	e8 9c ff ff ff       	call   f0103b30 <strlen>f0103b8f6201,282384
f0103b94:	83 c4 04             	add    $0x4,%espf0103b946202,282441
f0103b97:	ff 75 0c             	pushl  0xc(%ebp)f0103b976204,282515
f0103b9a:	01 d8                	add    %ebx,%eaxf0103b9a6205,282564
f0103b9c:	50                   	push   %eaxf0103b9c6206,282613
f0103b9d:	e8 c5 ff ff ff       	call   f0103b67 <strcpy>f0103b9d6207,282657
f0103ba2:	89 d8                	mov    %ebx,%eaxf0103ba26210,282729
f0103ba4:	8b 5d fc             	mov    -0x4(%ebp),%ebxf0103ba46211,282778
f0103ba7:	c9                   	leave  f0103ba76212,282833
f0103ba8:	c3                   	ret    f0103ba86213,282873
f0103ba9 <strncpy>:f0103ba96215,282914
char *char6217,282935
f0103ba9:	55                   	push   %ebpf0103ba96219,282993
f0103baa:	89 e5                	mov    %esp,%ebpf0103baa6220,283037
f0103bac:	56                   	push   %esif0103bac6221,283086
f0103bad:	53                   	push   %ebxf0103bad6222,283130
f0103bae:	8b 75 08             	mov    0x8(%ebp),%esif0103bae6223,283174
f0103bb1:	8b 4d 0c             	mov    0xc(%ebp),%ecxf0103bb16224,283228
f0103bb4:	89 f3                	mov    %esi,%ebxf0103bb46225,283282
f0103bb6:	03 5d 10             	add    0x10(%ebp),%ebxf0103bb66226,283331
	ret = dst;ret6230,283410
f0103bb9:	89 f2                	mov    %esi,%edxf0103bb96232,283452
f0103bbb:	eb 0f                	jmp    f0103bcc <strncpy+0x23>f0103bbb6233,283501
f0103bbd:	83 c2 01             	add    $0x1,%edxf0103bbd6235,283581
f0103bc0:	0f b6 01             	movzbl (%ecx),%eaxf0103bc06236,283630
f0103bc3:	88 42 ff             	mov    %al,-0x1(%edx)f0103bc36237,283681
f0103bc6:	80 39 01             	cmpb   $0x1,(%ecx)f0103bc66241,283828
f0103bc9:	83 d9 ff             	sbb    $0xffffffff,%ecxf0103bc96242,283879
f0103bcc:	39 da                	cmp    %ebx,%edxf0103bcc6244,283965
f0103bce:	75 ed                	jne    f0103bbd <strncpy+0x14>f0103bce6245,284014
f0103bd0:	89 f0                	mov    %esi,%eaxf0103bd06249,284095
f0103bd2:	5b                   	pop    %ebxf0103bd26250,284144
f0103bd3:	5e                   	pop    %esif0103bd36251,284188
f0103bd4:	5d                   	pop    %ebpf0103bd46252,284232
f0103bd5:	c3                   	ret    f0103bd56253,284276
f0103bd6 <strlcpy>:f0103bd66255,284317
size_tsize_t6257,284338
f0103bd6:	55                   	push   %ebpf0103bd66260,284396
f0103bd7:	89 e5                	mov    %esp,%ebpf0103bd76261,284440
f0103bd9:	56                   	push   %esif0103bd96262,284489
f0103bda:	53                   	push   %ebxf0103bda6263,284533
f0103bdb:	8b 75 08             	mov    0x8(%ebp),%esif0103bdb6264,284577
f0103bde:	8b 55 0c             	mov    0xc(%ebp),%edxf0103bde6265,284631
f0103be1:	8b 4d 10             	mov    0x10(%ebp),%ecxf0103be16266,284685
f0103be4:	89 f0                	mov    %esi,%eaxf0103be46267,284740
f0103be6:	8d 5c 0e ff          	lea    -0x1(%esi,%ecx,1),%ebxf0103be66268,284789
	dst_in = dst;dst_in6271,284867
f0103bea:	85 c9                	test   %ecx,%ecxf0103bea6273,284899
f0103bec:	75 0b                	jne    f0103bf9 <strlcpy+0x23>f0103bec6274,284948
f0103bee:	eb 17                	jmp    f0103c07 <strlcpy+0x31>f0103bee6275,285011
f0103bf0:	83 c2 01             	add    $0x1,%edxf0103bf06278,285131
f0103bf3:	83 c0 01             	add    $0x1,%eaxf0103bf36279,285180
f0103bf6:	88 48 ff             	mov    %cl,-0x1(%eax)f0103bf66280,285229
f0103bf9:	39 d8                	cmp    %ebx,%eaxf0103bf96282,285320
f0103bfb:	74 07                	je     f0103c04 <strlcpy+0x2e>f0103bfb6283,285369
f0103bfd:	0f b6 0a             	movzbl (%edx),%ecxf0103bfd6284,285432
f0103c00:	84 c9                	test   %cl,%clf0103c006285,285483
f0103c02:	75 ec                	jne    f0103bf0 <strlcpy+0x1a>f0103c026286,285530
f0103c04:	c6 00 00             	movb   $0x0,(%eax)f0103c046288,285608
f0103c07:	29 f0                	sub    %esi,%eaxf0103c076291,285684
f0103c09:	5b                   	pop    %ebxf0103c096293,285735
f0103c0a:	5e                   	pop    %esif0103c0a6294,285779
f0103c0b:	5d                   	pop    %ebpf0103c0b6295,285823
f0103c0c:	c3                   	ret    f0103c0c6296,285867
f0103c0d <strcmp>:f0103c0d6298,285908
intint6300,285928
f0103c0d:	55                   	push   %ebpf0103c0d6303,285971
f0103c0e:	89 e5                	mov    %esp,%ebpf0103c0e6304,286015
f0103c10:	8b 4d 08             	mov    0x8(%ebp),%ecxf0103c106305,286064
f0103c13:	8b 55 0c             	mov    0xc(%ebp),%edxf0103c136306,286118
f0103c16:	eb 06                	jmp    f0103c1e <strcmp+0x11>f0103c166308,286196
f0103c18:	83 c1 01             	add    $0x1,%ecxf0103c186310,286270
f0103c1b:	83 c2 01             	add    $0x1,%edxf0103c1b6311,286319
f0103c1e:	0f b6 01             	movzbl (%ecx),%eaxf0103c1e6313,286392
f0103c21:	84 c0                	test   %al,%alf0103c216314,286443
f0103c23:	74 04                	je     f0103c29 <strcmp+0x1c>f0103c236315,286490
f0103c25:	3a 02                	cmp    (%edx),%alf0103c256316,286552
f0103c27:	74 ef                	je     f0103c18 <strcmp+0xb>f0103c276317,286602
f0103c29:	0f b6 c0             	movzbl %al,%eaxf0103c296319,286720
f0103c2c:	0f b6 12             	movzbl (%edx),%edxf0103c2c6320,286768
f0103c2f:	29 d0                	sub    %edx,%eaxf0103c2f6321,286819
f0103c31:	5d                   	pop    %ebpf0103c316323,286870
f0103c32:	c3                   	ret    f0103c326324,286914
f0103c33 <strncmp>:f0103c336326,286955
intint6328,286976
f0103c33:	55                   	push   %ebpf0103c336331,287030
f0103c34:	89 e5                	mov    %esp,%ebpf0103c346332,287074
f0103c36:	53                   	push   %ebxf0103c366333,287123
f0103c37:	8b 45 08             	mov    0x8(%ebp),%eaxf0103c376334,287167
f0103c3a:	8b 55 0c             	mov    0xc(%ebp),%edxf0103c3a6335,287221
f0103c3d:	89 c3                	mov    %eax,%ebxf0103c3d6336,287275
f0103c3f:	03 5d 10             	add    0x10(%ebp),%ebxf0103c3f6337,287324
f0103c42:	eb 06                	jmp    f0103c4a <strncmp+0x17>f0103c426339,287412
f0103c44:	83 c0 01             	add    $0x1,%eaxf0103c446341,287492
f0103c47:	83 c2 01             	add    $0x1,%edxf0103c476342,287541
f0103c4a:	39 d8                	cmp    %ebx,%eaxf0103c4a6344,287623
f0103c4c:	74 16                	je     f0103c64 <strncmp+0x31>f0103c4c6345,287672
f0103c4e:	0f b6 08             	movzbl (%eax),%ecxf0103c4e6346,287735
f0103c51:	84 c9                	test   %cl,%clf0103c516347,287786
f0103c53:	74 04                	je     f0103c59 <strncmp+0x26>f0103c536348,287833
f0103c55:	3a 0a                	cmp    (%edx),%clf0103c556349,287896
f0103c57:	74 eb                	je     f0103c44 <strncmp+0x11>f0103c576350,287946
f0103c59:	0f b6 00             	movzbl (%eax),%eaxf0103c596355,288098
f0103c5c:	0f b6 12             	movzbl (%edx),%edxf0103c5c6356,288149
f0103c5f:	29 d0                	sub    %edx,%eaxf0103c5f6357,288200
f0103c61:	5b                   	pop    %ebxf0103c616359,288251
f0103c62:	5d                   	pop    %ebpf0103c626360,288295
f0103c63:	c3                   	ret    f0103c636361,288339
f0103c64:	b8 00 00 00 00       	mov    $0x0,%eaxf0103c646363,288391
f0103c69:	eb f6                	jmp    f0103c61 <strncmp+0x2e>f0103c696364,288440
f0103c6b <strchr>:f0103c6b6366,288504
char *char6370,288630
f0103c6b:	55                   	push   %ebpf0103c6b6373,288669
f0103c6c:	89 e5                	mov    %esp,%ebpf0103c6c6374,288713
f0103c6e:	8b 45 08             	mov    0x8(%ebp),%eaxf0103c6e6375,288762
f0103c71:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecxf0103c716376,288816
f0103c75:	0f b6 10             	movzbl (%eax),%edxf0103c756378,288887
f0103c78:	84 d2                	test   %dl,%dlf0103c786379,288938
f0103c7a:	74 09                	je     f0103c85 <strchr+0x1a>f0103c7a6380,288985
f0103c7c:	38 ca                	cmp    %cl,%dlf0103c7c6382,289062
f0103c7e:	74 0a                	je     f0103c8a <strchr+0x1f>f0103c7e6383,289109
f0103c80:	83 c0 01             	add    $0x1,%eaxf0103c806385,289188
f0103c83:	eb f0                	jmp    f0103c75 <strchr+0xa>f0103c836386,289237
f0103c85:	b8 00 00 00 00       	mov    $0x0,%eaxf0103c856389,289331
f0103c8a:	5d                   	pop    %ebpf0103c8a6391,289382
f0103c8b:	c3                   	ret    f0103c8b6392,289426
f0103c8c <strfind>:f0103c8c6394,289467
char *char6398,289625
f0103c8c:	55                   	push   %ebpf0103c8c6401,289665
f0103c8d:	89 e5                	mov    %esp,%ebpf0103c8d6402,289709
f0103c8f:	8b 45 08             	mov    0x8(%ebp),%eaxf0103c8f6403,289758
f0103c92:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecxf0103c926404,289812
f0103c96:	eb 03                	jmp    f0103c9b <strfind+0xf>f0103c966406,289883
f0103c98:	83 c0 01             	add    $0x1,%eaxf0103c986407,289945
f0103c9b:	0f b6 10             	movzbl (%eax),%edxf0103c9b6408,289994
f0103c9e:	38 ca                	cmp    %cl,%dlf0103c9e6410,290060
f0103ca0:	74 04                	je     f0103ca6 <strfind+0x1a>f0103ca06411,290107
f0103ca2:	84 d2                	test   %dl,%dlf0103ca26412,290170
f0103ca4:	75 f2                	jne    f0103c98 <strfind+0xc>f0103ca46413,290217
f0103ca6:	5d                   	pop    %ebpf0103ca66417,290311
f0103ca7:	c3                   	ret    f0103ca76418,290355
f0103ca8 <memset>:f0103ca86420,290396
void *void6423,290424
f0103ca8:	55                   	push   %ebpf0103ca86426,290466
f0103ca9:	89 e5                	mov    %esp,%ebpf0103ca96427,290510
f0103cab:	57                   	push   %edif0103cab6428,290559
f0103cac:	56                   	push   %esif0103cac6429,290603
f0103cad:	53                   	push   %ebxf0103cad6430,290647
f0103cae:	8b 7d 08             	mov    0x8(%ebp),%edif0103cae6431,290691
f0103cb1:	8b 4d 10             	mov    0x10(%ebp),%ecxf0103cb16432,290745
f0103cb4:	85 c9                	test   %ecx,%ecxf0103cb46436,290824
f0103cb6:	74 13                	je     f0103ccb <memset+0x23>f0103cb66437,290873
f0103cb8:	f7 c7 03 00 00 00    	test   $0x3,%edif0103cb86440,290981
f0103cbe:	75 05                	jne    f0103cc5 <memset+0x1d>f0103cbe6441,291030
f0103cc0:	f6 c1 03             	test   $0x3,%clf0103cc06442,291092
f0103cc3:	74 0d                	je     f0103cd2 <memset+0x2a>f0103cc36443,291140
		c = (c<<24)|(c<<16)|(c<<8)|c;c6444,291202
f0103cc5:	8b 45 0c             	mov    0xc(%ebp),%eaxf0103cc56450,291366
f0103cc8:	fc                   	cld    f0103cc86451,291420
f0103cc9:	f3 aa                	rep stos %al,%es:(%edi)f0103cc96452,291460
f0103ccb:	89 f8                	mov    %edi,%eaxf0103ccb6457,291583
f0103ccd:	5b                   	pop    %ebxf0103ccd6458,291632
f0103cce:	5e                   	pop    %esif0103cce6459,291676
f0103ccf:	5f                   	pop    %edif0103ccf6460,291720
f0103cd0:	5d                   	pop    %ebpf0103cd06461,291764
f0103cd1:	c3                   	ret    f0103cd16462,291808
f0103cd2:	0f b6 55 0c          	movzbl 0xc(%ebp),%edxf0103cd26464,291861
		c = (c<<24)|(c<<16)|(c<<8)|c;c6465,291915
f0103cd6:	89 d3                	mov    %edx,%ebxf0103cd66466,291947
f0103cd8:	c1 e3 08             	shl    $0x8,%ebxf0103cd86467,291996
f0103cdb:	89 d0                	mov    %edx,%eaxf0103cdb6468,292045
f0103cdd:	c1 e0 18             	shl    $0x18,%eaxf0103cdd6469,292094
f0103ce0:	89 d6                	mov    %edx,%esif0103ce06470,292144
f0103ce2:	c1 e6 10             	shl    $0x10,%esif0103ce26471,292193
f0103ce5:	09 f0                	or     %esi,%eaxf0103ce56472,292243
f0103ce7:	09 c2                	or     %eax,%edxf0103ce76473,292292
f0103ce9:	09 da                	or     %ebx,%edxf0103ce96474,292341
f0103ceb:	c1 e9 02             	shr    $0x2,%ecxf0103ceb6476,292424
f0103cee:	89 d0                	mov    %edx,%eaxf0103cee6478,292507
f0103cf0:	fc                   	cld    f0103cf06479,292556
f0103cf1:	f3 ab                	rep stos %eax,%es:(%edi)f0103cf16480,292596
f0103cf3:	eb d6                	jmp    f0103ccb <memset+0x23>f0103cf36481,292653
f0103cf5 <memmove>:f0103cf56483,292716
void *void6485,292737
f0103cf5:	55                   	push   %ebpf0103cf56488,292792
f0103cf6:	89 e5                	mov    %esp,%ebpf0103cf66489,292836
f0103cf8:	57                   	push   %edif0103cf86490,292885
f0103cf9:	56                   	push   %esif0103cf96491,292929
f0103cfa:	8b 45 08             	mov    0x8(%ebp),%eaxf0103cfa6492,292973
f0103cfd:	8b 75 0c             	mov    0xc(%ebp),%esif0103cfd6493,293027
f0103d00:	8b 4d 10             	mov    0x10(%ebp),%ecxf0103d006494,293081
	s = src;s6498,293163
	d = dst;d6499,293173
f0103d03:	39 c6                	cmp    %eax,%esif0103d036501,293210
f0103d05:	73 35                	jae    f0103d3c <memmove+0x47>f0103d056502,293259
f0103d07:	8d 14 0e             	lea    (%esi,%ecx,1),%edxf0103d076503,293322
f0103d0a:	39 c2                	cmp    %eax,%edxf0103d0a6504,293380
f0103d0c:	76 2e                	jbe    f0103d3c <memmove+0x47>f0103d0c6505,293429
f0103d0e:	8d 3c 08             	lea    (%eax,%ecx,1),%edif0103d0e6508,293512
f0103d11:	89 d6                	mov    %edx,%esif0103d116510,293620
f0103d13:	09 fe                	or     %edi,%esif0103d136511,293669
f0103d15:	f7 c6 03 00 00 00    	test   $0x3,%esif0103d156512,293718
f0103d1b:	74 0c                	je     f0103d29 <memmove+0x34>f0103d1b6513,293767
f0103d1d:	83 ef 01             	sub    $0x1,%edif0103d1d6519,294021
f0103d20:	8d 72 ff             	lea    -0x1(%edx),%esif0103d206520,294070
f0103d23:	fd                   	std    f0103d236522,294160
f0103d24:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)f0103d246523,294200
f0103d26:	fc                   	cld    f0103d266526,294345
f0103d27:	eb 21                	jmp    f0103d4a <memmove+0x55>f0103d276527,294385
f0103d29:	f6 c1 03             	test   $0x3,%clf0103d296529,294498
f0103d2c:	75 ef                	jne    f0103d1d <memmove+0x28>f0103d2c6530,294546
f0103d2e:	83 ef 04             	sub    $0x4,%edif0103d2e6532,294667
f0103d31:	8d 72 fc             	lea    -0x4(%edx),%esif0103d316533,294716
f0103d34:	c1 e9 02             	shr    $0x2,%ecxf0103d346534,294771
f0103d37:	fd                   	std    f0103d376536,294855
f0103d38:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)f0103d386537,294895
f0103d3a:	eb ea                	jmp    f0103d26 <memmove+0x31>f0103d3a6538,294959
f0103d3c:	89 f2                	mov    %esi,%edxf0103d3c6541,295082
f0103d3e:	09 c2                	or     %eax,%edxf0103d3e6542,295131
f0103d40:	f6 c2 03             	test   $0x3,%dlf0103d406543,295180
f0103d43:	74 09                	je     f0103d4e <memmove+0x59>f0103d436544,295228
f0103d45:	89 c7                	mov    %eax,%edif0103d456549,295422
f0103d47:	fc                   	cld    f0103d476550,295471
f0103d48:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)f0103d486551,295511
f0103d4a:	5e                   	pop    %esif0103d4a6556,295645
f0103d4b:	5f                   	pop    %edif0103d4b6557,295689
f0103d4c:	5d                   	pop    %ebpf0103d4c6558,295733
f0103d4d:	c3                   	ret    f0103d4d6559,295777
f0103d4e:	f6 c1 03             	test   $0x3,%clf0103d4e6561,295867
f0103d51:	75 f2                	jne    f0103d45 <memmove+0x50>f0103d516562,295915
f0103d53:	c1 e9 02             	shr    $0x2,%ecxf0103d536564,296032
f0103d56:	89 c7                	mov    %eax,%edif0103d566566,296116
f0103d58:	fc                   	cld    f0103d586567,296165
f0103d59:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)f0103d596568,296205
f0103d5b:	eb ed                	jmp    f0103d4a <memmove+0x55>f0103d5b6569,296269
f0103d5d <memcpy>:f0103d5d6571,296333
void *void6575,296362
f0103d5d:	55                   	push   %ebpf0103d5d6578,296416
f0103d5e:	89 e5                	mov    %esp,%ebpf0103d5e6579,296460
f0103d60:	ff 75 10             	pushl  0x10(%ebp)f0103d606581,296539
f0103d63:	ff 75 0c             	pushl  0xc(%ebp)f0103d636582,296589
f0103d66:	ff 75 08             	pushl  0x8(%ebp)f0103d666583,296638
f0103d69:	e8 87 ff ff ff       	call   f0103cf5 <memmove>f0103d696584,296687
f0103d6e:	c9                   	leave  f0103d6e6586,296747
f0103d6f:	c3                   	ret    f0103d6f6587,296787
f0103d70 <memcmp>:f0103d706589,296828
intint6591,296848
f0103d70:	55                   	push   %ebpf0103d706594,296903
f0103d71:	89 e5                	mov    %esp,%ebpf0103d716595,296947
f0103d73:	56                   	push   %esif0103d736596,296996
f0103d74:	53                   	push   %ebxf0103d746597,297040
f0103d75:	8b 45 08             	mov    0x8(%ebp),%eaxf0103d756598,297084
f0103d78:	8b 55 0c             	mov    0xc(%ebp),%edxf0103d786599,297138
f0103d7b:	89 c6                	mov    %eax,%esif0103d7b6600,297192
f0103d7d:	03 75 10             	add    0x10(%ebp),%esif0103d7d6601,297241
f0103d80:	39 f0                	cmp    %esi,%eaxf0103d806606,297402
f0103d82:	74 1c                	je     f0103da0 <memcmp+0x30>f0103d826607,297451
f0103d84:	0f b6 08             	movzbl (%eax),%ecxf0103d846609,297531
f0103d87:	0f b6 1a             	movzbl (%edx),%ebxf0103d876610,297582
f0103d8a:	38 d9                	cmp    %bl,%clf0103d8a6611,297633
f0103d8c:	75 08                	jne    f0103d96 <memcmp+0x26>f0103d8c6612,297680
f0103d8e:	83 c0 01             	add    $0x1,%eaxf0103d8e6615,297789
f0103d91:	83 c2 01             	add    $0x1,%edxf0103d916616,297838
f0103d94:	eb ea                	jmp    f0103d80 <memcmp+0x10>f0103d946617,297887
f0103d96:	0f b6 c1             	movzbl %cl,%eaxf0103d966619,297982
f0103d99:	0f b6 db             	movzbl %bl,%ebxf0103d996620,298030
f0103d9c:	29 d8                	sub    %ebx,%eaxf0103d9c6621,298078
f0103d9e:	eb 05                	jmp    f0103da5 <memcmp+0x35>f0103d9e6622,298127
f0103da0:	b8 00 00 00 00       	mov    $0x0,%eaxf0103da06626,298204
f0103da5:	5b                   	pop    %ebxf0103da56628,298255
f0103da6:	5e                   	pop    %esif0103da66629,298299
f0103da7:	5d                   	pop    %ebpf0103da76630,298343
f0103da8:	c3                   	ret    f0103da86631,298387
f0103da9 <memfind>:f0103da96633,298428
void *void6635,298449
f0103da9:	55                   	push   %ebpf0103da96638,298498
f0103daa:	89 e5                	mov    %esp,%ebpf0103daa6639,298542
f0103dac:	8b 45 08             	mov    0x8(%ebp),%eaxf0103dac6640,298591
f0103daf:	8b 4d 0c             	mov    0xc(%ebp),%ecxf0103daf6641,298645
f0103db2:	89 c2                	mov    %eax,%edxf0103db26643,298741
f0103db4:	03 55 10             	add    0x10(%ebp),%edxf0103db46644,298790
f0103db7:	39 d0                	cmp    %edx,%eaxf0103db76646,298868
f0103db9:	73 09                	jae    f0103dc4 <memfind+0x1b>f0103db96647,298917
f0103dbb:	38 08                	cmp    %cl,(%eax)f0103dbb6649,299035
f0103dbd:	74 05                	je     f0103dc4 <memfind+0x1b>f0103dbd6650,299085
f0103dbf:	83 c0 01             	add    $0x1,%eaxf0103dbf6652,299171
f0103dc2:	eb f3                	jmp    f0103db7 <memfind+0xe>f0103dc26653,299220
f0103dc4:	5d                   	pop    %ebpf0103dc46657,299314
f0103dc5:	c3                   	ret    f0103dc56658,299358
f0103dc6 <strtol>:f0103dc66660,299399
longlong6662,299419
f0103dc6:	55                   	push   %ebpf0103dc66665,299473
f0103dc7:	89 e5                	mov    %esp,%ebpf0103dc76666,299517
f0103dc9:	57                   	push   %edif0103dc96667,299566
f0103dca:	56                   	push   %esif0103dca6668,299610
f0103dcb:	53                   	push   %ebxf0103dcb6669,299654
f0103dcc:	8b 4d 08             	mov    0x8(%ebp),%ecxf0103dcc6670,299698
f0103dcf:	8b 5d 10             	mov    0x10(%ebp),%ebxf0103dcf6671,299752
f0103dd2:	eb 03                	jmp    f0103dd7 <strtol+0x11>f0103dd26677,299900
f0103dd4:	83 c1 01             	add    $0x1,%ecxf0103dd46679,299969
f0103dd7:	0f b6 01             	movzbl (%ecx),%eaxf0103dd76681,300051
f0103dda:	3c 20                	cmp    $0x20,%alf0103dda6682,300102
f0103ddc:	74 f6                	je     f0103dd4 <strtol+0xe>f0103ddc6683,300151
f0103dde:	3c 09                	cmp    $0x9,%alf0103dde6684,300212
f0103de0:	74 f2                	je     f0103dd4 <strtol+0xe>f0103de06685,300260
f0103de2:	3c 2b                	cmp    $0x2b,%alf0103de26689,300358
f0103de4:	74 2e                	je     f0103e14 <strtol+0x4e>f0103de46690,300407
f0103de6:	bf 00 00 00 00       	mov    $0x0,%edif0103de66692,300483
f0103deb:	3c 2d                	cmp    $0x2d,%alf0103deb6695,300560
f0103ded:	74 2f                	je     f0103e1e <strtol+0x58>f0103ded6696,300609
f0103def:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebxf0103def6701,300781
f0103df5:	75 05                	jne    f0103dfc <strtol+0x36>f0103df56702,300837
f0103df7:	80 39 30             	cmpb   $0x30,(%ecx)f0103df76703,300899
f0103dfa:	74 2c                	je     f0103e28 <strtol+0x62>f0103dfa6704,300951
f0103dfc:	85 db                	test   %ebx,%ebxf0103dfc6707,301070
f0103dfe:	75 0a                	jne    f0103e0a <strtol+0x44>f0103dfe6708,301119
		base = 10;base6711,301219
f0103e00:	bb 0a 00 00 00       	mov    $0xa,%ebxf0103e006712,301232
f0103e05:	80 39 30             	cmpb   $0x30,(%ecx)f0103e056714,301317
f0103e08:	74 28                	je     f0103e32 <strtol+0x6c>f0103e086715,301369
		base = 10;base6716,301431
f0103e0a:	b8 00 00 00 00       	mov    $0x0,%eaxf0103e0a6717,301444
f0103e0f:	89 5d 10             	mov    %ebx,0x10(%ebp)f0103e0f6718,301493
f0103e12:	eb 50                	jmp    f0103e64 <strtol+0x9e>f0103e126719,301548
f0103e14:	83 c1 01             	add    $0x1,%ecxf0103e146721,301617
f0103e17:	bf 00 00 00 00       	mov    $0x0,%edif0103e176723,301680
f0103e1c:	eb d1                	jmp    f0103def <strtol+0x29>f0103e1c6724,301729
f0103e1e:	83 c1 01             	add    $0x1,%ecxf0103e1e6726,301807
f0103e21:	bf 01 00 00 00       	mov    $0x1,%edif0103e216727,301856
f0103e26:	eb c7                	jmp    f0103def <strtol+0x29>f0103e266728,301905
f0103e28:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)f0103e286730,302031
f0103e2c:	74 0e                	je     f0103e3c <strtol+0x76>f0103e2c6731,302086
f0103e2e:	85 db                	test   %ebx,%ebxf0103e2e6733,302184
f0103e30:	75 d8                	jne    f0103e0a <strtol+0x44>f0103e306734,302233
f0103e32:	83 c1 01             	add    $0x1,%ecxf0103e326736,302312
f0103e35:	bb 08 00 00 00       	mov    $0x8,%ebxf0103e356737,302361
f0103e3a:	eb ce                	jmp    f0103e0a <strtol+0x44>f0103e3a6738,302410
f0103e3c:	83 c1 02             	add    $0x2,%ecxf0103e3c6740,302493
f0103e3f:	bb 10 00 00 00       	mov    $0x10,%ebxf0103e3f6741,302542
f0103e44:	eb c4                	jmp    f0103e0a <strtol+0x44>f0103e446742,302592
			dig = *s - '0';dig6747,302709
f0103e46:	8d 72 9f             	lea    -0x61(%edx),%esif0103e466749,302763
f0103e49:	89 f3                	mov    %esi,%ebxf0103e496750,302819
f0103e4b:	80 fb 19             	cmp    $0x19,%blf0103e4b6751,302868
f0103e4e:	77 29                	ja     f0103e79 <strtol+0xb3>f0103e4e6752,302917
			dig = *s - 'a' + 10;dig6753,302979
f0103e50:	0f be d2             	movsbl %dl,%edxf0103e506754,303003
f0103e53:	83 ea 57             	sub    $0x57,%edxf0103e536755,303051
			dig = *s - 'A' + 10;dig6757,303136
f0103e56:	3b 55 10             	cmp    0x10(%ebp),%edxf0103e566761,303196
f0103e59:	7d 30                	jge    f0103e8b <strtol+0xc5>f0103e596762,303251
f0103e5b:	83 c1 01             	add    $0x1,%ecxf0103e5b6765,303356
f0103e5e:	0f af 45 10          	imul   0x10(%ebp),%eaxf0103e5e6766,303405
f0103e62:	01 d0                	add    %edx,%eaxf0103e626767,303460
f0103e64:	0f b6 11             	movzbl (%ecx),%edxf0103e646769,303539
f0103e67:	8d 72 d0             	lea    -0x30(%edx),%esif0103e676770,303590
f0103e6a:	89 f3                	mov    %esi,%ebxf0103e6a6771,303646
f0103e6c:	80 fb 09             	cmp    $0x9,%blf0103e6c6772,303695
f0103e6f:	77 d5                	ja     f0103e46 <strtol+0x80>f0103e6f6773,303743
			dig = *s - '0';dig6774,303805
f0103e71:	0f be d2             	movsbl %dl,%edxf0103e716775,303824
f0103e74:	83 ea 30             	sub    $0x30,%edxf0103e746776,303872
f0103e77:	eb dd                	jmp    f0103e56 <strtol+0x90>f0103e776777,303922
f0103e79:	8d 72 bf             	lea    -0x41(%edx),%esif0103e796779,304019
f0103e7c:	89 f3                	mov    %esi,%ebxf0103e7c6780,304075
f0103e7e:	80 fb 19             	cmp    $0x19,%blf0103e7e6781,304124
f0103e81:	77 08                	ja     f0103e8b <strtol+0xc5>f0103e816782,304173
			dig = *s - 'A' + 10;dig6783,304235
f0103e83:	0f be d2             	movsbl %dl,%edxf0103e836784,304259
f0103e86:	83 ea 37             	sub    $0x37,%edxf0103e866785,304307
f0103e89:	eb cb                	jmp    f0103e56 <strtol+0x90>f0103e896786,304357
f0103e8b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)f0103e8b6791,304476
f0103e8f:	74 05                	je     f0103e96 <strtol+0xd0>f0103e8f6792,304530
f0103e91:	8b 75 0c             	mov    0xc(%ebp),%esif0103e916794,304616
f0103e94:	89 0e                	mov    %ecx,(%esi)f0103e946795,304670
f0103e96:	89 c2                	mov    %eax,%edxf0103e966797,304749
f0103e98:	f7 da                	neg    %edxf0103e986798,304798
f0103e9a:	85 ff                	test   %edi,%edif0103e9a6799,304842
f0103e9c:	0f 45 c2             	cmovne %edx,%eaxf0103e9c6800,304891
f0103e9f:	5b                   	pop    %ebxf0103e9f6802,304942
f0103ea0:	5e                   	pop    %esif0103ea06803,304986
f0103ea1:	5f                   	pop    %edif0103ea16804,305030
f0103ea2:	5d                   	pop    %ebpf0103ea26805,305074
f0103ea3:	c3                   	ret    f0103ea36806,305118
f0103ea4:	66 90                	xchg   %ax,%axf0103ea46807,305158
f0103ea6:	66 90                	xchg   %ax,%axf0103ea66808,305205
f0103ea8:	66 90                	xchg   %ax,%axf0103ea86809,305252
f0103eaa:	66 90                	xchg   %ax,%axf0103eaa6810,305299
f0103eac:	66 90                	xchg   %ax,%axf0103eac6811,305346
f0103eae:	66 90                	xchg   %ax,%axf0103eae6812,305393
f0103eb0 <__udivdi3>:f0103eb06814,305441
f0103eb0:	55                   	push   %ebpf0103eb06815,305463
f0103eb1:	57                   	push   %edif0103eb16816,305507
f0103eb2:	56                   	push   %esif0103eb26817,305551
f0103eb3:	53                   	push   %ebxf0103eb36818,305595
f0103eb4:	83 ec 1c             	sub    $0x1c,%espf0103eb46819,305639
f0103eb7:	8b 54 24 3c          	mov    0x3c(%esp),%edxf0103eb76820,305689
f0103ebb:	8b 6c 24 30          	mov    0x30(%esp),%ebpf0103ebb6821,305744
f0103ebf:	8b 74 24 34          	mov    0x34(%esp),%esif0103ebf6822,305799
f0103ec3:	8b 5c 24 38          	mov    0x38(%esp),%ebxf0103ec36823,305854
f0103ec7:	85 d2                	test   %edx,%edxf0103ec76824,305909
f0103ec9:	75 35                	jne    f0103f00 <__udivdi3+0x50>f0103ec96825,305958
f0103ecb:	39 f3                	cmp    %esi,%ebxf0103ecb6826,306023
f0103ecd:	0f 87 bd 00 00 00    	ja     f0103f90 <__udivdi3+0xe0>f0103ecd6827,306072
f0103ed3:	85 db                	test   %ebx,%ebxf0103ed36828,306137
f0103ed5:	89 d9                	mov    %ebx,%ecxf0103ed56829,306186
f0103ed7:	75 0b                	jne    f0103ee4 <__udivdi3+0x34>f0103ed76830,306235
f0103ed9:	b8 01 00 00 00       	mov    $0x1,%eaxf0103ed96831,306300
f0103ede:	31 d2                	xor    %edx,%edxf0103ede6832,306349
f0103ee0:	f7 f3                	div    %ebxf0103ee06833,306398
f0103ee2:	89 c1                	mov    %eax,%ecxf0103ee26834,306442
f0103ee4:	31 d2                	xor    %edx,%edxf0103ee46835,306491
f0103ee6:	89 f0                	mov    %esi,%eaxf0103ee66836,306540
f0103ee8:	f7 f1                	div    %ecxf0103ee86837,306589
f0103eea:	89 c6                	mov    %eax,%esif0103eea6838,306633
f0103eec:	89 e8                	mov    %ebp,%eaxf0103eec6839,306682
f0103eee:	89 f7                	mov    %esi,%edif0103eee6840,306731
f0103ef0:	f7 f1                	div    %ecxf0103ef06841,306780
f0103ef2:	89 fa                	mov    %edi,%edxf0103ef26842,306824
f0103ef4:	83 c4 1c             	add    $0x1c,%espf0103ef46843,306873
f0103ef7:	5b                   	pop    %ebxf0103ef76844,306923
f0103ef8:	5e                   	pop    %esif0103ef86845,306967
f0103ef9:	5f                   	pop    %edif0103ef96846,307011
f0103efa:	5d                   	pop    %ebpf0103efa6847,307055
f0103efb:	c3                   	ret    f0103efb6848,307099
f0103efc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esif0103efc6849,307139
f0103f00:	39 f2                	cmp    %esi,%edxf0103f006850,307200
f0103f02:	77 7c                	ja     f0103f80 <__udivdi3+0xd0>f0103f026851,307249
f0103f04:	0f bd fa             	bsr    %edx,%edif0103f046852,307314
f0103f07:	83 f7 1f             	xor    $0x1f,%edif0103f076853,307363
f0103f0a:	0f 84 98 00 00 00    	je     f0103fa8 <__udivdi3+0xf8>f0103f0a6854,307413
f0103f10:	89 f9                	mov    %edi,%ecxf0103f106855,307478
f0103f12:	b8 20 00 00 00       	mov    $0x20,%eaxf0103f126856,307527
f0103f17:	29 f8                	sub    %edi,%eaxf0103f176857,307577
f0103f19:	d3 e2                	shl    %cl,%edxf0103f196858,307626
f0103f1b:	89 54 24 08          	mov    %edx,0x8(%esp)f0103f1b6859,307674
f0103f1f:	89 c1                	mov    %eax,%ecxf0103f1f6860,307728
f0103f21:	89 da                	mov    %ebx,%edxf0103f216861,307777
f0103f23:	d3 ea                	shr    %cl,%edxf0103f236862,307826
f0103f25:	8b 4c 24 08          	mov    0x8(%esp),%ecxf0103f256863,307874
f0103f29:	09 d1                	or     %edx,%ecxf0103f296864,307928
f0103f2b:	89 f2                	mov    %esi,%edxf0103f2b6865,307977
f0103f2d:	89 4c 24 08          	mov    %ecx,0x8(%esp)f0103f2d6866,308026
f0103f31:	89 f9                	mov    %edi,%ecxf0103f316867,308080
f0103f33:	d3 e3                	shl    %cl,%ebxf0103f336868,308129
f0103f35:	89 c1                	mov    %eax,%ecxf0103f356869,308177
f0103f37:	d3 ea                	shr    %cl,%edxf0103f376870,308226
f0103f39:	89 f9                	mov    %edi,%ecxf0103f396871,308274
f0103f3b:	89 5c 24 0c          	mov    %ebx,0xc(%esp)f0103f3b6872,308323
f0103f3f:	d3 e6                	shl    %cl,%esif0103f3f6873,308377
f0103f41:	89 eb                	mov    %ebp,%ebxf0103f416874,308425
f0103f43:	89 c1                	mov    %eax,%ecxf0103f436875,308474
f0103f45:	d3 eb                	shr    %cl,%ebxf0103f456876,308523
f0103f47:	09 de                	or     %ebx,%esif0103f476877,308571
f0103f49:	89 f0                	mov    %esi,%eaxf0103f496878,308620
f0103f4b:	f7 74 24 08          	divl   0x8(%esp)f0103f4b6879,308669
f0103f4f:	89 d6                	mov    %edx,%esif0103f4f6880,308718
f0103f51:	89 c3                	mov    %eax,%ebxf0103f516881,308767
f0103f53:	f7 64 24 0c          	mull   0xc(%esp)f0103f536882,308816
f0103f57:	39 d6                	cmp    %edx,%esif0103f576883,308865
f0103f59:	72 0c                	jb     f0103f67 <__udivdi3+0xb7>f0103f596884,308914
f0103f5b:	89 f9                	mov    %edi,%ecxf0103f5b6885,308979
f0103f5d:	d3 e5                	shl    %cl,%ebpf0103f5d6886,309028
f0103f5f:	39 c5                	cmp    %eax,%ebpf0103f5f6887,309076
f0103f61:	73 5d                	jae    f0103fc0 <__udivdi3+0x110>f0103f616888,309125
f0103f63:	39 d6                	cmp    %edx,%esif0103f636889,309191
f0103f65:	75 59                	jne    f0103fc0 <__udivdi3+0x110>f0103f656890,309240
f0103f67:	8d 43 ff             	lea    -0x1(%ebx),%eaxf0103f676891,309306
f0103f6a:	31 ff                	xor    %edi,%edif0103f6a6892,309361
f0103f6c:	89 fa                	mov    %edi,%edxf0103f6c6893,309410
f0103f6e:	83 c4 1c             	add    $0x1c,%espf0103f6e6894,309459
f0103f71:	5b                   	pop    %ebxf0103f716895,309509
f0103f72:	5e                   	pop    %esif0103f726896,309553
f0103f73:	5f                   	pop    %edif0103f736897,309597
f0103f74:	5d                   	pop    %ebpf0103f746898,309641
f0103f75:	c3                   	ret    f0103f756899,309685
f0103f76:	8d 76 00             	lea    0x0(%esi),%esif0103f766900,309725
f0103f79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edif0103f796901,309779
f0103f80:	31 ff                	xor    %edi,%edif0103f806902,309840
f0103f82:	31 c0                	xor    %eax,%eaxf0103f826903,309889
f0103f84:	89 fa                	mov    %edi,%edxf0103f846904,309938
f0103f86:	83 c4 1c             	add    $0x1c,%espf0103f866905,309987
f0103f89:	5b                   	pop    %ebxf0103f896906,310037
f0103f8a:	5e                   	pop    %esif0103f8a6907,310081
f0103f8b:	5f                   	pop    %edif0103f8b6908,310125
f0103f8c:	5d                   	pop    %ebpf0103f8c6909,310169
f0103f8d:	c3                   	ret    f0103f8d6910,310213
f0103f8e:	66 90                	xchg   %ax,%axf0103f8e6911,310253
f0103f90:	31 ff                	xor    %edi,%edif0103f906912,310300
f0103f92:	89 e8                	mov    %ebp,%eaxf0103f926913,310349
f0103f94:	89 f2                	mov    %esi,%edxf0103f946914,310398
f0103f96:	f7 f3                	div    %ebxf0103f966915,310447
f0103f98:	89 fa                	mov    %edi,%edxf0103f986916,310491
f0103f9a:	83 c4 1c             	add    $0x1c,%espf0103f9a6917,310540
f0103f9d:	5b                   	pop    %ebxf0103f9d6918,310590
f0103f9e:	5e                   	pop    %esif0103f9e6919,310634
f0103f9f:	5f                   	pop    %edif0103f9f6920,310678
f0103fa0:	5d                   	pop    %ebpf0103fa06921,310722
f0103fa1:	c3                   	ret    f0103fa16922,310766
f0103fa2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esif0103fa26923,310806
f0103fa8:	39 f2                	cmp    %esi,%edxf0103fa86924,310860
f0103faa:	72 06                	jb     f0103fb2 <__udivdi3+0x102>f0103faa6925,310909
f0103fac:	31 c0                	xor    %eax,%eaxf0103fac6926,310975
f0103fae:	39 eb                	cmp    %ebp,%ebxf0103fae6927,311024
f0103fb0:	77 d2                	ja     f0103f84 <__udivdi3+0xd4>f0103fb06928,311073
f0103fb2:	b8 01 00 00 00       	mov    $0x1,%eaxf0103fb26929,311138
f0103fb7:	eb cb                	jmp    f0103f84 <__udivdi3+0xd4>f0103fb76930,311187
f0103fb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esif0103fb96931,311252
f0103fc0:	89 d8                	mov    %ebx,%eaxf0103fc06932,311313
f0103fc2:	31 ff                	xor    %edi,%edif0103fc26933,311362
f0103fc4:	eb be                	jmp    f0103f84 <__udivdi3+0xd4>f0103fc46934,311411
f0103fc6:	66 90                	xchg   %ax,%axf0103fc66935,311476
f0103fc8:	66 90                	xchg   %ax,%axf0103fc86936,311523
f0103fca:	66 90                	xchg   %ax,%axf0103fca6937,311570
f0103fcc:	66 90                	xchg   %ax,%axf0103fcc6938,311617
f0103fce:	66 90                	xchg   %ax,%axf0103fce6939,311664
f0103fd0 <__umoddi3>:f0103fd06941,311712
f0103fd0:	55                   	push   %ebpf0103fd06942,311734
f0103fd1:	57                   	push   %edif0103fd16943,311778
f0103fd2:	56                   	push   %esif0103fd26944,311822
f0103fd3:	53                   	push   %ebxf0103fd36945,311866
f0103fd4:	83 ec 1c             	sub    $0x1c,%espf0103fd46946,311910
f0103fd7:	8b 6c 24 3c          	mov    0x3c(%esp),%ebpf0103fd76947,311960
f0103fdb:	8b 74 24 30          	mov    0x30(%esp),%esif0103fdb6948,312015
f0103fdf:	8b 5c 24 34          	mov    0x34(%esp),%ebxf0103fdf6949,312070
f0103fe3:	8b 7c 24 38          	mov    0x38(%esp),%edif0103fe36950,312125
f0103fe7:	85 ed                	test   %ebp,%ebpf0103fe76951,312180
f0103fe9:	89 f0                	mov    %esi,%eaxf0103fe96952,312229
f0103feb:	89 da                	mov    %ebx,%edxf0103feb6953,312278
f0103fed:	75 19                	jne    f0104008 <__umoddi3+0x38>f0103fed6954,312327
f0103fef:	39 df                	cmp    %ebx,%edif0103fef6955,312392
f0103ff1:	0f 86 b1 00 00 00    	jbe    f01040a8 <__umoddi3+0xd8>f0103ff16956,312441
f0103ff7:	f7 f7                	div    %edif0103ff76957,312506
f0103ff9:	89 d0                	mov    %edx,%eaxf0103ff96958,312550
f0103ffb:	31 d2                	xor    %edx,%edxf0103ffb6959,312599
f0103ffd:	83 c4 1c             	add    $0x1c,%espf0103ffd6960,312648
f0104000:	5b                   	pop    %ebxf01040006961,312698
f0104001:	5e                   	pop    %esif01040016962,312742
f0104002:	5f                   	pop    %edif01040026963,312786
f0104003:	5d                   	pop    %ebpf01040036964,312830
f0104004:	c3                   	ret    f01040046965,312874
f0104005:	8d 76 00             	lea    0x0(%esi),%esif01040056966,312914
f0104008:	39 dd                	cmp    %ebx,%ebpf01040086967,312968
f010400a:	77 f1                	ja     f0103ffd <__umoddi3+0x2d>f010400a6968,313017
f010400c:	0f bd cd             	bsr    %ebp,%ecxf010400c6969,313082
f010400f:	83 f1 1f             	xor    $0x1f,%ecxf010400f6970,313131
f0104012:	89 4c 24 04          	mov    %ecx,0x4(%esp)f01040126971,313181
f0104016:	0f 84 b4 00 00 00    	je     f01040d0 <__umoddi3+0x100>f01040166972,313235
f010401c:	b8 20 00 00 00       	mov    $0x20,%eaxf010401c6973,313301
f0104021:	89 c2                	mov    %eax,%edxf01040216974,313351
f0104023:	8b 44 24 04          	mov    0x4(%esp),%eaxf01040236975,313400
f0104027:	29 c2                	sub    %eax,%edxf01040276976,313454
f0104029:	89 c1                	mov    %eax,%ecxf01040296977,313503
f010402b:	89 f8                	mov    %edi,%eaxf010402b6978,313552
f010402d:	d3 e5                	shl    %cl,%ebpf010402d6979,313601
f010402f:	89 d1                	mov    %edx,%ecxf010402f6980,313649
f0104031:	89 54 24 0c          	mov    %edx,0xc(%esp)f01040316981,313698
f0104035:	d3 e8                	shr    %cl,%eaxf01040356982,313752
f0104037:	09 c5                	or     %eax,%ebpf01040376983,313800
f0104039:	8b 44 24 04          	mov    0x4(%esp),%eaxf01040396984,313849
f010403d:	89 c1                	mov    %eax,%ecxf010403d6985,313903
f010403f:	d3 e7                	shl    %cl,%edif010403f6986,313952
f0104041:	89 d1                	mov    %edx,%ecxf01040416987,314000
f0104043:	89 7c 24 08          	mov    %edi,0x8(%esp)f01040436988,314049
f0104047:	89 df                	mov    %ebx,%edif01040476989,314103
f0104049:	d3 ef                	shr    %cl,%edif01040496990,314152
f010404b:	89 c1                	mov    %eax,%ecxf010404b6991,314200
f010404d:	89 f0                	mov    %esi,%eaxf010404d6992,314249
f010404f:	d3 e3                	shl    %cl,%ebxf010404f6993,314298
f0104051:	89 d1                	mov    %edx,%ecxf01040516994,314346
f0104053:	89 fa                	mov    %edi,%edxf01040536995,314395
f0104055:	d3 e8                	shr    %cl,%eaxf01040556996,314444
f0104057:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecxf01040576997,314492
f010405c:	09 d8                	or     %ebx,%eaxf010405c6998,314546
f010405e:	f7 f5                	div    %ebpf010405e6999,314595
f0104060:	d3 e6                	shl    %cl,%esif01040607000,314639
f0104062:	89 d1                	mov    %edx,%ecxf01040627001,314687
f0104064:	f7 64 24 08          	mull   0x8(%esp)f01040647002,314736
f0104068:	39 d1                	cmp    %edx,%ecxf01040687003,314785
f010406a:	89 c3                	mov    %eax,%ebxf010406a7004,314834
f010406c:	89 d7                	mov    %edx,%edif010406c7005,314883
f010406e:	72 06                	jb     f0104076 <__umoddi3+0xa6>f010406e7006,314932
f0104070:	75 0e                	jne    f0104080 <__umoddi3+0xb0>f01040707007,314997
f0104072:	39 c6                	cmp    %eax,%esif01040727008,315062
f0104074:	73 0a                	jae    f0104080 <__umoddi3+0xb0>f01040747009,315111
f0104076:	2b 44 24 08          	sub    0x8(%esp),%eaxf01040767010,315176
f010407a:	19 ea                	sbb    %ebp,%edxf010407a7011,315230
f010407c:	89 d7                	mov    %edx,%edif010407c7012,315279
f010407e:	89 c3                	mov    %eax,%ebxf010407e7013,315328
f0104080:	89 ca                	mov    %ecx,%edxf01040807014,315377
f0104082:	0f b6 4c 24 0c       	movzbl 0xc(%esp),%ecxf01040827015,315426
f0104087:	29 de                	sub    %ebx,%esif01040877016,315480
f0104089:	19 fa                	sbb    %edi,%edxf01040897017,315529
f010408b:	8b 5c 24 04          	mov    0x4(%esp),%ebxf010408b7018,315578
f010408f:	89 d0                	mov    %edx,%eaxf010408f7019,315632
f0104091:	d3 e0                	shl    %cl,%eaxf01040917020,315681
f0104093:	89 d9                	mov    %ebx,%ecxf01040937021,315729
f0104095:	d3 ee                	shr    %cl,%esif01040957022,315778
f0104097:	d3 ea                	shr    %cl,%edxf01040977023,315826
f0104099:	09 f0                	or     %esi,%eaxf01040997024,315874
f010409b:	83 c4 1c             	add    $0x1c,%espf010409b7025,315923
f010409e:	5b                   	pop    %ebxf010409e7026,315973
f010409f:	5e                   	pop    %esif010409f7027,316017
f01040a0:	5f                   	pop    %edif01040a07028,316061
f01040a1:	5d                   	pop    %ebpf01040a17029,316105
f01040a2:	c3                   	ret    f01040a27030,316149
f01040a3:	90                   	nopf01040a37031,316189
f01040a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esif01040a47032,316225
f01040a8:	85 ff                	test   %edi,%edif01040a87033,316286
f01040aa:	89 f9                	mov    %edi,%ecxf01040aa7034,316335
f01040ac:	75 0b                	jne    f01040b9 <__umoddi3+0xe9>f01040ac7035,316384
f01040ae:	b8 01 00 00 00       	mov    $0x1,%eaxf01040ae7036,316449
f01040b3:	31 d2                	xor    %edx,%edxf01040b37037,316498
f01040b5:	f7 f7                	div    %edif01040b57038,316547
f01040b7:	89 c1                	mov    %eax,%ecxf01040b77039,316591
f01040b9:	89 d8                	mov    %ebx,%eaxf01040b97040,316640
f01040bb:	31 d2                	xor    %edx,%edxf01040bb7041,316689
f01040bd:	f7 f1                	div    %ecxf01040bd7042,316738
f01040bf:	89 f0                	mov    %esi,%eaxf01040bf7043,316782
f01040c1:	f7 f1                	div    %ecxf01040c17044,316831
f01040c3:	e9 31 ff ff ff       	jmp    f0103ff9 <__umoddi3+0x29>f01040c37045,316875
f01040c8:	90                   	nopf01040c87046,316940
f01040c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esif01040c97047,316976
f01040d0:	39 dd                	cmp    %ebx,%ebpf01040d07048,317037
f01040d2:	72 08                	jb     f01040dc <__umoddi3+0x10c>f01040d27049,317086
f01040d4:	39 f7                	cmp    %esi,%edif01040d47050,317152
f01040d6:	0f 87 21 ff ff ff    	ja     f0103ffd <__umoddi3+0x2d>f01040d67051,317201
f01040dc:	89 da                	mov    %ebx,%edxf01040dc7052,317266
f01040de:	89 f0                	mov    %esi,%eaxf01040de7053,317315
f01040e0:	29 f8                	sub    %edi,%eaxf01040e07054,317364
f01040e2:	19 ea                	sbb    %ebp,%edxf01040e27055,317413
f01040e4:	e9 14 ff ff ff       	jmp    f0103ffd <__umoddi3+0x2d>f01040e47056,317462

fs/test.c,99
static char *msg = "This is the NEW message of the day!\n\n";msg6,63
fs_test(void)fs_test9,131

user/sendpage.c,265
const char *str1 = "hello child environment! how are you?";str16,128
const char *str2 = "hello parent environment! I'm good.";str27,188
#define TEMP_ADDR	TEMP_ADDR9,247
#define TEMP_ADDR_CHILD	TEMP_ADDR_CHILD10,283
umain(int argc, char **argv)umain13,331

conf/env.mk,14
V = @V9,359

conf/lab.mk,71
LAB=2LAB1,0
PACKAGEDATE=Wed Sep 12 14:51:29 EDT 2018PACKAGEDATE2,6

kern/console.h,275
#define _CONSOLE_H__CONSOLE_H_4,68
#define MONO_BASE	MONO_BASE11,215
#define MONO_BUF	MONO_BUF12,239
#define CGA_BASE	CGA_BASE13,264
#define CGA_BUF	CGA_BUF14,287
#define CRT_ROWS	CRT_ROWS16,313
#define CRT_COLS	CRT_COLS17,333
#define CRT_SIZE	CRT_SIZE18,353

kern/kclock.c,116
mc146818_read(unsigned reg)mc146818_read11,169
mc146818_write(unsigned reg, unsigned datum)mc146818_write18,250

kern/monitor.c,913
#define CMDBUF_SIZE	CMDBUF_SIZE15,337
struct Command {Command18,394
	const char *name;name19,411
	const char *name;Command::name19,411
	const char *desc;desc20,430
	const char *desc;Command::desc20,430
	int (*func)(int argc, char** argv, struct Trapframe* tf);func22,488
	int (*func)(int argc, char** argv, struct Trapframe* tf);Command::func22,488
static struct Command commands[] = {commands25,551
mon_help(int argc, char **argv, struct Trapframe *tf)mon_help34,838
mon_kerninfo(int argc, char **argv, struct Trapframe *tf)mon_kerninfo44,1025
mon_backtrace(int argc, char **argv, struct Trapframe *tf)mon_backtrace60,1646
int mon_showmappings(int argc, char **argv, struct Trapframe *tf)mon_showmappings66,1741
#define WHITESPACE WHITESPACE94,2521
#define MAXARGS MAXARGS95,2550
runcmd(char *buf, struct Trapframe *tf)runcmd98,2581
monitor(struct Trapframe *tf)monitor137,3373

kern/kdebug.h,1042
#define JOS_KERN_KDEBUG_HJOS_KERN_KDEBUG_H2,26
struct Eipdebuginfo {Eipdebuginfo7,137
	const char *eip_file;		// Source code filename for EIPeip_file8,159
	const char *eip_file;		// Source code filename for EIPEipdebuginfo::eip_file8,159
	int eip_line;			// Source code linenumber for EIPeip_line9,215
	int eip_line;			// Source code linenumber for EIPEipdebuginfo::eip_line9,215
	const char *eip_fn_name;	// Name of function containing EIPeip_fn_name11,267
	const char *eip_fn_name;	// Name of function containing EIPEipdebuginfo::eip_fn_name11,267
	int eip_fn_namelen;		// Length of function nameeip_fn_namelen13,366
	int eip_fn_namelen;		// Length of function nameEipdebuginfo::eip_fn_namelen13,366
	uintptr_t eip_fn_addr;		// Address of start of functioneip_fn_addr14,415
	uintptr_t eip_fn_addr;		// Address of start of functionEipdebuginfo::eip_fn_addr14,415
	int eip_fn_narg;		// Number of function argumentseip_fn_narg15,472
	int eip_fn_narg;		// Number of function argumentsEipdebuginfo::eip_fn_narg15,472

kern/console.c,2436
delay(void)delay16,352
#define COM1	COM126,448
#define COM_RX	COM_RX28,469
#define COM_TX	COM_TX29,518
#define COM_DLL	COM_DLL30,569
#define COM_DLM	COM_DLM31,623
#define COM_IER	COM_IER32,678
#define   COM_IER_RDI	COM_IER_RDI33,731
#define COM_IIR	COM_IIR34,794
#define COM_FCR	COM_FCR35,842
#define COM_LCR	COM_LCR36,891
#define	  COM_LCR_DLAB	COM_LCR_DLAB37,940
#define	  COM_LCR_WLEN8	COM_LCR_WLEN838,998
#define COM_MCR	COM_MCR39,1051
#define	  COM_MCR_RTS	COM_MCR_RTS40,1101
#define	  COM_MCR_DTR	COM_MCR_DTR41,1146
#define	  COM_MCR_OUT2	COM_MCR_OUT242,1191
#define COM_LSR	COM_LSR43,1238
#define   COM_LSR_DATA	COM_LSR_DATA44,1285
#define   COM_LSR_TXRDY	COM_LSR_TXRDY45,1333
#define   COM_LSR_TSRE	COM_LSR_TSRE46,1389
static bool serial_exists;serial_exists48,1439
serial_proc_data(void)serial_proc_data51,1478
serial_intr(void)serial_intr59,1592
serial_putc(int c)serial_putc66,1678
serial_init(void)serial_init79,1843
lpt_putc(int c)lpt_putc112,2633
static unsigned addr_6845;addr_6845128,2853
static uint16_t *crt_buf;crt_buf129,2880
static uint16_t crt_pos;crt_pos130,2906
cga_init(void)cga_init133,2944
cga_putc(int c)cga_putc163,3430
#define NO	NO214,4399
#define SHIFT	SHIFT216,4414
#define CTL	CTL217,4436
#define ALT	ALT218,4456
#define CAPSLOCK	CAPSLOCK220,4477
#define NUMLOCK	NUMLOCK221,4501
#define SCROLLLOCK	SCROLLLOCK222,4525
#define E0ESC	E0ESC224,4552
static uint8_t shiftcode[256] =shiftcode226,4575
static uint8_t togglecode[256] =togglecode236,4706
static uint8_t normalmap[256] =normalmap243,4805
static uint8_t shiftmap[256] =shiftmap264,5690
#define C(C285,6574
static uint8_t ctlmap[256] =ctlmap287,6598
static uint8_t *charcode[4] = {charcode304,7327
kbd_proc_data(void)kbd_proc_data316,7524
kbd_intr(void)kbd_intr368,8510
kbd_init(void)kbd_init374,8569
#define CONSBUFSIZE CONSBUFSIZE385,8809
	uint8_t buf[CONSBUFSIZE];buf388,8850
	uint8_t buf[CONSBUFSIZE];__anon3::buf388,8850
	uint32_t rpos;rpos389,8877
	uint32_t rpos;__anon3::rpos389,8877
	uint32_t wpos;wpos390,8893
	uint32_t wpos;__anon3::wpos390,8893
} cons;cons391,8909
cons_intr(int (*proc)(void))cons_intr396,9037
cons_getc(void)cons_getc411,9300
cons_putc(int c)cons_putc433,9754
cons_init(void)cons_init442,9860
cputchar(int c)cputchar456,10056
getchar(void)getchar462,10096
iscons(int fdnum)iscons472,10191

kern/entrypgdir.c,163
pte_t entry_pgtable[NPTENTRIES];entry_pgtable4,49
pde_t entry_pgdir[NPDENTRIES] = {entry_pgdir21,934
pte_t entry_pgtable[NPTENTRIES] = {entry_pgtable33,1329

kern/monitor.h,51
#define JOS_KERN_MONITOR_HJOS_KERN_MONITOR_H2,27

kern/pmap.h,397
#define JOS_KERN_PMAP_HJOS_KERN_PMAP_H4,72
#define PADDR(PADDR25,645
_paddr(const char *file, int line, void *kva)_paddr28,722
#define KADDR(KADDR37,1057
_kaddr(const char *file, int line, physaddr_t pa)_kaddr40,1127
	ALLOC_ZERO = 1<<0,ALLOC_ZERO50,1366
page2pa(struct PageInfo *pp)page2pa66,1815
pa2page(physaddr_t pa)pa2page72,1913
page2kva(struct PageInfo *pp)page2kva80,2057

kern/pmap.c,1558
size_t npages;			// Amount of physical memory (in pages)npages12,261
static size_t npages_basemem;	// Amount of base memory (in pages)npages_basemem13,318
pde_t *kern_pgdir;		// Kernel's initial page directorykern_pgdir16,426
struct PageInfo *pages;		// Physical page state arraypages17,481
static struct PageInfo *page_free_list;	// Free list of physical pagespage_free_list18,535
nvram_read(int r)nvram_read26,795
i386_detect_memory(void)i386_detect_memory32,886
boot_alloc(uint32_t n)boot_alloc84,2706
mem_init(void)mem_init125,4081
page_init(void)page_init243,8871
page_alloc(int alloc_flags)page_alloc295,10680
page_free(struct PageInfo *pp)page_free316,11076
page_decref(struct PageInfo* pp)page_decref335,11541
pgdir_walk(pde_t *pgdir, const void *va, int create)pgdir_walk364,12677
boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)boot_map_region394,13481
page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)page_insert434,14807
page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)page_lookup456,15450
page_remove(pde_t *pgdir, void *va)page_remove479,16198
tlb_invalidate(pde_t *pgdir, void *va)tlb_invalidate493,16546
check_page_free_list(bool only_low_memory)check_page_free_list509,16979
check_page_alloc(void)check_page_alloc571,18740
check_kern_pgdir(void)check_kern_pgdir653,20557
check_va2pa(pde_t *pgdir, uintptr_t va)check_va2pa701,21812
check_page(void)check_page717,22093
check_page_installed_pgdir(void)check_page_installed_pgdir869,26888

kern/entry.S,533
#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))SRL7,120
#define	RELOC(x) ((x) - KERNBASE)RELOC18,566
#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)MULTIBOOT_HEADER_MAGIC20,601
#define MULTIBOOT_HEADER_FLAGS (0)MULTIBOOT_HEADER_FLAGS21,645
#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))CHECKSUM22,680
_start = RELOC(entry)_start40,1231
entry:entry43,1267
relocated:relocated69,2169
spin:	jmp	spinspin83,2501
bootstack:bootstack92,2734
bootstacktop:bootstacktop95,2788

kern/init.c,211
i386_init(void)i386_init14,227
const char *panicstr;panicstr42,921
_panic(const char *file, int line, const char *fmt,...)_panic49,1069
_warn(const char *file, int line, const char *fmt,...)_warn74,1502

kern/kdebug.c,181
stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,stab_binsearch51,1753
debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)debuginfo_eip105,3021

kern/kclock.h,420
#define JOS_KERN_KCLOCK_HJOS_KERN_KCLOCK_H4,74
#define	IO_RTC	IO_RTC9,203
#define	MC_NVRAM_START	MC_NVRAM_START11,242
#define	MC_NVRAM_SIZE	MC_NVRAM_SIZE12,301
#define NVRAM_BASELO	NVRAM_BASELO15,393
#define NVRAM_BASEHI	NVRAM_BASEHI16,465
#define NVRAM_EXTLO	NVRAM_EXTLO19,609
#define NVRAM_EXTHI	NVRAM_EXTHI20,680
#define NVRAM_EXT16LO	NVRAM_EXT16LO23,826
#define NVRAM_EXT16HI	NVRAM_EXT16HI24,900

kern/printf.c,136
putch(int ch, int *cnt)putch10,212
vcprintf(const char *fmt, va_list ap)vcprintf17,269
cprintf(const char *fmt, ...)cprintf26,385

grade-lab2,306
r = Runner(save("jos.out"),r5,47
def test_jos():test_jos9,140
def test_check_page_alloc():test_check_page_alloc13,228
def test_check_page():test_check_page17,352
def test_check_kern_pgdir():test_check_kern_pgdir21,470
def test_check_page_installed_pgdir():test_check_page_installed_pgdir25,596

gradelib.py,2816
__all__ = []__all__7,194
TESTS = []TESTS15,361
CURRENT_TEST = NoneCURRENT_TEST18,424
def test(points, title=None, parent=None):test20,445
    def register_test(fn, title=title):register_test26,703
        def run_test():run_test33,923
def end_part(name):end_part79,2398
    def show_part():show_part80,2418
def run_tests():run_tests89,2709
def get_current_test():get_current_test120,3671
def assert_equal(got, expect, msg=""):assert_equal131,3928
def assert_lines_match(text, *regexps, **kw):assert_lines_match140,4221
    def assert_lines_match_kw(no=[]):assert_lines_match_kw145,4445
MAKE_TIMESTAMP = 0MAKE_TIMESTAMP196,6022
def pre_make():pre_make198,6042
def post_make():post_make203,6197
def make(*target):make209,6385
def show_command(cmd):show_command215,6497
def maybe_unlink(*paths):maybe_unlink219,6593
COLORS = {"default": "\033[0m", "red": "\033[31m", "green": "\033[32m"}COLORS227,6784
def color(name, text):color229,6857
def reset_fs():reset_fs234,7032
class QEMU(object):QEMU244,7277
    _GDBPORT = None_GDBPORT245,7297
    def __init__(self, *make_args):__init__247,7318
    def get_gdb_port():get_gdb_port273,8258
    def fileno(self):fileno285,8713
    def handle_read(self):handle_read289,8803
    def wait(self):wait299,9115
    def kill(self):kill304,9216
class GDBClient(object):GDBClient308,9293
    def __init__(self, port, timeout=15):__init__309,9318
    def fileno(self):fileno322,9717
    def handle_read(self):handle_read326,9800
    def __send(self, cmd):__send348,10398
    def __send_break(self):__send_break352,10538
    def close(self):close355,10602
    def cont(self):cont360,10705
    def breakpoint(self, addr):breakpoint363,10751
class TerminateTest(Exception):TerminateTest373,10952
class Runner():Runner376,10994
    def __init__(self, *default_monitors):__init__377,11010
    def run_qemu(self, *monitors, **kw):run_qemu380,11105
        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):run_qemu_kw389,11629
    def __monitor_start(self, output):__monitor_start436,13129
    def __react(self, reactors, timeout):__react446,13439
    def user_test(self, binary, *monitors, **kw):user_test466,14081
    def match(self, *args, **kwargs):match476,14579
def save(path):save488,14924
    def setup_save(runner):setup_save492,15062
    def save_on_finish(fail):save_on_finish498,15236
def stop_breakpoint(addr):stop_breakpoint511,15660
    def setup_breakpoint(runner):setup_breakpoint515,15800
def call_on_line(regexp, callback):call_on_line525,16182
    def setup_call_on_line(runner):setup_call_on_line529,16316
        def handle_output(output):handle_output531,16378
def stop_on_line(regexp):stop_on_line541,16743
    def stop(line):stop545,16856

.dir-locals.el,0

GNUmakefile,1598
OBJDIR := objOBJDIR8,197
LABSETUP ?= ./LABSETUP22,403
TOP = .TOP24,419
GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >/dev/null 2>&1; \GCCPREFIX36,874
QEMU := $(shell if which qemu >/dev/null 2>&1; \QEMU52,1637
GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)GDBPORT67,2275
CC	:= $(GCCPREFIX)gcc -pipeCC69,2324
GDB	:= $(GCCPREFIX)gdbGDB70,2352
AS	:= $(GCCPREFIX)asAS71,2375
AR	:= $(GCCPREFIX)arAR72,2396
LD	:= $(GCCPREFIX)ldLD73,2417
OBJCOPY	:= $(GCCPREFIX)objcopyOBJCOPY74,2438
OBJDUMP	:= $(GCCPREFIX)objdumpOBJDUMP75,2469
NM	:= $(GCCPREFIX)nmNM76,2500
NCC	:= gcc $(CC_VER) -pipeNCC79,2540
NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -WallNATIVE_CFLAGS80,2567
TAR	:= gtarTAR81,2632
PERL	:= perlPERL82,2644
CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MDCFLAGS87,2831
LDFLAGS := -m elf_i386LDFLAGS100,3389
ULDFLAGS := -T user/user.ldULDFLAGS103,3450
GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)GCC_LIB105,3479
OBJDIRS :=OBJDIRS108,3599
KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabsKERN_CFLAGS124,3990
USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabsUSER_CFLAGS125,4036
QEMUOPTS = -drive file=$(OBJDIR)/kern/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)QEMUOPTS143,4546
IMAGES = $(OBJDIR)/kern/kernel.imgIMAGES145,4759
WEBSUB := https://6828.scripts.mit.edu/2018/handin.pyWEBSUB223,6476
UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu/6.828/2018/jos.git (fetch)" | awk '{split($$0,a," "); print a[1]}')UPSTREAM256,7498
