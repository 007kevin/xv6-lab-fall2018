
grade-lab1,445
r = Runner(save("jos.out"),r6,57
def test_jos():test_jos10,150
def test_printf():test_printf14,211
BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"BACKTRACE_RE17,275
def test_backtrace_count():test_backtrace_count20,386
def test_backtrace_arguments():test_backtrace_arguments25,544
def test_backtrace_symbols():test_backtrace_symbols31,777
def test_backtrace_lines():test_backtrace_lines37,1018

mergedep.pl,31
sub readdeps {readdeps27,909

lib/readline.c,106
#define BUFLEN BUFLEN4,47
static char buf[BUFLEN];buf5,67
readline(const char *prompt)readline8,100

lib/string.c,1018
#define ASM ASM9,264
strlen(const char *s)strlen12,283
strnlen(const char *s, size_t size)strnlen22,371
strcpy(char *dst, const char *src)strcpy32,496
strcat(char *dst, const char *src)strcat43,636
strncpy(char *dst, const char *src, size_t size) {strncpy51,745
strlcpy(char *dst, const char *src, size_t size)strlcpy66,998
strcmp(const char *p, const char *q)strcmp80,1201
strncmp(const char *p, const char *q, size_t n)strncmp88,1340
strchr(const char *s, char c)strchr101,1645
strfind(const char *s, char c)strfind112,1889
memset(void *v, int c, size_t n)memset122,2002
memmove(void *dst, const void *src, size_t n)memmove142,2359
memset(void *v, int c, size_t n)memset174,3099
memmove(void *dst, const void *src, size_t n)memmove188,3221
memcpy(void *dst, const void *src, size_t n)memcpy209,3470
memcmp(const void *v1, const void *v2, size_t n)memcmp215,3554
memfind(const void *s, int c, size_t n)memfind230,3801
strtol(const char *s, char **endptr, int base)strtol240,4001

lib/printfmt.c,845
static const char * const error_string[MAXERROR] =error_string21,589
printnum(void (*putch)(int, void*), void *putdat,printnum36,995
getuint(va_list *ap, int lflag)getuint55,1609
getint(va_list *ap, int lflag)getint68,1897
vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)vprintfmt83,2193
printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)printfmt247,5283
struct sprintbuf {sprintbuf256,5443
	char *buf;buf257,5462
	char *buf;sprintbuf::buf257,5462
	char *ebuf;ebuf258,5474
	char *ebuf;sprintbuf::ebuf258,5474
	int cnt;cnt259,5487
	int cnt;sprintbuf::cnt259,5487
sprintputch(int ch, struct sprintbuf *b)sprintputch263,5513
vsnprintf(char *buf, int n, const char *fmt, va_list ap)vsnprintf271,5615
snprintf(char *buf, int n, const char *fmt, ...)snprintf288,5913

inc/memlayout.h,1127
#define JOS_INC_MEMLAYOUT_HJOS_INC_MEMLAYOUT_H2,28
#define GD_KT GD_KT15,324
#define GD_KD GD_KD16,366
#define GD_UT GD_UT17,408
#define GD_UD GD_UD18,448
#define GD_TSS0 GD_TSS019,488
#define	KERNBASE	KERNBASE87,4609
#define IOPHYSMEM	IOPHYSMEM92,4814
#define EXTPHYSMEM	EXTPHYSMEM93,4841
#define KSTACKTOP	KSTACKTOP96,4887
#define KSTKSIZE	KSTKSIZE97,4914
#define KSTKGAP	KSTKGAP98,4972
#define MMIOLIM	MMIOLIM101,5058
#define MMIOBASE	MMIOBASE102,5096
#define ULIM	ULIM104,5133
#define UVPT	UVPT112,5361
#define UPAGES	UPAGES114,5434
#define UENVS	UENVS116,5515
#define UTOP	UTOP123,5650
#define UXSTACKTOP	UXSTACKTOP125,5710
#define USTACKTOP	USTACKTOP128,5837
#define UTEXT	UTEXT131,5913
#define UTEMP	UTEMP134,6008
#define PFTEMP	PFTEMP137,6168
#define USTABDATA	USTABDATA139,6265
typedef uint32_t pte_t;pte_t143,6320
typedef uint32_t pde_t;pde_t144,6344
struct PageInfo {PageInfo175,7643
	struct PageInfo *pp_link;pp_link177,7693
	struct PageInfo *pp_link;PageInfo::pp_link177,7693
	uint16_t pp_ref;pp_ref184,7951
	uint16_t pp_ref;PageInfo::pp_ref184,7951

inc/stab.h,1529
#define JOS_STAB_HJOS_STAB_H2,19
#define	N_GSYM	N_GSYM15,436
#define	N_FNAME	N_FNAME16,474
#define	N_FUN	N_FUN17,517
#define	N_STSYM	N_STSYM18,555
#define	N_LCSYM	N_LCSYM19,602
#define	N_MAIN	N_MAIN20,648
#define	N_PC	N_PC21,691
#define	N_RSYM	N_RSYM22,734
#define	N_SLINE	N_SLINE23,776
#define	N_DSLINE	N_DSLINE24,826
#define	N_BSLINE	N_BSLINE25,876
#define	N_SSYM	N_SSYM26,925
#define	N_SO	N_SO27,973
#define	N_LSYM	N_LSYM28,1017
#define	N_BINCL	N_BINCL29,1056
#define	N_SOL	N_SOL30,1104
#define	N_PSYM	N_PSYM31,1153
#define	N_EINCL	N_EINCL32,1196
#define	N_ENTRY	N_ENTRY33,1238
#define	N_LBRAC	N_LBRAC34,1285
#define	N_EXCL	N_EXCL35,1323
#define	N_RBRAC	N_RBRAC36,1368
#define	N_BCOMM	N_BCOMM37,1407
#define	N_ECOMM	N_ECOMM38,1445
#define	N_ECOML	N_ECOML39,1481
#define	N_LENG	N_LENG40,1530
struct Stab {Stab43,1637
	uint32_t n_strx;	// index into string table of namen_strx44,1651
	uint32_t n_strx;	// index into string table of nameStab::n_strx44,1651
	uint8_t n_type;         // type of symboln_type45,1704
	uint8_t n_type;         // type of symbolStab::n_type45,1704
	uint8_t n_other;        // misc info (usually empty)n_other46,1747
	uint8_t n_other;        // misc info (usually empty)Stab::n_other46,1747
	uint16_t n_desc;        // description fieldn_desc47,1801
	uint16_t n_desc;        // description fieldStab::n_desc47,1801
	uintptr_t n_value;	// value of symboln_value48,1847
	uintptr_t n_value;	// value of symbolStab::n_value48,1847

inc/string.h,47
#define JOS_INC_STRING_HJOS_INC_STRING_H2,25

inc/stdio.h,69
#define JOS_INC_STDIO_HJOS_INC_STDIO_H2,24
#define NULL	NULL7,87

inc/x86.h,1331
#define JOS_INC_X86_HJOS_INC_X86_H2,22
breakpoint(void)breakpoint7,88
inb(int port)inb13,155
insb(int port, void *addr, int cnt)insb21,278
inw(int port)inw30,481
insw(int port, void *addr, int cnt)insw38,605
inl(int port)inl47,808
insl(int port, void *addr, int cnt)insl55,932
outb(int port, uint8_t data)outb64,1131
outsb(int port, const void *addr, int cnt)outsb70,1241
outw(int port, uint16_t data)outw79,1438
outsw(int port, const void *addr, int cnt)outsw85,1549
outsl(int port, const void *addr, int cnt)outsl94,1746
outl(int port, uint32_t data)outl103,1943
invlpg(void *addr)invlpg109,2054
lidt(void *p)lidt115,2153
lgdt(void *p)lgdt121,2231
lldt(uint16_t sel)lldt127,2309
ltr(uint16_t sel)ltr133,2392
lcr0(uint32_t val)lcr0139,2473
rcr0(void)rcr0145,2566
rcr2(void)rcr2153,2678
lcr3(uint32_t val)lcr3161,2786
rcr3(void)rcr3167,2879
lcr4(uint32_t val)lcr4175,2987
rcr4(void)rcr4181,3080
tlbflush(void)tlbflush189,3188
read_eflags(void)read_eflags197,3337
write_eflags(uint32_t eflags)write_eflags205,3463
read_ebp(void)read_ebp211,3572
read_esp(void)read_esp219,3688
cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)cpuid227,3800
read_tsc(void)read_tsc244,4147
xchg(volatile uint32_t *addr, uint32_t newval)xchg252,4255

inc/elf.h,3208
#define JOS_INC_ELF_HJOS_INC_ELF_H2,22
#define ELF_MAGIC ELF_MAGIC4,45
struct Elf {Elf6,109
	uint32_t e_magic;	// must equal ELF_MAGICe_magic7,122
	uint32_t e_magic;	// must equal ELF_MAGICElf::e_magic7,122
	uint8_t e_elf[12];e_elf8,165
	uint8_t e_elf[12];Elf::e_elf8,165
	uint16_t e_type;e_type9,185
	uint16_t e_type;Elf::e_type9,185
	uint16_t e_machine;e_machine10,203
	uint16_t e_machine;Elf::e_machine10,203
	uint32_t e_version;e_version11,224
	uint32_t e_version;Elf::e_version11,224
	uint32_t e_entry;e_entry12,245
	uint32_t e_entry;Elf::e_entry12,245
	uint32_t e_phoff;e_phoff13,264
	uint32_t e_phoff;Elf::e_phoff13,264
	uint32_t e_shoff;e_shoff14,283
	uint32_t e_shoff;Elf::e_shoff14,283
	uint32_t e_flags;e_flags15,302
	uint32_t e_flags;Elf::e_flags15,302
	uint16_t e_ehsize;e_ehsize16,321
	uint16_t e_ehsize;Elf::e_ehsize16,321
	uint16_t e_phentsize;e_phentsize17,341
	uint16_t e_phentsize;Elf::e_phentsize17,341
	uint16_t e_phnum;e_phnum18,364
	uint16_t e_phnum;Elf::e_phnum18,364
	uint16_t e_shentsize;e_shentsize19,383
	uint16_t e_shentsize;Elf::e_shentsize19,383
	uint16_t e_shnum;e_shnum20,406
	uint16_t e_shnum;Elf::e_shnum20,406
	uint16_t e_shstrndx;e_shstrndx21,425
	uint16_t e_shstrndx;Elf::e_shstrndx21,425
struct Proghdr {Proghdr24,451
	uint32_t p_type;p_type25,468
	uint32_t p_type;Proghdr::p_type25,468
	uint32_t p_offset;p_offset26,486
	uint32_t p_offset;Proghdr::p_offset26,486
	uint32_t p_va;p_va27,506
	uint32_t p_va;Proghdr::p_va27,506
	uint32_t p_pa;p_pa28,522
	uint32_t p_pa;Proghdr::p_pa28,522
	uint32_t p_filesz;p_filesz29,538
	uint32_t p_filesz;Proghdr::p_filesz29,538
	uint32_t p_memsz;p_memsz30,558
	uint32_t p_memsz;Proghdr::p_memsz30,558
	uint32_t p_flags;p_flags31,577
	uint32_t p_flags;Proghdr::p_flags31,577
	uint32_t p_align;p_align32,596
	uint32_t p_align;Proghdr::p_align32,596
struct Secthdr {Secthdr35,619
	uint32_t sh_name;sh_name36,636
	uint32_t sh_name;Secthdr::sh_name36,636
	uint32_t sh_type;sh_type37,655
	uint32_t sh_type;Secthdr::sh_type37,655
	uint32_t sh_flags;sh_flags38,674
	uint32_t sh_flags;Secthdr::sh_flags38,674
	uint32_t sh_addr;sh_addr39,694
	uint32_t sh_addr;Secthdr::sh_addr39,694
	uint32_t sh_offset;sh_offset40,713
	uint32_t sh_offset;Secthdr::sh_offset40,713
	uint32_t sh_size;sh_size41,734
	uint32_t sh_size;Secthdr::sh_size41,734
	uint32_t sh_link;sh_link42,753
	uint32_t sh_link;Secthdr::sh_link42,753
	uint32_t sh_info;sh_info43,772
	uint32_t sh_info;Secthdr::sh_info43,772
	uint32_t sh_addralign;sh_addralign44,791
	uint32_t sh_addralign;Secthdr::sh_addralign44,791
	uint32_t sh_entsize;sh_entsize45,815
	uint32_t sh_entsize;Secthdr::sh_entsize45,815
#define ELF_PROG_LOAD	ELF_PROG_LOAD49,871
#define ELF_PROG_FLAG_EXEC	ELF_PROG_FLAG_EXEC52,931
#define ELF_PROG_FLAG_WRITE	ELF_PROG_FLAG_WRITE53,960
#define ELF_PROG_FLAG_READ	ELF_PROG_FLAG_READ54,990
#define ELF_SHT_NULL	ELF_SHT_NULL57,1051
#define ELF_SHT_PROGBITS	ELF_SHT_PROGBITS58,1075
#define ELF_SHT_SYMTAB	ELF_SHT_SYMTAB59,1102
#define ELF_SHT_STRTAB	ELF_SHT_STRTAB60,1128
#define ELF_SHN_UNDEF	ELF_SHN_UNDEF63,1186

inc/mmu.h,10794
#define JOS_INC_MMU_HJOS_INC_MMU_H2,22
#define PGNUM(PGNUM30,964
#define PDX(PDX33,1040
#define PTX(PTX36,1121
#define PGOFF(PGOFF39,1200
#define PGADDR(PGADDR42,1300
#define NPDENTRIES	NPDENTRIES45,1421
#define NPTENTRIES	NPTENTRIES46,1491
#define PGSIZE	PGSIZE48,1554
#define PGSHIFT	PGSHIFT49,1602
#define PTSIZE	PTSIZE51,1640
#define PTSHIFT	PTSHIFT52,1718
#define PTXSHIFT	PTXSHIFT54,1756
#define PDXSHIFT	PDXSHIFT55,1814
#define PTE_P	PTE_P58,1910
#define PTE_W	PTE_W59,1942
#define PTE_U	PTE_U60,1976
#define PTE_PWT	PTE_PWT61,2005
#define PTE_PCD	PTE_PCD62,2045
#define PTE_A	PTE_A63,2085
#define PTE_D	PTE_D64,2118
#define PTE_PS	PTE_PS65,2148
#define PTE_G	PTE_G66,2183
#define PTE_AVAIL	PTE_AVAIL70,2353
#define PTE_SYSCALL	PTE_SYSCALL73,2480
#define PTE_ADDR(PTE_ADDR76,2586
#define CR0_PE	CR0_PE79,2665
#define CR0_MP	CR0_MP80,2713
#define CR0_EM	CR0_EM81,2763
#define CR0_TS	CR0_TS82,2803
#define CR0_ET	CR0_ET83,2847
#define CR0_NE	CR0_NE84,2892
#define CR0_WP	CR0_WP85,2937
#define CR0_AM	CR0_AM86,2981
#define CR0_NW	CR0_NW87,3026
#define CR0_CD	CR0_CD88,3073
#define CR0_PG	CR0_PG89,3117
#define CR4_PCE	CR4_PCE91,3155
#define CR4_MCE	CR4_MCE92,3213
#define CR4_PSE	CR4_PSE93,3265
#define CR4_DE	CR4_DE94,3317
#define CR4_TSD	CR4_TSD95,3368
#define CR4_PVI	CR4_PVI96,3418
#define CR4_VME	CR4_VME97,3483
#define FL_CF	FL_CF100,3554
#define FL_PF	FL_PF101,3594
#define FL_AF	FL_AF102,3635
#define FL_ZF	FL_ZF103,3685
#define FL_SF	FL_SF104,3724
#define FL_TF	FL_TF105,3763
#define FL_IF	FL_IF106,3802
#define FL_DF	FL_DF107,3846
#define FL_OF	FL_OF108,3890
#define FL_IOPL_MASK	FL_IOPL_MASK109,3933
#define FL_IOPL_0	FL_IOPL_0110,3996
#define FL_IOPL_1	FL_IOPL_1111,4040
#define FL_IOPL_2	FL_IOPL_2112,4084
#define FL_IOPL_3	FL_IOPL_3113,4128
#define FL_NT	FL_NT114,4172
#define FL_RF	FL_RF115,4213
#define FL_VM	FL_VM116,4254
#define FL_AC	FL_AC117,4301
#define FL_VIF	FL_VIF118,4346
#define FL_VIP	FL_VIP119,4399
#define FL_ID	FL_ID120,4455
#define FEC_PR	FEC_PR123,4519
#define FEC_WR	FEC_WR124,4584
#define FEC_U	FEC_U125,4636
#define SEG_NULL	SEG_NULL139,4841
#define SEG(SEG142,4903
struct Segdesc {Segdesc152,5176
	unsigned sd_lim_15_0 : 16;  // Low bits of segment limitsd_lim_15_0153,5193
	unsigned sd_lim_15_0 : 16;  // Low bits of segment limitSegdesc::sd_lim_15_0153,5193
	unsigned sd_base_15_0 : 16; // Low bits of segment base addresssd_base_15_0154,5251
	unsigned sd_base_15_0 : 16; // Low bits of segment base addressSegdesc::sd_base_15_0154,5251
	unsigned sd_base_23_16 : 8; // Middle bits of segment base addresssd_base_23_16155,5316
	unsigned sd_base_23_16 : 8; // Middle bits of segment base addressSegdesc::sd_base_23_16155,5316
	unsigned sd_type : 4;       // Segment type (see STS_ constants)sd_type156,5384
	unsigned sd_type : 4;       // Segment type (see STS_ constants)Segdesc::sd_type156,5384
	unsigned sd_s : 1;          // 0 = system, 1 = applicationsd_s157,5450
	unsigned sd_s : 1;          // 0 = system, 1 = applicationSegdesc::sd_s157,5450
	unsigned sd_dpl : 2;        // Descriptor Privilege Levelsd_dpl158,5510
	unsigned sd_dpl : 2;        // Descriptor Privilege LevelSegdesc::sd_dpl158,5510
	unsigned sd_p : 1;          // Presentsd_p159,5569
	unsigned sd_p : 1;          // PresentSegdesc::sd_p159,5569
	unsigned sd_lim_19_16 : 4;  // High bits of segment limitsd_lim_19_16160,5609
	unsigned sd_lim_19_16 : 4;  // High bits of segment limitSegdesc::sd_lim_19_16160,5609
	unsigned sd_avl : 1;        // Unused (available for software use)sd_avl161,5668
	unsigned sd_avl : 1;        // Unused (available for software use)Segdesc::sd_avl161,5668
	unsigned sd_rsv1 : 1;       // Reservedsd_rsv1162,5736
	unsigned sd_rsv1 : 1;       // ReservedSegdesc::sd_rsv1162,5736
	unsigned sd_db : 1;         // 0 = 16-bit segment, 1 = 32-bit segmentsd_db163,5777
	unsigned sd_db : 1;         // 0 = 16-bit segment, 1 = 32-bit segmentSegdesc::sd_db163,5777
	unsigned sd_g : 1;          // Granularity: limit scaled by 4K when setsd_g164,5848
	unsigned sd_g : 1;          // Granularity: limit scaled by 4K when setSegdesc::sd_g164,5848
	unsigned sd_base_31_24 : 8; // High bits of segment base addresssd_base_31_24165,5921
	unsigned sd_base_31_24 : 8; // High bits of segment base addressSegdesc::sd_base_31_24165,5921
#define SEG_NULL	SEG_NULL168,6006
#define SEG_FAULT	SEG_FAULT170,6114
#define SEG(SEG172,6192
#define SEG16(SEG16176,6391
#define STA_X	STA_X184,6662
#define STA_E	STA_E185,6707
#define STA_C	STA_C186,6771
#define STA_W	STA_W187,6839
#define STA_R	STA_R188,6901
#define STA_A	STA_A189,6958
#define STS_T16A	STS_T16A192,7022
#define STS_LDT	STS_LDT193,7071
#define STS_T16B	STS_T16B194,7122
#define STS_CG16	STS_CG16195,7166
#define STS_TG	STS_TG196,7211
#define STS_IG16	STS_IG16197,7268
#define STS_TG16	STS_TG16198,7318
#define STS_T32A	STS_T32A199,7363
#define STS_T32B	STS_T32B200,7412
#define STS_CG32	STS_CG32201,7456
#define STS_IG32	STS_IG32202,7501
#define STS_TG32	STS_TG32203,7551
struct Taskstate {Taskstate215,7731
	uint32_t ts_link;	// Old ts selectorts_link216,7750
	uint32_t ts_link;	// Old ts selectorTaskstate::ts_link216,7750
	uintptr_t ts_esp0;	// Stack pointers and segment selectorsts_esp0217,7788
	uintptr_t ts_esp0;	// Stack pointers and segment selectorsTaskstate::ts_esp0217,7788
	uint16_t ts_ss0;	//   after an increase in privilege levelts_ss0218,7848
	uint16_t ts_ss0;	//   after an increase in privilege levelTaskstate::ts_ss0218,7848
	uint16_t ts_padding1;ts_padding1219,7908
	uint16_t ts_padding1;Taskstate::ts_padding1219,7908
	uintptr_t ts_esp1;ts_esp1220,7931
	uintptr_t ts_esp1;Taskstate::ts_esp1220,7931
	uint16_t ts_ss1;ts_ss1221,7951
	uint16_t ts_ss1;Taskstate::ts_ss1221,7951
	uint16_t ts_padding2;ts_padding2222,7969
	uint16_t ts_padding2;Taskstate::ts_padding2222,7969
	uintptr_t ts_esp2;ts_esp2223,7992
	uintptr_t ts_esp2;Taskstate::ts_esp2223,7992
	uint16_t ts_ss2;ts_ss2224,8012
	uint16_t ts_ss2;Taskstate::ts_ss2224,8012
	uint16_t ts_padding3;ts_padding3225,8030
	uint16_t ts_padding3;Taskstate::ts_padding3225,8030
	physaddr_t ts_cr3;	// Page directory basets_cr3226,8053
	physaddr_t ts_cr3;	// Page directory baseTaskstate::ts_cr3226,8053
	uintptr_t ts_eip;	// Saved state from last task switchts_eip227,8096
	uintptr_t ts_eip;	// Saved state from last task switchTaskstate::ts_eip227,8096
	uint32_t ts_eflags;ts_eflags228,8152
	uint32_t ts_eflags;Taskstate::ts_eflags228,8152
	uint32_t ts_eax;	// More saved state (registers)ts_eax229,8173
	uint32_t ts_eax;	// More saved state (registers)Taskstate::ts_eax229,8173
	uint32_t ts_ecx;ts_ecx230,8223
	uint32_t ts_ecx;Taskstate::ts_ecx230,8223
	uint32_t ts_edx;ts_edx231,8241
	uint32_t ts_edx;Taskstate::ts_edx231,8241
	uint32_t ts_ebx;ts_ebx232,8259
	uint32_t ts_ebx;Taskstate::ts_ebx232,8259
	uintptr_t ts_esp;ts_esp233,8277
	uintptr_t ts_esp;Taskstate::ts_esp233,8277
	uintptr_t ts_ebp;ts_ebp234,8296
	uintptr_t ts_ebp;Taskstate::ts_ebp234,8296
	uint32_t ts_esi;ts_esi235,8315
	uint32_t ts_esi;Taskstate::ts_esi235,8315
	uint32_t ts_edi;ts_edi236,8333
	uint32_t ts_edi;Taskstate::ts_edi236,8333
	uint16_t ts_es;		// Even more saved state (segment selectors)ts_es237,8351
	uint16_t ts_es;		// Even more saved state (segment selectors)Taskstate::ts_es237,8351
	uint16_t ts_padding4;ts_padding4238,8414
	uint16_t ts_padding4;Taskstate::ts_padding4238,8414
	uint16_t ts_cs;ts_cs239,8437
	uint16_t ts_cs;Taskstate::ts_cs239,8437
	uint16_t ts_padding5;ts_padding5240,8454
	uint16_t ts_padding5;Taskstate::ts_padding5240,8454
	uint16_t ts_ss;ts_ss241,8477
	uint16_t ts_ss;Taskstate::ts_ss241,8477
	uint16_t ts_padding6;ts_padding6242,8494
	uint16_t ts_padding6;Taskstate::ts_padding6242,8494
	uint16_t ts_ds;ts_ds243,8517
	uint16_t ts_ds;Taskstate::ts_ds243,8517
	uint16_t ts_padding7;ts_padding7244,8534
	uint16_t ts_padding7;Taskstate::ts_padding7244,8534
	uint16_t ts_fs;ts_fs245,8557
	uint16_t ts_fs;Taskstate::ts_fs245,8557
	uint16_t ts_padding8;ts_padding8246,8574
	uint16_t ts_padding8;Taskstate::ts_padding8246,8574
	uint16_t ts_gs;ts_gs247,8597
	uint16_t ts_gs;Taskstate::ts_gs247,8597
	uint16_t ts_padding9;ts_padding9248,8614
	uint16_t ts_padding9;Taskstate::ts_padding9248,8614
	uint16_t ts_ldt;ts_ldt249,8637
	uint16_t ts_ldt;Taskstate::ts_ldt249,8637
	uint16_t ts_padding10;ts_padding10250,8655
	uint16_t ts_padding10;Taskstate::ts_padding10250,8655
	uint16_t ts_t;		// Trap on task switchts_t251,8679
	uint16_t ts_t;		// Trap on task switchTaskstate::ts_t251,8679
	uint16_t ts_iomb;	// I/O map base addressts_iomb252,8719
	uint16_t ts_iomb;	// I/O map base addressTaskstate::ts_iomb252,8719
struct Gatedesc {Gatedesc256,8811
	unsigned gd_off_15_0 : 16;   // low 16 bits of offset in segmentgd_off_15_0257,8829
	unsigned gd_off_15_0 : 16;   // low 16 bits of offset in segmentGatedesc::gd_off_15_0257,8829
	unsigned gd_sel : 16;        // segment selectorgd_sel258,8895
	unsigned gd_sel : 16;        // segment selectorGatedesc::gd_sel258,8895
	unsigned gd_args : 5;        // # args, 0 for interrupt/trap gatesgd_args259,8945
	unsigned gd_args : 5;        // # args, 0 for interrupt/trap gatesGatedesc::gd_args259,8945
	unsigned gd_rsv1 : 3;        // reserved(should be zero I guess)gd_rsv1260,9013
	unsigned gd_rsv1 : 3;        // reserved(should be zero I guess)Gatedesc::gd_rsv1260,9013
	unsigned gd_type : 4;        // type(STS_{TG,IG32,TG32})gd_type261,9079
	unsigned gd_type : 4;        // type(STS_{TG,IG32,TG32})Gatedesc::gd_type261,9079
	unsigned gd_s : 1;           // must be 0 (system)gd_s262,9137
	unsigned gd_s : 1;           // must be 0 (system)Gatedesc::gd_s262,9137
	unsigned gd_dpl : 2;         // descriptor(meaning new) privilege levelgd_dpl263,9189
	unsigned gd_dpl : 2;         // descriptor(meaning new) privilege levelGatedesc::gd_dpl263,9189
	unsigned gd_p : 1;           // Presentgd_p264,9262
	unsigned gd_p : 1;           // PresentGatedesc::gd_p264,9262
	unsigned gd_off_31_16 : 16;  // high bits of offset in segmentgd_off_31_16265,9303
	unsigned gd_off_31_16 : 16;  // high bits of offset in segmentGatedesc::gd_off_31_16265,9303
#define SETGATE(SETGATE282,10286
#define SETCALLGATE(SETCALLGATE296,10699
struct Pseudodesc {Pseudodesc310,11137
	uint16_t pd_lim;		// Limitpd_lim311,11157
	uint16_t pd_lim;		// LimitPseudodesc::pd_lim311,11157
	uint32_t pd_base;		// Base addresspd_base312,11185
	uint32_t pd_base;		// Base addressPseudodesc::pd_base312,11185

inc/stdarg.h,189
#define	JOS_INC_STDARG_HJOS_INC_STDARG_H4,91
typedef __builtin_va_list va_list;va_list6,117
#define va_start(va_start8,153
#define va_arg(va_arg10,210
#define va_end(va_end12,263

inc/error.h,460
#define JOS_INC_ERROR_HJOS_INC_ERROR_H4,72
	E_UNSPECIFIED	= 1,	// Unspecified or unknown problemE_UNSPECIFIED8,172
	E_BAD_ENV	,	// Environment doesn't exist or otherwiseE_BAD_ENV9,226
	E_INVAL		,	// Invalid parameterE_INVAL11,323
	E_NO_MEM	,	// Request failed due to memory shortageE_NO_MEM12,356
	E_NO_FREE_ENV	,	// Attempt to create a new environment beyondE_NO_FREE_ENV13,409
	E_FAULT		,	// Memory faultE_FAULT15,499
	MAXERRORMAXERROR17,528

inc/kbdreg.h,2510
#define JOS_KBDREG_HJOS_KBDREG_H2,21
#define KEY_HOME	KEY_HOME5,63
#define KEY_END	KEY_END6,85
#define KEY_UP	KEY_UP7,107
#define KEY_DN	KEY_DN8,128
#define KEY_LF	KEY_LF9,149
#define KEY_RT	KEY_RT10,170
#define KEY_PGUP	KEY_PGUP11,191
#define KEY_PGDN	KEY_PGDN12,213
#define KEY_INS	KEY_INS13,235
#define KEY_DEL	KEY_DEL14,257
#define	KBSTATP	KBSTATP19,331
#define	 KBS_DIB	KBS_DIB20,389
#define	 KBS_IBF	KBS_IBF21,436
#define	 KBS_WARM	KBS_WARM22,485
#define	 KBS_OCMD	KBS_OCMD23,535
#define	 KBS_NOSEC	KBS_NOSEC24,594
#define	 KBS_TERR	KBS_TERR25,654
#define	 KBS_RERR	KBS_RERR26,720
#define	 KBS_PERR	KBS_PERR27,767
#define	KBCMDP	KBCMDP29,814
#define	 KBC_RAMREAD	KBC_RAMREAD30,864
#define	 KBC_RAMWRITE	KBC_RAMWRITE31,910
#define	 KBC_AUXDISABLE	KBC_AUXDISABLE32,956
#define	 KBC_AUXENABLE	KBC_AUXENABLE33,1014
#define	 KBC_AUXTEST	KBC_AUXTEST34,1070
#define	 KBC_KBDECHO	KBC_KBDECHO35,1122
#define	 KBC_AUXECHO	KBC_AUXECHO36,1176
#define	 KBC_AUXWRITE	KBC_AUXWRITE37,1231
#define	 KBC_SELFTEST	KBC_SELFTEST38,1288
#define	 KBC_KBDTEST	KBC_KBDTEST39,1337
#define	 KBC_KBDDISABLE	KBC_KBDDISABLE40,1388
#define	 KBC_KBDENABLE	KBC_KBDENABLE41,1445
#define	 KBC_PULSE0	KBC_PULSE042,1500
#define	 KBC_PULSE1	KBC_PULSE143,1550
#define	 KBC_PULSE2	KBC_PULSE244,1600
#define	 KBC_PULSE3	KBC_PULSE345,1650
#define	KBDATAP	KBDATAP47,1701
#define	KBOUTP	KBOUTP48,1746
#define	K_RDCMDBYTE	K_RDCMDBYTE50,1791
#define	K_LDCMDBYTE	K_LDCMDBYTE51,1816
#define	KC8_TRANS	KC8_TRANS53,1842
#define	KC8_MDISABLE	KC8_MDISABLE54,1897
#define	KC8_KDISABLE	KC8_KDISABLE55,1943
#define	KC8_IGNSEC	KC8_IGNSEC56,1992
#define	KC8_CPU	KC8_CPU57,2043
#define	KC8_MENABLE	KC8_MENABLE58,2102
#define	KC8_KENABLE	KC8_KENABLE59,2156
#define	CMDBYTE	CMDBYTE60,2213
#define	KBC_RESET	KBC_RESET63,2299
#define	KBC_RESEND	KBC_RESEND64,2347
#define	KBC_SETDEFAULT	KBC_SETDEFAULT65,2419
#define	KBC_DISABLE	KBC_DISABLE66,2494
#define	KBC_ENABLE	KBC_ENABLE67,2578
#define	KBC_TYPEMATIC	KBC_TYPEMATIC68,2628
#define	KBC_SETTABLE	KBC_SETTABLE69,2690
#define	KBC_MODEIND	KBC_MODEIND70,2753
#define	KBC_ECHO	KBC_ECHO71,2815
#define	KBR_EXTENDED	KBR_EXTENDED74,2903
#define	KBR_RESEND	KBR_RESEND75,2957
#define	KBR_ACK	KBR_ACK76,3011
#define	KBR_OVERRUN	KBR_OVERRUN77,3064
#define	KBR_FAILURE	KBR_FAILURE78,3103
#define	KBR_BREAK	KBR_BREAK79,3152
#define	KBR_RSTDONE	KBR_RSTDONE80,3221
#define	KBR_ECHO	KBR_ECHO81,3267

inc/types.h,1005
#define JOS_INC_TYPES_HJOS_INC_TYPES_H2,24
#define NULL NULL5,62
typedef _Bool bool;bool9,130
enum { false, true };false10,150
enum { false, true };true10,150
typedef __signed char int8_t;int8_t13,219
typedef unsigned char uint8_t;uint8_t14,249
typedef short int16_t;int16_t15,280
typedef unsigned short uint16_t;uint16_t16,303
typedef int int32_t;int32_t17,336
typedef unsigned int uint32_t;uint32_t18,357
typedef long long int64_t;int64_t19,388
typedef unsigned long long uint64_t;uint64_t20,415
typedef int32_t intptr_t;intptr_t26,673
typedef uint32_t uintptr_t;uintptr_t27,699
typedef uint32_t physaddr_t;physaddr_t28,727
typedef uint32_t ppn_t;ppn_t31,791
typedef uint32_t size_t;size_t34,859
typedef int32_t ssize_t;ssize_t37,975
typedef int32_t off_t;off_t40,1048
#define MIN(MIN43,1108
#define MAX(MAX49,1241
#define ROUNDDOWN(ROUNDDOWN58,1476
#define ROUNDUP(ROUNDUP64,1637
#define ARRAY_SIZE(ARRAY_SIZE70,1778
#define offsetof(offsetof73,1904

inc/assert.h,175
#define JOS_INC_ASSERT_HJOS_INC_ASSERT_H4,73
#define warn(warn11,247
#define panic(panic12,304
#define assert(assert14,364
#define static_assert(static_assert18,521

boot/sign.pl,0

boot/main.c,255
#define SECTSIZE	SECTSIZE32,1131
#define ELFHDR	ELFHDR33,1152
bootmain(void)bootmain39,1293
readseg(uint32_t pa, uint32_t count, uint32_t offset)readseg72,2092
waitdisk(void)waitdisk99,2821
readsect(void *dst, uint32_t offset)readsect107,2928

boot/boot.S,108
start:start13,454
protcseg:protcseg58,1983
spin:spin72,2497
gdt:gdt77,2598
gdtdesc:gdtdesc82,2757

obj/boot/boot.asm,729
Disassembly of section .text:Disassembly5,49
start:start11,174
protcseg:protcseg84,2893
spin:spin108,3821
voidvoid132,4396
static inline uint8_tstatic137,4463
voidvoid157,5076
static inline voidstatic169,5412
	offset = (offset / SECTSIZE) + 1;offset226,7583
	end_pa = pa + count;end_pa230,7719
	offset = (offset / SECTSIZE) + 1;offset234,7851
	end_pa = pa + count;end_pa236,7935
	offset = (offset / SECTSIZE) + 1;offset238,8006
	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);ph282,9731
	eph = ph + ELFHDR->e_phnum;eph284,9848
	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);ph286,9929
	eph = ph + ELFHDR->e_phnum;eph288,10052
static inline voidstatic309,10911

obj/kern/kernel.asm,368441
Disassembly of section .text:Disassembly5,47
f0100000 <_start+0xeffffff4>:f01000007,78
_start = RELOC(entry)_start9,123
entry:entry12,159
f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dhf010000014,200
f0100006:	00 00                	add    %al,(%eax)f010000615,256
f0100008:	fe 4f 52             	decb   0x52(%edi)f010000816,306
f010000b:	e4                   	.byte 0xe4f010000b17,356
f010000c <entry>:f010000c19,400
f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472f010000c20,418
f0100013:	34 12 f010001321,471
f0100015:	b8 00 80 11 00       	mov    $0x118000,%eaxf010001528,696
f010001a:	0f 22 d8             	mov    %eax,%cr3f010001a30,767
f010001d:	0f 20 c0             	mov    %cr0,%eaxf010001d33,852
f0100020:	0d 01 00 01 80       	or     $0x80010001,%eaxf010002035,936
f0100025:	0f 22 c0             	mov    %eax,%cr0f010002537,1009
f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eaxf010002843,1219
f010002d:	ff e0                	jmp    *%eaxf010002d45,1286
f010002f <relocated>:f010002f47,1332
relocated:relocated48,1354
f010002f:	bd 00 00 00 00       	mov    $0x0,%ebpf010002f54,1542
f0100034:	bc 00 60 11 f0       	mov    $0xf0116000,%espf010003458,1644
f0100039:	e8 02 00 00 00       	call   f0100040 <i386_init>f010003962,1734
f010003e <spin>:f010003e64,1795
spin:	jmp	spinspin67,1869
f010003e:	eb fe                	jmp    f010003e <spin>f010003e68,1884
f0100040 <i386_init>:f010004070,1940
voidvoid74,1989
f0100040:	55                   	push   %ebpf010004077,2012
f0100041:	89 e5                	mov    %esp,%ebpf010004178,2056
f0100043:	53                   	push   %ebxf010004379,2105
f0100044:	83 ec 08             	sub    $0x8,%espf010004480,2149
f0100047:	e8 03 01 00 00       	call   f010014f <__x86.get_pc_thunk.bx>f010004781,2198
f010004c:	81 c3 c0 72 01 00    	add    $0x172c0,%ebxf010004c82,2270
f0100052:	c7 c2 60 90 11 f0    	mov    $0xf0119060,%edxf010005289,2587
f0100058:	c7 c0 c0 96 11 f0    	mov    $0xf01196c0,%eaxf010005890,2643
f010005e:	29 d0                	sub    %edx,%eaxf010005e91,2699
f0100060:	50                   	push   %eaxf010006092,2748
f0100061:	6a 00                	push   $0x0f010006193,2792
f0100063:	52                   	push   %edxf010006394,2836
f0100064:	e8 24 39 00 00       	call   f010398d <memset>f010006495,2880
f0100069:	e8 36 05 00 00       	call   f01005a4 <cons_init>f0100069100,3027
f010006e:	83 c4 08             	add    $0x8,%espf010006e103,3135
f0100071:	68 ac 1a 00 00       	push   $0x1aacf0100071104,3184
f0100076:	8d 83 d4 ca fe ff    	lea    -0x1352c(%ebx),%eaxf0100076105,3231
f010007c:	50                   	push   %eaxf010007c106,3290
f010007d:	e8 af 2d 00 00       	call   f0102e31 <cprintf>f010007d107,3334
f0100082:	e8 94 11 00 00       	call   f010121b <mem_init>f0100082111,3459
f0100087:	83 c4 10             	add    $0x10,%espf0100087112,3518
f010008a:	83 ec 0c             	sub    $0xc,%espf010008a117,3631
f010008d:	6a 00                	push   $0x0f010008d118,3680
f010008f:	e8 8c 07 00 00       	call   f0100820 <monitor>f010008f119,3724
f0100094:	83 c4 10             	add    $0x10,%espf0100094120,3782
f0100097:	eb f1                	jmp    f010008a <i386_init+0x4a>f0100097121,3832
f0100099 <_panic>:f0100099123,3898
voidvoid127,4034
f0100099:	55                   	push   %ebpf0100099130,4097
f010009a:	89 e5                	mov    %esp,%ebpf010009a131,4141
f010009c:	57                   	push   %edif010009c132,4190
f010009d:	56                   	push   %esif010009d133,4234
f010009e:	53                   	push   %ebxf010009e134,4278
f010009f:	83 ec 0c             	sub    $0xc,%espf010009f135,4322
f01000a2:	e8 a8 00 00 00       	call   f010014f <__x86.get_pc_thunk.bx>f01000a2136,4371
f01000a7:	81 c3 65 72 01 00    	add    $0x17265,%ebxf01000a7137,4443
f01000ad:	8b 7d 10             	mov    0x10(%ebp),%edif01000ad138,4496
f01000b0:	c7 c0 c4 96 11 f0    	mov    $0xf01196c4,%eaxf01000b0142,4580
f01000b6:	83 38 00             	cmpl   $0x0,(%eax)f01000b6143,4636
f01000b9:	74 0f                	je     f01000ca <_panic+0x31>f01000b9144,4687
dead:dead147,4763
f01000bb:	83 ec 0c             	sub    $0xc,%espf01000bb151,4834
f01000be:	6a 00                	push   $0x0f01000be152,4883
f01000c0:	e8 5b 07 00 00       	call   f0100820 <monitor>f01000c0153,4927
f01000c5:	83 c4 10             	add    $0x10,%espf01000c5154,4985
f01000c8:	eb f1                	jmp    f01000bb <_panic+0x22>f01000c8155,5035
	panicstr = fmt;panicstr156,5097
f01000ca:	89 38                	mov    %edi,(%eax)f01000ca157,5114
f01000cc:	fa                   	cli    f01000cc159,5192
f01000cd:	fc                   	cld    f01000cd160,5232
f01000ce:	8d 75 14             	lea    0x14(%ebp),%esif01000ce162,5292
f01000d1:	83 ec 04             	sub    $0x4,%espf01000d1164,5396
f01000d4:	ff 75 0c             	pushl  0xc(%ebp)f01000d4165,5445
f01000d7:	ff 75 08             	pushl  0x8(%ebp)f01000d7166,5494
f01000da:	8d 83 ef ca fe ff    	lea    -0x13511(%ebx),%eaxf01000da167,5543
f01000e0:	50                   	push   %eaxf01000e0168,5602
f01000e1:	e8 4b 2d 00 00       	call   f0102e31 <cprintf>f01000e1169,5646
f01000e6:	83 c4 08             	add    $0x8,%espf01000e6171,5724
f01000e9:	56                   	push   %esif01000e9172,5773
f01000ea:	57                   	push   %edif01000ea173,5817
f01000eb:	e8 0a 2d 00 00       	call   f0102dfa <vcprintf>f01000eb174,5861
f01000f0:	8d 83 01 da fe ff    	lea    -0x125ff(%ebx),%eaxf01000f0176,5936
f01000f6:	89 04 24             	mov    %eax,(%esp)f01000f6177,5995
f01000f9:	e8 33 2d 00 00       	call   f0102e31 <cprintf>f01000f9178,6046
f01000fe:	83 c4 10             	add    $0x10,%espf01000fe179,6104
f0100101:	eb b8                	jmp    f01000bb <_panic+0x22>f0100101180,6154
f0100103 <_warn>:f0100103182,6217
voidvoid186,6266
f0100103:	55                   	push   %ebpf0100103189,6328
f0100104:	89 e5                	mov    %esp,%ebpf0100104190,6372
f0100106:	56                   	push   %esif0100106191,6421
f0100107:	53                   	push   %ebxf0100107192,6465
f0100108:	e8 42 00 00 00       	call   f010014f <__x86.get_pc_thunk.bx>f0100108193,6509
f010010d:	81 c3 ff 71 01 00    	add    $0x171ff,%ebxf010010d194,6581
f0100113:	8d 75 14             	lea    0x14(%ebp),%esif0100113198,6668
f0100116:	83 ec 04             	sub    $0x4,%espf0100116200,6774
f0100119:	ff 75 0c             	pushl  0xc(%ebp)f0100119201,6823
f010011c:	ff 75 08             	pushl  0x8(%ebp)f010011c202,6872
f010011f:	8d 83 07 cb fe ff    	lea    -0x134f9(%ebx),%eaxf010011f203,6921
f0100125:	50                   	push   %eaxf0100125204,6980
f0100126:	e8 06 2d 00 00       	call   f0102e31 <cprintf>f0100126205,7024
f010012b:	83 c4 08             	add    $0x8,%espf010012b207,7102
f010012e:	56                   	push   %esif010012e208,7151
f010012f:	ff 75 10             	pushl  0x10(%ebp)f010012f209,7195
f0100132:	e8 c3 2c 00 00       	call   f0102dfa <vcprintf>f0100132210,7245
f0100137:	8d 83 01 da fe ff    	lea    -0x125ff(%ebx),%eaxf0100137212,7320
f010013d:	89 04 24             	mov    %eax,(%esp)f010013d213,7379
f0100140:	e8 ec 2c 00 00       	call   f0102e31 <cprintf>f0100140214,7430
f0100145:	83 c4 10             	add    $0x10,%espf0100145217,7503
f0100148:	8d 65 f8             	lea    -0x8(%ebp),%espf0100148218,7553
f010014b:	5b                   	pop    %ebxf010014b219,7608
f010014c:	5e                   	pop    %esif010014c220,7652
f010014d:	5d                   	pop    %ebpf010014d221,7696
f010014e:	c3                   	ret    f010014e222,7740
f010014f <__x86.get_pc_thunk.bx>:f010014f224,7781
f010014f:	8b 1c 24             	mov    (%esp),%ebxf010014f225,7815
f0100152:	c3                   	ret    f0100152226,7866
f0100153 <serial_proc_data>:f0100153228,7907
static bool serial_exists;static230,7937
static intstatic232,7965
f0100153:	55                   	push   %ebpf0100153235,8001
f0100154:	89 e5                	mov    %esp,%ebpf0100154236,8045
static inline uint8_tstatic238,8095
f0100156:	ba fd 03 00 00       	mov    $0x3fd,%edxf0100156243,8204
f010015b:	ec                   	in     (%dx),%alf010015b244,8255
f010015c:	a8 01                	test   $0x1,%alf010015c246,8346
f010015e:	74 0b                	je     f010016b <serial_proc_data+0x18>f010015e247,8394
f0100160:	ba f8 03 00 00       	mov    $0x3f8,%edxf0100160248,8466
f0100165:	ec                   	in     (%dx),%alf0100165249,8517
f0100166:	0f b6 c0             	movzbl %al,%eaxf0100166252,8605
f0100169:	5d                   	pop    %ebpf0100169254,8655
f010016a:	c3                   	ret    f010016a255,8699
f010016b:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf010016b257,8752
f0100170:	eb f7                	jmp    f0100169 <serial_proc_data+0x16>f0100170258,8808
f0100172 <cons_intr>:f0100172260,8881
static voidstatic264,9011
f0100172:	55                   	push   %ebpf0100172267,9054
f0100173:	89 e5                	mov    %esp,%ebpf0100173268,9098
f0100175:	56                   	push   %esif0100175269,9147
f0100176:	53                   	push   %ebxf0100176270,9191
f0100177:	e8 d3 ff ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0100177271,9235
f010017c:	81 c3 90 71 01 00    	add    $0x17190,%ebxf010017c272,9307
f0100182:	89 c6                	mov    %eax,%esif0100182273,9360
f0100184:	ff d6                	call   *%esif0100184277,9451
f0100186:	83 f8 ff             	cmp    $0xffffffff,%eaxf0100186278,9496
f0100189:	74 2e                	je     f01001b9 <cons_intr+0x47>f0100189279,9552
f010018b:	85 c0                	test   %eax,%eaxf010018b281,9631
f010018d:	74 f5                	je     f0100184 <cons_intr+0x12>f010018d282,9680
f010018f:	8b 8b 78 1f 00 00    	mov    0x1f78(%ebx),%ecxf010018f285,9787
f0100195:	8d 51 01             	lea    0x1(%ecx),%edxf0100195286,9844
f0100198:	89 93 78 1f 00 00    	mov    %edx,0x1f78(%ebx)f0100198287,9898
f010019e:	88 84 0b 74 1d 00 00 	mov    %al,0x1d74(%ebx,%ecx,1)f010019e288,9955
f01001a5:	81 fa 00 02 00 00    	cmp    $0x200,%edxf01001a5290,10050
f01001ab:	75 d7                	jne    f0100184 <cons_intr+0x12>f01001ab291,10101
f01001ad:	c7 83 78 1f 00 00 00 	movl   $0x0,0x1f78(%ebx)f01001ad293,10184
f01001b4:	00 00 00 f01001b4294,10241
f01001b7:	eb cb                	jmp    f0100184 <cons_intr+0x12>f01001b7295,10261
f01001b9:	5b                   	pop    %ebxf01001b9298,10331
f01001ba:	5e                   	pop    %esif01001ba299,10375
f01001bb:	5d                   	pop    %ebpf01001bb300,10419
f01001bc:	c3                   	ret    f01001bc301,10463
f01001bd <kbd_proc_data>:f01001bd303,10504
f01001bd:	55                   	push   %ebpf01001bd305,10532
f01001be:	89 e5                	mov    %esp,%ebpf01001be306,10576
f01001c0:	56                   	push   %esif01001c0307,10625
f01001c1:	53                   	push   %ebxf01001c1308,10669
f01001c2:	e8 88 ff ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01001c2309,10713
f01001c7:	81 c3 45 71 01 00    	add    $0x17145,%ebxf01001c7310,10785
f01001cd:	ba 64 00 00 00       	mov    $0x64,%edxf01001cd311,10838
f01001d2:	ec                   	in     (%dx),%alf01001d2312,10888
f01001d3:	a8 01                	test   $0x1,%alf01001d3314,10965
f01001d5:	0f 84 06 01 00 00    	je     f01002e1 <kbd_proc_data+0x124>f01001d5315,11013
f01001db:	a8 20                	test   $0x20,%alf01001db317,11105
f01001dd:	0f 85 05 01 00 00    	jne    f01002e8 <kbd_proc_data+0x12b>f01001dd318,11154
f01001e3:	ba 60 00 00 00       	mov    $0x60,%edxf01001e3319,11224
f01001e8:	ec                   	in     (%dx),%alf01001e8320,11274
f01001e9:	89 c2                	mov    %eax,%edxf01001e9321,11323
f01001eb:	3c e0                	cmp    $0xe0,%alf01001eb323,11393
f01001ed:	0f 84 93 00 00 00    	je     f0100286 <kbd_proc_data+0xc9>f01001ed324,11442
f01001f3:	84 c0                	test   %al,%alf01001f3326,11538
f01001f5:	0f 88 a0 00 00 00    	js     f010029b <kbd_proc_data+0xde>f01001f5327,11585
f01001fb:	8b 8b 54 1d 00 00    	mov    0x1d54(%ebx),%ecxf01001fb329,11683
f0100201:	f6 c1 40             	test   $0x40,%clf0100201330,11740
f0100204:	74 0e                	je     f0100214 <kbd_proc_data+0x57>f0100204331,11789
f0100206:	83 c8 80             	or     $0xffffff80,%eaxf0100206333,11874
f0100209:	89 c2                	mov    %eax,%edxf0100209334,11930
f010020b:	83 e1 bf             	and    $0xffffffbf,%ecxf010020b336,11998
f010020e:	89 8b 54 1d 00 00    	mov    %ecx,0x1d54(%ebx)f010020e337,12054
f0100214:	0f b6 d2             	movzbl %dl,%edxf0100214339,12138
f0100217:	0f b6 84 13 54 cc fe 	movzbl -0x133ac(%ebx,%edx,1),%eaxf0100217340,12186
f010021e:	ff f010021e341,12252
f010021f:	0b 83 54 1d 00 00    	or     0x1d54(%ebx),%eaxf010021f342,12266
f0100225:	0f b6 8c 13 54 cb fe 	movzbl -0x134ac(%ebx,%edx,1),%ecxf0100225344,12351
f010022c:	ff f010022c345,12417
f010022d:	31 c8                	xor    %ecx,%eaxf010022d346,12431
f010022f:	89 83 54 1d 00 00    	mov    %eax,0x1d54(%ebx)f010022f347,12480
	c = charcode[shift & (CTL | SHIFT)][data];c348,12537
f0100235:	89 c1                	mov    %eax,%ecxf0100235349,12581
f0100237:	83 e1 03             	and    $0x3,%ecxf0100237350,12630
f010023a:	8b 8c 8b f4 1c 00 00 	mov    0x1cf4(%ebx,%ecx,4),%ecxf010023a351,12679
f0100241:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edxf0100241352,12743
f0100245:	0f b6 f2             	movzbl %dl,%esif0100245353,12801
f0100248:	a8 08                	test   $0x8,%alf0100248355,12874
f010024a:	74 0d                	je     f0100259 <kbd_proc_data+0x9c>f010024a356,12922
f010024c:	89 f2                	mov    %esi,%edxf010024c358,13019
f010024e:	8d 4e 9f             	lea    -0x61(%esi),%ecxf010024e359,13068
f0100251:	83 f9 19             	cmp    $0x19,%ecxf0100251360,13124
f0100254:	77 7a                	ja     f01002d0 <kbd_proc_data+0x113>f0100254361,13174
f0100256:	83 ee 20             	sub    $0x20,%esif0100256363,13263
f0100259:	f7 d0                	not    %eaxf0100259365,13361
f010025b:	a8 06                	test   $0x6,%alf010025b366,13405
f010025d:	75 33                	jne    f0100292 <kbd_proc_data+0xd5>f010025d367,13453
f010025f:	81 fe e9 00 00 00    	cmp    $0xe9,%esif010025f368,13522
f0100265:	75 2b                	jne    f0100292 <kbd_proc_data+0xd5>f0100265369,13572
f0100267:	83 ec 0c             	sub    $0xc,%espf0100267371,13668
f010026a:	8d 83 21 cb fe ff    	lea    -0x134df(%ebx),%eaxf010026a372,13717
f0100270:	50                   	push   %eaxf0100270373,13776
f0100271:	e8 bb 2b 00 00       	call   f0102e31 <cprintf>f0100271374,13820
static inline voidstatic377,13881
f0100276:	b8 03 00 00 00       	mov    $0x3,%eaxf0100276381,13988
f010027b:	ba 92 00 00 00       	mov    $0x92,%edxf010027b382,14037
f0100280:	ee                   	out    %al,(%dx)f0100280383,14087
f0100281:	83 c4 10             	add    $0x10,%espf0100281384,14136
f0100284:	eb 0c                	jmp    f0100292 <kbd_proc_data+0xd5>f0100284385,14186
f0100286:	83 8b 54 1d 00 00 40 	orl    $0x40,0x1d54(%ebx)f0100286387,14273
f010028d:	be 00 00 00 00       	mov    $0x0,%esif010028d389,14343
f0100292:	89 f0                	mov    %esi,%eaxf0100292391,14394
f0100294:	8d 65 f8             	lea    -0x8(%ebp),%espf0100294392,14443
f0100297:	5b                   	pop    %ebxf0100297393,14498
f0100298:	5e                   	pop    %esif0100298394,14542
f0100299:	5d                   	pop    %ebpf0100299395,14586
f010029a:	c3                   	ret    f010029a396,14630
		data = (shift & E0ESC ? data : data & 0x7F);data397,14670
f010029b:	8b 8b 54 1d 00 00    	mov    0x1d54(%ebx),%ecxf010029b398,14717
f01002a1:	89 ce                	mov    %ecx,%esif01002a1399,14774
f01002a3:	83 e6 40             	and    $0x40,%esif01002a3400,14823
f01002a6:	83 e0 7f             	and    $0x7f,%eaxf01002a6401,14873
f01002a9:	85 f6                	test   %esi,%esif01002a9402,14923
f01002ab:	0f 44 d0             	cmove  %eax,%edxf01002ab403,14972
f01002ae:	0f b6 d2             	movzbl %dl,%edxf01002ae405,15060
f01002b1:	0f b6 84 13 54 cc fe 	movzbl -0x133ac(%ebx,%edx,1),%eaxf01002b1406,15108
f01002b8:	ff f01002b8407,15174
f01002b9:	83 c8 40             	or     $0x40,%eaxf01002b9408,15188
f01002bc:	0f b6 c0             	movzbl %al,%eaxf01002bc409,15238
f01002bf:	f7 d0                	not    %eaxf01002bf410,15286
f01002c1:	21 c8                	and    %ecx,%eaxf01002c1411,15330
f01002c3:	89 83 54 1d 00 00    	mov    %eax,0x1d54(%ebx)f01002c3412,15379
f01002c9:	be 00 00 00 00       	mov    $0x0,%esif01002c9414,15448
f01002ce:	eb c2                	jmp    f0100292 <kbd_proc_data+0xd5>f01002ce415,15497
f01002d0:	83 ea 41             	sub    $0x41,%edxf01002d0417,15599
f01002d3:	8d 4e 20             	lea    0x20(%esi),%ecxf01002d3419,15668
f01002d6:	83 fa 1a             	cmp    $0x1a,%edxf01002d6420,15723
f01002d9:	0f 42 f1             	cmovb  %ecx,%esif01002d9421,15773
f01002dc:	e9 78 ff ff ff       	jmp    f0100259 <kbd_proc_data+0x9c>f01002dc422,15822
f01002e1:	be ff ff ff ff       	mov    $0xffffffff,%esif01002e1424,15904
f01002e6:	eb aa                	jmp    f0100292 <kbd_proc_data+0xd5>f01002e6425,15960
f01002e8:	be ff ff ff ff       	mov    $0xffffffff,%esif01002e8427,16042
f01002ed:	eb a3                	jmp    f0100292 <kbd_proc_data+0xd5>f01002ed428,16098
f01002ef <cons_putc>:f01002ef430,16168
static voidstatic434,16230
f01002ef:	55                   	push   %ebpf01002ef437,16261
f01002f0:	89 e5                	mov    %esp,%ebpf01002f0438,16305
f01002f2:	57                   	push   %edif01002f2439,16354
f01002f3:	56                   	push   %esif01002f3440,16398
f01002f4:	53                   	push   %ebxf01002f4441,16442
f01002f5:	83 ec 1c             	sub    $0x1c,%espf01002f5442,16486
f01002f8:	e8 52 fe ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01002f8443,16536
f01002fd:	81 c3 0f 70 01 00    	add    $0x1700f,%ebxf01002fd444,16608
f0100303:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0100303445,16661
f0100306:	be 00 00 00 00       	mov    $0x0,%esif0100306447,16730
f010030b:	bf fd 03 00 00       	mov    $0x3fd,%edif010030b449,16835
f0100310:	b9 84 00 00 00       	mov    $0x84,%ecxf0100310450,16886
f0100315:	eb 09                	jmp    f0100320 <cons_putc+0x31>f0100315451,16936
f0100317:	89 ca                	mov    %ecx,%edxf0100317452,17001
f0100319:	ec                   	in     (%dx),%alf0100319453,17050
f010031a:	ec                   	in     (%dx),%alf010031a454,17099
f010031b:	ec                   	in     (%dx),%alf010031b455,17148
f010031c:	ec                   	in     (%dx),%alf010031c456,17197
f010031d:	83 c6 01             	add    $0x1,%esif010031d458,17257
f0100320:	89 fa                	mov    %edi,%edxf0100320459,17306
f0100322:	ec                   	in     (%dx),%alf0100322460,17355
f0100323:	a8 20                	test   $0x20,%alf0100323462,17463
f0100325:	75 08                	jne    f010032f <cons_putc+0x40>f0100325463,17512
f0100327:	81 fe ff 31 00 00    	cmp    $0x31ff,%esif0100327464,17577
f010032d:	7e e8                	jle    f0100317 <cons_putc+0x28>f010032d465,17629
f010032f:	8b 7d e4             	mov    -0x1c(%ebp),%edif010032f467,17719
f0100332:	89 f8                	mov    %edi,%eaxf0100332468,17775
f0100334:	88 45 e3             	mov    %al,-0x1d(%ebp)f0100334469,17824
f0100337:	ba f8 03 00 00       	mov    $0x3f8,%edxf0100337471,17936
f010033c:	ee                   	out    %al,(%dx)f010033c472,17987
f010033d:	be 00 00 00 00       	mov    $0x0,%esif010033d474,18091
f0100342:	bf 79 03 00 00       	mov    $0x379,%edif0100342476,18196
f0100347:	b9 84 00 00 00       	mov    $0x84,%ecxf0100347477,18247
f010034c:	eb 09                	jmp    f0100357 <cons_putc+0x68>f010034c478,18297
f010034e:	89 ca                	mov    %ecx,%edxf010034e479,18362
f0100350:	ec                   	in     (%dx),%alf0100350480,18411
f0100351:	ec                   	in     (%dx),%alf0100351481,18460
f0100352:	ec                   	in     (%dx),%alf0100352482,18509
f0100353:	ec                   	in     (%dx),%alf0100353483,18558
f0100354:	83 c6 01             	add    $0x1,%esif0100354484,18607
f0100357:	89 fa                	mov    %edi,%edxf0100357485,18656
f0100359:	ec                   	in     (%dx),%alf0100359486,18705
f010035a:	81 fe ff 31 00 00    	cmp    $0x31ff,%esif010035a487,18754
f0100360:	7f 04                	jg     f0100366 <cons_putc+0x77>f0100360488,18806
f0100362:	84 c0                	test   %al,%alf0100362489,18871
f0100364:	79 e8                	jns    f010034e <cons_putc+0x5f>f0100364490,18918
f0100366:	ba 78 03 00 00       	mov    $0x378,%edxf0100366492,19040
f010036b:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eaxf010036b493,19091
f010036f:	ee                   	out    %al,(%dx)f010036f494,19147
f0100370:	ba 7a 03 00 00       	mov    $0x37a,%edxf0100370495,19196
f0100375:	b8 0d 00 00 00       	mov    $0xd,%eaxf0100375496,19247
f010037a:	ee                   	out    %al,(%dx)f010037a497,19296
f010037b:	b8 08 00 00 00       	mov    $0x8,%eaxf010037b498,19345
f0100380:	ee                   	out    %al,(%dx)f0100380499,19394
f0100381:	8b 7d e4             	mov    -0x1c(%ebp),%edif0100381501,19462
f0100384:	89 fa                	mov    %edi,%edxf0100384502,19518
f0100386:	81 e2 00 ff ff ff    	and    $0xffffff00,%edxf0100386503,19567
f010038c:	89 f8                	mov    %edi,%eaxf010038c505,19638
f010038e:	80 cc 07             	or     $0x7,%ahf010038e506,19687
f0100391:	85 d2                	test   %edx,%edxf0100391507,19735
f0100393:	0f 45 c7             	cmovne %edi,%eaxf0100393508,19784
f0100396:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0100396509,19833
f0100399:	0f b6 c0             	movzbl %al,%eaxf0100399511,19910
f010039c:	83 f8 09             	cmp    $0x9,%eaxf010039c512,19958
f010039f:	0f 84 b9 00 00 00    	je     f010045e <cons_putc+0x16f>f010039f513,20007
f01003a5:	83 f8 09             	cmp    $0x9,%eaxf01003a5514,20073
f01003a8:	7e 74                	jle    f010041e <cons_putc+0x12f>f01003a8515,20122
f01003aa:	83 f8 0a             	cmp    $0xa,%eaxf01003aa516,20188
f01003ad:	0f 84 9e 00 00 00    	je     f0100451 <cons_putc+0x162>f01003ad517,20237
f01003b3:	83 f8 0d             	cmp    $0xd,%eaxf01003b3518,20303
f01003b6:	0f 85 d9 00 00 00    	jne    f0100495 <cons_putc+0x1a6>f01003b6519,20352
f01003bc:	0f b7 83 7c 1f 00 00 	movzwl 0x1f7c(%ebx),%eaxf01003bc521,20453
f01003c3:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eaxf01003c3522,20510
f01003c9:	c1 e8 16             	shr    $0x16,%eaxf01003c9523,20567
f01003cc:	8d 04 80             	lea    (%eax,%eax,4),%eaxf01003cc524,20617
f01003cf:	c1 e0 04             	shl    $0x4,%eaxf01003cf525,20675
f01003d2:	66 89 83 7c 1f 00 00 	mov    %ax,0x1f7c(%ebx)f01003d2526,20724
f01003d9:	66 81 bb 7c 1f 00 00 	cmpw   $0x7cf,0x1f7c(%ebx)f01003d9528,20808
f01003e0:	cf 07 f01003e0529,20867
f01003e2:	0f 87 d4 00 00 00    	ja     f01004bc <cons_putc+0x1cd>f01003e2530,20884
f01003e8:	8b 8b 84 1f 00 00    	mov    0x1f84(%ebx),%ecxf01003e8532,20972
f01003ee:	b8 0e 00 00 00       	mov    $0xe,%eaxf01003ee533,21029
f01003f3:	89 ca                	mov    %ecx,%edxf01003f3534,21078
f01003f5:	ee                   	out    %al,(%dx)f01003f5535,21127
f01003f6:	0f b7 9b 7c 1f 00 00 	movzwl 0x1f7c(%ebx),%ebxf01003f6537,21212
f01003fd:	8d 71 01             	lea    0x1(%ecx),%esif01003fd538,21269
f0100400:	89 d8                	mov    %ebx,%eaxf0100400539,21323
f0100402:	66 c1 e8 08          	shr    $0x8,%axf0100402540,21372
f0100406:	89 f2                	mov    %esi,%edxf0100406541,21420
f0100408:	ee                   	out    %al,(%dx)f0100408542,21469
f0100409:	b8 0f 00 00 00       	mov    $0xf,%eaxf0100409543,21518
f010040e:	89 ca                	mov    %ecx,%edxf010040e544,21567
f0100410:	ee                   	out    %al,(%dx)f0100410545,21616
f0100411:	89 d8                	mov    %ebx,%eaxf0100411546,21665
f0100413:	89 f2                	mov    %esi,%edxf0100413547,21714
f0100415:	ee                   	out    %al,(%dx)f0100415548,21763
f0100416:	8d 65 f4             	lea    -0xc(%ebp),%espf0100416553,21859
f0100419:	5b                   	pop    %ebxf0100419554,21914
f010041a:	5e                   	pop    %esif010041a555,21958
f010041b:	5f                   	pop    %edif010041b556,22002
f010041c:	5d                   	pop    %ebpf010041c557,22046
f010041d:	c3                   	ret    f010041d558,22090
f010041e:	83 f8 08             	cmp    $0x8,%eaxf010041e560,22151
f0100421:	75 72                	jne    f0100495 <cons_putc+0x1a6>f0100421561,22200
f0100423:	0f b7 83 7c 1f 00 00 	movzwl 0x1f7c(%ebx),%eaxf0100423563,22287
f010042a:	66 85 c0             	test   %ax,%axf010042a564,22344
f010042d:	74 b9                	je     f01003e8 <cons_putc+0xf9>f010042d565,22391
f010042f:	83 e8 01             	sub    $0x1,%eaxf010042f567,22470
f0100432:	66 89 83 7c 1f 00 00 	mov    %ax,0x1f7c(%ebx)f0100432568,22519
f0100439:	0f b7 c0             	movzwl %ax,%eaxf0100439570,22616
f010043c:	0f b7 55 e4          	movzwl -0x1c(%ebp),%edxf010043c571,22664
f0100440:	b2 00                	mov    $0x0,%dlf0100440572,22720
f0100442:	83 ca 20             	or     $0x20,%edxf0100442573,22768
f0100445:	8b 8b 80 1f 00 00    	mov    0x1f80(%ebx),%ecxf0100445574,22818
f010044b:	66 89 14 41          	mov    %dx,(%ecx,%eax,2)f010044b575,22875
f010044f:	eb 88                	jmp    f01003d9 <cons_putc+0xea>f010044f576,22932
f0100451:	66 83 83 7c 1f 00 00 	addw   $0x50,0x1f7c(%ebx)f0100451578,23020
f0100458:	50 f0100458579,23078
f0100459:	e9 5e ff ff ff       	jmp    f01003bc <cons_putc+0xcd>f0100459580,23092
f010045e:	b8 20 00 00 00       	mov    $0x20,%eaxf010045e582,23175
f0100463:	e8 87 fe ff ff       	call   f01002ef <cons_putc>f0100463583,23225
f0100468:	b8 20 00 00 00       	mov    $0x20,%eaxf0100468585,23303
f010046d:	e8 7d fe ff ff       	call   f01002ef <cons_putc>f010046d586,23353
f0100472:	b8 20 00 00 00       	mov    $0x20,%eaxf0100472588,23431
f0100477:	e8 73 fe ff ff       	call   f01002ef <cons_putc>f0100477589,23481
f010047c:	b8 20 00 00 00       	mov    $0x20,%eaxf010047c591,23559
f0100481:	e8 69 fe ff ff       	call   f01002ef <cons_putc>f0100481592,23609
f0100486:	b8 20 00 00 00       	mov    $0x20,%eaxf0100486594,23687
f010048b:	e8 5f fe ff ff       	call   f01002ef <cons_putc>f010048b595,23737
f0100490:	e9 44 ff ff ff       	jmp    f01003d9 <cons_putc+0xea>f0100490596,23797
f0100495:	0f b7 83 7c 1f 00 00 	movzwl 0x1f7c(%ebx),%eaxf0100495598,23915
f010049c:	8d 50 01             	lea    0x1(%eax),%edxf010049c599,23972
f010049f:	66 89 93 7c 1f 00 00 	mov    %dx,0x1f7c(%ebx)f010049f600,24026
f01004a6:	0f b7 c0             	movzwl %ax,%eaxf01004a6601,24082
f01004a9:	8b 93 80 1f 00 00    	mov    0x1f80(%ebx),%edxf01004a9602,24130
f01004af:	0f b7 7d e4          	movzwl -0x1c(%ebp),%edif01004af603,24187
f01004b3:	66 89 3c 42          	mov    %di,(%edx,%eax,2)f01004b3604,24243
f01004b7:	e9 1d ff ff ff       	jmp    f01003d9 <cons_putc+0xea>f01004b7605,24300
f01004bc:	8b 83 80 1f 00 00    	mov    0x1f80(%ebx),%eaxf01004bc607,24447
f01004c2:	83 ec 04             	sub    $0x4,%espf01004c2608,24504
f01004c5:	68 00 0f 00 00       	push   $0xf00f01004c5609,24553
f01004ca:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edxf01004ca610,24599
f01004d0:	52                   	push   %edxf01004d0611,24654
f01004d1:	50                   	push   %eaxf01004d1612,24698
f01004d2:	e8 03 35 00 00       	call   f01039da <memmove>f01004d2613,24742
f01004d7:	8b 93 80 1f 00 00    	mov    0x1f80(%ebx),%edxf01004d7615,24830
f01004dd:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eaxf01004dd616,24887
f01004e3:	81 c2 a0 0f 00 00    	add    $0xfa0,%edxf01004e3617,24943
f01004e9:	83 c4 10             	add    $0x10,%espf01004e9618,24994
f01004ec:	66 c7 00 20 07       	movw   $0x720,(%eax)f01004ec619,25044
f01004f1:	83 c0 02             	add    $0x2,%eaxf01004f1620,25097
f01004f4:	39 d0                	cmp    %edx,%eaxf01004f4622,25197
f01004f6:	75 f4                	jne    f01004ec <cons_putc+0x1fd>f01004f6623,25246
f01004f8:	66 83 ab 7c 1f 00 00 	subw   $0x50,0x1f7c(%ebx)f01004f8625,25335
f01004ff:	50 f01004ff626,25393
f0100500:	e9 e3 fe ff ff       	jmp    f01003e8 <cons_putc+0xf9>f0100500627,25407
f0100505 <serial_intr>:f0100505629,25473
f0100505:	e8 e7 01 00 00       	call   f01006f1 <__x86.get_pc_thunk.ax>f0100505631,25499
f010050a:	05 02 6e 01 00       	add    $0x16e02,%eaxf010050a632,25571
f010050f:	80 b8 88 1f 00 00 00 	cmpb   $0x0,0x1f88(%eax)f010050f634,25644
f0100516:	75 02                	jne    f010051a <serial_intr+0x15>f0100516635,25701
f0100518:	f3 c3                	repz ret f0100518636,25768
f010051a:	55                   	push   %ebpf010051a638,25812
f010051b:	89 e5                	mov    %esp,%ebpf010051b639,25856
f010051d:	83 ec 08             	sub    $0x8,%espf010051d640,25905
f0100520:	8d 80 47 8e fe ff    	lea    -0x171b9(%eax),%eaxf0100520642,25985
f0100526:	e8 47 fc ff ff       	call   f0100172 <cons_intr>f0100526643,26044
f010052b:	c9                   	leave  f010052b645,26106
f010052c:	c3                   	ret    f010052c646,26146
f010052d <kbd_intr>:f010052d648,26187
f010052d:	55                   	push   %ebpf010052d650,26210
f010052e:	89 e5                	mov    %esp,%ebpf010052e651,26254
f0100530:	83 ec 08             	sub    $0x8,%espf0100530652,26303
f0100533:	e8 b9 01 00 00       	call   f01006f1 <__x86.get_pc_thunk.ax>f0100533653,26352
f0100538:	05 d4 6d 01 00       	add    $0x16dd4,%eaxf0100538654,26424
f010053d:	8d 80 b1 8e fe ff    	lea    -0x1714f(%eax),%eaxf010053d656,26504
f0100543:	e8 2a fc ff ff       	call   f0100172 <cons_intr>f0100543657,26563
f0100548:	c9                   	leave  f0100548659,26625
f0100549:	c3                   	ret    f0100549660,26665
f010054a <cons_getc>:f010054a662,26706
f010054a:	55                   	push   %ebpf010054a664,26730
f010054b:	89 e5                	mov    %esp,%ebpf010054b665,26774
f010054d:	53                   	push   %ebxf010054d666,26823
f010054e:	83 ec 04             	sub    $0x4,%espf010054e667,26867
f0100551:	e8 f9 fb ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0100551668,26916
f0100556:	81 c3 b6 6d 01 00    	add    $0x16db6,%ebxf0100556669,26988
f010055c:	e8 a4 ff ff ff       	call   f0100505 <serial_intr>f010055c671,27057
f0100561:	e8 c7 ff ff ff       	call   f010052d <kbd_intr>f0100561673,27132
f0100566:	8b 93 74 1f 00 00    	mov    0x1f74(%ebx),%edxf0100566675,27222
f010056c:	b8 00 00 00 00       	mov    $0x0,%eaxf010056c677,27290
f0100571:	3b 93 78 1f 00 00    	cmp    0x1f78(%ebx),%edxf0100571679,27370
f0100577:	74 19                	je     f0100592 <cons_getc+0x48>f0100577680,27427
		c = cons.buf[cons.rpos++];c681,27492
f0100579:	8d 4a 01             	lea    0x1(%edx),%ecxf0100579682,27521
f010057c:	89 8b 74 1f 00 00    	mov    %ecx,0x1f74(%ebx)f010057c683,27575
f0100582:	0f b6 84 13 74 1d 00 	movzbl 0x1d74(%ebx,%edx,1),%eaxf0100582684,27632
f0100589:	00 f0100589685,27696
f010058a:	81 f9 00 02 00 00    	cmp    $0x200,%ecxf010058a687,27742
f0100590:	74 06                	je     f0100598 <cons_getc+0x4e>f0100590688,27793
f0100592:	83 c4 04             	add    $0x4,%espf0100592690,27860
f0100595:	5b                   	pop    %ebxf0100595691,27909
f0100596:	5d                   	pop    %ebpf0100596692,27953
f0100597:	c3                   	ret    f0100597693,27997
f0100598:	c7 83 74 1f 00 00 00 	movl   $0x0,0x1f74(%ebx)f0100598695,28055
f010059f:	00 00 00 f010059f696,28112
f01005a2:	eb ee                	jmp    f0100592 <cons_getc+0x48>f01005a2697,28132
f01005a4 <cons_init>:f01005a4699,28198
voidvoid702,28255
f01005a4:	55                   	push   %ebpf01005a4705,28278
f01005a5:	89 e5                	mov    %esp,%ebpf01005a5706,28322
f01005a7:	57                   	push   %edif01005a7707,28371
f01005a8:	56                   	push   %esif01005a8708,28415
f01005a9:	53                   	push   %ebxf01005a9709,28459
f01005aa:	83 ec 1c             	sub    $0x1c,%espf01005aa710,28503
f01005ad:	e8 9d fb ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01005ad711,28553
f01005b2:	81 c3 5a 6d 01 00    	add    $0x16d5a,%ebxf01005b2712,28625
	was = *cp;was713,28678
f01005b8:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edxf01005b8714,28690
f01005bf:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000f01005bf716,28771
f01005c6:	5a a5 f01005c6717,28829
f01005c8:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eaxf01005c8719,28868
f01005cf:	66 3d 5a a5          	cmp    $0xa55a,%axf01005cf720,28923
f01005d3:	0f 84 bc 00 00 00    	je     f0100695 <cons_init+0xf1>f01005d3721,28974
		addr_6845 = MONO_BASE;addr_6845722,29039
f01005d9:	c7 83 84 1f 00 00 b4 	movl   $0x3b4,0x1f84(%ebx)f01005d9723,29064
f01005e0:	03 00 00 f01005e0724,29123
		cp = (uint16_t*) (KERNBASE + MONO_BUF);cp725,29143
f01005e3:	c7 45 e4 00 00 0b f0 	movl   $0xf00b0000,-0x1c(%ebp)f01005e3726,29185
f01005ea:	8b bb 84 1f 00 00    	mov    0x1f84(%ebx),%edif01005ea728,29270
f01005f0:	b8 0e 00 00 00       	mov    $0xe,%eaxf01005f0729,29327
f01005f5:	89 fa                	mov    %edi,%edxf01005f5730,29376
f01005f7:	ee                   	out    %al,(%dx)f01005f7731,29425
	pos = inb(addr_6845 + 1) << 8;pos732,29474
f01005f8:	8d 4f 01             	lea    0x1(%edi),%ecxf01005f8733,29506
f01005fb:	89 ca                	mov    %ecx,%edxf01005fb735,29616
f01005fd:	ec                   	in     (%dx),%alf01005fd736,29665
f01005fe:	0f b6 f0             	movzbl %al,%esif01005fe737,29714
f0100601:	c1 e6 08             	shl    $0x8,%esif0100601738,29762
f0100604:	b8 0f 00 00 00       	mov    $0xf,%eaxf0100604740,29868
f0100609:	89 fa                	mov    %edi,%edxf0100609741,29917
f010060b:	ee                   	out    %al,(%dx)f010060b742,29966
f010060c:	89 ca                	mov    %ecx,%edxf010060c744,30071
f010060e:	ec                   	in     (%dx),%alf010060e745,30120
	crt_buf = (uint16_t*) cp;crt_buf746,30169
f010060f:	8b 7d e4             	mov    -0x1c(%ebp),%edif010060f747,30196
f0100612:	89 bb 80 1f 00 00    	mov    %edi,0x1f80(%ebx)f0100612748,30252
f0100618:	0f b6 c0             	movzbl %al,%eaxf0100618750,30337
f010061b:	09 c6                	or     %eax,%esif010061b751,30385
	crt_pos = pos;crt_pos752,30434
f010061d:	66 89 b3 7c 1f 00 00 	mov    %si,0x1f7c(%ebx)f010061d753,30450
f0100624:	b9 00 00 00 00       	mov    $0x0,%ecxf0100624755,30563
f0100629:	89 c8                	mov    %ecx,%eaxf0100629756,30612
f010062b:	ba fa 03 00 00       	mov    $0x3fa,%edxf010062b757,30661
f0100630:	ee                   	out    %al,(%dx)f0100630758,30712
f0100631:	bf fb 03 00 00       	mov    $0x3fb,%edif0100631759,30761
f0100636:	b8 80 ff ff ff       	mov    $0xffffff80,%eaxf0100636760,30812
f010063b:	89 fa                	mov    %edi,%edxf010063b761,30868
f010063d:	ee                   	out    %al,(%dx)f010063d762,30917
f010063e:	b8 0c 00 00 00       	mov    $0xc,%eaxf010063e763,30966
f0100643:	ba f8 03 00 00       	mov    $0x3f8,%edxf0100643764,31015
f0100648:	ee                   	out    %al,(%dx)f0100648765,31066
f0100649:	be f9 03 00 00       	mov    $0x3f9,%esif0100649766,31115
f010064e:	89 c8                	mov    %ecx,%eaxf010064e767,31166
f0100650:	89 f2                	mov    %esi,%edxf0100650768,31215
f0100652:	ee                   	out    %al,(%dx)f0100652769,31264
f0100653:	b8 03 00 00 00       	mov    $0x3,%eaxf0100653770,31313
f0100658:	89 fa                	mov    %edi,%edxf0100658771,31362
f010065a:	ee                   	out    %al,(%dx)f010065a772,31411
f010065b:	ba fc 03 00 00       	mov    $0x3fc,%edxf010065b773,31460
f0100660:	89 c8                	mov    %ecx,%eaxf0100660774,31511
f0100662:	ee                   	out    %al,(%dx)f0100662775,31560
f0100663:	b8 01 00 00 00       	mov    $0x1,%eaxf0100663776,31609
f0100668:	89 f2                	mov    %esi,%edxf0100668777,31658
f010066a:	ee                   	out    %al,(%dx)f010066a778,31707
f010066b:	ba fd 03 00 00       	mov    $0x3fd,%edxf010066b780,31812
f0100670:	ec                   	in     (%dx),%alf0100670781,31863
f0100671:	89 c1                	mov    %eax,%ecxf0100671782,31912
	serial_exists = (inb(COM1+COM_LSR) != 0xFF);serial_exists783,31961
f0100673:	3c ff                	cmp    $0xff,%alf0100673784,32007
f0100675:	0f 95 83 88 1f 00 00 	setne  0x1f88(%ebx)f0100675785,32056
f010067c:	ba fa 03 00 00       	mov    $0x3fa,%edxf010067c786,32108
f0100681:	ec                   	in     (%dx),%alf0100681787,32159
f0100682:	ba f8 03 00 00       	mov    $0x3f8,%edxf0100682788,32208
f0100687:	ec                   	in     (%dx),%alf0100687789,32259
f0100688:	80 f9 ff             	cmp    $0xff,%clf0100688795,32372
f010068b:	74 25                	je     f01006b2 <cons_init+0x10e>f010068b796,32421
f010068d:	8d 65 f4             	lea    -0xc(%ebp),%espf010068d799,32533
f0100690:	5b                   	pop    %ebxf0100690800,32588
f0100691:	5e                   	pop    %esif0100691801,32632
f0100692:	5f                   	pop    %edif0100692802,32676
f0100693:	5d                   	pop    %ebpf0100693803,32720
f0100694:	c3                   	ret    f0100694804,32764
f0100695:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000f0100695806,32817
		addr_6845 = CGA_BASE;addr_6845807,32871
f010069c:	c7 83 84 1f 00 00 d4 	movl   $0x3d4,0x1f84(%ebx)f010069c808,32895
f01006a3:	03 00 00 f01006a3809,32954
	cp = (uint16_t*) (KERNBASE + CGA_BUF);cp810,32974
f01006a6:	c7 45 e4 00 80 0b f0 	movl   $0xf00b8000,-0x1c(%ebp)f01006a6811,33014
f01006ad:	e9 38 ff ff ff       	jmp    f01005ea <cons_init+0x46>f01006ad812,33077
f01006b2:	83 ec 0c             	sub    $0xc,%espf01006b2814,33186
f01006b5:	8d 83 2d cb fe ff    	lea    -0x134d3(%ebx),%eaxf01006b5815,33235
f01006bb:	50                   	push   %eaxf01006bb816,33294
f01006bc:	e8 70 27 00 00       	call   f0102e31 <cprintf>f01006bc817,33338
f01006c1:	83 c4 10             	add    $0x10,%espf01006c1818,33396
f01006c4:	eb c7                	jmp    f010068d <cons_init+0xe9>f01006c4820,33448
f01006c6 <cputchar>:f01006c6822,33514
voidvoid826,33597
f01006c6:	55                   	push   %ebpf01006c6829,33620
f01006c7:	89 e5                	mov    %esp,%ebpf01006c7830,33664
f01006c9:	83 ec 08             	sub    $0x8,%espf01006c9831,33713
f01006cc:	8b 45 08             	mov    0x8(%ebp),%eaxf01006cc833,33777
f01006cf:	e8 1b fc ff ff       	call   f01002ef <cons_putc>f01006cf834,33831
f01006d4:	c9                   	leave  f01006d4836,33893
f01006d5:	c3                   	ret    f01006d5837,33933
f01006d6 <getchar>:f01006d6839,33974
intint841,33995
f01006d6:	55                   	push   %ebpf01006d6844,34015
f01006d7:	89 e5                	mov    %esp,%ebpf01006d7845,34059
f01006d9:	83 ec 08             	sub    $0x8,%espf01006d9846,34108
f01006dc:	e8 69 fe ff ff       	call   f010054a <cons_getc>f01006dc850,34198
f01006e1:	85 c0                	test   %eax,%eaxf01006e1851,34258
f01006e3:	74 f7                	je     f01006dc <getchar+0x6>f01006e3852,34307
f01006e5:	c9                   	leave  f01006e5856,34402
f01006e6:	c3                   	ret    f01006e6857,34442
f01006e7 <iscons>:f01006e7859,34483
intint861,34503
f01006e7:	55                   	push   %ebpf01006e7864,34527
f01006e8:	89 e5                	mov    %esp,%ebpf01006e8865,34571
f01006ea:	b8 01 00 00 00       	mov    $0x1,%eaxf01006ea869,34654
f01006ef:	5d                   	pop    %ebpf01006ef870,34703
f01006f0:	c3                   	ret    f01006f0871,34747
f01006f1 <__x86.get_pc_thunk.ax>:f01006f1873,34788
f01006f1:	8b 04 24             	mov    (%esp),%eaxf01006f1874,34822
f01006f4:	c3                   	ret    f01006f4875,34873
f01006f5 <mon_help>:f01006f5877,34914
intint881,35000
f01006f5:	55                   	push   %ebpf01006f5884,35060
f01006f6:	89 e5                	mov    %esp,%ebpf01006f6885,35104
f01006f8:	56                   	push   %esif01006f8886,35153
f01006f9:	53                   	push   %ebxf01006f9887,35197
f01006fa:	e8 50 fa ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01006fa888,35241
f01006ff:	81 c3 0d 6c 01 00    	add    $0x16c0d,%ebxf01006ff889,35313
f0100705:	83 ec 04             	sub    $0x4,%espf0100705894,35479
f0100708:	8d 83 54 cd fe ff    	lea    -0x132ac(%ebx),%eaxf0100708895,35528
f010070e:	50                   	push   %eaxf010070e896,35587
f010070f:	8d 83 72 cd fe ff    	lea    -0x1328e(%ebx),%eaxf010070f897,35631
f0100715:	50                   	push   %eaxf0100715898,35690
f0100716:	8d b3 77 cd fe ff    	lea    -0x13289(%ebx),%esif0100716899,35734
f010071c:	56                   	push   %esif010071c900,35793
f010071d:	e8 0f 27 00 00       	call   f0102e31 <cprintf>f010071d901,35837
f0100722:	83 c4 0c             	add    $0xc,%espf0100722902,35895
f0100725:	8d 83 e0 cd fe ff    	lea    -0x13220(%ebx),%eaxf0100725903,35944
f010072b:	50                   	push   %eaxf010072b904,36003
f010072c:	8d 83 80 cd fe ff    	lea    -0x13280(%ebx),%eaxf010072c905,36047
f0100732:	50                   	push   %eaxf0100732906,36106
f0100733:	56                   	push   %esif0100733907,36150
f0100734:	e8 f8 26 00 00       	call   f0102e31 <cprintf>f0100734908,36194
f0100739:	b8 00 00 00 00       	mov    $0x0,%eaxf0100739911,36265
f010073e:	8d 65 f8             	lea    -0x8(%ebp),%espf010073e912,36314
f0100741:	5b                   	pop    %ebxf0100741913,36369
f0100742:	5e                   	pop    %esif0100742914,36413
f0100743:	5d                   	pop    %ebpf0100743915,36457
f0100744:	c3                   	ret    f0100744916,36501
f0100745 <mon_kerninfo>:f0100745918,36542
intint920,36568
f0100745:	55                   	push   %ebpf0100745923,36632
f0100746:	89 e5                	mov    %esp,%ebpf0100746924,36676
f0100748:	57                   	push   %edif0100748925,36725
f0100749:	56                   	push   %esif0100749926,36769
f010074a:	53                   	push   %ebxf010074a927,36813
f010074b:	83 ec 18             	sub    $0x18,%espf010074b928,36857
f010074e:	e8 fc f9 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f010074e929,36907
f0100753:	81 c3 b9 6b 01 00    	add    $0x16bb9,%ebxf0100753930,36979
f0100759:	8d 83 89 cd fe ff    	lea    -0x13277(%ebx),%eaxf0100759934,37129
f010075f:	50                   	push   %eaxf010075f935,37188
f0100760:	e8 cc 26 00 00       	call   f0102e31 <cprintf>f0100760936,37232
f0100765:	83 c4 08             	add    $0x8,%espf0100765938,37351
f0100768:	ff b3 f4 ff ff ff    	pushl  -0xc(%ebx)f0100768939,37400
f010076e:	8d 83 08 ce fe ff    	lea    -0x131f8(%ebx),%eaxf010076e940,37450
f0100774:	50                   	push   %eaxf0100774941,37509
f0100775:	e8 b7 26 00 00       	call   f0102e31 <cprintf>f0100775942,37553
f010077a:	83 c4 0c             	add    $0xc,%espf010077a944,37685
f010077d:	c7 c7 0c 00 10 f0    	mov    $0xf010000c,%edif010077d945,37734
f0100783:	8d 87 00 00 00 10    	lea    0x10000000(%edi),%eaxf0100783946,37790
f0100789:	50                   	push   %eaxf0100789947,37851
f010078a:	57                   	push   %edif010078a948,37895
f010078b:	8d 83 30 ce fe ff    	lea    -0x131d0(%ebx),%eaxf010078b949,37939
f0100791:	50                   	push   %eaxf0100791950,37998
f0100792:	e8 9a 26 00 00       	call   f0102e31 <cprintf>f0100792951,38042
f0100797:	83 c4 0c             	add    $0xc,%espf0100797953,38174
f010079a:	c7 c0 c9 3d 10 f0    	mov    $0xf0103dc9,%eaxf010079a954,38223
f01007a0:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edxf01007a0955,38279
f01007a6:	52                   	push   %edxf01007a6956,38340
f01007a7:	50                   	push   %eaxf01007a7957,38384
f01007a8:	8d 83 54 ce fe ff    	lea    -0x131ac(%ebx),%eaxf01007a8958,38428
f01007ae:	50                   	push   %eaxf01007ae959,38487
f01007af:	e8 7d 26 00 00       	call   f0102e31 <cprintf>f01007af960,38531
f01007b4:	83 c4 0c             	add    $0xc,%espf01007b4962,38663
f01007b7:	c7 c0 60 90 11 f0    	mov    $0xf0119060,%eaxf01007b7963,38712
f01007bd:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edxf01007bd964,38768
f01007c3:	52                   	push   %edxf01007c3965,38829
f01007c4:	50                   	push   %eaxf01007c4966,38873
f01007c5:	8d 83 78 ce fe ff    	lea    -0x13188(%ebx),%eaxf01007c5967,38917
f01007cb:	50                   	push   %eaxf01007cb968,38976
f01007cc:	e8 60 26 00 00       	call   f0102e31 <cprintf>f01007cc969,39020
f01007d1:	83 c4 0c             	add    $0xc,%espf01007d1971,39148
f01007d4:	c7 c6 c0 96 11 f0    	mov    $0xf01196c0,%esif01007d4972,39197
f01007da:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eaxf01007da973,39253
f01007e0:	50                   	push   %eaxf01007e0974,39314
f01007e1:	56                   	push   %esif01007e1975,39358
f01007e2:	8d 83 9c ce fe ff    	lea    -0x13164(%ebx),%eaxf01007e2976,39402
f01007e8:	50                   	push   %eaxf01007e8977,39461
f01007e9:	e8 43 26 00 00       	call   f0102e31 <cprintf>f01007e9978,39505
f01007ee:	83 c4 08             	add    $0x8,%espf01007ee980,39618
f01007f1:	81 c6 ff 03 00 00    	add    $0x3ff,%esif01007f1982,39705
f01007f7:	29 fe                	sub    %edi,%esif01007f7983,39756
f01007f9:	c1 fe 0a             	sar    $0xa,%esif01007f9985,39860
f01007fc:	56                   	push   %esif01007fc986,39909
f01007fd:	8d 83 c0 ce fe ff    	lea    -0x13140(%ebx),%eaxf01007fd987,39953
f0100803:	50                   	push   %eaxf0100803988,40012
f0100804:	e8 28 26 00 00       	call   f0102e31 <cprintf>f0100804989,40056
f0100809:	b8 00 00 00 00       	mov    $0x0,%eaxf0100809992,40127
f010080e:	8d 65 f4             	lea    -0xc(%ebp),%espf010080e993,40176
f0100811:	5b                   	pop    %ebxf0100811994,40231
f0100812:	5e                   	pop    %esif0100812995,40275
f0100813:	5f                   	pop    %edif0100813996,40319
f0100814:	5d                   	pop    %ebpf0100814997,40363
f0100815:	c3                   	ret    f0100815998,40407
f0100816 <mon_backtrace>:f01008161000,40448
intint1002,40475
f0100816:	55                   	push   %ebpf01008161005,40540
f0100817:	89 e5                	mov    %esp,%ebpf01008171006,40584
f0100819:	b8 00 00 00 00       	mov    $0x0,%eaxf01008191010,40666
f010081e:	5d                   	pop    %ebpf010081e1011,40715
f010081f:	c3                   	ret    f010081f1012,40759
f0100820 <monitor>:f01008201014,40800
voidvoid1018,40834
f0100820:	55                   	push   %ebpf01008201021,40871
f0100821:	89 e5                	mov    %esp,%ebpf01008211022,40915
f0100823:	57                   	push   %edif01008231023,40964
f0100824:	56                   	push   %esif01008241024,41008
f0100825:	53                   	push   %ebxf01008251025,41052
f0100826:	83 ec 68             	sub    $0x68,%espf01008261026,41096
f0100829:	e8 21 f9 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01008291027,41146
f010082e:	81 c3 de 6a 01 00    	add    $0x16ade,%ebxf010082e1028,41218
f0100834:	8d 83 ec ce fe ff    	lea    -0x13114(%ebx),%eaxf01008341032,41334
f010083a:	50                   	push   %eaxf010083a1033,41393
f010083b:	e8 f1 25 00 00       	call   f0102e31 <cprintf>f010083b1034,41437
f0100840:	8d 83 10 cf fe ff    	lea    -0x130f0(%ebx),%eaxf01008401036,41546
f0100846:	89 04 24             	mov    %eax,(%esp)f01008461037,41605
f0100849:	e8 e3 25 00 00       	call   f0102e31 <cprintf>f01008491038,41656
f010084e:	83 c4 10             	add    $0x10,%espf010084e1039,41714
f0100851:	8d bb a6 cd fe ff    	lea    -0x1325a(%ebx),%edif01008511041,41807
f0100857:	eb 4a                	jmp    f01008a3 <monitor+0x83>f01008571042,41866
f0100859:	83 ec 08             	sub    $0x8,%espf01008591043,41929
f010085c:	0f be c0             	movsbl %al,%eaxf010085c1044,41978
f010085f:	50                   	push   %eaxf010085f1045,42026
f0100860:	57                   	push   %edif01008601046,42070
f0100861:	e8 ea 30 00 00       	call   f0103950 <strchr>f01008611047,42114
f0100866:	83 c4 10             	add    $0x10,%espf01008661048,42171
f0100869:	85 c0                	test   %eax,%eaxf01008691049,42221
f010086b:	74 08                	je     f0100875 <monitor+0x55>f010086b1050,42270
f010086d:	c6 06 00             	movb   $0x0,(%esi)f010086d1052,42348
f0100870:	8d 76 01             	lea    0x1(%esi),%esif01008701053,42399
f0100873:	eb 79                	jmp    f01008ee <monitor+0xce>f01008731054,42453
f0100875:	80 3e 00             	cmpb   $0x0,(%esi)f01008751056,42533
f0100878:	74 7f                	je     f01008f9 <monitor+0xd9>f01008781057,42584
f010087a:	83 7d a4 0f          	cmpl   $0xf,-0x5c(%ebp)f010087a1059,42674
f010087e:	74 0f                	je     f010088f <monitor+0x6f>f010087e1060,42730
f0100880:	8b 45 a4             	mov    -0x5c(%ebp),%eaxf01008801062,42815
f0100883:	8d 48 01             	lea    0x1(%eax),%ecxf01008831063,42871
f0100886:	89 4d a4             	mov    %ecx,-0x5c(%ebp)f01008861064,42925
f0100889:	89 74 85 a8          	mov    %esi,-0x58(%ebp,%eax,4)f01008891065,42981
f010088d:	eb 44                	jmp    f01008d3 <monitor+0xb3>f010088d1066,43044
f010088f:	83 ec 08             	sub    $0x8,%espf010088f1068,43161
f0100892:	6a 10                	push   $0x10f01008921069,43210
f0100894:	8d 83 ab cd fe ff    	lea    -0x13255(%ebx),%eaxf01008941070,43255
f010089a:	50                   	push   %eaxf010089a1071,43314
f010089b:	e8 91 25 00 00       	call   f0102e31 <cprintf>f010089b1072,43358
f01008a0:	83 c4 10             	add    $0x10,%espf01008a01073,43416
		buf = readline("K> ");buf1077,43481
f01008a3:	8d 83 a2 cd fe ff    	lea    -0x1325e(%ebx),%eaxf01008a31078,43506
f01008a9:	89 45 a4             	mov    %eax,-0x5c(%ebp)f01008a91079,43565
f01008ac:	83 ec 0c             	sub    $0xc,%espf01008ac1080,43621
f01008af:	ff 75 a4             	pushl  -0x5c(%ebp)f01008af1081,43670
f01008b2:	e8 61 2e 00 00       	call   f0103718 <readline>f01008b21082,43721
f01008b7:	89 c6                	mov    %eax,%esif01008b71083,43780
f01008b9:	83 c4 10             	add    $0x10,%espf01008b91085,43848
f01008bc:	85 c0                	test   %eax,%eaxf01008bc1086,43898
f01008be:	74 ec                	je     f01008ac <monitor+0x8c>f01008be1087,43947
f01008c0:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)f01008c01089,44027
	argc = 0;argc1090,44083
f01008c7:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)f01008c71091,44094
f01008ce:	eb 1e                	jmp    f01008ee <monitor+0xce>f01008ce1092,44150
f01008d0:	83 c6 01             	add    $0x1,%esif01008d01094,44223
f01008d3:	0f b6 06             	movzbl (%esi),%eaxf01008d31096,44316
f01008d6:	84 c0                	test   %al,%alf01008d61097,44367
f01008d8:	74 14                	je     f01008ee <monitor+0xce>f01008d81098,44414
f01008da:	83 ec 08             	sub    $0x8,%espf01008da1099,44477
f01008dd:	0f be c0             	movsbl %al,%eaxf01008dd1100,44526
f01008e0:	50                   	push   %eaxf01008e01101,44574
f01008e1:	57                   	push   %edif01008e11102,44618
f01008e2:	e8 69 30 00 00       	call   f0103950 <strchr>f01008e21103,44662
f01008e7:	83 c4 10             	add    $0x10,%espf01008e71104,44719
f01008ea:	85 c0                	test   %eax,%eaxf01008ea1105,44769
f01008ec:	74 e2                	je     f01008d0 <monitor+0xb0>f01008ec1106,44818
f01008ee:	0f b6 06             	movzbl (%esi),%eaxf01008ee1108,44924
f01008f1:	84 c0                	test   %al,%alf01008f11109,44975
f01008f3:	0f 85 60 ff ff ff    	jne    f0100859 <monitor+0x39>f01008f31110,45022
f01008f9:	8b 45 a4             	mov    -0x5c(%ebp),%eaxf01008f91112,45102
f01008fc:	c7 44 85 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%eax,4)f01008fc1113,45158
f0100903:	00 f01009031114,45221
f0100904:	85 c0                	test   %eax,%eaxf01009041116,45251
f0100906:	74 9b                	je     f01008a3 <monitor+0x83>f01009061117,45300
f0100908:	83 ec 08             	sub    $0x8,%espf01009081119,45409
f010090b:	8d 83 72 cd fe ff    	lea    -0x1328e(%ebx),%eaxf010090b1120,45458
f0100911:	50                   	push   %eaxf01009111121,45517
f0100912:	ff 75 a8             	pushl  -0x58(%ebp)f01009121122,45561
f0100915:	e8 d8 2f 00 00       	call   f01038f2 <strcmp>f01009151123,45612
f010091a:	83 c4 10             	add    $0x10,%espf010091a1124,45669
f010091d:	85 c0                	test   %eax,%eaxf010091d1125,45719
f010091f:	74 38                	je     f0100959 <monitor+0x139>f010091f1126,45768
f0100921:	83 ec 08             	sub    $0x8,%espf01009211127,45832
f0100924:	8d 83 80 cd fe ff    	lea    -0x13280(%ebx),%eaxf01009241128,45881
f010092a:	50                   	push   %eaxf010092a1129,45940
f010092b:	ff 75 a8             	pushl  -0x58(%ebp)f010092b1130,45984
f010092e:	e8 bf 2f 00 00       	call   f01038f2 <strcmp>f010092e1131,46035
f0100933:	83 c4 10             	add    $0x10,%espf01009331132,46092
f0100936:	85 c0                	test   %eax,%eaxf01009361133,46142
f0100938:	74 1a                	je     f0100954 <monitor+0x134>f01009381134,46191
f010093a:	83 ec 08             	sub    $0x8,%espf010093a1136,46300
f010093d:	ff 75 a8             	pushl  -0x58(%ebp)f010093d1137,46349
f0100940:	8d 83 c8 cd fe ff    	lea    -0x13238(%ebx),%eaxf01009401138,46400
f0100946:	50                   	push   %eaxf01009461139,46459
f0100947:	e8 e5 24 00 00       	call   f0102e31 <cprintf>f01009471140,46503
f010094c:	83 c4 10             	add    $0x10,%espf010094c1141,46561
f010094f:	e9 4f ff ff ff       	jmp    f01008a3 <monitor+0x83>f010094f1142,46611
f0100954:	b8 01 00 00 00       	mov    $0x1,%eaxf01009541144,46720
f0100959:	83 ec 04             	sub    $0x4,%espf01009591146,46813
f010095c:	8d 04 40             	lea    (%eax,%eax,2),%eaxf010095c1147,46862
f010095f:	ff 75 08             	pushl  0x8(%ebp)f010095f1148,46920
f0100962:	8d 55 a8             	lea    -0x58(%ebp),%edxf01009621149,46969
f0100965:	52                   	push   %edxf01009651150,47025
f0100966:	ff 75 a4             	pushl  -0x5c(%ebp)f01009661151,47069
f0100969:	ff 94 83 0c 1d 00 00 	call   *0x1d0c(%ebx,%eax,4)f01009691152,47120
f0100970:	83 c4 10             	add    $0x10,%espf01009701154,47208
f0100973:	85 c0                	test   %eax,%eaxf01009731155,47258
f0100975:	0f 89 28 ff ff ff    	jns    f01008a3 <monitor+0x83>f01009751156,47307
f010097b:	8d 65 f4             	lea    -0xc(%ebp),%espf010097b1160,47386
f010097e:	5b                   	pop    %ebxf010097e1161,47441
f010097f:	5e                   	pop    %esif010097f1162,47485
f0100980:	5f                   	pop    %edif01009801163,47529
f0100981:	5d                   	pop    %ebpf01009811164,47573
f0100982:	c3                   	ret    f01009821165,47617
f0100983 <nvram_read>:f01009831167,47658
static intstatic1171,47791
f0100983:	55                   	push   %ebpf01009831174,47822
f0100984:	89 e5                	mov    %esp,%ebpf01009841175,47866
f0100986:	57                   	push   %edif01009861176,47915
f0100987:	56                   	push   %esif01009871177,47959
f0100988:	53                   	push   %ebxf01009881178,48003
f0100989:	83 ec 18             	sub    $0x18,%espf01009891179,48047
f010098c:	e8 be f7 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f010098c1180,48097
f0100991:	81 c3 7b 69 01 00    	add    $0x1697b,%ebxf01009911181,48169
f0100997:	89 c7                	mov    %eax,%edif01009971182,48222
f0100999:	50                   	push   %eaxf01009991184,48327
f010099a:	e8 0b 24 00 00       	call   f0102daa <mc146818_read>f010099a1185,48371
f010099f:	89 c6                	mov    %eax,%esif010099f1186,48435
f01009a1:	83 c7 01             	add    $0x1,%edif01009a11187,48484
f01009a4:	89 3c 24             	mov    %edi,(%esp)f01009a41188,48533
f01009a7:	e8 fe 23 00 00       	call   f0102daa <mc146818_read>f01009a71189,48584
f01009ac:	c1 e0 08             	shl    $0x8,%eaxf01009ac1190,48648
f01009af:	09 f0                	or     %esi,%eaxf01009af1191,48697
f01009b1:	8d 65 f4             	lea    -0xc(%ebp),%espf01009b11193,48748
f01009b4:	5b                   	pop    %ebxf01009b41194,48803
f01009b5:	5e                   	pop    %esif01009b51195,48847
f01009b6:	5f                   	pop    %edif01009b61196,48891
f01009b7:	5d                   	pop    %ebpf01009b71197,48935
f01009b8:	c3                   	ret    f01009b81198,48979
f01009b9 <boot_alloc>:f01009b91200,49020
static void *static1204,49203
f01009b9:	55                   	push   %ebpf01009b91207,49242
f01009ba:	89 e5                	mov    %esp,%ebpf01009ba1208,49286
f01009bc:	53                   	push   %ebxf01009bc1209,49335
f01009bd:	83 ec 04             	sub    $0x4,%espf01009bd1210,49379
f01009c0:	e8 d9 23 00 00       	call   f0102d9e <__x86.get_pc_thunk.cx>f01009c01211,49428
f01009c5:	81 c1 47 69 01 00    	add    $0x16947,%ecxf01009c51212,49500
f01009cb:	89 c2                	mov    %eax,%edxf01009cb1213,49553
f01009cd:	83 b9 8c 1f 00 00 00 	cmpl   $0x0,0x1f8c(%ecx)f01009cd1220,49902
f01009d4:	74 34                	je     f0100a0a <boot_alloc+0x51>f01009d41221,49959
f01009d6:	8b 81 8c 1f 00 00    	mov    0x1f8c(%ecx),%eaxf01009d61228,50291
f01009dc:	8b 99 94 1f 00 00    	mov    0x1f94(%ecx),%ebxf01009dc1229,50348
f01009e2:	c1 e3 0c             	shl    $0xc,%ebxf01009e21230,50405
f01009e5:	81 c3 c0 96 11 f0    	add    $0xf01196c0,%ebxf01009e51231,50454
f01009eb:	29 c3                	sub    %eax,%ebxf01009eb1232,50510
f01009ed:	39 d3                	cmp    %edx,%ebxf01009ed1235,50587
f01009ef:	72 31                	jb     f0100a22 <boot_alloc+0x69>f01009ef1236,50636
        result = nextfree;result1240,50838
f01009f1:	81 c2 ff 0f 00 00    	add    $0xfff,%edxf01009f11242,50905
f01009f7:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf01009f71243,50956
f01009fd:	01 c2                	add    %eax,%edxf01009fd1244,51012
f01009ff:	89 91 8c 1f 00 00    	mov    %edx,0x1f8c(%ecx)f01009ff1245,51061
f0100a05:	8b 5d fc             	mov    -0x4(%ebp),%ebxf0100a051248,51143
f0100a08:	c9                   	leave  f0100a081249,51198
f0100a09:	c3                   	ret    f0100a091250,51238
		nextfree = ROUNDUP((char *) end, PGSIZE);nextfree1251,51278
f0100a0a:	c7 c0 c0 96 11 f0    	mov    $0xf01196c0,%eaxf0100a0a1252,51322
f0100a10:	05 ff 0f 00 00       	add    $0xfff,%eaxf0100a101253,51378
f0100a15:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf0100a151254,51429
f0100a1a:	89 81 8c 1f 00 00    	mov    %eax,0x1f8c(%ecx)f0100a1a1255,51485
f0100a20:	eb b4                	jmp    f01009d6 <boot_alloc+0x1d>f0100a201256,51542
f0100a22:	83 ec 0c             	sub    $0xc,%espf0100a221258,51706
f0100a25:	53                   	push   %ebxf0100a251259,51755
f0100a26:	52                   	push   %edxf0100a261260,51799
f0100a27:	8d 81 38 cf fe ff    	lea    -0x130c8(%ecx),%eaxf0100a271261,51843
f0100a2d:	50                   	push   %eaxf0100a2d1262,51902
f0100a2e:	6a 6d                	push   $0x6df0100a2e1263,51946
f0100a30:	8d 81 50 d7 fe ff    	lea    -0x128b0(%ecx),%eaxf0100a301264,51991
f0100a36:	50                   	push   %eaxf0100a361265,52050
f0100a37:	89 cb                	mov    %ecx,%ebxf0100a371266,52094
f0100a39:	e8 5b f6 ff ff       	call   f0100099 <_panic>f0100a391267,52143
f0100a3e <check_va2pa>:f0100a3e1269,52201
static physaddr_tstatic1273,52365
f0100a3e:	55                   	push   %ebpf0100a3e1276,52425
f0100a3f:	89 e5                	mov    %esp,%ebpf0100a3f1277,52469
f0100a41:	56                   	push   %esif0100a411278,52518
f0100a42:	53                   	push   %ebxf0100a421279,52562
f0100a43:	e8 56 23 00 00       	call   f0102d9e <__x86.get_pc_thunk.cx>f0100a431280,52606
f0100a48:	81 c1 c4 68 01 00    	add    $0x168c4,%ecxf0100a481281,52678
	pgdir = &pgdir[PDX(va)];pgdir1284,52743
f0100a4e:	89 d3                	mov    %edx,%ebxf0100a4e1285,52769
f0100a50:	c1 eb 16             	shr    $0x16,%ebxf0100a501286,52818
f0100a53:	8b 04 98             	mov    (%eax,%ebx,4),%eaxf0100a531288,52892
f0100a56:	a8 01                	test   $0x1,%alf0100a561289,52950
f0100a58:	74 5a                	je     f0100ab4 <check_va2pa+0x76>f0100a581290,52998
	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));p1292,53078
f0100a5a:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf0100a5a1293,53117
#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)KADDR1294,53173
static inline void*static1296,53223
f0100a5f:	89 c6                	mov    %eax,%esif0100a5f1300,53321
f0100a61:	c1 ee 0c             	shr    $0xc,%esif0100a611301,53370
f0100a64:	c7 c3 c8 96 11 f0    	mov    $0xf01196c8,%ebxf0100a641302,53419
f0100a6a:	3b 33                	cmp    (%ebx),%esif0100a6a1303,53475
f0100a6c:	73 2b                	jae    f0100a99 <check_va2pa+0x5b>f0100a6c1304,53526
f0100a6e:	c1 ea 0c             	shr    $0xc,%edxf0100a6e1306,53621
f0100a71:	81 e2 ff 03 00 00    	and    $0x3ff,%edxf0100a711307,53670
f0100a77:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eaxf0100a771308,53721
f0100a7e:	89 c2                	mov    %eax,%edxf0100a7e1309,53790
f0100a80:	83 e2 01             	and    $0x1,%edxf0100a801310,53839
f0100a83:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf0100a831313,53931
f0100a88:	85 d2                	test   %edx,%edxf0100a881314,53987
f0100a8a:	ba ff ff ff ff       	mov    $0xffffffff,%edxf0100a8a1315,54036
f0100a8f:	0f 44 c2             	cmove  %edx,%eaxf0100a8f1316,54092
f0100a92:	8d 65 f8             	lea    -0x8(%ebp),%espf0100a921318,54143
f0100a95:	5b                   	pop    %ebxf0100a951319,54198
f0100a96:	5e                   	pop    %esif0100a961320,54242
f0100a97:	5d                   	pop    %ebpf0100a971321,54286
f0100a98:	c3                   	ret    f0100a981322,54330
f0100a99:	50                   	push   %eaxf0100a991324,54434
f0100a9a:	8d 81 84 cf fe ff    	lea    -0x1307c(%ecx),%eaxf0100a9a1325,54478
f0100aa0:	50                   	push   %eaxf0100aa01326,54537
f0100aa1:	68 c4 02 00 00       	push   $0x2c4f0100aa11327,54581
f0100aa6:	8d 81 50 d7 fe ff    	lea    -0x128b0(%ecx),%eaxf0100aa61328,54627
f0100aac:	50                   	push   %eaxf0100aac1329,54686
f0100aad:	89 cb                	mov    %ecx,%ebxf0100aad1330,54730
f0100aaf:	e8 e5 f5 ff ff       	call   f0100099 <_panic>f0100aaf1331,54779
f0100ab4:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf0100ab41333,54849
f0100ab9:	eb d7                	jmp    f0100a92 <check_va2pa+0x54>f0100ab91334,54905
f0100abb <check_page_free_list>:f0100abb1336,54973
f0100abb:	55                   	push   %ebpf0100abb1338,55008
f0100abc:	89 e5                	mov    %esp,%ebpf0100abc1339,55052
f0100abe:	57                   	push   %edif0100abe1340,55101
f0100abf:	56                   	push   %esif0100abf1341,55145
f0100ac0:	53                   	push   %ebxf0100ac01342,55189
f0100ac1:	83 ec 3c             	sub    $0x3c,%espf0100ac11343,55233
f0100ac4:	e8 dd 22 00 00       	call   f0102da6 <__x86.get_pc_thunk.di>f0100ac41344,55283
f0100ac9:	81 c7 43 68 01 00    	add    $0x16843,%edif0100ac91345,55355
f0100acf:	89 7d c4             	mov    %edi,-0x3c(%ebp)f0100acf1346,55408
f0100ad2:	84 c0                	test   %al,%alf0100ad21348,55520
f0100ad4:	0f 85 dd 02 00 00    	jne    f0100db7 <check_page_free_list+0x2fc>f0100ad41349,55567
f0100ada:	8b 45 c4             	mov    -0x3c(%ebp),%eaxf0100ada1351,55666
f0100add:	83 b8 90 1f 00 00 00 	cmpl   $0x0,0x1f90(%eax)f0100add1352,55722
f0100ae4:	74 0c                	je     f0100af2 <check_page_free_list+0x37>f0100ae41353,55779
f0100ae6:	c7 45 d4 00 04 00 00 	movl   $0x400,-0x2c(%ebp)f0100ae61355,55911
f0100aed:	e9 2f 03 00 00       	jmp    f0100e21 <check_page_free_list+0x366>f0100aed1356,55969
f0100af2:	83 ec 04             	sub    $0x4,%espf0100af21358,56094
f0100af5:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100af51359,56143
f0100af8:	8d 83 a8 cf fe ff    	lea    -0x13058(%ebx),%eaxf0100af81360,56199
f0100afe:	50                   	push   %eaxf0100afe1361,56258
f0100aff:	68 05 02 00 00       	push   $0x205f0100aff1362,56302
f0100b04:	8d 83 50 d7 fe ff    	lea    -0x128b0(%ebx),%eaxf0100b041363,56348
f0100b0a:	50                   	push   %eaxf0100b0a1364,56407
f0100b0b:	e8 89 f5 ff ff       	call   f0100099 <_panic>f0100b0b1365,56451
f0100b10:	50                   	push   %eaxf0100b101366,56508
f0100b11:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100b111367,56552
f0100b14:	8d 83 84 cf fe ff    	lea    -0x1307c(%ebx),%eaxf0100b141368,56608
f0100b1a:	50                   	push   %eaxf0100b1a1369,56667
f0100b1b:	6a 52                	push   $0x52f0100b1b1370,56711
f0100b1d:	8d 83 5c d7 fe ff    	lea    -0x128a4(%ebx),%eaxf0100b1d1371,56756
f0100b23:	50                   	push   %eaxf0100b231372,56815
f0100b24:	e8 70 f5 ff ff       	call   f0100099 <_panic>f0100b241373,56859
f0100b29:	8b 36                	mov    (%esi),%esif0100b291375,56965
f0100b2b:	85 f6                	test   %esi,%esif0100b2b1376,57016
f0100b2d:	74 40                	je     f0100b6f <check_page_free_list+0xb4>f0100b2d1377,57065
void	tlb_invalidate(pde_t *pgdir, void *va);void1378,57141
static inline physaddr_tstatic1380,57187
f0100b2f:	89 f0                	mov    %esi,%eaxf0100b2f1384,57276
f0100b31:	2b 07                	sub    (%edi),%eaxf0100b311385,57325
f0100b33:	c1 f8 03             	sar    $0x3,%eaxf0100b331386,57376
f0100b36:	c1 e0 0c             	shl    $0xc,%eaxf0100b361387,57425
f0100b39:	89 c2                	mov    %eax,%edxf0100b391389,57510
f0100b3b:	c1 ea 16             	shr    $0x16,%edxf0100b3b1390,57559
f0100b3e:	3b 55 d4             	cmp    -0x2c(%ebp),%edxf0100b3e1391,57609
f0100b41:	73 e6                	jae    f0100b29 <check_page_free_list+0x6e>f0100b411392,57665
f0100b43:	89 c2                	mov    %eax,%edxf0100b431394,57767
f0100b45:	c1 ea 0c             	shr    $0xc,%edxf0100b451395,57816
f0100b48:	8b 4d d0             	mov    -0x30(%ebp),%ecxf0100b481396,57865
f0100b4b:	3b 11                	cmp    (%ecx),%edxf0100b4b1397,57921
f0100b4d:	73 c1                	jae    f0100b10 <check_page_free_list+0x55>f0100b4d1398,57972
f0100b4f:	83 ec 04             	sub    $0x4,%espf0100b4f1400,58084
f0100b52:	68 80 00 00 00       	push   $0x80f0100b521401,58133
f0100b57:	68 97 00 00 00       	push   $0x97f0100b571402,58178
f0100b5c:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0100b5c1404,58256
f0100b61:	50                   	push   %eaxf0100b611405,58312
f0100b62:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100b621406,58356
f0100b65:	e8 23 2e 00 00       	call   f010398d <memset>f0100b651407,58412
f0100b6a:	83 c4 10             	add    $0x10,%espf0100b6a1408,58469
f0100b6d:	eb ba                	jmp    f0100b29 <check_page_free_list+0x6e>f0100b6d1409,58519
	first_free_page = (char *) boot_alloc(0);first_free_page1410,58595
f0100b6f:	b8 00 00 00 00       	mov    $0x0,%eaxf0100b6f1411,58638
f0100b74:	e8 40 fe ff ff       	call   f01009b9 <boot_alloc>f0100b741412,58687
f0100b79:	89 45 c8             	mov    %eax,-0x38(%ebp)f0100b791413,58748
f0100b7c:	8b 7d c4             	mov    -0x3c(%ebp),%edif0100b7c1415,58855
f0100b7f:	8b 97 90 1f 00 00    	mov    0x1f90(%edi),%edxf0100b7f1416,58911
f0100b85:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100b851418,58991
f0100b8b:	8b 08                	mov    (%eax),%ecxf0100b8b1419,59047
f0100b8d:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf0100b8d1421,59129
f0100b93:	8b 00                	mov    (%eax),%eaxf0100b931422,59185
f0100b95:	89 45 cc             	mov    %eax,-0x34(%ebp)f0100b951423,59236
f0100b98:	8d 1c c1             	lea    (%ecx,%eax,8),%ebxf0100b981424,59292
f0100b9b:	89 4d d4             	mov    %ecx,-0x2c(%ebp)f0100b9b1426,59411
f0100b9e:	bf 00 00 00 00       	mov    $0x0,%edif0100b9e1428,59509
f0100ba3:	89 75 d0             	mov    %esi,-0x30(%ebp)f0100ba31429,59558
f0100ba6:	e9 08 01 00 00       	jmp    f0100cb3 <check_page_free_list+0x1f8>f0100ba61431,59665
f0100bab:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100bab1433,59765
f0100bae:	8d 83 6a d7 fe ff    	lea    -0x12896(%ebx),%eaxf0100bae1434,59821
f0100bb4:	50                   	push   %eaxf0100bb41435,59880
f0100bb5:	8d 83 76 d7 fe ff    	lea    -0x1288a(%ebx),%eaxf0100bb51436,59924
f0100bbb:	50                   	push   %eaxf0100bbb1437,59983
f0100bbc:	68 1f 02 00 00       	push   $0x21ff0100bbc1438,60027
f0100bc1:	8d 83 50 d7 fe ff    	lea    -0x128b0(%ebx),%eaxf0100bc11439,60073
f0100bc7:	50                   	push   %eaxf0100bc71440,60132
f0100bc8:	e8 cc f4 ff ff       	call   f0100099 <_panic>f0100bc81441,60176
f0100bcd:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100bcd1443,60264
f0100bd0:	8d 83 8b d7 fe ff    	lea    -0x12875(%ebx),%eaxf0100bd01444,60320
f0100bd6:	50                   	push   %eaxf0100bd61445,60379
f0100bd7:	8d 83 76 d7 fe ff    	lea    -0x1288a(%ebx),%eaxf0100bd71446,60423
f0100bdd:	50                   	push   %eaxf0100bdd1447,60482
f0100bde:	68 20 02 00 00       	push   $0x220f0100bde1448,60526
f0100be3:	8d 83 50 d7 fe ff    	lea    -0x128b0(%ebx),%eaxf0100be31449,60572
f0100be9:	50                   	push   %eaxf0100be91450,60631
f0100bea:	e8 aa f4 ff ff       	call   f0100099 <_panic>f0100bea1451,60675
f0100bef:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100bef1453,60793
f0100bf2:	8d 83 cc cf fe ff    	lea    -0x13034(%ebx),%eaxf0100bf21454,60849
f0100bf8:	50                   	push   %eaxf0100bf81455,60908
f0100bf9:	8d 83 76 d7 fe ff    	lea    -0x1288a(%ebx),%eaxf0100bf91456,60952
f0100bff:	50                   	push   %eaxf0100bff1457,61011
f0100c00:	68 21 02 00 00       	push   $0x221f0100c001458,61055
f0100c05:	8d 83 50 d7 fe ff    	lea    -0x128b0(%ebx),%eaxf0100c051459,61101
f0100c0b:	50                   	push   %eaxf0100c0b1460,61160
f0100c0c:	e8 88 f4 ff ff       	call   f0100099 <_panic>f0100c0c1461,61204
f0100c11:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100c111463,61289
f0100c14:	8d 83 9f d7 fe ff    	lea    -0x12861(%ebx),%eaxf0100c141464,61345
f0100c1a:	50                   	push   %eaxf0100c1a1465,61404
f0100c1b:	8d 83 76 d7 fe ff    	lea    -0x1288a(%ebx),%eaxf0100c1b1466,61448
f0100c21:	50                   	push   %eaxf0100c211467,61507
f0100c22:	68 24 02 00 00       	push   $0x224f0100c221468,61551
f0100c27:	8d 83 50 d7 fe ff    	lea    -0x128b0(%ebx),%eaxf0100c271469,61597
f0100c2d:	50                   	push   %eaxf0100c2d1470,61656
f0100c2e:	e8 66 f4 ff ff       	call   f0100099 <_panic>f0100c2e1471,61700
f0100c33:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100c331473,61793
f0100c36:	8d 83 b0 d7 fe ff    	lea    -0x12850(%ebx),%eaxf0100c361474,61849
f0100c3c:	50                   	push   %eaxf0100c3c1475,61908
f0100c3d:	8d 83 76 d7 fe ff    	lea    -0x1288a(%ebx),%eaxf0100c3d1476,61952
f0100c43:	50                   	push   %eaxf0100c431477,62011
f0100c44:	68 25 02 00 00       	push   $0x225f0100c441478,62055
f0100c49:	8d 83 50 d7 fe ff    	lea    -0x128b0(%ebx),%eaxf0100c491479,62101
f0100c4f:	50                   	push   %eaxf0100c4f1480,62160
f0100c50:	e8 44 f4 ff ff       	call   f0100099 <_panic>f0100c501481,62204
f0100c55:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100c551483,62307
f0100c58:	8d 83 00 d0 fe ff    	lea    -0x13000(%ebx),%eaxf0100c581484,62363
f0100c5e:	50                   	push   %eaxf0100c5e1485,62422
f0100c5f:	8d 83 76 d7 fe ff    	lea    -0x1288a(%ebx),%eaxf0100c5f1486,62466
f0100c65:	50                   	push   %eaxf0100c651487,62525
f0100c66:	68 26 02 00 00       	push   $0x226f0100c661488,62569
f0100c6b:	8d 83 50 d7 fe ff    	lea    -0x128b0(%ebx),%eaxf0100c6b1489,62615
f0100c71:	50                   	push   %eaxf0100c711490,62674
f0100c72:	e8 22 f4 ff ff       	call   f0100099 <_panic>f0100c721491,62718
f0100c77:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100c771493,62812
f0100c7a:	8d 83 c9 d7 fe ff    	lea    -0x12837(%ebx),%eaxf0100c7a1494,62868
f0100c80:	50                   	push   %eaxf0100c801495,62927
f0100c81:	8d 83 76 d7 fe ff    	lea    -0x1288a(%ebx),%eaxf0100c811496,62971
f0100c87:	50                   	push   %eaxf0100c871497,63030
f0100c88:	68 27 02 00 00       	push   $0x227f0100c881498,63074
f0100c8d:	8d 83 50 d7 fe ff    	lea    -0x128b0(%ebx),%eaxf0100c8d1499,63120
f0100c93:	50                   	push   %eaxf0100c931500,63179
f0100c94:	e8 00 f4 ff ff       	call   f0100099 <_panic>f0100c941501,63223
f0100c99:	89 c6                	mov    %eax,%esif0100c991503,63306
f0100c9b:	c1 ee 0c             	shr    $0xc,%esif0100c9b1504,63355
f0100c9e:	39 75 cc             	cmp    %esi,-0x34(%ebp)f0100c9e1505,63404
f0100ca1:	76 70                	jbe    f0100d13 <check_page_free_list+0x258>f0100ca11506,63460
f0100ca3:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0100ca31508,63570
f0100ca8:	39 45 c8             	cmp    %eax,-0x38(%ebp)f0100ca81510,63706
f0100cab:	77 7f                	ja     f0100d2c <check_page_free_list+0x271>f0100cab1511,63762
f0100cad:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)f0100cad1513,63858
f0100cb1:	8b 12                	mov    (%edx),%edxf0100cb11515,63965
f0100cb3:	85 d2                	test   %edx,%edxf0100cb31516,64016
f0100cb5:	0f 84 93 00 00 00    	je     f0100d4e <check_page_free_list+0x293>f0100cb51517,64065
f0100cbb:	39 d1                	cmp    %edx,%ecxf0100cbb1519,64165
f0100cbd:	0f 87 e8 fe ff ff    	ja     f0100bab <check_page_free_list+0xf0>f0100cbd1520,64214
f0100cc3:	39 d3                	cmp    %edx,%ebxf0100cc31522,64321
f0100cc5:	0f 86 02 ff ff ff    	jbe    f0100bcd <check_page_free_list+0x112>f0100cc51523,64370
f0100ccb:	89 d0                	mov    %edx,%eaxf0100ccb1525,64508
f0100ccd:	2b 45 d4             	sub    -0x2c(%ebp),%eaxf0100ccd1526,64557
f0100cd0:	a8 07                	test   $0x7,%alf0100cd01527,64613
f0100cd2:	0f 85 17 ff ff ff    	jne    f0100bef <check_page_free_list+0x134>f0100cd21528,64661
f0100cd8:	c1 f8 03             	sar    $0x3,%eaxf0100cd81530,64771
f0100cdb:	c1 e0 0c             	shl    $0xc,%eaxf0100cdb1531,64820
f0100cde:	85 c0                	test   %eax,%eaxf0100cde1533,64897
f0100ce0:	0f 84 2b ff ff ff    	je     f0100c11 <check_page_free_list+0x156>f0100ce01534,64946
f0100ce6:	3d 00 00 0a 00       	cmp    $0xa0000,%eaxf0100ce61536,65059
f0100ceb:	0f 84 42 ff ff ff    	je     f0100c33 <check_page_free_list+0x178>f0100ceb1537,65112
f0100cf1:	3d 00 f0 0f 00       	cmp    $0xff000,%eaxf0100cf11539,65235
f0100cf6:	0f 84 59 ff ff ff    	je     f0100c55 <check_page_free_list+0x19a>f0100cf61540,65288
f0100cfc:	3d 00 00 10 00       	cmp    $0x100000,%eaxf0100cfc1542,65402
f0100d01:	0f 84 70 ff ff ff    	je     f0100c77 <check_page_free_list+0x1bc>f0100d011543,65456
f0100d07:	3d ff ff 0f 00       	cmp    $0xfffff,%eaxf0100d071545,65613
f0100d0c:	77 8b                	ja     f0100c99 <check_page_free_list+0x1de>f0100d0c1546,65666
f0100d0e:	83 c7 01             	add    $0x1,%edif0100d0e1548,65763
f0100d11:	eb 9e                	jmp    f0100cb1 <check_page_free_list+0x1f6>f0100d111549,65812
f0100d13:	50                   	push   %eaxf0100d131551,65953
f0100d14:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d141552,65997
f0100d17:	8d 83 84 cf fe ff    	lea    -0x1307c(%ebx),%eaxf0100d171553,66053
f0100d1d:	50                   	push   %eaxf0100d1d1554,66112
f0100d1e:	6a 52                	push   $0x52f0100d1e1555,66156
f0100d20:	8d 83 5c d7 fe ff    	lea    -0x128a4(%ebx),%eaxf0100d201556,66201
f0100d26:	50                   	push   %eaxf0100d261557,66260
f0100d27:	e8 6d f3 ff ff       	call   f0100099 <_panic>f0100d271558,66304
f0100d2c:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d2c1560,66441
f0100d2f:	8d 83 24 d0 fe ff    	lea    -0x12fdc(%ebx),%eaxf0100d2f1561,66497
f0100d35:	50                   	push   %eaxf0100d351562,66556
f0100d36:	8d 83 76 d7 fe ff    	lea    -0x1288a(%ebx),%eaxf0100d361563,66600
f0100d3c:	50                   	push   %eaxf0100d3c1564,66659
f0100d3d:	68 28 02 00 00       	push   $0x228f0100d3d1565,66703
f0100d42:	8d 83 50 d7 fe ff    	lea    -0x128b0(%ebx),%eaxf0100d421566,66749
f0100d48:	50                   	push   %eaxf0100d481567,66808
f0100d49:	e8 4b f3 ff ff       	call   f0100099 <_panic>f0100d491568,66852
f0100d4e:	8b 75 d0             	mov    -0x30(%ebp),%esif0100d4e1569,66909
f0100d51:	85 ff                	test   %edi,%edif0100d511571,66993
f0100d53:	7e 1e                	jle    f0100d73 <check_page_free_list+0x2b8>f0100d531572,67042
f0100d55:	85 f6                	test   %esi,%esif0100d551574,67146
f0100d57:	7e 3c                	jle    f0100d95 <check_page_free_list+0x2da>f0100d571575,67195
f0100d59:	83 ec 0c             	sub    $0xc,%espf0100d591577,67321
f0100d5c:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d5c1578,67370
f0100d5f:	8d 83 6c d0 fe ff    	lea    -0x12f94(%ebx),%eaxf0100d5f1579,67426
f0100d65:	50                   	push   %eaxf0100d651580,67485
f0100d66:	e8 c6 20 00 00       	call   f0102e31 <cprintf>f0100d661581,67529
f0100d6b:	8d 65 f4             	lea    -0xc(%ebp),%espf0100d6b1583,67589
f0100d6e:	5b                   	pop    %ebxf0100d6e1584,67644
f0100d6f:	5e                   	pop    %esif0100d6f1585,67688
f0100d70:	5f                   	pop    %edif0100d701586,67732
f0100d71:	5d                   	pop    %ebpf0100d711587,67776
f0100d72:	c3                   	ret    f0100d721588,67820
f0100d73:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d731590,67888
f0100d76:	8d 83 e3 d7 fe ff    	lea    -0x1281d(%ebx),%eaxf0100d761591,67944
f0100d7c:	50                   	push   %eaxf0100d7c1592,68003
f0100d7d:	8d 83 76 d7 fe ff    	lea    -0x1288a(%ebx),%eaxf0100d7d1593,68047
f0100d83:	50                   	push   %eaxf0100d831594,68106
f0100d84:	68 30 02 00 00       	push   $0x230f0100d841595,68150
f0100d89:	8d 83 50 d7 fe ff    	lea    -0x128b0(%ebx),%eaxf0100d891596,68196
f0100d8f:	50                   	push   %eaxf0100d8f1597,68255
f0100d90:	e8 04 f3 ff ff       	call   f0100099 <_panic>f0100d901598,68299
f0100d95:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d951600,68383
f0100d98:	8d 83 f5 d7 fe ff    	lea    -0x1280b(%ebx),%eaxf0100d981601,68439
f0100d9e:	50                   	push   %eaxf0100d9e1602,68498
f0100d9f:	8d 83 76 d7 fe ff    	lea    -0x1288a(%ebx),%eaxf0100d9f1603,68542
f0100da5:	50                   	push   %eaxf0100da51604,68601
f0100da6:	68 31 02 00 00       	push   $0x231f0100da61605,68645
f0100dab:	8d 83 50 d7 fe ff    	lea    -0x128b0(%ebx),%eaxf0100dab1606,68691
f0100db1:	50                   	push   %eaxf0100db11607,68750
f0100db2:	e8 e2 f2 ff ff       	call   f0100099 <_panic>f0100db21608,68794
f0100db7:	8b 45 c4             	mov    -0x3c(%ebp),%eaxf0100db71610,68873
f0100dba:	8b 80 90 1f 00 00    	mov    0x1f90(%eax),%eaxf0100dba1611,68929
f0100dc0:	85 c0                	test   %eax,%eaxf0100dc01612,68986
f0100dc2:	0f 84 2a fd ff ff    	je     f0100af2 <check_page_free_list+0x37>f0100dc21613,69035
f0100dc8:	8d 55 d8             	lea    -0x28(%ebp),%edxf0100dc81615,69155
f0100dcb:	89 55 e0             	mov    %edx,-0x20(%ebp)f0100dcb1616,69211
f0100dce:	8d 55 dc             	lea    -0x24(%ebp),%edxf0100dce1617,69267
f0100dd1:	89 55 e4             	mov    %edx,-0x1c(%ebp)f0100dd11618,69323
f0100dd4:	8b 7d c4             	mov    -0x3c(%ebp),%edif0100dd41620,69412
f0100dd7:	c7 c3 d0 96 11 f0    	mov    $0xf01196d0,%ebxf0100dd71621,69468
f0100ddd:	89 c2                	mov    %eax,%edxf0100ddd1622,69524
f0100ddf:	2b 13                	sub    (%ebx),%edxf0100ddf1623,69573
f0100de1:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edxf0100de11625,69673
f0100de7:	0f 95 c2             	setne  %dlf0100de71626,69727
f0100dea:	0f b6 d2             	movzbl %dl,%edxf0100dea1627,69770
f0100ded:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecxf0100ded1629,69841
f0100df1:	89 01                	mov    %eax,(%ecx)f0100df11630,69904
f0100df3:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)f0100df31632,69987
f0100df7:	8b 00                	mov    (%eax),%eaxf0100df71634,70102
f0100df9:	85 c0                	test   %eax,%eaxf0100df91635,70153
f0100dfb:	75 e0                	jne    f0100ddd <check_page_free_list+0x322>f0100dfb1636,70202
f0100dfd:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf0100dfd1638,70293
f0100e00:	c7 00 00 00 00 00    	movl   $0x0,(%eax)f0100e001639,70349
f0100e06:	8b 55 dc             	mov    -0x24(%ebp),%edxf0100e061641,70416
f0100e09:	8b 45 e0             	mov    -0x20(%ebp),%eaxf0100e091642,70472
f0100e0c:	89 10                	mov    %edx,(%eax)f0100e0c1643,70528
		page_free_list = pp1;page_free_list1644,70579
f0100e0e:	8b 45 d8             	mov    -0x28(%ebp),%eaxf0100e0e1645,70603
f0100e11:	8b 7d c4             	mov    -0x3c(%ebp),%edif0100e111646,70659
f0100e14:	89 87 90 1f 00 00    	mov    %eax,0x1f90(%edi)f0100e141647,70715
f0100e1a:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)f0100e1a1649,70828
f0100e21:	8b 45 c4             	mov    -0x3c(%ebp),%eaxf0100e211651,70933
f0100e24:	8b b0 90 1f 00 00    	mov    0x1f90(%eax),%esif0100e241652,70989
f0100e2a:	c7 c7 d0 96 11 f0    	mov    $0xf01196d0,%edif0100e2a1653,71046
f0100e30:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf0100e301655,71128
f0100e36:	89 45 d0             	mov    %eax,-0x30(%ebp)f0100e361656,71184
f0100e39:	e9 ed fc ff ff       	jmp    f0100b2b <check_page_free_list+0x70>f0100e391657,71240
f0100e3e <page_init>:f0100e3e1659,71317
f0100e3e:	55                   	push   %ebpf0100e3e1661,71341
f0100e3f:	89 e5                	mov    %esp,%ebpf0100e3f1662,71385
f0100e41:	57                   	push   %edif0100e411663,71434
f0100e42:	56                   	push   %esif0100e421664,71478
f0100e43:	53                   	push   %ebxf0100e431665,71522
f0100e44:	83 ec 1c             	sub    $0x1c,%espf0100e441666,71566
f0100e47:	e8 56 1f 00 00       	call   f0102da2 <__x86.get_pc_thunk.si>f0100e471667,71616
f0100e4c:	81 c6 c0 64 01 00    	add    $0x164c0,%esif0100e4c1668,71688
f0100e52:	bb 00 00 00 00       	mov    $0x0,%ebxf0100e521670,71773
f0100e57:	c7 c7 c8 96 11 f0    	mov    $0xf01196c8,%edif0100e571671,71822
f0100e5d:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100e5d1673,71902
f0100e63:	89 45 e0             	mov    %eax,-0x20(%ebp)f0100e631674,71958
f0100e66:	eb 38                	jmp    f0100ea0 <page_init+0x62>f0100e661676,72046
f0100e68:	39 9e 94 1f 00 00    	cmp    %ebx,0x1f94(%esi)f0100e681678,72146
f0100e6e:	76 52                	jbe    f0100ec2 <page_init+0x84>f0100e6e1679,72203
f0100e70:	8d 0c dd 00 00 00 00 	lea    0x0(,%ebx,8),%ecxf0100e701680,72268
f0100e77:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100e771682,72349
f0100e7d:	89 ca                	mov    %ecx,%edxf0100e7d1683,72405
f0100e7f:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0100e7f1684,72454
f0100e82:	03 10                	add    (%eax),%edxf0100e821685,72510
f0100e84:	66 c7 42 04 00 00    	movw   $0x0,0x4(%edx)f0100e841686,72561
f0100e8a:	8b 86 90 1f 00 00    	mov    0x1f90(%esi),%eaxf0100e8a1688,72653
f0100e90:	89 02                	mov    %eax,(%edx)f0100e901689,72710
			page_free_list = &pages[i];page_free_list1690,72761
f0100e92:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf0100e921691,72792
f0100e95:	03 08                	add    (%eax),%ecxf0100e951692,72848
f0100e97:	89 8e 90 1f 00 00    	mov    %ecx,0x1f90(%esi)f0100e971693,72899
f0100e9d:	83 c3 01             	add    $0x1,%ebxf0100e9d1695,72988
f0100ea0:	39 1f                	cmp    %ebx,(%edi)f0100ea01696,73037
f0100ea2:	0f 86 80 00 00 00    	jbe    f0100f28 <page_init+0xea>f0100ea21697,73088
f0100ea8:	85 db                	test   %ebx,%ebxf0100ea81699,73169
f0100eaa:	75 bc                	jne    f0100e68 <page_init+0x2a>f0100eaa1700,73218
f0100eac:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100eac1702,73307
f0100eb2:	8b 00                	mov    (%eax),%eaxf0100eb21703,73363
f0100eb4:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)f0100eb41704,73414
f0100eba:	c7 00 00 00 00 00    	movl   $0x0,(%eax)f0100eba1706,73496
f0100ec0:	eb db                	jmp    f0100e9d <page_init+0x5f>f0100ec01707,73547
f0100ec2:	81 fb ff 00 00 00    	cmp    $0xff,%ebxf0100ec21709,73702
f0100ec8:	77 16                	ja     f0100ee0 <page_init+0xa2>f0100ec81710,73752
f0100eca:	8b 45 e0             	mov    -0x20(%ebp),%eaxf0100eca1712,73841
f0100ecd:	8b 00                	mov    (%eax),%eaxf0100ecd1713,73897
f0100ecf:	8d 04 d8             	lea    (%eax,%ebx,8),%eaxf0100ecf1714,73948
f0100ed2:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)f0100ed21715,74006
f0100ed8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)f0100ed81717,74088
f0100ede:	eb bd                	jmp    f0100e9d <page_init+0x5f>f0100ede1718,74139
f0100ee0:	b8 00 00 00 00       	mov    $0x0,%eaxf0100ee01720,74294
f0100ee5:	e8 cf fa ff ff       	call   f01009b9 <boot_alloc>f0100ee51721,74343
f0100eea:	05 00 00 00 10       	add    $0x10000000,%eaxf0100eea1722,74404
f0100eef:	c1 e8 0c             	shr    $0xc,%eaxf0100eef1723,74460
f0100ef2:	39 d8                	cmp    %ebx,%eaxf0100ef21724,74509
f0100ef4:	77 d4                	ja     f0100eca <page_init+0x8c>f0100ef41725,74558
f0100ef6:	8d 0c dd 00 00 00 00 	lea    0x0(,%ebx,8),%ecxf0100ef61726,74623
f0100efd:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100efd1728,74704
f0100f03:	89 ca                	mov    %ecx,%edxf0100f031729,74760
f0100f05:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0100f051730,74809
f0100f08:	03 10                	add    (%eax),%edxf0100f081731,74865
f0100f0a:	66 c7 42 04 00 00    	movw   $0x0,0x4(%edx)f0100f0a1732,74916
f0100f10:	8b 86 90 1f 00 00    	mov    0x1f90(%esi),%eaxf0100f101734,75008
f0100f16:	89 02                	mov    %eax,(%edx)f0100f161735,75065
			page_free_list = &pages[i];page_free_list1736,75116
f0100f18:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf0100f181737,75147
f0100f1b:	03 08                	add    (%eax),%ecxf0100f1b1738,75203
f0100f1d:	89 8e 90 1f 00 00    	mov    %ecx,0x1f90(%esi)f0100f1d1739,75254
f0100f23:	e9 75 ff ff ff       	jmp    f0100e9d <page_init+0x5f>f0100f231740,75311
f0100f28:	83 c4 1c             	add    $0x1c,%espf0100f281742,75378
f0100f2b:	5b                   	pop    %ebxf0100f2b1743,75428
f0100f2c:	5e                   	pop    %esif0100f2c1744,75472
f0100f2d:	5f                   	pop    %edif0100f2d1745,75516
f0100f2e:	5d                   	pop    %ebpf0100f2e1746,75560
f0100f2f:	c3                   	ret    f0100f2f1747,75604
f0100f30 <page_alloc>:f0100f301749,75645
f0100f30:	55                   	push   %ebpf0100f301751,75670
f0100f31:	89 e5                	mov    %esp,%ebpf0100f311752,75714
f0100f33:	56                   	push   %esif0100f331753,75763
f0100f34:	53                   	push   %ebxf0100f341754,75807
f0100f35:	e8 15 f2 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0100f351755,75851
f0100f3a:	81 c3 d2 63 01 00    	add    $0x163d2,%ebxf0100f3a1756,75923
f0100f40:	8b b3 90 1f 00 00    	mov    0x1f90(%ebx),%esif0100f401758,76011
f0100f46:	85 f6                	test   %esi,%esif0100f461759,76068
f0100f48:	74 1a                	je     f0100f64 <page_alloc+0x34>f0100f481760,76117
	page_free_list = result->pp_link;page_free_list1761,76183
f0100f4a:	8b 06                	mov    (%esi),%eaxf0100f4a1762,76218
f0100f4c:	89 83 90 1f 00 00    	mov    %eax,0x1f90(%ebx)f0100f4c1763,76269
f0100f52:	c7 06 00 00 00 00    	movl   $0x0,(%esi)f0100f521765,76351
f0100f58:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)f0100f581767,76423
f0100f5e:	f6 45 08 01          	testb  $0x1,0x8(%ebp)f0100f5e1769,76508
f0100f62:	75 09                	jne    f0100f6d <page_alloc+0x3d>f0100f621770,76562
f0100f64:	89 f0                	mov    %esi,%eaxf0100f641772,76630
f0100f66:	8d 65 f8             	lea    -0x8(%ebp),%espf0100f661773,76679
f0100f69:	5b                   	pop    %ebxf0100f691774,76734
f0100f6a:	5e                   	pop    %esif0100f6a1775,76778
f0100f6b:	5d                   	pop    %ebpf0100f6b1776,76822
f0100f6c:	c3                   	ret    f0100f6c1777,76866
f0100f6d:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100f6d1779,76939
f0100f73:	89 f2                	mov    %esi,%edxf0100f731780,76995
f0100f75:	2b 10                	sub    (%eax),%edxf0100f751781,77044
f0100f77:	89 d0                	mov    %edx,%eaxf0100f771782,77095
f0100f79:	c1 f8 03             	sar    $0x3,%eaxf0100f791783,77144
f0100f7c:	c1 e0 0c             	shl    $0xc,%eaxf0100f7c1784,77193
f0100f7f:	89 c1                	mov    %eax,%ecxf0100f7f1786,77268
f0100f81:	c1 e9 0c             	shr    $0xc,%ecxf0100f811787,77317
f0100f84:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf0100f841788,77366
f0100f8a:	3b 0a                	cmp    (%edx),%ecxf0100f8a1789,77422
f0100f8c:	73 1a                	jae    f0100fa8 <page_alloc+0x78>f0100f8c1790,77473
f0100f8e:	83 ec 04             	sub    $0x4,%espf0100f8e1792,77578
f0100f91:	68 00 10 00 00       	push   $0x1000f0100f911793,77627
f0100f96:	6a 00                	push   $0x0f0100f961794,77674
f0100f98:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0100f981796,77751
f0100f9d:	50                   	push   %eaxf0100f9d1797,77807
f0100f9e:	e8 ea 29 00 00       	call   f010398d <memset>f0100f9e1798,77851
f0100fa3:	83 c4 10             	add    $0x10,%espf0100fa31799,77908
f0100fa6:	eb bc                	jmp    f0100f64 <page_alloc+0x34>f0100fa61800,77958
f0100fa8:	50                   	push   %eaxf0100fa81802,78088
f0100fa9:	8d 83 84 cf fe ff    	lea    -0x1307c(%ebx),%eaxf0100fa91803,78132
f0100faf:	50                   	push   %eaxf0100faf1804,78191
f0100fb0:	6a 52                	push   $0x52f0100fb01805,78235
f0100fb2:	8d 83 5c d7 fe ff    	lea    -0x128a4(%ebx),%eaxf0100fb21806,78280
f0100fb8:	50                   	push   %eaxf0100fb81807,78339
f0100fb9:	e8 db f0 ff ff       	call   f0100099 <_panic>f0100fb91808,78383
f0100fbe <page_free>:f0100fbe1810,78441
f0100fbe:	55                   	push   %ebpf0100fbe1812,78465
f0100fbf:	89 e5                	mov    %esp,%ebpf0100fbf1813,78509
f0100fc1:	53                   	push   %ebxf0100fc11814,78558
f0100fc2:	83 ec 04             	sub    $0x4,%espf0100fc21815,78602
f0100fc5:	e8 85 f1 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0100fc51816,78651
f0100fca:	81 c3 42 63 01 00    	add    $0x16342,%ebxf0100fca1817,78723
f0100fd0:	8b 45 08             	mov    0x8(%ebp),%eaxf0100fd01818,78776
f0100fd3:	0f b7 48 04          	movzwl 0x4(%eax),%ecxf0100fd31820,78846
f0100fd7:	66 85 c9             	test   %cx,%cxf0100fd71821,78900
f0100fda:	75 19                	jne    f0100ff5 <page_free+0x37>f0100fda1822,78947
f0100fdc:	8b 08                	mov    (%eax),%ecxf0100fdc1824,79029
f0100fde:	85 c9                	test   %ecx,%ecxf0100fde1825,79080
f0100fe0:	75 2f                	jne    f0101011 <page_free+0x53>f0100fe01826,79129
f0100fe2:	8b 8b 90 1f 00 00    	mov    0x1f90(%ebx),%ecxf0100fe21828,79225
f0100fe8:	89 08                	mov    %ecx,(%eax)f0100fe81829,79282
	page_free_list = pp;page_free_list1830,79333
f0100fea:	89 83 90 1f 00 00    	mov    %eax,0x1f90(%ebx)f0100fea1831,79355
f0100ff0:	8b 5d fc             	mov    -0x4(%ebp),%ebxf0100ff01833,79414
f0100ff3:	c9                   	leave  f0100ff31834,79469
f0100ff4:	c3                   	ret    f0100ff41835,79509
f0100ff5:	0f b7 c9             	movzwl %cx,%ecxf0100ff51837,79616
f0100ff8:	51                   	push   %ecxf0100ff81838,79664
f0100ff9:	8d 83 90 d0 fe ff    	lea    -0x12f70(%ebx),%eaxf0100ff91839,79708
f0100fff:	50                   	push   %eaxf0100fff1840,79767
f0101000:	68 3f 01 00 00       	push   $0x13ff01010001841,79811
f0101005:	8d 83 50 d7 fe ff    	lea    -0x128b0(%ebx),%eaxf01010051842,79857
f010100b:	50                   	push   %eaxf010100b1843,79916
f010100c:	e8 88 f0 ff ff       	call   f0100099 <_panic>f010100c1844,79960
f0101011:	51                   	push   %ecxf01010111846,80081
f0101012:	8d 83 bc d0 fe ff    	lea    -0x12f44(%ebx),%eaxf01010121847,80125
f0101018:	50                   	push   %eaxf01010181848,80184
f0101019:	68 41 01 00 00       	push   $0x141f01010191849,80228
f010101e:	8d 83 50 d7 fe ff    	lea    -0x128b0(%ebx),%eaxf010101e1850,80274
f0101024:	50                   	push   %eaxf01010241851,80333
f0101025:	e8 6f f0 ff ff       	call   f0100099 <_panic>f01010251852,80377
f010102a <page_decref>:f010102a1854,80435
f010102a:	55                   	push   %ebpf010102a1856,80461
f010102b:	89 e5                	mov    %esp,%ebpf010102b1857,80505
f010102d:	83 ec 08             	sub    $0x8,%espf010102d1858,80554
f0101030:	8b 55 08             	mov    0x8(%ebp),%edxf01010301859,80603
f0101033:	0f b7 42 04          	movzwl 0x4(%edx),%eaxf01010331861,80681
f0101037:	83 e8 01             	sub    $0x1,%eaxf01010371862,80735
f010103a:	66 89 42 04          	mov    %ax,0x4(%edx)f010103a1863,80784
f010103e:	66 85 c0             	test   %ax,%axf010103e1864,80837
f0101041:	74 02                	je     f0101045 <page_decref+0x1b>f01010411865,80884
f0101043:	c9                   	leave  f01010431867,80953
f0101044:	c3                   	ret    f01010441868,80993
f0101045:	83 ec 0c             	sub    $0xc,%espf01010451870,81050
f0101048:	52                   	push   %edxf01010481871,81099
f0101049:	e8 70 ff ff ff       	call   f0100fbe <page_free>f01010491872,81143
f010104e:	83 c4 10             	add    $0x10,%espf010104e1873,81203
f0101051:	eb f0                	jmp    f0101043 <page_decref+0x19>f01010511875,81255
f0101053 <pgdir_walk>:f01010531877,81323
f0101053:	55                   	push   %ebpf01010531879,81348
f0101054:	89 e5                	mov    %esp,%ebpf01010541880,81392
f0101056:	57                   	push   %edif01010561881,81441
f0101057:	56                   	push   %esif01010571882,81485
f0101058:	53                   	push   %ebxf01010581883,81529
f0101059:	83 ec 0c             	sub    $0xc,%espf01010591884,81573
f010105c:	e8 ee f0 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f010105c1885,81622
f0101061:	81 c3 ab 62 01 00    	add    $0x162ab,%ebxf01010611886,81694
f0101067:	8b 7d 0c             	mov    0xc(%ebp),%edif01010671887,81747
	pde = pgdir+PDX(va);pde1888,81801
f010106a:	89 fe                	mov    %edi,%esif010106a1889,81823
f010106c:	c1 ee 16             	shr    $0x16,%esif010106c1890,81872
f010106f:	c1 e6 02             	shl    $0x2,%esif010106f1891,81922
f0101072:	03 75 08             	add    0x8(%ebp),%esif01010721892,81971
f0101075:	f6 06 01             	testb  $0x1,(%esi)f01010751894,82048
f0101078:	75 30                	jne    f01010aa <pgdir_walk+0x57>f01010781895,82099
f010107a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)f010107a1897,82192
f010107e:	74 71                	je     f01010f1 <pgdir_walk+0x9e>f010107e1898,82247
		pp = page_alloc(ALLOC_ZERO);pp1899,82313
f0101080:	83 ec 0c             	sub    $0xc,%espf01010801900,82344
f0101083:	6a 01                	push   $0x1f01010831901,82393
f0101085:	e8 a6 fe ff ff       	call   f0100f30 <page_alloc>f01010851902,82437
f010108a:	83 c4 10             	add    $0x10,%espf010108a1904,82521
f010108d:	85 c0                	test   %eax,%eaxf010108d1905,82571
f010108f:	74 67                	je     f01010f8 <pgdir_walk+0xa5>f010108f1906,82620
f0101091:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)f01010911908,82704
f0101097:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf01010971910,82791
f010109d:	2b 02                	sub    (%edx),%eaxf010109d1911,82847
f010109f:	c1 f8 03             	sar    $0x3,%eaxf010109f1912,82898
f01010a2:	c1 e0 0c             	shl    $0xc,%eaxf01010a21913,82947
f01010a5:	83 c8 01             	or     $0x1,%eaxf01010a51915,83026
f01010a8:	89 06                	mov    %eax,(%esi)f01010a81916,83075
f01010aa:	8b 06                	mov    (%esi),%eaxf01010aa1918,83179
f01010ac:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf01010ac1919,83230
f01010b1:	89 c1                	mov    %eax,%ecxf01010b11921,83312
f01010b3:	c1 e9 0c             	shr    $0xc,%ecxf01010b31922,83361
f01010b6:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf01010b61923,83410
f01010bc:	3b 0a                	cmp    (%edx),%ecxf01010bc1924,83466
f01010be:	73 18                	jae    f01010d8 <pgdir_walk+0x85>f01010be1925,83517
f01010c0:	c1 ef 0a             	shr    $0xa,%edif01010c01926,83583
f01010c3:	81 e7 fc 0f 00 00    	and    $0xffc,%edif01010c31927,83632
f01010c9:	8d 84 38 00 00 00 f0 	lea    -0x10000000(%eax,%edi,1),%eaxf01010c91928,83683
f01010d0:	8d 65 f4             	lea    -0xc(%ebp),%espf01010d01930,83754
f01010d3:	5b                   	pop    %ebxf01010d31931,83809
f01010d4:	5e                   	pop    %esif01010d41932,83853
f01010d5:	5f                   	pop    %edif01010d51933,83897
f01010d6:	5d                   	pop    %ebpf01010d61934,83941
f01010d7:	c3                   	ret    f01010d71935,83985
f01010d8:	50                   	push   %eaxf01010d81937,84089
f01010d9:	8d 83 84 cf fe ff    	lea    -0x1307c(%ebx),%eaxf01010d91938,84133
f01010df:	50                   	push   %eaxf01010df1939,84192
f01010e0:	68 7a 01 00 00       	push   $0x17af01010e01940,84236
f01010e5:	8d 83 50 d7 fe ff    	lea    -0x128b0(%ebx),%eaxf01010e51941,84282
f01010eb:	50                   	push   %eaxf01010eb1942,84341
f01010ec:	e8 a8 ef ff ff       	call   f0100099 <_panic>f01010ec1943,84385
f01010f1:	b8 00 00 00 00       	mov    $0x0,%eaxf01010f11945,84469
f01010f6:	eb d8                	jmp    f01010d0 <pgdir_walk+0x7d>f01010f61946,84518
f01010f8:	b8 00 00 00 00       	mov    $0x0,%eaxf01010f81948,84607
f01010fd:	eb d1                	jmp    f01010d0 <pgdir_walk+0x7d>f01010fd1949,84656
f01010ff <page_lookup>:f01010ff1951,84723
f01010ff:	55                   	push   %ebpf01010ff1953,84749
f0101100:	89 e5                	mov    %esp,%ebpf01011001954,84793
f0101102:	56                   	push   %esif01011021955,84842
f0101103:	53                   	push   %ebxf01011031956,84886
f0101104:	e8 46 f0 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01011041957,84930
f0101109:	81 c3 03 62 01 00    	add    $0x16203,%ebxf01011091958,85002
f010110f:	8b 75 10             	mov    0x10(%ebp),%esif010110f1959,85055
f0101112:	83 ec 04             	sub    $0x4,%espf01011121961,85150
f0101115:	6a 00                	push   $0x0f01011151962,85199
f0101117:	ff 75 0c             	pushl  0xc(%ebp)f01011171963,85243
f010111a:	ff 75 08             	pushl  0x8(%ebp)f010111a1964,85292
f010111d:	e8 31 ff ff ff       	call   f0101053 <pgdir_walk>f010111d1965,85341
f0101122:	83 c4 10             	add    $0x10,%espf01011221967,85436
f0101125:	85 f6                	test   %esi,%esif01011251968,85486
f0101127:	74 02                	je     f010112b <page_lookup+0x2c>f01011271969,85535
f0101129:	89 06                	mov    %eax,(%esi)f01011291970,85602
f010112b:	85 c0                	test   %eax,%eaxf010112b1972,85705
f010112d:	74 3d                	je     f010116c <page_lookup+0x6d>f010112d1973,85754
f010112f:	8b 00                	mov    (%eax),%eaxf010112f1974,85821
f0101131:	a8 01                	test   $0x1,%alf01011311975,85872
f0101133:	74 3e                	je     f0101173 <page_lookup+0x74>f01011331976,85920
static inline struct PageInfo*static1979,85990
f0101135:	c1 e8 0c             	shr    $0xc,%eaxf01011351983,86072
f0101138:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf01011381984,86121
f010113e:	3b 02                	cmp    (%edx),%eaxf010113e1985,86177
f0101140:	73 12                	jae    f0101154 <page_lookup+0x55>f01011401986,86228
f0101142:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf01011421989,86365
f0101148:	8b 12                	mov    (%edx),%edxf01011481990,86421
f010114a:	8d 04 c2             	lea    (%edx,%eax,8),%eaxf010114a1991,86472
f010114d:	8d 65 f8             	lea    -0x8(%ebp),%espf010114d1993,86532
f0101150:	5b                   	pop    %ebxf01011501994,86587
f0101151:	5e                   	pop    %esif01011511995,86631
f0101152:	5d                   	pop    %ebpf01011521996,86675
f0101153:	c3                   	ret    f01011531997,86719
f0101154:	83 ec 04             	sub    $0x4,%espf01011541999,86802
f0101157:	8d 83 e4 d0 fe ff    	lea    -0x12f1c(%ebx),%eaxf01011572000,86851
f010115d:	50                   	push   %eaxf010115d2001,86910
f010115e:	6a 4b                	push   $0x4bf010115e2002,86954
f0101160:	8d 83 5c d7 fe ff    	lea    -0x128a4(%ebx),%eaxf01011602003,86999
f0101166:	50                   	push   %eaxf01011662004,87058
f0101167:	e8 2d ef ff ff       	call   f0100099 <_panic>f01011672005,87102
f010116c:	b8 00 00 00 00       	mov    $0x0,%eaxf010116c2007,87211
f0101171:	eb da                	jmp    f010114d <page_lookup+0x4e>f01011712008,87260
f0101173:	b8 00 00 00 00       	mov    $0x0,%eaxf01011732009,87327
f0101178:	eb d3                	jmp    f010114d <page_lookup+0x4e>f01011782010,87376
f010117a <page_remove>:f010117a2012,87444
f010117a:	55                   	push   %ebpf010117a2014,87470
f010117b:	89 e5                	mov    %esp,%ebpf010117b2015,87514
f010117d:	53                   	push   %ebxf010117d2016,87563
f010117e:	83 ec 08             	sub    $0x8,%espf010117e2017,87607
f0101181:	8b 5d 0c             	mov    0xc(%ebp),%ebxf01011812018,87656
f0101184:	6a 00                	push   $0x0f01011842020,87763
f0101186:	53                   	push   %ebxf01011862021,87807
f0101187:	ff 75 08             	pushl  0x8(%ebp)f01011872022,87851
f010118a:	e8 70 ff ff ff       	call   f01010ff <page_lookup>f010118a2023,87900
f010118f:	83 c4 10             	add    $0x10,%espf010118f2025,87987
f0101192:	85 c0                	test   %eax,%eaxf01011922026,88037
f0101194:	74 0f                	je     f01011a5 <page_remove+0x2b>f01011942027,88086
f0101196:	83 ec 0c             	sub    $0xc,%espf01011962029,88171
f0101199:	50                   	push   %eaxf01011992030,88220
f010119a:	e8 8b fe ff ff       	call   f010102a <page_decref>f010119a2031,88264
static inline voidstatic2034,88329
f010119f:	0f 01 3b             	invlpg (%ebx)f010119f2038,88425
f01011a2:	83 c4 10             	add    $0x10,%espf01011a22039,88471
f01011a5:	8b 5d fc             	mov    -0x4(%ebp),%ebxf01011a52041,88523
f01011a8:	c9                   	leave  f01011a82042,88578
f01011a9:	c3                   	ret    f01011a92043,88618
f01011aa <page_insert>:f01011aa2045,88659
f01011aa:	55                   	push   %ebpf01011aa2047,88685
f01011ab:	89 e5                	mov    %esp,%ebpf01011ab2048,88729
f01011ad:	57                   	push   %edif01011ad2049,88778
f01011ae:	56                   	push   %esif01011ae2050,88822
f01011af:	53                   	push   %ebxf01011af2051,88866
f01011b0:	83 ec 10             	sub    $0x10,%espf01011b02052,88910
f01011b3:	e8 ee 1b 00 00       	call   f0102da6 <__x86.get_pc_thunk.di>f01011b32053,88960
f01011b8:	81 c7 54 61 01 00    	add    $0x16154,%edif01011b82054,89032
f01011be:	8b 75 0c             	mov    0xc(%ebp),%esif01011be2055,89085
f01011c1:	6a 01                	push   $0x1f01011c12057,89179
f01011c3:	ff 75 10             	pushl  0x10(%ebp)f01011c32058,89223
f01011c6:	ff 75 08             	pushl  0x8(%ebp)f01011c62059,89273
f01011c9:	e8 85 fe ff ff       	call   f0101053 <pgdir_walk>f01011c92060,89322
f01011ce:	83 c4 10             	add    $0x10,%espf01011ce2062,89412
f01011d1:	85 c0                	test   %eax,%eaxf01011d12063,89462
f01011d3:	74 3f                	je     f0101214 <page_insert+0x6a>f01011d32064,89511
f01011d5:	89 c3                	mov    %eax,%ebxf01011d52065,89578
f01011d7:	66 83 46 04 01       	addw   $0x1,0x4(%esi)f01011d72067,89642
f01011dc:	83 ec 08             	sub    $0x8,%espf01011dc2069,89721
f01011df:	ff 75 10             	pushl  0x10(%ebp)f01011df2070,89770
f01011e2:	ff 75 08             	pushl  0x8(%ebp)f01011e22071,89820
f01011e5:	e8 90 ff ff ff       	call   f010117a <page_remove>f01011e52072,89869
f01011ea:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01011ea2074,89964
f01011f0:	2b 30                	sub    (%eax),%esif01011f02075,90020
f01011f2:	89 f0                	mov    %esi,%eaxf01011f22076,90071
f01011f4:	c1 f8 03             	sar    $0x3,%eaxf01011f42077,90120
f01011f7:	c1 e0 0c             	shl    $0xc,%eaxf01011f72078,90169
f01011fa:	8b 55 14             	mov    0x14(%ebp),%edxf01011fa2080,90254
f01011fd:	83 ca 01             	or     $0x1,%edxf01011fd2081,90309
f0101200:	09 d0                	or     %edx,%eaxf01012002082,90358
f0101202:	89 03                	mov    %eax,(%ebx)f01012022083,90407
f0101204:	83 c4 10             	add    $0x10,%espf01012042085,90469
f0101207:	b8 00 00 00 00       	mov    $0x0,%eaxf01012072086,90519
f010120c:	8d 65 f4             	lea    -0xc(%ebp),%espf010120c2088,90570
f010120f:	5b                   	pop    %ebxf010120f2089,90625
f0101210:	5e                   	pop    %esif01012102090,90669
f0101211:	5f                   	pop    %edif01012112091,90713
f0101212:	5d                   	pop    %ebpf01012122092,90757
f0101213:	c3                   	ret    f01012132093,90801
f0101214:	b8 fc ff ff ff       	mov    $0xfffffffc,%eaxf01012142095,90870
f0101219:	eb f1                	jmp    f010120c <page_insert+0x62>f01012192096,90926
f010121b <mem_init>:f010121b2098,90994
f010121b:	55                   	push   %ebpf010121b2100,91017
f010121c:	89 e5                	mov    %esp,%ebpf010121c2101,91061
f010121e:	57                   	push   %edif010121e2102,91110
f010121f:	56                   	push   %esif010121f2103,91154
f0101220:	53                   	push   %ebxf01012202104,91198
f0101221:	83 ec 3c             	sub    $0x3c,%espf01012212105,91242
f0101224:	e8 7d 1b 00 00       	call   f0102da6 <__x86.get_pc_thunk.di>f01012242106,91292
f0101229:	81 c7 e3 60 01 00    	add    $0x160e3,%edif01012292107,91364
	basemem = nvram_read(NVRAM_BASELO);basemem2108,91417
f010122f:	b8 15 00 00 00       	mov    $0x15,%eaxf010122f2109,91454
f0101234:	e8 4a f7 ff ff       	call   f0100983 <nvram_read>f01012342110,91504
f0101239:	89 c3                	mov    %eax,%ebxf01012392111,91565
	extmem = nvram_read(NVRAM_EXTLO);extmem2112,91614
f010123b:	b8 17 00 00 00       	mov    $0x17,%eaxf010123b2113,91649
f0101240:	e8 3e f7 ff ff       	call   f0100983 <nvram_read>f01012402114,91699
f0101245:	89 c6                	mov    %eax,%esif01012452115,91760
	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;ext16mem2116,91809
f0101247:	b8 34 00 00 00       	mov    $0x34,%eaxf01012472117,91853
f010124c:	e8 32 f7 ff ff       	call   f0100983 <nvram_read>f010124c2118,91903
f0101251:	c1 e0 06             	shl    $0x6,%eaxf01012512119,91964
f0101254:	85 c0                	test   %eax,%eaxf01012542121,92028
f0101256:	0f 85 c4 00 00 00    	jne    f0101320 <mem_init+0x105>f01012562122,92077
		totalmem = 1 * 1024 + extmem;totalmem2123,92142
f010125c:	8d 86 00 04 00 00    	lea    0x400(%esi),%eaxf010125c2124,92174
f0101262:	85 f6                	test   %esi,%esif01012622125,92230
f0101264:	0f 44 c3             	cmove  %ebx,%eaxf01012642126,92279
	npages = totalmem / (PGSIZE / 1024);npages2127,92328
f0101267:	89 c1                	mov    %eax,%ecxf01012672128,92366
f0101269:	c1 e9 02             	shr    $0x2,%ecxf01012692129,92415
f010126c:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf010126c2130,92464
f0101272:	89 0a                	mov    %ecx,(%edx)f01012722131,92520
	npages_basemem = basemem / (PGSIZE / 1024);npages_basemem2132,92571
f0101274:	89 da                	mov    %ebx,%edxf01012742133,92616
f0101276:	c1 ea 02             	shr    $0x2,%edxf01012762134,92665
f0101279:	89 97 94 1f 00 00    	mov    %edx,0x1f94(%edi)f01012792135,92714
f010127f:	89 c2                	mov    %eax,%edxf010127f2137,92844
f0101281:	29 da                	sub    %ebx,%edxf01012812138,92893
f0101283:	52                   	push   %edxf01012832139,92942
f0101284:	53                   	push   %ebxf01012842140,92986
f0101285:	50                   	push   %eaxf01012852141,93030
f0101286:	8d 87 04 d1 fe ff    	lea    -0x12efc(%edi),%eaxf01012862142,93074
f010128c:	50                   	push   %eaxf010128c2143,93133
f010128d:	89 fb                	mov    %edi,%ebxf010128d2144,93177
f010128f:	e8 9d 1b 00 00       	call   f0102e31 <cprintf>f010128f2145,93226
	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);kern_pgdir2146,93284
f0101294:	b8 00 10 00 00       	mov    $0x1000,%eaxf01012942147,93328
f0101299:	e8 1b f7 ff ff       	call   f01009b9 <boot_alloc>f01012992148,93380
f010129e:	c7 c6 cc 96 11 f0    	mov    $0xf01196cc,%esif010129e2149,93441
f01012a4:	89 06                	mov    %eax,(%esi)f01012a42150,93497
f01012a6:	83 c4 0c             	add    $0xc,%espf01012a62152,93580
f01012a9:	68 00 10 00 00       	push   $0x1000f01012a92153,93629
f01012ae:	6a 00                	push   $0x0f01012ae2154,93676
f01012b0:	50                   	push   %eaxf01012b02155,93720
f01012b1:	e8 d7 26 00 00       	call   f010398d <memset>f01012b12156,93764
f01012b6:	8b 06                	mov    (%esi),%eaxf01012b62158,93881
f01012b8:	83 c4 10             	add    $0x10,%espf01012b82160,93963
f01012bb:	3d ff ff ff ef       	cmp    $0xefffffff,%eaxf01012bb2161,94013
f01012c0:	76 68                	jbe    f010132a <mem_init+0x10f>f01012c02162,94069
f01012c2:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edxf01012c22164,94170
f01012c8:	83 ca 05             	or     $0x5,%edxf01012c82165,94231
f01012cb:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)f01012cb2166,94280
	pages = (struct PageInfo *) boot_alloc(sizeof(struct PageInfo) * npages);pages2167,94336
f01012d1:	c7 c3 c8 96 11 f0    	mov    $0xf01196c8,%ebxf01012d12168,94411
f01012d7:	8b 03                	mov    (%ebx),%eaxf01012d72169,94467
f01012d9:	c1 e0 03             	shl    $0x3,%eaxf01012d92170,94518
f01012dc:	e8 d8 f6 ff ff       	call   f01009b9 <boot_alloc>f01012dc2171,94567
f01012e1:	c7 c6 d0 96 11 f0    	mov    $0xf01196d0,%esif01012e12172,94628
f01012e7:	89 06                	mov    %eax,(%esi)f01012e72173,94684
f01012e9:	83 ec 04             	sub    $0x4,%espf01012e92175,94788
f01012ec:	8b 13                	mov    (%ebx),%edxf01012ec2176,94837
f01012ee:	c1 e2 03             	shl    $0x3,%edxf01012ee2177,94888
f01012f1:	52                   	push   %edxf01012f12178,94937
f01012f2:	6a 00                	push   $0x0f01012f22179,94981
f01012f4:	50                   	push   %eaxf01012f42180,95025
f01012f5:	89 fb                	mov    %edi,%ebxf01012f52181,95069
f01012f7:	e8 91 26 00 00       	call   f010398d <memset>f01012f72182,95118
f01012fc:	e8 3d fb ff ff       	call   f0100e3e <page_init>f01012fc2184,95189
f0101301:	b8 01 00 00 00       	mov    $0x1,%eaxf01013012186,95275
f0101306:	e8 b0 f7 ff ff       	call   f0100abb <check_page_free_list>f01013062187,95324
f010130b:	83 c4 10             	add    $0x10,%espf010130b2189,95408
f010130e:	83 3e 00             	cmpl   $0x0,(%esi)f010130e2190,95458
f0101311:	74 30                	je     f0101343 <mem_init+0x128>f01013112191,95509
f0101313:	8b 87 90 1f 00 00    	mov    0x1f90(%edi),%eaxf01013132193,95634
f0101319:	be 00 00 00 00       	mov    $0x0,%esif01013192194,95691
f010131e:	eb 43                	jmp    f0101363 <mem_init+0x148>f010131e2195,95740
		totalmem = 16 * 1024 + ext16mem;totalmem2196,95805
f0101320:	05 00 40 00 00       	add    $0x4000,%eaxf01013202197,95840
f0101325:	e9 3d ff ff ff       	jmp    f0101267 <mem_init+0x4c>f01013252198,95892
f010132a:	50                   	push   %eaxf010132a2200,96022
f010132b:	8d 87 40 d1 fe ff    	lea    -0x12ec0(%edi),%eaxf010132b2201,96066
f0101331:	50                   	push   %eaxf01013312202,96125
f0101332:	68 92 00 00 00       	push   $0x92f01013322203,96169
f0101337:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01013372204,96214
f010133d:	50                   	push   %eaxf010133d2205,96273
f010133e:	e8 56 ed ff ff       	call   f0100099 <_panic>f010133e2206,96317
f0101343:	83 ec 04             	sub    $0x4,%espf01013432208,96413
f0101346:	8d 87 06 d8 fe ff    	lea    -0x127fa(%edi),%eaxf01013462209,96462
f010134c:	50                   	push   %eaxf010134c2210,96521
f010134d:	68 44 02 00 00       	push   $0x244f010134d2211,96565
f0101352:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01013522212,96611
f0101358:	50                   	push   %eaxf01013582213,96670
f0101359:	e8 3b ed ff ff       	call   f0100099 <_panic>f01013592214,96714
f010135e:	83 c6 01             	add    $0x1,%esif010135e2216,96782
f0101361:	8b 00                	mov    (%eax),%eaxf01013612218,96891
f0101363:	85 c0                	test   %eax,%eaxf01013632219,96942
f0101365:	75 f7                	jne    f010135e <mem_init+0x143>f01013652220,96991
f0101367:	83 ec 0c             	sub    $0xc,%espf01013672222,97088
f010136a:	6a 00                	push   $0x0f010136a2223,97137
f010136c:	e8 bf fb ff ff       	call   f0100f30 <page_alloc>f010136c2224,97181
f0101371:	89 c3                	mov    %eax,%ebxf01013712225,97242
f0101373:	83 c4 10             	add    $0x10,%espf01013732226,97291
f0101376:	85 c0                	test   %eax,%eaxf01013762227,97341
f0101378:	0f 84 3f 02 00 00    	je     f01015bd <mem_init+0x3a2>f01013782228,97390
f010137e:	83 ec 0c             	sub    $0xc,%espf010137e2230,97487
f0101381:	6a 00                	push   $0x0f01013812231,97536
f0101383:	e8 a8 fb ff ff       	call   f0100f30 <page_alloc>f01013832232,97580
f0101388:	89 45 d4             	mov    %eax,-0x2c(%ebp)f01013882233,97641
f010138b:	83 c4 10             	add    $0x10,%espf010138b2234,97697
f010138e:	85 c0                	test   %eax,%eaxf010138e2235,97747
f0101390:	0f 84 48 02 00 00    	je     f01015de <mem_init+0x3c3>f01013902236,97796
f0101396:	83 ec 0c             	sub    $0xc,%espf01013962238,97893
f0101399:	6a 00                	push   $0x0f01013992239,97942
f010139b:	e8 90 fb ff ff       	call   f0100f30 <page_alloc>f010139b2240,97986
f01013a0:	89 45 d0             	mov    %eax,-0x30(%ebp)f01013a02241,98047
f01013a3:	83 c4 10             	add    $0x10,%espf01013a32242,98103
f01013a6:	85 c0                	test   %eax,%eaxf01013a62243,98153
f01013a8:	0f 84 51 02 00 00    	je     f01015ff <mem_init+0x3e4>f01013a82244,98202
f01013ae:	3b 5d d4             	cmp    -0x2c(%ebp),%ebxf01013ae2246,98295
f01013b1:	0f 84 69 02 00 00    	je     f0101620 <mem_init+0x405>f01013b12247,98351
f01013b7:	8b 45 d0             	mov    -0x30(%ebp),%eaxf01013b72249,98458
f01013ba:	39 45 d4             	cmp    %eax,-0x2c(%ebp)f01013ba2250,98514
f01013bd:	0f 84 7e 02 00 00    	je     f0101641 <mem_init+0x426>f01013bd2251,98570
f01013c3:	39 c3                	cmp    %eax,%ebxf01013c32252,98635
f01013c5:	0f 84 76 02 00 00    	je     f0101641 <mem_init+0x426>f01013c52253,98684
f01013cb:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01013cb2255,98782
f01013d1:	8b 08                	mov    (%eax),%ecxf01013d12256,98838
f01013d3:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf01013d32258,98928
f01013d9:	8b 10                	mov    (%eax),%edxf01013d92259,98984
f01013db:	c1 e2 0c             	shl    $0xc,%edxf01013db2260,99035
f01013de:	89 d8                	mov    %ebx,%eaxf01013de2261,99084
f01013e0:	29 c8                	sub    %ecx,%eaxf01013e02262,99133
f01013e2:	c1 f8 03             	sar    $0x3,%eaxf01013e22263,99182
f01013e5:	c1 e0 0c             	shl    $0xc,%eaxf01013e52264,99231
f01013e8:	39 d0                	cmp    %edx,%eaxf01013e82265,99280
f01013ea:	0f 83 72 02 00 00    	jae    f0101662 <mem_init+0x447>f01013ea2266,99329
f01013f0:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf01013f02267,99394
f01013f3:	29 c8                	sub    %ecx,%eaxf01013f32268,99450
f01013f5:	c1 f8 03             	sar    $0x3,%eaxf01013f52269,99499
f01013f8:	c1 e0 0c             	shl    $0xc,%eaxf01013f82270,99548
f01013fb:	39 c2                	cmp    %eax,%edxf01013fb2272,99636
f01013fd:	0f 86 80 02 00 00    	jbe    f0101683 <mem_init+0x468>f01013fd2273,99685
f0101403:	8b 45 d0             	mov    -0x30(%ebp),%eaxf01014032274,99750
f0101406:	29 c8                	sub    %ecx,%eaxf01014062275,99806
f0101408:	c1 f8 03             	sar    $0x3,%eaxf01014082276,99855
f010140b:	c1 e0 0c             	shl    $0xc,%eaxf010140b2277,99904
f010140e:	39 c2                	cmp    %eax,%edxf010140e2279,99992
f0101410:	0f 86 8e 02 00 00    	jbe    f01016a4 <mem_init+0x489>f01014102280,100041
	fl = page_free_list;fl2281,100106
f0101416:	8b 87 90 1f 00 00    	mov    0x1f90(%edi),%eaxf01014162282,100128
f010141c:	89 45 c8             	mov    %eax,-0x38(%ebp)f010141c2283,100185
	page_free_list = 0;page_free_list2284,100241
f010141f:	c7 87 90 1f 00 00 00 	movl   $0x0,0x1f90(%edi)f010141f2285,100262
f0101426:	00 00 00 f01014262286,100319
f0101429:	83 ec 0c             	sub    $0xc,%espf01014292288,100364
f010142c:	6a 00                	push   $0x0f010142c2289,100413
f010142e:	e8 fd fa ff ff       	call   f0100f30 <page_alloc>f010142e2290,100457
f0101433:	83 c4 10             	add    $0x10,%espf01014332291,100518
f0101436:	85 c0                	test   %eax,%eaxf01014362292,100568
f0101438:	0f 85 87 02 00 00    	jne    f01016c5 <mem_init+0x4aa>f01014382293,100617
f010143e:	83 ec 0c             	sub    $0xc,%espf010143e2295,100699
f0101441:	53                   	push   %ebxf01014412296,100748
f0101442:	e8 77 fb ff ff       	call   f0100fbe <page_free>f01014422297,100792
f0101447:	83 c4 04             	add    $0x4,%espf01014472299,100869
f010144a:	ff 75 d4             	pushl  -0x2c(%ebp)f010144a2300,100918
f010144d:	e8 6c fb ff ff       	call   f0100fbe <page_free>f010144d2301,100969
f0101452:	83 c4 04             	add    $0x4,%espf01014522303,101046
f0101455:	ff 75 d0             	pushl  -0x30(%ebp)f01014552304,101095
f0101458:	e8 61 fb ff ff       	call   f0100fbe <page_free>f01014582305,101146
f010145d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)f010145d2307,101238
f0101464:	e8 c7 fa ff ff       	call   f0100f30 <page_alloc>f01014642308,101289
f0101469:	89 45 d4             	mov    %eax,-0x2c(%ebp)f01014692309,101350
f010146c:	83 c4 10             	add    $0x10,%espf010146c2310,101406
f010146f:	85 c0                	test   %eax,%eaxf010146f2311,101456
f0101471:	0f 84 6f 02 00 00    	je     f01016e6 <mem_init+0x4cb>f01014712312,101505
f0101477:	83 ec 0c             	sub    $0xc,%espf01014772314,101602
f010147a:	6a 00                	push   $0x0f010147a2315,101651
f010147c:	e8 af fa ff ff       	call   f0100f30 <page_alloc>f010147c2316,101695
f0101481:	89 45 d0             	mov    %eax,-0x30(%ebp)f01014812317,101756
f0101484:	83 c4 10             	add    $0x10,%espf01014842318,101812
f0101487:	85 c0                	test   %eax,%eaxf01014872319,101862
f0101489:	0f 84 78 02 00 00    	je     f0101707 <mem_init+0x4ec>f01014892320,101911
f010148f:	83 ec 0c             	sub    $0xc,%espf010148f2322,102008
f0101492:	6a 00                	push   $0x0f01014922323,102057
f0101494:	e8 97 fa ff ff       	call   f0100f30 <page_alloc>f01014942324,102101
f0101499:	89 45 cc             	mov    %eax,-0x34(%ebp)f01014992325,102162
f010149c:	83 c4 10             	add    $0x10,%espf010149c2326,102218
f010149f:	85 c0                	test   %eax,%eaxf010149f2327,102268
f01014a1:	0f 84 81 02 00 00    	je     f0101728 <mem_init+0x50d>f01014a12328,102317
f01014a7:	8b 4d d0             	mov    -0x30(%ebp),%ecxf01014a72330,102410
f01014aa:	39 4d d4             	cmp    %ecx,-0x2c(%ebp)f01014aa2331,102466
f01014ad:	0f 84 96 02 00 00    	je     f0101749 <mem_init+0x52e>f01014ad2332,102522
f01014b3:	8b 45 cc             	mov    -0x34(%ebp),%eaxf01014b32334,102629
f01014b6:	39 45 d4             	cmp    %eax,-0x2c(%ebp)f01014b62335,102685
f01014b9:	0f 84 ab 02 00 00    	je     f010176a <mem_init+0x54f>f01014b92336,102741
f01014bf:	39 45 d0             	cmp    %eax,-0x30(%ebp)f01014bf2337,102806
f01014c2:	0f 84 a2 02 00 00    	je     f010176a <mem_init+0x54f>f01014c22338,102862
f01014c8:	83 ec 0c             	sub    $0xc,%espf01014c82340,102952
f01014cb:	6a 00                	push   $0x0f01014cb2341,103001
f01014cd:	e8 5e fa ff ff       	call   f0100f30 <page_alloc>f01014cd2342,103045
f01014d2:	83 c4 10             	add    $0x10,%espf01014d22343,103106
f01014d5:	85 c0                	test   %eax,%eaxf01014d52344,103156
f01014d7:	0f 85 ae 02 00 00    	jne    f010178b <mem_init+0x570>f01014d72345,103205
f01014dd:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01014dd2346,103270
f01014e3:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf01014e32347,103326
f01014e6:	2b 08                	sub    (%eax),%ecxf01014e62348,103382
f01014e8:	89 c8                	mov    %ecx,%eaxf01014e82349,103433
f01014ea:	c1 f8 03             	sar    $0x3,%eaxf01014ea2350,103482
f01014ed:	c1 e0 0c             	shl    $0xc,%eaxf01014ed2351,103531
f01014f0:	89 c1                	mov    %eax,%ecxf01014f02353,103606
f01014f2:	c1 e9 0c             	shr    $0xc,%ecxf01014f22354,103655
f01014f5:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf01014f52355,103704
f01014fb:	3b 0a                	cmp    (%edx),%ecxf01014fb2356,103760
f01014fd:	0f 83 a9 02 00 00    	jae    f01017ac <mem_init+0x591>f01014fd2357,103811
f0101503:	83 ec 04             	sub    $0x4,%espf01015032359,103911
f0101506:	68 00 10 00 00       	push   $0x1000f01015062360,103960
f010150b:	6a 01                	push   $0x1f010150b2361,104007
f010150d:	2d 00 00 00 10       	sub    $0x10000000,%eaxf010150d2363,104084
f0101512:	50                   	push   %eaxf01015122364,104140
f0101513:	89 fb                	mov    %edi,%ebxf01015132365,104184
f0101515:	e8 73 24 00 00       	call   f010398d <memset>f01015152366,104233
f010151a:	83 c4 04             	add    $0x4,%espf010151a2368,104307
f010151d:	ff 75 d4             	pushl  -0x2c(%ebp)f010151d2369,104356
f0101520:	e8 99 fa ff ff       	call   f0100fbe <page_free>f01015202370,104407
f0101525:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)f01015252372,104507
f010152c:	e8 ff f9 ff ff       	call   f0100f30 <page_alloc>f010152c2373,104558
f0101531:	83 c4 10             	add    $0x10,%espf01015312374,104619
f0101534:	85 c0                	test   %eax,%eaxf01015342375,104669
f0101536:	0f 84 88 02 00 00    	je     f01017c4 <mem_init+0x5a9>f01015362376,104718
f010153c:	39 45 d4             	cmp    %eax,-0x2c(%ebp)f010153c2378,104809
f010153f:	0f 85 9e 02 00 00    	jne    f01017e3 <mem_init+0x5c8>f010153f2379,104865
f0101545:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01015452381,104963
f010154b:	8b 55 d4             	mov    -0x2c(%ebp),%edxf010154b2382,105019
f010154e:	2b 10                	sub    (%eax),%edxf010154e2383,105075
f0101550:	c1 fa 03             	sar    $0x3,%edxf01015502384,105126
f0101553:	c1 e2 0c             	shl    $0xc,%edxf01015532385,105175
f0101556:	89 d1                	mov    %edx,%ecxf01015562387,105250
f0101558:	c1 e9 0c             	shr    $0xc,%ecxf01015582388,105299
f010155b:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf010155b2389,105348
f0101561:	3b 08                	cmp    (%eax),%ecxf01015612390,105404
f0101563:	0f 83 99 02 00 00    	jae    f0101802 <mem_init+0x5e7>f01015632391,105455
f0101569:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eaxf01015692393,105553
f010156f:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edxf010156f2394,105615
f0101575:	80 38 00             	cmpb   $0x0,(%eax)f01015752396,105691
f0101578:	0f 85 9a 02 00 00    	jne    f0101818 <mem_init+0x5fd>f01015782397,105742
f010157e:	83 c0 01             	add    $0x1,%eaxf010157e2398,105807
f0101581:	39 d0                	cmp    %edx,%eaxf01015812400,105886
f0101583:	75 f0                	jne    f0101575 <mem_init+0x35a>f01015832401,105935
	page_free_list = fl;page_free_list2402,106000
f0101585:	8b 45 c8             	mov    -0x38(%ebp),%eaxf01015852403,106022
f0101588:	89 87 90 1f 00 00    	mov    %eax,0x1f90(%edi)f01015882404,106078
f010158e:	83 ec 0c             	sub    $0xc,%espf010158e2406,106152
f0101591:	ff 75 d4             	pushl  -0x2c(%ebp)f01015912407,106201
f0101594:	e8 25 fa ff ff       	call   f0100fbe <page_free>f01015942408,106252
f0101599:	83 c4 04             	add    $0x4,%espf01015992410,106329
f010159c:	ff 75 d0             	pushl  -0x30(%ebp)f010159c2411,106378
f010159f:	e8 1a fa ff ff       	call   f0100fbe <page_free>f010159f2412,106429
f01015a4:	83 c4 04             	add    $0x4,%espf01015a42414,106506
f01015a7:	ff 75 cc             	pushl  -0x34(%ebp)f01015a72415,106555
f01015aa:	e8 0f fa ff ff       	call   f0100fbe <page_free>f01015aa2416,106606
f01015af:	8b 87 90 1f 00 00    	mov    0x1f90(%edi),%eaxf01015af2418,106715
f01015b5:	83 c4 10             	add    $0x10,%espf01015b52419,106772
f01015b8:	e9 81 02 00 00       	jmp    f010183e <mem_init+0x623>f01015b82420,106822
f01015bd:	8d 87 21 d8 fe ff    	lea    -0x127df(%edi),%eaxf01015bd2422,106919
f01015c3:	50                   	push   %eaxf01015c32423,106978
f01015c4:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01015c42424,107022
f01015ca:	50                   	push   %eaxf01015ca2425,107081
f01015cb:	68 4c 02 00 00       	push   $0x24cf01015cb2426,107125
f01015d0:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01015d02427,107171
f01015d6:	50                   	push   %eaxf01015d62428,107230
f01015d7:	89 fb                	mov    %edi,%ebxf01015d72429,107274
f01015d9:	e8 bb ea ff ff       	call   f0100099 <_panic>f01015d92430,107323
f01015de:	8d 87 37 d8 fe ff    	lea    -0x127c9(%edi),%eaxf01015de2432,107412
f01015e4:	50                   	push   %eaxf01015e42433,107471
f01015e5:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01015e52434,107515
f01015eb:	50                   	push   %eaxf01015eb2435,107574
f01015ec:	68 4d 02 00 00       	push   $0x24df01015ec2436,107618
f01015f1:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01015f12437,107664
f01015f7:	50                   	push   %eaxf01015f72438,107723
f01015f8:	89 fb                	mov    %edi,%ebxf01015f82439,107767
f01015fa:	e8 9a ea ff ff       	call   f0100099 <_panic>f01015fa2440,107816
f01015ff:	8d 87 4d d8 fe ff    	lea    -0x127b3(%edi),%eaxf01015ff2442,107905
f0101605:	50                   	push   %eaxf01016052443,107964
f0101606:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01016062444,108008
f010160c:	50                   	push   %eaxf010160c2445,108067
f010160d:	68 4e 02 00 00       	push   $0x24ef010160d2446,108111
f0101612:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01016122447,108157
f0101618:	50                   	push   %eaxf01016182448,108216
f0101619:	89 fb                	mov    %edi,%ebxf01016192449,108260
f010161b:	e8 79 ea ff ff       	call   f0100099 <_panic>f010161b2450,108309
f0101620:	8d 87 63 d8 fe ff    	lea    -0x1279d(%edi),%eaxf01016202452,108394
f0101626:	50                   	push   %eaxf01016262453,108453
f0101627:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01016272454,108497
f010162d:	50                   	push   %eaxf010162d2455,108556
f010162e:	68 51 02 00 00       	push   $0x251f010162e2456,108600
f0101633:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01016332457,108646
f0101639:	50                   	push   %eaxf01016392458,108705
f010163a:	89 fb                	mov    %edi,%ebxf010163a2459,108749
f010163c:	e8 58 ea ff ff       	call   f0100099 <_panic>f010163c2460,108798
f0101641:	8d 87 64 d1 fe ff    	lea    -0x12e9c(%edi),%eaxf01016412462,108897
f0101647:	50                   	push   %eaxf01016472463,108956
f0101648:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01016482464,109000
f010164e:	50                   	push   %eaxf010164e2465,109059
f010164f:	68 52 02 00 00       	push   $0x252f010164f2466,109103
f0101654:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01016542467,109149
f010165a:	50                   	push   %eaxf010165a2468,109208
f010165b:	89 fb                	mov    %edi,%ebxf010165b2469,109252
f010165d:	e8 37 ea ff ff       	call   f0100099 <_panic>f010165d2470,109301
f0101662:	8d 87 75 d8 fe ff    	lea    -0x1278b(%edi),%eaxf01016622472,109397
f0101668:	50                   	push   %eaxf01016682473,109456
f0101669:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01016692474,109500
f010166f:	50                   	push   %eaxf010166f2475,109559
f0101670:	68 53 02 00 00       	push   $0x253f01016702476,109603
f0101675:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01016752477,109649
f010167b:	50                   	push   %eaxf010167b2478,109708
f010167c:	89 fb                	mov    %edi,%ebxf010167c2479,109752
f010167e:	e8 16 ea ff ff       	call   f0100099 <_panic>f010167e2480,109801
f0101683:	8d 87 92 d8 fe ff    	lea    -0x1276e(%edi),%eaxf01016832482,109897
f0101689:	50                   	push   %eaxf01016892483,109956
f010168a:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010168a2484,110000
f0101690:	50                   	push   %eaxf01016902485,110059
f0101691:	68 54 02 00 00       	push   $0x254f01016912486,110103
f0101696:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01016962487,110149
f010169c:	50                   	push   %eaxf010169c2488,110208
f010169d:	89 fb                	mov    %edi,%ebxf010169d2489,110252
f010169f:	e8 f5 e9 ff ff       	call   f0100099 <_panic>f010169f2490,110301
f01016a4:	8d 87 af d8 fe ff    	lea    -0x12751(%edi),%eaxf01016a42492,110397
f01016aa:	50                   	push   %eaxf01016aa2493,110456
f01016ab:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01016ab2494,110500
f01016b1:	50                   	push   %eaxf01016b12495,110559
f01016b2:	68 55 02 00 00       	push   $0x255f01016b22496,110603
f01016b7:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01016b72497,110649
f01016bd:	50                   	push   %eaxf01016bd2498,110708
f01016be:	89 fb                	mov    %edi,%ebxf01016be2499,110752
f01016c0:	e8 d4 e9 ff ff       	call   f0100099 <_panic>f01016c02500,110801
f01016c5:	8d 87 cc d8 fe ff    	lea    -0x12734(%edi),%eaxf01016c52502,110883
f01016cb:	50                   	push   %eaxf01016cb2503,110942
f01016cc:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01016cc2504,110986
f01016d2:	50                   	push   %eaxf01016d22505,111045
f01016d3:	68 5c 02 00 00       	push   $0x25cf01016d32506,111089
f01016d8:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01016d82507,111135
f01016de:	50                   	push   %eaxf01016de2508,111194
f01016df:	89 fb                	mov    %edi,%ebxf01016df2509,111238
f01016e1:	e8 b3 e9 ff ff       	call   f0100099 <_panic>f01016e12510,111287
f01016e6:	8d 87 21 d8 fe ff    	lea    -0x127df(%edi),%eaxf01016e62512,111376
f01016ec:	50                   	push   %eaxf01016ec2513,111435
f01016ed:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01016ed2514,111479
f01016f3:	50                   	push   %eaxf01016f32515,111538
f01016f4:	68 63 02 00 00       	push   $0x263f01016f42516,111582
f01016f9:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01016f92517,111628
f01016ff:	50                   	push   %eaxf01016ff2518,111687
f0101700:	89 fb                	mov    %edi,%ebxf01017002519,111731
f0101702:	e8 92 e9 ff ff       	call   f0100099 <_panic>f01017022520,111780
f0101707:	8d 87 37 d8 fe ff    	lea    -0x127c9(%edi),%eaxf01017072522,111869
f010170d:	50                   	push   %eaxf010170d2523,111928
f010170e:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010170e2524,111972
f0101714:	50                   	push   %eaxf01017142525,112031
f0101715:	68 64 02 00 00       	push   $0x264f01017152526,112075
f010171a:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010171a2527,112121
f0101720:	50                   	push   %eaxf01017202528,112180
f0101721:	89 fb                	mov    %edi,%ebxf01017212529,112224
f0101723:	e8 71 e9 ff ff       	call   f0100099 <_panic>f01017232530,112273
f0101728:	8d 87 4d d8 fe ff    	lea    -0x127b3(%edi),%eaxf01017282532,112362
f010172e:	50                   	push   %eaxf010172e2533,112421
f010172f:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010172f2534,112465
f0101735:	50                   	push   %eaxf01017352535,112524
f0101736:	68 65 02 00 00       	push   $0x265f01017362536,112568
f010173b:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010173b2537,112614
f0101741:	50                   	push   %eaxf01017412538,112673
f0101742:	89 fb                	mov    %edi,%ebxf01017422539,112717
f0101744:	e8 50 e9 ff ff       	call   f0100099 <_panic>f01017442540,112766
f0101749:	8d 87 63 d8 fe ff    	lea    -0x1279d(%edi),%eaxf01017492542,112851
f010174f:	50                   	push   %eaxf010174f2543,112910
f0101750:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01017502544,112954
f0101756:	50                   	push   %eaxf01017562545,113013
f0101757:	68 67 02 00 00       	push   $0x267f01017572546,113057
f010175c:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010175c2547,113103
f0101762:	50                   	push   %eaxf01017622548,113162
f0101763:	89 fb                	mov    %edi,%ebxf01017632549,113206
f0101765:	e8 2f e9 ff ff       	call   f0100099 <_panic>f01017652550,113255
f010176a:	8d 87 64 d1 fe ff    	lea    -0x12e9c(%edi),%eaxf010176a2552,113354
f0101770:	50                   	push   %eaxf01017702553,113413
f0101771:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01017712554,113457
f0101777:	50                   	push   %eaxf01017772555,113516
f0101778:	68 68 02 00 00       	push   $0x268f01017782556,113560
f010177d:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010177d2557,113606
f0101783:	50                   	push   %eaxf01017832558,113665
f0101784:	89 fb                	mov    %edi,%ebxf01017842559,113709
f0101786:	e8 0e e9 ff ff       	call   f0100099 <_panic>f01017862560,113758
f010178b:	8d 87 cc d8 fe ff    	lea    -0x12734(%edi),%eaxf010178b2562,113840
f0101791:	50                   	push   %eaxf01017912563,113899
f0101792:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01017922564,113943
f0101798:	50                   	push   %eaxf01017982565,114002
f0101799:	68 69 02 00 00       	push   $0x269f01017992566,114046
f010179e:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010179e2567,114092
f01017a4:	50                   	push   %eaxf01017a42568,114151
f01017a5:	89 fb                	mov    %edi,%ebxf01017a52569,114195
f01017a7:	e8 ed e8 ff ff       	call   f0100099 <_panic>f01017a72570,114244
f01017ac:	50                   	push   %eaxf01017ac2572,114365
f01017ad:	8d 87 84 cf fe ff    	lea    -0x1307c(%edi),%eaxf01017ad2573,114409
f01017b3:	50                   	push   %eaxf01017b32574,114468
f01017b4:	6a 52                	push   $0x52f01017b42575,114512
f01017b6:	8d 87 5c d7 fe ff    	lea    -0x128a4(%edi),%eaxf01017b62576,114557
f01017bc:	50                   	push   %eaxf01017bc2577,114616
f01017bd:	89 fb                	mov    %edi,%ebxf01017bd2578,114660
f01017bf:	e8 d5 e8 ff ff       	call   f0100099 <_panic>f01017bf2579,114709
f01017c4:	8d 87 db d8 fe ff    	lea    -0x12725(%edi),%eaxf01017c42581,114806
f01017ca:	50                   	push   %eaxf01017ca2582,114865
f01017cb:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01017cb2583,114909
f01017d1:	50                   	push   %eaxf01017d12584,114968
f01017d2:	68 6e 02 00 00       	push   $0x26ef01017d22585,115012
f01017d7:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01017d72586,115058
f01017dd:	50                   	push   %eaxf01017dd2587,115117
f01017de:	e8 b6 e8 ff ff       	call   f0100099 <_panic>f01017de2588,115161
f01017e3:	8d 87 f9 d8 fe ff    	lea    -0x12707(%edi),%eaxf01017e32590,115244
f01017e9:	50                   	push   %eaxf01017e92591,115303
f01017ea:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01017ea2592,115347
f01017f0:	50                   	push   %eaxf01017f02593,115406
f01017f1:	68 6f 02 00 00       	push   $0x26ff01017f12594,115450
f01017f6:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01017f62595,115496
f01017fc:	50                   	push   %eaxf01017fc2596,115555
f01017fd:	e8 97 e8 ff ff       	call   f0100099 <_panic>f01017fd2597,115599
f0101802:	52                   	push   %edxf01018022598,115656
f0101803:	8d 87 84 cf fe ff    	lea    -0x1307c(%edi),%eaxf01018032599,115700
f0101809:	50                   	push   %eaxf01018092600,115759
f010180a:	6a 52                	push   $0x52f010180a2601,115803
f010180c:	8d 87 5c d7 fe ff    	lea    -0x128a4(%edi),%eaxf010180c2602,115848
f0101812:	50                   	push   %eaxf01018122603,115907
f0101813:	e8 81 e8 ff ff       	call   f0100099 <_panic>f01018132604,115951
f0101818:	8d 87 09 d9 fe ff    	lea    -0x126f7(%edi),%eaxf01018182606,116029
f010181e:	50                   	push   %eaxf010181e2607,116088
f010181f:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010181f2608,116132
f0101825:	50                   	push   %eaxf01018252609,116191
f0101826:	68 72 02 00 00       	push   $0x272f01018262610,116235
f010182b:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010182b2611,116281
f0101831:	50                   	push   %eaxf01018312612,116340
f0101832:	89 fb                	mov    %edi,%ebxf01018322613,116384
f0101834:	e8 60 e8 ff ff       	call   f0100099 <_panic>f01018342614,116433
f0101839:	83 ee 01             	sub    $0x1,%esif01018392616,116501
f010183c:	8b 00                	mov    (%eax),%eaxf010183c2618,116599
f010183e:	85 c0                	test   %eax,%eaxf010183e2619,116650
f0101840:	75 f7                	jne    f0101839 <mem_init+0x61e>f01018402620,116699
f0101842:	85 f6                	test   %esi,%esif01018422622,116785
f0101844:	0f 85 8d 07 00 00    	jne    f0101fd7 <mem_init+0xdbc>f01018442623,116834
f010184a:	83 ec 0c             	sub    $0xc,%espf010184a2625,116944
f010184d:	8d 87 84 d1 fe ff    	lea    -0x12e7c(%edi),%eaxf010184d2626,116993
f0101853:	50                   	push   %eaxf01018532627,117052
f0101854:	89 fb                	mov    %edi,%ebxf01018542628,117096
f0101856:	e8 d6 15 00 00       	call   f0102e31 <cprintf>f01018562629,117145
	pp0 = pp1 = pp2 = 0;pp02634,117284
f010185b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)f010185b2636,117338
f0101862:	e8 c9 f6 ff ff       	call   f0100f30 <page_alloc>f01018622637,117389
f0101867:	89 45 d0             	mov    %eax,-0x30(%ebp)f01018672638,117450
f010186a:	83 c4 10             	add    $0x10,%espf010186a2639,117506
f010186d:	85 c0                	test   %eax,%eaxf010186d2640,117556
f010186f:	0f 84 83 07 00 00    	je     f0101ff8 <mem_init+0xddd>f010186f2641,117605
f0101875:	83 ec 0c             	sub    $0xc,%espf01018752643,117702
f0101878:	6a 00                	push   $0x0f01018782644,117751
f010187a:	e8 b1 f6 ff ff       	call   f0100f30 <page_alloc>f010187a2645,117795
f010187f:	89 c6                	mov    %eax,%esif010187f2646,117856
f0101881:	83 c4 10             	add    $0x10,%espf01018812647,117905
f0101884:	85 c0                	test   %eax,%eaxf01018842648,117955
f0101886:	0f 84 8b 07 00 00    	je     f0102017 <mem_init+0xdfc>f01018862649,118004
f010188c:	83 ec 0c             	sub    $0xc,%espf010188c2651,118101
f010188f:	6a 00                	push   $0x0f010188f2652,118150
f0101891:	e8 9a f6 ff ff       	call   f0100f30 <page_alloc>f01018912653,118194
f0101896:	89 45 d4             	mov    %eax,-0x2c(%ebp)f01018962654,118255
f0101899:	83 c4 10             	add    $0x10,%espf01018992655,118311
f010189c:	85 c0                	test   %eax,%eaxf010189c2656,118361
f010189e:	0f 84 92 07 00 00    	je     f0102036 <mem_init+0xe1b>f010189e2657,118410
f01018a4:	39 75 d0             	cmp    %esi,-0x30(%ebp)f01018a42661,118518
f01018a7:	0f 84 a8 07 00 00    	je     f0102055 <mem_init+0xe3a>f01018a72662,118574
f01018ad:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf01018ad2664,118681
f01018b0:	39 c6                	cmp    %eax,%esif01018b02665,118737
f01018b2:	0f 84 bc 07 00 00    	je     f0102074 <mem_init+0xe59>f01018b22666,118786
f01018b8:	39 45 d0             	cmp    %eax,-0x30(%ebp)f01018b82667,118851
f01018bb:	0f 84 b3 07 00 00    	je     f0102074 <mem_init+0xe59>f01018bb2668,118907
	fl = page_free_list;fl2671,119022
f01018c1:	8b 87 90 1f 00 00    	mov    0x1f90(%edi),%eaxf01018c12672,119044
f01018c7:	89 45 c8             	mov    %eax,-0x38(%ebp)f01018c72673,119101
	page_free_list = 0;page_free_list2674,119157
f01018ca:	c7 87 90 1f 00 00 00 	movl   $0x0,0x1f90(%edi)f01018ca2675,119178
f01018d1:	00 00 00 f01018d12676,119235
f01018d4:	83 ec 0c             	sub    $0xc,%espf01018d42680,119310
f01018d7:	6a 00                	push   $0x0f01018d72681,119359
f01018d9:	e8 52 f6 ff ff       	call   f0100f30 <page_alloc>f01018d92682,119403
f01018de:	83 c4 10             	add    $0x10,%espf01018de2683,119464
f01018e1:	85 c0                	test   %eax,%eaxf01018e12684,119514
f01018e3:	0f 85 ac 07 00 00    	jne    f0102095 <mem_init+0xe7a>f01018e32685,119563
f01018e9:	83 ec 04             	sub    $0x4,%espf01018e92689,119736
f01018ec:	8d 45 e4             	lea    -0x1c(%ebp),%eaxf01018ec2690,119785
f01018ef:	50                   	push   %eaxf01018ef2691,119841
f01018f0:	6a 00                	push   $0x0f01018f02692,119885
f01018f2:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf01018f22693,119929
f01018f8:	ff 30                	pushl  (%eax)f01018f82694,119985
f01018fa:	e8 00 f8 ff ff       	call   f01010ff <page_lookup>f01018fa2695,120031
f01018ff:	83 c4 10             	add    $0x10,%espf01018ff2696,120093
f0101902:	85 c0                	test   %eax,%eaxf01019022697,120143
f0101904:	0f 85 aa 07 00 00    	jne    f01020b4 <mem_init+0xe99>f01019042698,120192
f010190a:	6a 02                	push   $0x2f010190a2702,120376
f010190c:	6a 00                	push   $0x0f010190c2703,120420
f010190e:	56                   	push   %esif010190e2704,120464
f010190f:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf010190f2705,120508
f0101915:	ff 30                	pushl  (%eax)f01019152706,120564
f0101917:	e8 8e f8 ff ff       	call   f01011aa <page_insert>f01019172707,120610
f010191c:	83 c4 10             	add    $0x10,%espf010191c2708,120672
f010191f:	85 c0                	test   %eax,%eaxf010191f2709,120722
f0101921:	0f 89 ac 07 00 00    	jns    f01020d3 <mem_init+0xeb8>f01019212710,120771
f0101927:	83 ec 0c             	sub    $0xc,%espf01019272714,120916
f010192a:	ff 75 d0             	pushl  -0x30(%ebp)f010192a2715,120965
f010192d:	e8 8c f6 ff ff       	call   f0100fbe <page_free>f010192d2716,121016
f0101932:	6a 02                	push   $0x2f01019322718,121132
f0101934:	6a 00                	push   $0x0f01019342719,121176
f0101936:	56                   	push   %esif01019362720,121220
f0101937:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf01019372721,121264
f010193d:	ff 30                	pushl  (%eax)f010193d2722,121320
f010193f:	e8 66 f8 ff ff       	call   f01011aa <page_insert>f010193f2723,121366
f0101944:	83 c4 20             	add    $0x20,%espf01019442724,121428
f0101947:	85 c0                	test   %eax,%eaxf01019472725,121478
f0101949:	0f 85 a3 07 00 00    	jne    f01020f2 <mem_init+0xed7>f01019492726,121527
f010194f:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf010194f2728,121642
f0101955:	8b 18                	mov    (%eax),%ebxf01019552729,121698
f0101957:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01019572731,121782
f010195d:	8b 08                	mov    (%eax),%ecxf010195d2732,121838
f010195f:	89 4d cc             	mov    %ecx,-0x34(%ebp)f010195f2733,121889
f0101962:	8b 13                	mov    (%ebx),%edxf01019622734,121945
f0101964:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf01019642735,121996
f010196a:	8b 45 d0             	mov    -0x30(%ebp),%eaxf010196a2736,122052
f010196d:	29 c8                	sub    %ecx,%eaxf010196d2737,122108
f010196f:	c1 f8 03             	sar    $0x3,%eaxf010196f2738,122157
f0101972:	c1 e0 0c             	shl    $0xc,%eaxf01019722739,122206
f0101975:	39 c2                	cmp    %eax,%edxf01019752740,122255
f0101977:	0f 85 94 07 00 00    	jne    f0102111 <mem_init+0xef6>f01019772741,122304
f010197d:	ba 00 00 00 00       	mov    $0x0,%edxf010197d2743,122424
f0101982:	89 d8                	mov    %ebx,%eaxf01019822744,122473
f0101984:	e8 b5 f0 ff ff       	call   f0100a3e <check_va2pa>f01019842745,122522
f0101989:	89 f2                	mov    %esi,%edxf01019892746,122584
f010198b:	2b 55 cc             	sub    -0x34(%ebp),%edxf010198b2747,122633
f010198e:	c1 fa 03             	sar    $0x3,%edxf010198e2748,122689
f0101991:	c1 e2 0c             	shl    $0xc,%edxf01019912749,122738
f0101994:	39 d0                	cmp    %edx,%eaxf01019942750,122787
f0101996:	0f 85 96 07 00 00    	jne    f0102132 <mem_init+0xf17>f01019962751,122836
f010199c:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)f010199c2753,122928
f01019a1:	0f 85 ac 07 00 00    	jne    f0102153 <mem_init+0xf38>f01019a12754,122982
f01019a7:	8b 45 d0             	mov    -0x30(%ebp),%eaxf01019a72756,123074
f01019aa:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)f01019aa2757,123130
f01019af:	0f 85 bf 07 00 00    	jne    f0102174 <mem_init+0xf59>f01019af2758,123184
f01019b5:	6a 02                	push   $0x2f01019b52762,123405
f01019b7:	68 00 10 00 00       	push   $0x1000f01019b72763,123449
f01019bc:	ff 75 d4             	pushl  -0x2c(%ebp)f01019bc2764,123496
f01019bf:	53                   	push   %ebxf01019bf2765,123547
f01019c0:	e8 e5 f7 ff ff       	call   f01011aa <page_insert>f01019c02766,123591
f01019c5:	83 c4 10             	add    $0x10,%espf01019c52767,123653
f01019c8:	85 c0                	test   %eax,%eaxf01019c82768,123703
f01019ca:	0f 85 c5 07 00 00    	jne    f0102195 <mem_init+0xf7a>f01019ca2769,123752
f01019d0:	ba 00 10 00 00       	mov    $0x1000,%edxf01019d02771,123875
f01019d5:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf01019d52772,123927
f01019db:	8b 00                	mov    (%eax),%eaxf01019db2773,123983
f01019dd:	e8 5c f0 ff ff       	call   f0100a3e <check_va2pa>f01019dd2774,124034
f01019e2:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf01019e22775,124096
f01019e8:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf01019e82776,124152
f01019eb:	2b 0a                	sub    (%edx),%ecxf01019eb2777,124208
f01019ed:	89 ca                	mov    %ecx,%edxf01019ed2778,124259
f01019ef:	c1 fa 03             	sar    $0x3,%edxf01019ef2779,124308
f01019f2:	c1 e2 0c             	shl    $0xc,%edxf01019f22780,124357
f01019f5:	39 d0                	cmp    %edx,%eaxf01019f52781,124406
f01019f7:	0f 85 b9 07 00 00    	jne    f01021b6 <mem_init+0xf9b>f01019f72782,124455
f01019fd:	83 ec 0c             	sub    $0xc,%espf01019fd2786,124575
f0101a00:	6a 00                	push   $0x0f0101a002787,124624
f0101a02:	e8 29 f5 ff ff       	call   f0100f30 <page_alloc>f0101a022788,124668
f0101a07:	83 c4 10             	add    $0x10,%espf0101a072789,124729
f0101a0a:	85 c0                	test   %eax,%eaxf0101a0a2790,124779
f0101a0c:	0f 85 c5 07 00 00    	jne    f01021d7 <mem_init+0xfbc>f0101a0c2791,124828
f0101a12:	6a 02                	push   $0x2f0101a122795,125028
f0101a14:	68 00 10 00 00       	push   $0x1000f0101a142796,125072
f0101a19:	ff 75 d4             	pushl  -0x2c(%ebp)f0101a192797,125119
f0101a1c:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101a1c2798,125170
f0101a22:	ff 30                	pushl  (%eax)f0101a222799,125226
f0101a24:	e8 81 f7 ff ff       	call   f01011aa <page_insert>f0101a242800,125272
f0101a29:	83 c4 10             	add    $0x10,%espf0101a292801,125334
f0101a2c:	85 c0                	test   %eax,%eaxf0101a2c2802,125384
f0101a2e:	0f 85 c4 07 00 00    	jne    f01021f8 <mem_init+0xfdd>f0101a2e2803,125433
f0101a34:	ba 00 10 00 00       	mov    $0x1000,%edxf0101a342805,125556
f0101a39:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101a392806,125608
f0101a3f:	8b 00                	mov    (%eax),%eaxf0101a3f2807,125664
f0101a41:	e8 f8 ef ff ff       	call   f0100a3e <check_va2pa>f0101a412808,125715
f0101a46:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf0101a462809,125777
f0101a4c:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0101a4c2810,125833
f0101a4f:	2b 0a                	sub    (%edx),%ecxf0101a4f2811,125889
f0101a51:	89 ca                	mov    %ecx,%edxf0101a512812,125940
f0101a53:	c1 fa 03             	sar    $0x3,%edxf0101a532813,125989
f0101a56:	c1 e2 0c             	shl    $0xc,%edxf0101a562814,126038
f0101a59:	39 d0                	cmp    %edx,%eaxf0101a592815,126087
f0101a5b:	0f 85 b8 07 00 00    	jne    f0102219 <mem_init+0xffe>f0101a5b2816,126136
f0101a61:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101a612818,126228
f0101a64:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)f0101a642819,126284
f0101a69:	0f 85 cb 07 00 00    	jne    f010223a <mem_init+0x101f>f0101a692820,126338
f0101a6f:	83 ec 0c             	sub    $0xc,%espf0101a6f2825,126536
f0101a72:	6a 00                	push   $0x0f0101a722826,126585
f0101a74:	e8 b7 f4 ff ff       	call   f0100f30 <page_alloc>f0101a742827,126629
f0101a79:	83 c4 10             	add    $0x10,%espf0101a792828,126690
f0101a7c:	85 c0                	test   %eax,%eaxf0101a7c2829,126740
f0101a7e:	0f 85 d7 07 00 00    	jne    f010225b <mem_init+0x1040>f0101a7e2830,126789
	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));ptep2833,126911
f0101a84:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101a842834,126971
f0101a8a:	8b 10                	mov    (%eax),%edxf0101a8a2835,127027
f0101a8c:	8b 02                	mov    (%edx),%eaxf0101a8c2836,127078
f0101a8e:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf0101a8e2837,127129
f0101a93:	89 c3                	mov    %eax,%ebxf0101a932839,127211
f0101a95:	c1 eb 0c             	shr    $0xc,%ebxf0101a952840,127260
f0101a98:	c7 c1 c8 96 11 f0    	mov    $0xf01196c8,%ecxf0101a982841,127309
f0101a9e:	3b 19                	cmp    (%ecx),%ebxf0101a9e2842,127365
f0101aa0:	0f 83 d6 07 00 00    	jae    f010227c <mem_init+0x1061>f0101aa02843,127416
f0101aa6:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0101aa62845,127515
f0101aab:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0101aab2846,127571
f0101aae:	83 ec 04             	sub    $0x4,%espf0101aae2848,127698
f0101ab1:	6a 00                	push   $0x0f0101ab12849,127747
f0101ab3:	68 00 10 00 00       	push   $0x1000f0101ab32850,127791
f0101ab8:	52                   	push   %edxf0101ab82851,127838
f0101ab9:	e8 95 f5 ff ff       	call   f0101053 <pgdir_walk>f0101ab92852,127882
f0101abe:	8b 4d e4             	mov    -0x1c(%ebp),%ecxf0101abe2853,127943
f0101ac1:	8d 51 04             	lea    0x4(%ecx),%edxf0101ac12854,127999
f0101ac4:	83 c4 10             	add    $0x10,%espf0101ac42855,128053
f0101ac7:	39 d0                	cmp    %edx,%eaxf0101ac72856,128103
f0101ac9:	0f 85 c8 07 00 00    	jne    f0102297 <mem_init+0x107c>f0101ac92857,128152
f0101acf:	6a 06                	push   $0x6f0101acf2861,128338
f0101ad1:	68 00 10 00 00       	push   $0x1000f0101ad12862,128382
f0101ad6:	ff 75 d4             	pushl  -0x2c(%ebp)f0101ad62863,128429
f0101ad9:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101ad92864,128480
f0101adf:	ff 30                	pushl  (%eax)f0101adf2865,128536
f0101ae1:	e8 c4 f6 ff ff       	call   f01011aa <page_insert>f0101ae12866,128582
f0101ae6:	83 c4 10             	add    $0x10,%espf0101ae62867,128644
f0101ae9:	85 c0                	test   %eax,%eaxf0101ae92868,128694
f0101aeb:	0f 85 c7 07 00 00    	jne    f01022b8 <mem_init+0x109d>f0101aeb2869,128743
f0101af1:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101af12871,128867
f0101af7:	8b 18                	mov    (%eax),%ebxf0101af72872,128923
f0101af9:	ba 00 10 00 00       	mov    $0x1000,%edxf0101af92873,128974
f0101afe:	89 d8                	mov    %ebx,%eaxf0101afe2874,129026
f0101b00:	e8 39 ef ff ff       	call   f0100a3e <check_va2pa>f0101b002875,129075
f0101b05:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf0101b052877,129170
f0101b0b:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0101b0b2878,129226
f0101b0e:	2b 0a                	sub    (%edx),%ecxf0101b0e2879,129282
f0101b10:	89 ca                	mov    %ecx,%edxf0101b102880,129333
f0101b12:	c1 fa 03             	sar    $0x3,%edxf0101b122881,129382
f0101b15:	c1 e2 0c             	shl    $0xc,%edxf0101b152882,129431
f0101b18:	39 d0                	cmp    %edx,%eaxf0101b182883,129480
f0101b1a:	0f 85 b9 07 00 00    	jne    f01022d9 <mem_init+0x10be>f0101b1a2884,129529
f0101b20:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101b202886,129622
f0101b23:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)f0101b232887,129678
f0101b28:	0f 85 cc 07 00 00    	jne    f01022fa <mem_init+0x10df>f0101b282888,129732
f0101b2e:	83 ec 04             	sub    $0x4,%espf0101b2e2890,129859
f0101b31:	6a 00                	push   $0x0f0101b312891,129908
f0101b33:	68 00 10 00 00       	push   $0x1000f0101b332892,129952
f0101b38:	53                   	push   %ebxf0101b382893,129999
f0101b39:	e8 15 f5 ff ff       	call   f0101053 <pgdir_walk>f0101b392894,130043
f0101b3e:	83 c4 10             	add    $0x10,%espf0101b3e2895,130104
f0101b41:	f6 00 04             	testb  $0x4,(%eax)f0101b412896,130154
f0101b44:	0f 84 d1 07 00 00    	je     f010231b <mem_init+0x1100>f0101b442897,130205
f0101b4a:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101b4a2899,130303
f0101b50:	8b 00                	mov    (%eax),%eaxf0101b502900,130359
f0101b52:	f6 00 04             	testb  $0x4,(%eax)f0101b522901,130410
f0101b55:	0f 84 e1 07 00 00    	je     f010233c <mem_init+0x1121>f0101b552902,130461
f0101b5b:	6a 02                	push   $0x2f0101b5b2906,130646
f0101b5d:	68 00 10 00 00       	push   $0x1000f0101b5d2907,130690
f0101b62:	ff 75 d4             	pushl  -0x2c(%ebp)f0101b622908,130737
f0101b65:	50                   	push   %eaxf0101b652909,130788
f0101b66:	e8 3f f6 ff ff       	call   f01011aa <page_insert>f0101b662910,130832
f0101b6b:	83 c4 10             	add    $0x10,%espf0101b6b2911,130894
f0101b6e:	85 c0                	test   %eax,%eaxf0101b6e2912,130944
f0101b70:	0f 85 e7 07 00 00    	jne    f010235d <mem_init+0x1142>f0101b702913,130993
f0101b76:	83 ec 04             	sub    $0x4,%espf0101b762915,131120
f0101b79:	6a 00                	push   $0x0f0101b792916,131169
f0101b7b:	68 00 10 00 00       	push   $0x1000f0101b7b2917,131213
f0101b80:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101b802918,131260
f0101b86:	ff 30                	pushl  (%eax)f0101b862919,131316
f0101b88:	e8 c6 f4 ff ff       	call   f0101053 <pgdir_walk>f0101b882920,131362
f0101b8d:	83 c4 10             	add    $0x10,%espf0101b8d2921,131423
f0101b90:	f6 00 02             	testb  $0x2,(%eax)f0101b902922,131473
f0101b93:	0f 84 e5 07 00 00    	je     f010237e <mem_init+0x1163>f0101b932923,131524
f0101b99:	83 ec 04             	sub    $0x4,%espf0101b992925,131654
f0101b9c:	6a 00                	push   $0x0f0101b9c2926,131703
f0101b9e:	68 00 10 00 00       	push   $0x1000f0101b9e2927,131747
f0101ba3:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101ba32928,131794
f0101ba9:	ff 30                	pushl  (%eax)f0101ba92929,131850
f0101bab:	e8 a3 f4 ff ff       	call   f0101053 <pgdir_walk>f0101bab2930,131896
f0101bb0:	83 c4 10             	add    $0x10,%espf0101bb02931,131957
f0101bb3:	f6 00 04             	testb  $0x4,(%eax)f0101bb32932,132007
f0101bb6:	0f 85 e3 07 00 00    	jne    f010239f <mem_init+0x1184>f0101bb62933,132058
f0101bbc:	6a 02                	push   $0x2f0101bbc2937,132269
f0101bbe:	68 00 00 40 00       	push   $0x400000f0101bbe2938,132313
f0101bc3:	ff 75 d0             	pushl  -0x30(%ebp)f0101bc32939,132362
f0101bc6:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101bc62940,132413
f0101bcc:	ff 30                	pushl  (%eax)f0101bcc2941,132469
f0101bce:	e8 d7 f5 ff ff       	call   f01011aa <page_insert>f0101bce2942,132515
f0101bd3:	83 c4 10             	add    $0x10,%espf0101bd32943,132577
f0101bd6:	85 c0                	test   %eax,%eaxf0101bd62944,132627
f0101bd8:	0f 89 e2 07 00 00    	jns    f01023c0 <mem_init+0x11a5>f0101bd82945,132676
f0101bde:	6a 02                	push   $0x2f0101bde2949,132851
f0101be0:	68 00 10 00 00       	push   $0x1000f0101be02950,132895
f0101be5:	56                   	push   %esif0101be52951,132942
f0101be6:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101be62952,132986
f0101bec:	ff 30                	pushl  (%eax)f0101bec2953,133042
f0101bee:	e8 b7 f5 ff ff       	call   f01011aa <page_insert>f0101bee2954,133088
f0101bf3:	83 c4 10             	add    $0x10,%espf0101bf32955,133150
f0101bf6:	85 c0                	test   %eax,%eaxf0101bf62956,133200
f0101bf8:	0f 85 e3 07 00 00    	jne    f01023e1 <mem_init+0x11c6>f0101bf82957,133249
f0101bfe:	83 ec 04             	sub    $0x4,%espf0101bfe2959,133379
f0101c01:	6a 00                	push   $0x0f0101c012960,133428
f0101c03:	68 00 10 00 00       	push   $0x1000f0101c032961,133472
f0101c08:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101c082962,133519
f0101c0e:	ff 30                	pushl  (%eax)f0101c0e2963,133575
f0101c10:	e8 3e f4 ff ff       	call   f0101053 <pgdir_walk>f0101c102964,133621
f0101c15:	83 c4 10             	add    $0x10,%espf0101c152965,133682
f0101c18:	f6 00 04             	testb  $0x4,(%eax)f0101c182966,133732
f0101c1b:	0f 85 e1 07 00 00    	jne    f0102402 <mem_init+0x11e7>f0101c1b2967,133783
f0101c21:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101c212971,133962
f0101c27:	8b 18                	mov    (%eax),%ebxf0101c272972,134018
f0101c29:	ba 00 00 00 00       	mov    $0x0,%edxf0101c292973,134069
f0101c2e:	89 d8                	mov    %ebx,%eaxf0101c2e2974,134118
f0101c30:	e8 09 ee ff ff       	call   f0100a3e <check_va2pa>f0101c302975,134167
f0101c35:	89 c2                	mov    %eax,%edxf0101c352976,134229
f0101c37:	89 45 cc             	mov    %eax,-0x34(%ebp)f0101c372977,134278
f0101c3a:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0101c3a2978,134334
f0101c40:	89 f1                	mov    %esi,%ecxf0101c402979,134390
f0101c42:	2b 08                	sub    (%eax),%ecxf0101c422980,134439
f0101c44:	89 c8                	mov    %ecx,%eaxf0101c442981,134490
f0101c46:	c1 f8 03             	sar    $0x3,%eaxf0101c462982,134539
f0101c49:	c1 e0 0c             	shl    $0xc,%eaxf0101c492983,134588
f0101c4c:	39 c2                	cmp    %eax,%edxf0101c4c2984,134637
f0101c4e:	0f 85 cf 07 00 00    	jne    f0102423 <mem_init+0x1208>f0101c4e2985,134686
f0101c54:	ba 00 10 00 00       	mov    $0x1000,%edxf0101c542987,134810
f0101c59:	89 d8                	mov    %ebx,%eaxf0101c592988,134862
f0101c5b:	e8 de ed ff ff       	call   f0100a3e <check_va2pa>f0101c5b2989,134911
f0101c60:	39 45 cc             	cmp    %eax,-0x34(%ebp)f0101c602990,134973
f0101c63:	0f 85 db 07 00 00    	jne    f0102444 <mem_init+0x1229>f0101c632991,135029
f0101c69:	66 83 7e 04 02       	cmpw   $0x2,0x4(%esi)f0101c692994,135165
f0101c6e:	0f 85 f1 07 00 00    	jne    f0102465 <mem_init+0x124a>f0101c6e2995,135219
f0101c74:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101c742997,135312
f0101c77:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)f0101c772998,135368
f0101c7c:	0f 85 04 08 00 00    	jne    f0102486 <mem_init+0x126b>f0101c7c2999,135422
f0101c82:	83 ec 0c             	sub    $0xc,%espf0101c823003,135574
f0101c85:	6a 00                	push   $0x0f0101c853004,135623
f0101c87:	e8 a4 f2 ff ff       	call   f0100f30 <page_alloc>f0101c873005,135667
f0101c8c:	83 c4 10             	add    $0x10,%espf0101c8c3006,135728
f0101c8f:	85 c0                	test   %eax,%eaxf0101c8f3007,135778
f0101c91:	0f 84 10 08 00 00    	je     f01024a7 <mem_init+0x128c>f0101c913008,135827
f0101c97:	39 45 d4             	cmp    %eax,-0x2c(%ebp)f0101c973009,135893
f0101c9a:	0f 85 07 08 00 00    	jne    f01024a7 <mem_init+0x128c>f0101c9a3010,135949
f0101ca0:	83 ec 08             	sub    $0x8,%espf0101ca03014,136096
f0101ca3:	6a 00                	push   $0x0f0101ca33015,136145
f0101ca5:	c7 c3 cc 96 11 f0    	mov    $0xf01196cc,%ebxf0101ca53016,136189
f0101cab:	ff 33                	pushl  (%ebx)f0101cab3017,136245
f0101cad:	e8 c8 f4 ff ff       	call   f010117a <page_remove>f0101cad3018,136291
f0101cb2:	8b 1b                	mov    (%ebx),%ebxf0101cb23020,136398
f0101cb4:	ba 00 00 00 00       	mov    $0x0,%edxf0101cb43021,136449
f0101cb9:	89 d8                	mov    %ebx,%eaxf0101cb93022,136498
f0101cbb:	e8 7e ed ff ff       	call   f0100a3e <check_va2pa>f0101cbb3023,136547
f0101cc0:	83 c4 10             	add    $0x10,%espf0101cc03024,136609
f0101cc3:	83 f8 ff             	cmp    $0xffffffff,%eaxf0101cc33025,136659
f0101cc6:	0f 85 fc 07 00 00    	jne    f01024c8 <mem_init+0x12ad>f0101cc63026,136715
f0101ccc:	ba 00 10 00 00       	mov    $0x1000,%edxf0101ccc3028,136839
f0101cd1:	89 d8                	mov    %ebx,%eaxf0101cd13029,136891
f0101cd3:	e8 66 ed ff ff       	call   f0100a3e <check_va2pa>f0101cd33030,136940
f0101cd8:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf0101cd83031,137002
f0101cde:	89 f1                	mov    %esi,%ecxf0101cde3032,137058
f0101ce0:	2b 0a                	sub    (%edx),%ecxf0101ce03033,137107
f0101ce2:	89 ca                	mov    %ecx,%edxf0101ce23034,137158
f0101ce4:	c1 fa 03             	sar    $0x3,%edxf0101ce43035,137207
f0101ce7:	c1 e2 0c             	shl    $0xc,%edxf0101ce73036,137256
f0101cea:	39 d0                	cmp    %edx,%eaxf0101cea3037,137305
f0101cec:	0f 85 f7 07 00 00    	jne    f01024e9 <mem_init+0x12ce>f0101cec3038,137354
f0101cf2:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)f0101cf23040,137447
f0101cf7:	0f 85 0d 08 00 00    	jne    f010250a <mem_init+0x12ef>f0101cf73041,137501
f0101cfd:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101cfd3043,137594
f0101d00:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)f0101d003044,137650
f0101d05:	0f 85 20 08 00 00    	jne    f010252b <mem_init+0x1310>f0101d053045,137704
f0101d0b:	6a 00                	push   $0x0f0101d0b3049,137870
f0101d0d:	68 00 10 00 00       	push   $0x1000f0101d0d3050,137914
f0101d12:	56                   	push   %esif0101d123051,137961
f0101d13:	53                   	push   %ebxf0101d133052,138005
f0101d14:	e8 91 f4 ff ff       	call   f01011aa <page_insert>f0101d143053,138049
f0101d19:	83 c4 10             	add    $0x10,%espf0101d193054,138111
f0101d1c:	85 c0                	test   %eax,%eaxf0101d1c3055,138161
f0101d1e:	0f 85 28 08 00 00    	jne    f010254c <mem_init+0x1331>f0101d1e3056,138210
f0101d24:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)f0101d243058,138298
f0101d29:	0f 84 3e 08 00 00    	je     f010256d <mem_init+0x1352>f0101d293059,138352
f0101d2f:	83 3e 00             	cmpl   $0x0,(%esi)f0101d2f3061,138449
f0101d32:	0f 85 56 08 00 00    	jne    f010258e <mem_init+0x1373>f0101d323062,138500
f0101d38:	83 ec 08             	sub    $0x8,%espf0101d383066,138652
f0101d3b:	68 00 10 00 00       	push   $0x1000f0101d3b3067,138701
f0101d40:	c7 c3 cc 96 11 f0    	mov    $0xf01196cc,%ebxf0101d403068,138748
f0101d46:	ff 33                	pushl  (%ebx)f0101d463069,138804
f0101d48:	e8 2d f4 ff ff       	call   f010117a <page_remove>f0101d483070,138850
f0101d4d:	8b 1b                	mov    (%ebx),%ebxf0101d4d3072,138957
f0101d4f:	ba 00 00 00 00       	mov    $0x0,%edxf0101d4f3073,139008
f0101d54:	89 d8                	mov    %ebx,%eaxf0101d543074,139057
f0101d56:	e8 e3 ec ff ff       	call   f0100a3e <check_va2pa>f0101d563075,139106
f0101d5b:	83 c4 10             	add    $0x10,%espf0101d5b3076,139168
f0101d5e:	83 f8 ff             	cmp    $0xffffffff,%eaxf0101d5e3077,139218
f0101d61:	0f 85 48 08 00 00    	jne    f01025af <mem_init+0x1394>f0101d613078,139274
f0101d67:	ba 00 10 00 00       	mov    $0x1000,%edxf0101d673080,139388
f0101d6c:	89 d8                	mov    %ebx,%eaxf0101d6c3081,139440
f0101d6e:	e8 cb ec ff ff       	call   f0100a3e <check_va2pa>f0101d6e3082,139489
f0101d73:	83 f8 ff             	cmp    $0xffffffff,%eaxf0101d733083,139551
f0101d76:	0f 85 54 08 00 00    	jne    f01025d0 <mem_init+0x13b5>f0101d763084,139607
f0101d7c:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)f0101d7c3086,139700
f0101d81:	0f 85 6a 08 00 00    	jne    f01025f1 <mem_init+0x13d6>f0101d813087,139754
f0101d87:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101d873089,139847
f0101d8a:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)f0101d8a3090,139903
f0101d8f:	0f 85 7d 08 00 00    	jne    f0102612 <mem_init+0x13f7>f0101d8f3091,139957
f0101d95:	83 ec 0c             	sub    $0xc,%espf0101d953095,140111
f0101d98:	6a 00                	push   $0x0f0101d983096,140160
f0101d9a:	e8 91 f1 ff ff       	call   f0100f30 <page_alloc>f0101d9a3097,140204
f0101d9f:	83 c4 10             	add    $0x10,%espf0101d9f3098,140265
f0101da2:	39 c6                	cmp    %eax,%esif0101da23099,140315
f0101da4:	0f 85 89 08 00 00    	jne    f0102633 <mem_init+0x1418>f0101da43100,140364
f0101daa:	85 c0                	test   %eax,%eaxf0101daa3101,140430
f0101dac:	0f 84 81 08 00 00    	je     f0102633 <mem_init+0x1418>f0101dac3102,140479
f0101db2:	83 ec 0c             	sub    $0xc,%espf0101db23106,140600
f0101db5:	6a 00                	push   $0x0f0101db53107,140649
f0101db7:	e8 74 f1 ff ff       	call   f0100f30 <page_alloc>f0101db73108,140693
f0101dbc:	83 c4 10             	add    $0x10,%espf0101dbc3109,140754
f0101dbf:	85 c0                	test   %eax,%eaxf0101dbf3110,140804
f0101dc1:	0f 85 8d 08 00 00    	jne    f0102654 <mem_init+0x1439>f0101dc13111,140853
f0101dc7:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101dc73115,140997
f0101dcd:	8b 08                	mov    (%eax),%ecxf0101dcd3116,141053
f0101dcf:	8b 11                	mov    (%ecx),%edxf0101dcf3117,141104
f0101dd1:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf0101dd13118,141155
f0101dd7:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0101dd73119,141211
f0101ddd:	8b 5d d0             	mov    -0x30(%ebp),%ebxf0101ddd3120,141267
f0101de0:	2b 18                	sub    (%eax),%ebxf0101de03121,141323
f0101de2:	89 d8                	mov    %ebx,%eaxf0101de23122,141374
f0101de4:	c1 f8 03             	sar    $0x3,%eaxf0101de43123,141423
f0101de7:	c1 e0 0c             	shl    $0xc,%eaxf0101de73124,141472
f0101dea:	39 c2                	cmp    %eax,%edxf0101dea3125,141521
f0101dec:	0f 85 83 08 00 00    	jne    f0102675 <mem_init+0x145a>f0101dec3126,141570
f0101df2:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)f0101df23128,141656
f0101df8:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0101df83130,141734
f0101dfb:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)f0101dfb3131,141790
f0101e00:	0f 85 90 08 00 00    	jne    f0102696 <mem_init+0x147b>f0101e003132,141844
f0101e06:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0101e063134,141928
f0101e09:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)f0101e093135,141984
f0101e0f:	83 ec 0c             	sub    $0xc,%espf0101e0f3139,142099
f0101e12:	50                   	push   %eaxf0101e123140,142148
f0101e13:	e8 a6 f1 ff ff       	call   f0100fbe <page_free>f0101e133141,142192
	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);va3142,142252
	ptep = pgdir_walk(kern_pgdir, va, 1);ptep3143,142297
f0101e18:	83 c4 0c             	add    $0xc,%espf0101e183144,142336
f0101e1b:	6a 01                	push   $0x1f0101e1b3145,142385
f0101e1d:	68 00 10 40 00       	push   $0x401000f0101e1d3146,142429
f0101e22:	c7 c3 cc 96 11 f0    	mov    $0xf01196cc,%ebxf0101e223147,142478
f0101e28:	ff 33                	pushl  (%ebx)f0101e283148,142534
f0101e2a:	e8 24 f2 ff ff       	call   f0101053 <pgdir_walk>f0101e2a3149,142580
f0101e2f:	89 45 cc             	mov    %eax,-0x34(%ebp)f0101e2f3150,142641
f0101e32:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0101e323151,142697
	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));ptep13152,142753
f0101e35:	8b 1b                	mov    (%ebx),%ebxf0101e353153,142810
f0101e37:	8b 53 04             	mov    0x4(%ebx),%edxf0101e373154,142861
f0101e3a:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf0101e3a3155,142915
f0101e40:	c7 c1 c8 96 11 f0    	mov    $0xf01196c8,%ecxf0101e403157,142997
f0101e46:	8b 09                	mov    (%ecx),%ecxf0101e463158,143053
f0101e48:	89 d0                	mov    %edx,%eaxf0101e483159,143104
f0101e4a:	c1 e8 0c             	shr    $0xc,%eaxf0101e4a3160,143153
f0101e4d:	83 c4 10             	add    $0x10,%espf0101e4d3161,143202
f0101e50:	39 c8                	cmp    %ecx,%eaxf0101e503162,143252
f0101e52:	0f 83 5f 08 00 00    	jae    f01026b7 <mem_init+0x149c>f0101e523163,143301
f0101e58:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edxf0101e583165,143401
f0101e5e:	39 55 cc             	cmp    %edx,-0x34(%ebp)f0101e5e3166,143456
f0101e61:	0f 85 6b 08 00 00    	jne    f01026d2 <mem_init+0x14b7>f0101e613167,143512
f0101e67:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)f0101e673169,143604
f0101e6e:	8b 5d d0             	mov    -0x30(%ebp),%ebxf0101e6e3171,143676
f0101e71:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)f0101e713172,143732
f0101e77:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0101e773174,143819
f0101e7d:	2b 18                	sub    (%eax),%ebxf0101e7d3175,143875
f0101e7f:	89 d8                	mov    %ebx,%eaxf0101e7f3176,143926
f0101e81:	c1 f8 03             	sar    $0x3,%eaxf0101e813177,143975
f0101e84:	c1 e0 0c             	shl    $0xc,%eaxf0101e843178,144024
f0101e87:	89 c2                	mov    %eax,%edxf0101e873180,144099
f0101e89:	c1 ea 0c             	shr    $0xc,%edxf0101e893181,144148
f0101e8c:	39 d1                	cmp    %edx,%ecxf0101e8c3182,144197
f0101e8e:	0f 86 5f 08 00 00    	jbe    f01026f3 <mem_init+0x14d8>f0101e8e3183,144246
f0101e94:	83 ec 04             	sub    $0x4,%espf0101e943187,144394
f0101e97:	68 00 10 00 00       	push   $0x1000f0101e973188,144443
f0101e9c:	68 ff 00 00 00       	push   $0xfff0101e9c3189,144490
f0101ea1:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0101ea13191,144568
f0101ea6:	50                   	push   %eaxf0101ea63192,144624
f0101ea7:	89 fb                	mov    %edi,%ebxf0101ea73193,144668
f0101ea9:	e8 df 1a 00 00       	call   f010398d <memset>f0101ea93194,144717
f0101eae:	8b 5d d0             	mov    -0x30(%ebp),%ebxf0101eae3196,144791
f0101eb1:	89 1c 24             	mov    %ebx,(%esp)f0101eb13197,144847
f0101eb4:	e8 05 f1 ff ff       	call   f0100fbe <page_free>f0101eb43198,144898
f0101eb9:	83 c4 0c             	add    $0xc,%espf0101eb93200,144991
f0101ebc:	6a 01                	push   $0x1f0101ebc3201,145040
f0101ebe:	6a 00                	push   $0x0f0101ebe3202,145084
f0101ec0:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101ec03203,145128
f0101ec6:	ff 30                	pushl  (%eax)f0101ec63204,145184
f0101ec8:	e8 86 f1 ff ff       	call   f0101053 <pgdir_walk>f0101ec83205,145230
f0101ecd:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0101ecd3207,145324
f0101ed3:	2b 18                	sub    (%eax),%ebxf0101ed33208,145380
f0101ed5:	89 da                	mov    %ebx,%edxf0101ed53209,145431
f0101ed7:	c1 fa 03             	sar    $0x3,%edxf0101ed73210,145480
f0101eda:	c1 e2 0c             	shl    $0xc,%edxf0101eda3211,145529
f0101edd:	89 d1                	mov    %edx,%ecxf0101edd3213,145604
f0101edf:	c1 e9 0c             	shr    $0xc,%ecxf0101edf3214,145653
f0101ee2:	83 c4 10             	add    $0x10,%espf0101ee23215,145702
f0101ee5:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf0101ee53216,145752
f0101eeb:	3b 08                	cmp    (%eax),%ecxf0101eeb3217,145808
f0101eed:	0f 83 18 08 00 00    	jae    f010270b <mem_init+0x14f0>f0101eed3218,145859
f0101ef3:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eaxf0101ef33220,145958
	ptep = (pte_t *) page2kva(pp0);ptep3221,146020
f0101ef9:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0101ef93222,146053
f0101efc:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edxf0101efc3223,146109
f0101f02:	f6 00 01             	testb  $0x1,(%eax)f0101f023226,146227
f0101f05:	0f 85 18 08 00 00    	jne    f0102723 <mem_init+0x1508>f0101f053227,146278
f0101f0b:	83 c0 04             	add    $0x4,%eaxf0101f0b3228,146344
f0101f0e:	39 d0                	cmp    %edx,%eaxf0101f0e3230,146422
f0101f10:	75 f0                	jne    f0101f02 <mem_init+0xce7>f0101f103231,146471
f0101f12:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101f123233,146556
f0101f18:	89 45 cc             	mov    %eax,-0x34(%ebp)f0101f183234,146612
f0101f1b:	8b 00                	mov    (%eax),%eaxf0101f1b3235,146668
f0101f1d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)f0101f1d3236,146719
f0101f23:	8b 4d d0             	mov    -0x30(%ebp),%ecxf0101f233238,146788
f0101f26:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)f0101f263239,146844
	page_free_list = fl;page_free_list3242,146923
f0101f2c:	8b 5d c8             	mov    -0x38(%ebp),%ebxf0101f2c3243,146945
f0101f2f:	89 9f 90 1f 00 00    	mov    %ebx,0x1f90(%edi)f0101f2f3244,147001
f0101f35:	83 ec 0c             	sub    $0xc,%espf0101f353248,147103
f0101f38:	51                   	push   %ecxf0101f383249,147152
f0101f39:	e8 80 f0 ff ff       	call   f0100fbe <page_free>f0101f393250,147196
f0101f3e:	89 34 24             	mov    %esi,(%esp)f0101f3e3252,147273
f0101f41:	e8 78 f0 ff ff       	call   f0100fbe <page_free>f0101f413253,147324
f0101f46:	83 c4 04             	add    $0x4,%espf0101f463255,147401
f0101f49:	ff 75 d4             	pushl  -0x2c(%ebp)f0101f493256,147450
f0101f4c:	e8 6d f0 ff ff       	call   f0100fbe <page_free>f0101f4c3257,147501
f0101f51:	8d 87 ea d9 fe ff    	lea    -0x12616(%edi),%eaxf0101f513260,147601
f0101f57:	89 04 24             	mov    %eax,(%esp)f0101f573261,147660
f0101f5a:	89 fb                	mov    %edi,%ebxf0101f5a3262,147711
f0101f5c:	e8 d0 0e 00 00       	call   f0102e31 <cprintf>f0101f5c3263,147760
	pgdir = kern_pgdir;pgdir3264,147818
f0101f61:	8b 45 cc             	mov    -0x34(%ebp),%eaxf0101f613265,147839
f0101f64:	8b 18                	mov    (%eax),%ebxf0101f643266,147895
	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);n3267,147946
f0101f66:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf0101f663268,148000
f0101f6c:	8b 00                	mov    (%eax),%eaxf0101f6c3269,148056
f0101f6e:	89 45 c8             	mov    %eax,-0x38(%ebp)f0101f6e3270,148107
f0101f71:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eaxf0101f713271,148163
f0101f78:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf0101f783272,148222
f0101f7d:	89 45 d4             	mov    %eax,-0x2c(%ebp)f0101f7d3273,148278
f0101f80:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0101f803275,148396
f0101f86:	8b 00                	mov    (%eax),%eaxf0101f863276,148452
f0101f88:	89 45 c4             	mov    %eax,-0x3c(%ebp)f0101f883277,148503
f0101f8b:	89 45 cc             	mov    %eax,-0x34(%ebp)f0101f8b3279,148590
f0101f8e:	05 00 00 00 10       	add    $0x10000000,%eaxf0101f8e3281,148682
f0101f93:	83 c4 10             	add    $0x10,%espf0101f933282,148738
f0101f96:	be 00 00 00 00       	mov    $0x0,%esif0101f963284,148821
f0101f9b:	89 5d d0             	mov    %ebx,-0x30(%ebp)f0101f9b3285,148870
f0101f9e:	89 c3                	mov    %eax,%ebxf0101f9e3286,148926
f0101fa0:	39 75 d4             	cmp    %esi,-0x2c(%ebp)f0101fa03287,148975
f0101fa3:	0f 86 d9 07 00 00    	jbe    f0102782 <mem_init+0x1567>f0101fa33288,149031
f0101fa9:	8d 96 00 00 00 ef    	lea    -0x11000000(%esi),%edxf0101fa93290,149159
f0101faf:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0101faf3291,149221
f0101fb2:	e8 87 ea ff ff       	call   f0100a3e <check_va2pa>f0101fb23292,149277
f0101fb7:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)f0101fb73294,149370
f0101fbe:	0f 86 80 07 00 00    	jbe    f0102744 <mem_init+0x1529>f0101fbe3295,149433
f0101fc4:	8d 14 1e             	lea    (%esi,%ebx,1),%edxf0101fc43296,149499
f0101fc7:	39 d0                	cmp    %edx,%eaxf0101fc73297,149557
f0101fc9:	0f 85 92 07 00 00    	jne    f0102761 <mem_init+0x1546>f0101fc93298,149606
f0101fcf:	81 c6 00 10 00 00    	add    $0x1000,%esif0101fcf3300,149705
f0101fd5:	eb c9                	jmp    f0101fa0 <mem_init+0xd85>f0101fd53301,149757
f0101fd7:	8d 87 13 d9 fe ff    	lea    -0x126ed(%edi),%eaxf0101fd73303,149843
f0101fdd:	50                   	push   %eaxf0101fdd3304,149902
f0101fde:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf0101fde3305,149946
f0101fe4:	50                   	push   %eaxf0101fe43306,150005
f0101fe5:	68 7f 02 00 00       	push   $0x27ff0101fe53307,150049
f0101fea:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf0101fea3308,150095
f0101ff0:	50                   	push   %eaxf0101ff03309,150154
f0101ff1:	89 fb                	mov    %edi,%ebxf0101ff13310,150198
f0101ff3:	e8 a1 e0 ff ff       	call   f0100099 <_panic>f0101ff33311,150247
f0101ff8:	8d 87 21 d8 fe ff    	lea    -0x127df(%edi),%eaxf0101ff83313,150336
f0101ffe:	50                   	push   %eaxf0101ffe3314,150395
f0101fff:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf0101fff3315,150439
f0102005:	50                   	push   %eaxf01020053316,150498
f0102006:	68 d8 02 00 00       	push   $0x2d8f01020063317,150542
f010200b:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010200b3318,150588
f0102011:	50                   	push   %eaxf01020113319,150647
f0102012:	e8 82 e0 ff ff       	call   f0100099 <_panic>f01020123320,150691
f0102017:	8d 87 37 d8 fe ff    	lea    -0x127c9(%edi),%eaxf01020173322,150780
f010201d:	50                   	push   %eaxf010201d3323,150839
f010201e:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010201e3324,150883
f0102024:	50                   	push   %eaxf01020243325,150942
f0102025:	68 d9 02 00 00       	push   $0x2d9f01020253326,150986
f010202a:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010202a3327,151032
f0102030:	50                   	push   %eaxf01020303328,151091
f0102031:	e8 63 e0 ff ff       	call   f0100099 <_panic>f01020313329,151135
f0102036:	8d 87 4d d8 fe ff    	lea    -0x127b3(%edi),%eaxf01020363331,151224
f010203c:	50                   	push   %eaxf010203c3332,151283
f010203d:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010203d3333,151327
f0102043:	50                   	push   %eaxf01020433334,151386
f0102044:	68 da 02 00 00       	push   $0x2daf01020443335,151430
f0102049:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01020493336,151476
f010204f:	50                   	push   %eaxf010204f3337,151535
f0102050:	e8 44 e0 ff ff       	call   f0100099 <_panic>f01020503338,151579
f0102055:	8d 87 63 d8 fe ff    	lea    -0x1279d(%edi),%eaxf01020553340,151664
f010205b:	50                   	push   %eaxf010205b3341,151723
f010205c:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010205c3342,151767
f0102062:	50                   	push   %eaxf01020623343,151826
f0102063:	68 dd 02 00 00       	push   $0x2ddf01020633344,151870
f0102068:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01020683345,151916
f010206e:	50                   	push   %eaxf010206e3346,151975
f010206f:	e8 25 e0 ff ff       	call   f0100099 <_panic>f010206f3347,152019
f0102074:	8d 87 64 d1 fe ff    	lea    -0x12e9c(%edi),%eaxf01020743349,152118
f010207a:	50                   	push   %eaxf010207a3350,152177
f010207b:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010207b3351,152221
f0102081:	50                   	push   %eaxf01020813352,152280
f0102082:	68 de 02 00 00       	push   $0x2def01020823353,152324
f0102087:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01020873354,152370
f010208d:	50                   	push   %eaxf010208d3355,152429
f010208e:	89 fb                	mov    %edi,%ebxf010208e3356,152473
f0102090:	e8 04 e0 ff ff       	call   f0100099 <_panic>f01020903357,152522
f0102095:	8d 87 cc d8 fe ff    	lea    -0x12734(%edi),%eaxf01020953359,152604
f010209b:	50                   	push   %eaxf010209b3360,152663
f010209c:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010209c3361,152707
f01020a2:	50                   	push   %eaxf01020a23362,152766
f01020a3:	68 e5 02 00 00       	push   $0x2e5f01020a33363,152810
f01020a8:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01020a83364,152856
f01020ae:	50                   	push   %eaxf01020ae3365,152915
f01020af:	e8 e5 df ff ff       	call   f0100099 <_panic>f01020af3366,152959
f01020b4:	8d 87 a4 d1 fe ff    	lea    -0x12e5c(%edi),%eaxf01020b43368,153079
f01020ba:	50                   	push   %eaxf01020ba3369,153138
f01020bb:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01020bb3370,153182
f01020c1:	50                   	push   %eaxf01020c13371,153241
f01020c2:	68 e8 02 00 00       	push   $0x2e8f01020c23372,153285
f01020c7:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01020c73373,153331
f01020cd:	50                   	push   %eaxf01020cd3374,153390
f01020ce:	e8 c6 df ff ff       	call   f0100099 <_panic>f01020ce3375,153434
f01020d3:	8d 87 dc d1 fe ff    	lea    -0x12e24(%edi),%eaxf01020d33377,153546
f01020d9:	50                   	push   %eaxf01020d93378,153605
f01020da:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01020da3379,153649
f01020e0:	50                   	push   %eaxf01020e03380,153708
f01020e1:	68 eb 02 00 00       	push   $0x2ebf01020e13381,153752
f01020e6:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01020e63382,153798
f01020ec:	50                   	push   %eaxf01020ec3383,153857
f01020ed:	e8 a7 df ff ff       	call   f0100099 <_panic>f01020ed3384,153901
f01020f2:	8d 87 0c d2 fe ff    	lea    -0x12df4(%edi),%eaxf01020f23386,154014
f01020f8:	50                   	push   %eaxf01020f83387,154073
f01020f9:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01020f93388,154117
f01020ff:	50                   	push   %eaxf01020ff3389,154176
f0102100:	68 ef 02 00 00       	push   $0x2eff01021003390,154220
f0102105:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01021053391,154266
f010210b:	50                   	push   %eaxf010210b3392,154325
f010210c:	e8 88 df ff ff       	call   f0100099 <_panic>f010210c3393,154369
f0102111:	8d 87 3c d2 fe ff    	lea    -0x12dc4(%edi),%eaxf01021113395,154476
f0102117:	50                   	push   %eaxf01021173396,154535
f0102118:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01021183397,154579
f010211e:	50                   	push   %eaxf010211e3398,154638
f010211f:	68 f0 02 00 00       	push   $0x2f0f010211f3399,154682
f0102124:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01021243400,154728
f010212a:	50                   	push   %eaxf010212a3401,154787
f010212b:	89 fb                	mov    %edi,%ebxf010212b3402,154831
f010212d:	e8 67 df ff ff       	call   f0100099 <_panic>f010212d3403,154880
f0102132:	8d 87 64 d2 fe ff    	lea    -0x12d9c(%edi),%eaxf01021323405,154992
f0102138:	50                   	push   %eaxf01021383406,155051
f0102139:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01021393407,155095
f010213f:	50                   	push   %eaxf010213f3408,155154
f0102140:	68 f1 02 00 00       	push   $0x2f1f01021403409,155198
f0102145:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01021453410,155244
f010214b:	50                   	push   %eaxf010214b3411,155303
f010214c:	89 fb                	mov    %edi,%ebxf010214c3412,155347
f010214e:	e8 46 df ff ff       	call   f0100099 <_panic>f010214e3413,155396
f0102153:	8d 87 1e d9 fe ff    	lea    -0x126e2(%edi),%eaxf01021533415,155480
f0102159:	50                   	push   %eaxf01021593416,155539
f010215a:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010215a3417,155583
f0102160:	50                   	push   %eaxf01021603418,155642
f0102161:	68 f2 02 00 00       	push   $0x2f2f01021613419,155686
f0102166:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01021663420,155732
f010216c:	50                   	push   %eaxf010216c3421,155791
f010216d:	89 fb                	mov    %edi,%ebxf010216d3422,155835
f010216f:	e8 25 df ff ff       	call   f0100099 <_panic>f010216f3423,155884
f0102174:	8d 87 2f d9 fe ff    	lea    -0x126d1(%edi),%eaxf01021743425,155968
f010217a:	50                   	push   %eaxf010217a3426,156027
f010217b:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010217b3427,156071
f0102181:	50                   	push   %eaxf01021813428,156130
f0102182:	68 f3 02 00 00       	push   $0x2f3f01021823429,156174
f0102187:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01021873430,156220
f010218d:	50                   	push   %eaxf010218d3431,156279
f010218e:	89 fb                	mov    %edi,%ebxf010218e3432,156323
f0102190:	e8 04 df ff ff       	call   f0100099 <_panic>f01021903433,156372
f0102195:	8d 87 94 d2 fe ff    	lea    -0x12d6c(%edi),%eaxf01021953435,156496
f010219b:	50                   	push   %eaxf010219b3436,156555
f010219c:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010219c3437,156599
f01021a2:	50                   	push   %eaxf01021a23438,156658
f01021a3:	68 f6 02 00 00       	push   $0x2f6f01021a33439,156702
f01021a8:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01021a83440,156748
f01021ae:	50                   	push   %eaxf01021ae3441,156807
f01021af:	89 fb                	mov    %edi,%ebxf01021af3442,156851
f01021b1:	e8 e3 de ff ff       	call   f0100099 <_panic>f01021b13443,156900
f01021b6:	8d 87 d0 d2 fe ff    	lea    -0x12d30(%edi),%eaxf01021b63445,157015
f01021bc:	50                   	push   %eaxf01021bc3446,157074
f01021bd:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01021bd3447,157118
f01021c3:	50                   	push   %eaxf01021c33448,157177
f01021c4:	68 f7 02 00 00       	push   $0x2f7f01021c43449,157221
f01021c9:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01021c93450,157267
f01021cf:	50                   	push   %eaxf01021cf3451,157326
f01021d0:	89 fb                	mov    %edi,%ebxf01021d03452,157370
f01021d2:	e8 c2 de ff ff       	call   f0100099 <_panic>f01021d23453,157419
f01021d7:	8d 87 cc d8 fe ff    	lea    -0x12734(%edi),%eaxf01021d73455,157501
f01021dd:	50                   	push   %eaxf01021dd3456,157560
f01021de:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01021de3457,157604
f01021e4:	50                   	push   %eaxf01021e43458,157663
f01021e5:	68 fa 02 00 00       	push   $0x2faf01021e53459,157707
f01021ea:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01021ea3460,157753
f01021f0:	50                   	push   %eaxf01021f03461,157812
f01021f1:	89 fb                	mov    %edi,%ebxf01021f13462,157856
f01021f3:	e8 a1 de ff ff       	call   f0100099 <_panic>f01021f33463,157905
f01021f8:	8d 87 94 d2 fe ff    	lea    -0x12d6c(%edi),%eaxf01021f83465,158029
f01021fe:	50                   	push   %eaxf01021fe3466,158088
f01021ff:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01021ff3467,158132
f0102205:	50                   	push   %eaxf01022053468,158191
f0102206:	68 fd 02 00 00       	push   $0x2fdf01022063469,158235
f010220b:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010220b3470,158281
f0102211:	50                   	push   %eaxf01022113471,158340
f0102212:	89 fb                	mov    %edi,%ebxf01022123472,158384
f0102214:	e8 80 de ff ff       	call   f0100099 <_panic>f01022143473,158433
f0102219:	8d 87 d0 d2 fe ff    	lea    -0x12d30(%edi),%eaxf01022193475,158548
f010221f:	50                   	push   %eaxf010221f3476,158607
f0102220:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01022203477,158651
f0102226:	50                   	push   %eaxf01022263478,158710
f0102227:	68 fe 02 00 00       	push   $0x2fef01022273479,158754
f010222c:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010222c3480,158800
f0102232:	50                   	push   %eaxf01022323481,158859
f0102233:	89 fb                	mov    %edi,%ebxf01022333482,158903
f0102235:	e8 5f de ff ff       	call   f0100099 <_panic>f01022353483,158952
f010223a:	8d 87 40 d9 fe ff    	lea    -0x126c0(%edi),%eaxf010223a3485,159036
f0102240:	50                   	push   %eaxf01022403486,159095
f0102241:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01022413487,159139
f0102247:	50                   	push   %eaxf01022473488,159198
f0102248:	68 ff 02 00 00       	push   $0x2fff01022483489,159242
f010224d:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010224d3490,159288
f0102253:	50                   	push   %eaxf01022533491,159347
f0102254:	89 fb                	mov    %edi,%ebxf01022543492,159391
f0102256:	e8 3e de ff ff       	call   f0100099 <_panic>f01022563493,159440
f010225b:	8d 87 cc d8 fe ff    	lea    -0x12734(%edi),%eaxf010225b3495,159522
f0102261:	50                   	push   %eaxf01022613496,159581
f0102262:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01022623497,159625
f0102268:	50                   	push   %eaxf01022683498,159684
f0102269:	68 03 03 00 00       	push   $0x303f01022693499,159728
f010226e:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010226e3500,159774
f0102274:	50                   	push   %eaxf01022743501,159833
f0102275:	89 fb                	mov    %edi,%ebxf01022753502,159877
f0102277:	e8 1d de ff ff       	call   f0100099 <_panic>f01022773503,159926
f010227c:	50                   	push   %eaxf010227c3505,160047
f010227d:	8d 87 84 cf fe ff    	lea    -0x1307c(%edi),%eaxf010227d3506,160091
f0102283:	50                   	push   %eaxf01022833507,160150
f0102284:	68 06 03 00 00       	push   $0x306f01022843508,160194
f0102289:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01022893509,160240
f010228f:	50                   	push   %eaxf010228f3510,160299
f0102290:	89 fb                	mov    %edi,%ebxf01022903511,160343
f0102292:	e8 02 de ff ff       	call   f0100099 <_panic>f01022923512,160392
f0102297:	8d 87 00 d3 fe ff    	lea    -0x12d00(%edi),%eaxf01022973514,160520
f010229d:	50                   	push   %eaxf010229d3515,160579
f010229e:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010229e3516,160623
f01022a4:	50                   	push   %eaxf01022a43517,160682
f01022a5:	68 07 03 00 00       	push   $0x307f01022a53518,160726
f01022aa:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01022aa3519,160772
f01022b0:	50                   	push   %eaxf01022b03520,160831
f01022b1:	89 fb                	mov    %edi,%ebxf01022b13521,160875
f01022b3:	e8 e1 dd ff ff       	call   f0100099 <_panic>f01022b33522,160924
f01022b8:	8d 87 40 d3 fe ff    	lea    -0x12cc0(%edi),%eaxf01022b83524,161054
f01022be:	50                   	push   %eaxf01022be3525,161113
f01022bf:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01022bf3526,161157
f01022c5:	50                   	push   %eaxf01022c53527,161216
f01022c6:	68 0a 03 00 00       	push   $0x30af01022c63528,161260
f01022cb:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01022cb3529,161306
f01022d1:	50                   	push   %eaxf01022d13530,161365
f01022d2:	89 fb                	mov    %edi,%ebxf01022d23531,161409
f01022d4:	e8 c0 dd ff ff       	call   f0100099 <_panic>f01022d43532,161458
f01022d9:	8d 87 d0 d2 fe ff    	lea    -0x12d30(%edi),%eaxf01022d93534,161573
f01022df:	50                   	push   %eaxf01022df3535,161632
f01022e0:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01022e03536,161676
f01022e6:	50                   	push   %eaxf01022e63537,161735
f01022e7:	68 0b 03 00 00       	push   $0x30bf01022e73538,161779
f01022ec:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01022ec3539,161825
f01022f2:	50                   	push   %eaxf01022f23540,161884
f01022f3:	89 fb                	mov    %edi,%ebxf01022f33541,161928
f01022f5:	e8 9f dd ff ff       	call   f0100099 <_panic>f01022f53542,161977
f01022fa:	8d 87 40 d9 fe ff    	lea    -0x126c0(%edi),%eaxf01022fa3544,162061
f0102300:	50                   	push   %eaxf01023003545,162120
f0102301:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01023013546,162164
f0102307:	50                   	push   %eaxf01023073547,162223
f0102308:	68 0c 03 00 00       	push   $0x30cf01023083548,162267
f010230d:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010230d3549,162313
f0102313:	50                   	push   %eaxf01023133550,162372
f0102314:	89 fb                	mov    %edi,%ebxf01023143551,162416
f0102316:	e8 7e dd ff ff       	call   f0100099 <_panic>f01023163552,162465
f010231b:	8d 87 80 d3 fe ff    	lea    -0x12c80(%edi),%eaxf010231b3554,162583
f0102321:	50                   	push   %eaxf01023213555,162642
f0102322:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01023223556,162686
f0102328:	50                   	push   %eaxf01023283557,162745
f0102329:	68 0d 03 00 00       	push   $0x30df01023293558,162789
f010232e:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010232e3559,162835
f0102334:	50                   	push   %eaxf01023343560,162894
f0102335:	89 fb                	mov    %edi,%ebxf01023353561,162938
f0102337:	e8 5d dd ff ff       	call   f0100099 <_panic>f01023373562,162987
f010233c:	8d 87 51 d9 fe ff    	lea    -0x126af(%edi),%eaxf010233c3564,163076
f0102342:	50                   	push   %eaxf01023423565,163135
f0102343:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01023433566,163179
f0102349:	50                   	push   %eaxf01023493567,163238
f010234a:	68 0e 03 00 00       	push   $0x30ef010234a3568,163282
f010234f:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010234f3569,163328
f0102355:	50                   	push   %eaxf01023553570,163387
f0102356:	89 fb                	mov    %edi,%ebxf01023563571,163431
f0102358:	e8 3c dd ff ff       	call   f0100099 <_panic>f01023583572,163480
f010235d:	8d 87 94 d2 fe ff    	lea    -0x12d6c(%edi),%eaxf010235d3574,163604
f0102363:	50                   	push   %eaxf01023633575,163663
f0102364:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01023643576,163707
f010236a:	50                   	push   %eaxf010236a3577,163766
f010236b:	68 11 03 00 00       	push   $0x311f010236b3578,163810
f0102370:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01023703579,163856
f0102376:	50                   	push   %eaxf01023763580,163915
f0102377:	89 fb                	mov    %edi,%ebxf01023773581,163959
f0102379:	e8 1b dd ff ff       	call   f0100099 <_panic>f01023793582,164008
f010237e:	8d 87 b4 d3 fe ff    	lea    -0x12c4c(%edi),%eaxf010237e3584,164126
f0102384:	50                   	push   %eaxf01023843585,164185
f0102385:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01023853586,164229
f010238b:	50                   	push   %eaxf010238b3587,164288
f010238c:	68 12 03 00 00       	push   $0x312f010238c3588,164332
f0102391:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01023913589,164378
f0102397:	50                   	push   %eaxf01023973590,164437
f0102398:	89 fb                	mov    %edi,%ebxf01023983591,164481
f010239a:	e8 fa dc ff ff       	call   f0100099 <_panic>f010239a3592,164530
f010239f:	8d 87 e8 d3 fe ff    	lea    -0x12c18(%edi),%eaxf010239f3594,164651
f01023a5:	50                   	push   %eaxf01023a53595,164710
f01023a6:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01023a63596,164754
f01023ac:	50                   	push   %eaxf01023ac3597,164813
f01023ad:	68 13 03 00 00       	push   $0x313f01023ad3598,164857
f01023b2:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01023b23599,164903
f01023b8:	50                   	push   %eaxf01023b83600,164962
f01023b9:	89 fb                	mov    %edi,%ebxf01023b93601,165006
f01023bb:	e8 d9 dc ff ff       	call   f0100099 <_panic>f01023bb3602,165055
f01023c0:	8d 87 20 d4 fe ff    	lea    -0x12be0(%edi),%eaxf01023c03604,165178
f01023c6:	50                   	push   %eaxf01023c63605,165237
f01023c7:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01023c73606,165281
f01023cd:	50                   	push   %eaxf01023cd3607,165340
f01023ce:	68 16 03 00 00       	push   $0x316f01023ce3608,165384
f01023d3:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01023d33609,165430
f01023d9:	50                   	push   %eaxf01023d93610,165489
f01023da:	89 fb                	mov    %edi,%ebxf01023da3611,165533
f01023dc:	e8 b8 dc ff ff       	call   f0100099 <_panic>f01023dc3612,165582
f01023e1:	8d 87 58 d4 fe ff    	lea    -0x12ba8(%edi),%eaxf01023e13614,165706
f01023e7:	50                   	push   %eaxf01023e73615,165765
f01023e8:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01023e83616,165809
f01023ee:	50                   	push   %eaxf01023ee3617,165868
f01023ef:	68 19 03 00 00       	push   $0x319f01023ef3618,165912
f01023f4:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01023f43619,165958
f01023fa:	50                   	push   %eaxf01023fa3620,166017
f01023fb:	89 fb                	mov    %edi,%ebxf01023fb3621,166061
f01023fd:	e8 97 dc ff ff       	call   f0100099 <_panic>f01023fd3622,166110
f0102402:	8d 87 e8 d3 fe ff    	lea    -0x12c18(%edi),%eaxf01024023624,166231
f0102408:	50                   	push   %eaxf01024083625,166290
f0102409:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01024093626,166334
f010240f:	50                   	push   %eaxf010240f3627,166393
f0102410:	68 1a 03 00 00       	push   $0x31af01024103628,166437
f0102415:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01024153629,166483
f010241b:	50                   	push   %eaxf010241b3630,166542
f010241c:	89 fb                	mov    %edi,%ebxf010241c3631,166586
f010241e:	e8 76 dc ff ff       	call   f0100099 <_panic>f010241e3632,166635
f0102423:	8d 87 94 d4 fe ff    	lea    -0x12b6c(%edi),%eaxf01024233634,166745
f0102429:	50                   	push   %eaxf01024293635,166804
f010242a:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010242a3636,166848
f0102430:	50                   	push   %eaxf01024303637,166907
f0102431:	68 1d 03 00 00       	push   $0x31df01024313638,166951
f0102436:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01024363639,166997
f010243c:	50                   	push   %eaxf010243c3640,167056
f010243d:	89 fb                	mov    %edi,%ebxf010243d3641,167100
f010243f:	e8 55 dc ff ff       	call   f0100099 <_panic>f010243f3642,167149
f0102444:	8d 87 c0 d4 fe ff    	lea    -0x12b40(%edi),%eaxf01024443644,167264
f010244a:	50                   	push   %eaxf010244a3645,167323
f010244b:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010244b3646,167367
f0102451:	50                   	push   %eaxf01024513647,167426
f0102452:	68 1e 03 00 00       	push   $0x31ef01024523648,167470
f0102457:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01024573649,167516
f010245d:	50                   	push   %eaxf010245d3650,167575
f010245e:	89 fb                	mov    %edi,%ebxf010245e3651,167619
f0102460:	e8 34 dc ff ff       	call   f0100099 <_panic>f01024603652,167668
f0102465:	8d 87 67 d9 fe ff    	lea    -0x12699(%edi),%eaxf01024653654,167752
f010246b:	50                   	push   %eaxf010246b3655,167811
f010246c:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010246c3656,167855
f0102472:	50                   	push   %eaxf01024723657,167914
f0102473:	68 20 03 00 00       	push   $0x320f01024733658,167958
f0102478:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01024783659,168004
f010247e:	50                   	push   %eaxf010247e3660,168063
f010247f:	89 fb                	mov    %edi,%ebxf010247f3661,168107
f0102481:	e8 13 dc ff ff       	call   f0100099 <_panic>f01024813662,168156
f0102486:	8d 87 78 d9 fe ff    	lea    -0x12688(%edi),%eaxf01024863664,168240
f010248c:	50                   	push   %eaxf010248c3665,168299
f010248d:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010248d3666,168343
f0102493:	50                   	push   %eaxf01024933667,168402
f0102494:	68 21 03 00 00       	push   $0x321f01024943668,168446
f0102499:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01024993669,168492
f010249f:	50                   	push   %eaxf010249f3670,168551
f01024a0:	89 fb                	mov    %edi,%ebxf01024a03671,168595
f01024a2:	e8 f2 db ff ff       	call   f0100099 <_panic>f01024a23672,168644
f01024a7:	8d 87 f0 d4 fe ff    	lea    -0x12b10(%edi),%eaxf01024a73674,168745
f01024ad:	50                   	push   %eaxf01024ad3675,168804
f01024ae:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01024ae3676,168848
f01024b4:	50                   	push   %eaxf01024b43677,168907
f01024b5:	68 24 03 00 00       	push   $0x324f01024b53678,168951
f01024ba:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01024ba3679,168997
f01024c0:	50                   	push   %eaxf01024c03680,169056
f01024c1:	89 fb                	mov    %edi,%ebxf01024c13681,169100
f01024c3:	e8 d1 db ff ff       	call   f0100099 <_panic>f01024c33682,169149
f01024c8:	8d 87 14 d5 fe ff    	lea    -0x12aec(%edi),%eaxf01024c83684,169251
f01024ce:	50                   	push   %eaxf01024ce3685,169310
f01024cf:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01024cf3686,169354
f01024d5:	50                   	push   %eaxf01024d53687,169413
f01024d6:	68 28 03 00 00       	push   $0x328f01024d63688,169457
f01024db:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01024db3689,169503
f01024e1:	50                   	push   %eaxf01024e13690,169562
f01024e2:	89 fb                	mov    %edi,%ebxf01024e23691,169606
f01024e4:	e8 b0 db ff ff       	call   f0100099 <_panic>f01024e43692,169655
f01024e9:	8d 87 c0 d4 fe ff    	lea    -0x12b40(%edi),%eaxf01024e93694,169770
f01024ef:	50                   	push   %eaxf01024ef3695,169829
f01024f0:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01024f03696,169873
f01024f6:	50                   	push   %eaxf01024f63697,169932
f01024f7:	68 29 03 00 00       	push   $0x329f01024f73698,169976
f01024fc:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01024fc3699,170022
f0102502:	50                   	push   %eaxf01025023700,170081
f0102503:	89 fb                	mov    %edi,%ebxf01025033701,170125
f0102505:	e8 8f db ff ff       	call   f0100099 <_panic>f01025053702,170174
f010250a:	8d 87 1e d9 fe ff    	lea    -0x126e2(%edi),%eaxf010250a3704,170258
f0102510:	50                   	push   %eaxf01025103705,170317
f0102511:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01025113706,170361
f0102517:	50                   	push   %eaxf01025173707,170420
f0102518:	68 2a 03 00 00       	push   $0x32af01025183708,170464
f010251d:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010251d3709,170510
f0102523:	50                   	push   %eaxf01025233710,170569
f0102524:	89 fb                	mov    %edi,%ebxf01025243711,170613
f0102526:	e8 6e db ff ff       	call   f0100099 <_panic>f01025263712,170662
f010252b:	8d 87 78 d9 fe ff    	lea    -0x12688(%edi),%eaxf010252b3714,170746
f0102531:	50                   	push   %eaxf01025313715,170805
f0102532:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01025323716,170849
f0102538:	50                   	push   %eaxf01025383717,170908
f0102539:	68 2b 03 00 00       	push   $0x32bf01025393718,170952
f010253e:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010253e3719,170998
f0102544:	50                   	push   %eaxf01025443720,171057
f0102545:	89 fb                	mov    %edi,%ebxf01025453721,171101
f0102547:	e8 4d db ff ff       	call   f0100099 <_panic>f01025473722,171150
f010254c:	8d 87 38 d5 fe ff    	lea    -0x12ac8(%edi),%eaxf010254c3724,171270
f0102552:	50                   	push   %eaxf01025523725,171329
f0102553:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01025533726,171373
f0102559:	50                   	push   %eaxf01025593727,171432
f010255a:	68 2e 03 00 00       	push   $0x32ef010255a3728,171476
f010255f:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010255f3729,171522
f0102565:	50                   	push   %eaxf01025653730,171581
f0102566:	89 fb                	mov    %edi,%ebxf01025663731,171625
f0102568:	e8 2c db ff ff       	call   f0100099 <_panic>f01025683732,171674
f010256d:	8d 87 89 d9 fe ff    	lea    -0x12677(%edi),%eaxf010256d3734,171753
f0102573:	50                   	push   %eaxf01025733735,171812
f0102574:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01025743736,171856
f010257a:	50                   	push   %eaxf010257a3737,171915
f010257b:	68 2f 03 00 00       	push   $0x32ff010257b3738,171959
f0102580:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01025803739,172005
f0102586:	50                   	push   %eaxf01025863740,172064
f0102587:	89 fb                	mov    %edi,%ebxf01025873741,172108
f0102589:	e8 0b db ff ff       	call   f0100099 <_panic>f01025893742,172157
f010258e:	8d 87 95 d9 fe ff    	lea    -0x1266b(%edi),%eaxf010258e3744,172245
f0102594:	50                   	push   %eaxf01025943745,172304
f0102595:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01025953746,172348
f010259b:	50                   	push   %eaxf010259b3747,172407
f010259c:	68 30 03 00 00       	push   $0x330f010259c3748,172451
f01025a1:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01025a13749,172497
f01025a7:	50                   	push   %eaxf01025a73750,172556
f01025a8:	89 fb                	mov    %edi,%ebxf01025a83751,172600
f01025aa:	e8 ea da ff ff       	call   f0100099 <_panic>f01025aa3752,172649
f01025af:	8d 87 14 d5 fe ff    	lea    -0x12aec(%edi),%eaxf01025af3754,172751
f01025b5:	50                   	push   %eaxf01025b53755,172810
f01025b6:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01025b63756,172854
f01025bc:	50                   	push   %eaxf01025bc3757,172913
f01025bd:	68 34 03 00 00       	push   $0x334f01025bd3758,172957
f01025c2:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01025c23759,173003
f01025c8:	50                   	push   %eaxf01025c83760,173062
f01025c9:	89 fb                	mov    %edi,%ebxf01025c93761,173106
f01025cb:	e8 c9 da ff ff       	call   f0100099 <_panic>f01025cb3762,173155
f01025d0:	8d 87 70 d5 fe ff    	lea    -0x12a90(%edi),%eaxf01025d03764,173260
f01025d6:	50                   	push   %eaxf01025d63765,173319
f01025d7:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01025d73766,173363
f01025dd:	50                   	push   %eaxf01025dd3767,173422
f01025de:	68 35 03 00 00       	push   $0x335f01025de3768,173466
f01025e3:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01025e33769,173512
f01025e9:	50                   	push   %eaxf01025e93770,173571
f01025ea:	89 fb                	mov    %edi,%ebxf01025ea3771,173615
f01025ec:	e8 a8 da ff ff       	call   f0100099 <_panic>f01025ec3772,173664
f01025f1:	8d 87 aa d9 fe ff    	lea    -0x12656(%edi),%eaxf01025f13774,173748
f01025f7:	50                   	push   %eaxf01025f73775,173807
f01025f8:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01025f83776,173851
f01025fe:	50                   	push   %eaxf01025fe3777,173910
f01025ff:	68 36 03 00 00       	push   $0x336f01025ff3778,173954
f0102604:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01026043779,174000
f010260a:	50                   	push   %eaxf010260a3780,174059
f010260b:	89 fb                	mov    %edi,%ebxf010260b3781,174103
f010260d:	e8 87 da ff ff       	call   f0100099 <_panic>f010260d3782,174152
f0102612:	8d 87 78 d9 fe ff    	lea    -0x12688(%edi),%eaxf01026123784,174236
f0102618:	50                   	push   %eaxf01026183785,174295
f0102619:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01026193786,174339
f010261f:	50                   	push   %eaxf010261f3787,174398
f0102620:	68 37 03 00 00       	push   $0x337f01026203788,174442
f0102625:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01026253789,174488
f010262b:	50                   	push   %eaxf010262b3790,174547
f010262c:	89 fb                	mov    %edi,%ebxf010262c3791,174591
f010262e:	e8 66 da ff ff       	call   f0100099 <_panic>f010262e3792,174640
f0102633:	8d 87 98 d5 fe ff    	lea    -0x12a68(%edi),%eaxf01026333794,174741
f0102639:	50                   	push   %eaxf01026393795,174800
f010263a:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010263a3796,174844
f0102640:	50                   	push   %eaxf01026403797,174903
f0102641:	68 3a 03 00 00       	push   $0x33af01026413798,174947
f0102646:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01026463799,174993
f010264c:	50                   	push   %eaxf010264c3800,175052
f010264d:	89 fb                	mov    %edi,%ebxf010264d3801,175096
f010264f:	e8 45 da ff ff       	call   f0100099 <_panic>f010264f3802,175145
f0102654:	8d 87 cc d8 fe ff    	lea    -0x12734(%edi),%eaxf01026543804,175227
f010265a:	50                   	push   %eaxf010265a3805,175286
f010265b:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010265b3806,175330
f0102661:	50                   	push   %eaxf01026613807,175389
f0102662:	68 3d 03 00 00       	push   $0x33df01026623808,175433
f0102667:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01026673809,175479
f010266d:	50                   	push   %eaxf010266d3810,175538
f010266e:	89 fb                	mov    %edi,%ebxf010266e3811,175582
f0102670:	e8 24 da ff ff       	call   f0100099 <_panic>f01026703812,175631
f0102675:	8d 87 3c d2 fe ff    	lea    -0x12dc4(%edi),%eaxf01026753814,175738
f010267b:	50                   	push   %eaxf010267b3815,175797
f010267c:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010267c3816,175841
f0102682:	50                   	push   %eaxf01026823817,175900
f0102683:	68 40 03 00 00       	push   $0x340f01026833818,175944
f0102688:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01026883819,175990
f010268e:	50                   	push   %eaxf010268e3820,176049
f010268f:	89 fb                	mov    %edi,%ebxf010268f3821,176093
f0102691:	e8 03 da ff ff       	call   f0100099 <_panic>f01026913822,176142
f0102696:	8d 87 2f d9 fe ff    	lea    -0x126d1(%edi),%eaxf01026963824,176226
f010269c:	50                   	push   %eaxf010269c3825,176285
f010269d:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010269d3826,176329
f01026a3:	50                   	push   %eaxf01026a33827,176388
f01026a4:	68 42 03 00 00       	push   $0x342f01026a43828,176432
f01026a9:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01026a93829,176478
f01026af:	50                   	push   %eaxf01026af3830,176537
f01026b0:	89 fb                	mov    %edi,%ebxf01026b03831,176581
f01026b2:	e8 e2 d9 ff ff       	call   f0100099 <_panic>f01026b23832,176630
f01026b7:	52                   	push   %edxf01026b73833,176687
f01026b8:	8d 87 84 cf fe ff    	lea    -0x1307c(%edi),%eaxf01026b83834,176731
f01026be:	50                   	push   %eaxf01026be3835,176790
f01026bf:	68 49 03 00 00       	push   $0x349f01026bf3836,176834
f01026c4:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01026c43837,176880
f01026ca:	50                   	push   %eaxf01026ca3838,176939
f01026cb:	89 fb                	mov    %edi,%ebxf01026cb3839,176983
f01026cd:	e8 c7 d9 ff ff       	call   f0100099 <_panic>f01026cd3840,177032
f01026d2:	8d 87 bb d9 fe ff    	lea    -0x12645(%edi),%eaxf01026d23842,177123
f01026d8:	50                   	push   %eaxf01026d83843,177182
f01026d9:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01026d93844,177226
f01026df:	50                   	push   %eaxf01026df3845,177285
f01026e0:	68 4a 03 00 00       	push   $0x34af01026e03846,177329
f01026e5:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01026e53847,177375
f01026eb:	50                   	push   %eaxf01026eb3848,177434
f01026ec:	89 fb                	mov    %edi,%ebxf01026ec3849,177478
f01026ee:	e8 a6 d9 ff ff       	call   f0100099 <_panic>f01026ee3850,177527
f01026f3:	50                   	push   %eaxf01026f33851,177584
f01026f4:	8d 87 84 cf fe ff    	lea    -0x1307c(%edi),%eaxf01026f43852,177628
f01026fa:	50                   	push   %eaxf01026fa3853,177687
f01026fb:	6a 52                	push   $0x52f01026fb3854,177731
f01026fd:	8d 87 5c d7 fe ff    	lea    -0x128a4(%edi),%eaxf01026fd3855,177776
f0102703:	50                   	push   %eaxf01027033856,177835
f0102704:	89 fb                	mov    %edi,%ebxf01027043857,177879
f0102706:	e8 8e d9 ff ff       	call   f0100099 <_panic>f01027063858,177928
f010270b:	52                   	push   %edxf010270b3859,177985
f010270c:	8d 87 84 cf fe ff    	lea    -0x1307c(%edi),%eaxf010270c3860,178029
f0102712:	50                   	push   %eaxf01027123861,178088
f0102713:	6a 52                	push   $0x52f01027133862,178132
f0102715:	8d 87 5c d7 fe ff    	lea    -0x128a4(%edi),%eaxf01027153863,178177
f010271b:	50                   	push   %eaxf010271b3864,178236
f010271c:	89 fb                	mov    %edi,%ebxf010271c3865,178280
f010271e:	e8 76 d9 ff ff       	call   f0100099 <_panic>f010271e3866,178329
f0102723:	8d 87 d3 d9 fe ff    	lea    -0x1262d(%edi),%eaxf01027233868,178420
f0102729:	50                   	push   %eaxf01027293869,178479
f010272a:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010272a3870,178523
f0102730:	50                   	push   %eaxf01027303871,178582
f0102731:	68 54 03 00 00       	push   $0x354f01027313872,178626
f0102736:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01027363873,178672
f010273c:	50                   	push   %eaxf010273c3874,178731
f010273d:	89 fb                	mov    %edi,%ebxf010273d3875,178775
f010273f:	e8 55 d9 ff ff       	call   f0100099 <_panic>f010273f3876,178824
f0102744:	ff 75 c4             	pushl  -0x3c(%ebp)f01027443878,178947
f0102747:	8d 87 40 d1 fe ff    	lea    -0x12ec0(%edi),%eaxf01027473879,178998
f010274d:	50                   	push   %eaxf010274d3880,179057
f010274e:	68 97 02 00 00       	push   $0x297f010274e3881,179101
f0102753:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01027533882,179147
f0102759:	50                   	push   %eaxf01027593883,179206
f010275a:	89 fb                	mov    %edi,%ebxf010275a3884,179250
f010275c:	e8 38 d9 ff ff       	call   f0100099 <_panic>f010275c3885,179299
f0102761:	8d 87 bc d5 fe ff    	lea    -0x12a44(%edi),%eaxf01027613887,179418
f0102767:	50                   	push   %eaxf01027673888,179477
f0102768:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01027683889,179521
f010276e:	50                   	push   %eaxf010276e3890,179580
f010276f:	68 97 02 00 00       	push   $0x297f010276f3891,179624
f0102774:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01027743892,179670
f010277a:	50                   	push   %eaxf010277a3893,179729
f010277b:	89 fb                	mov    %edi,%ebxf010277b3894,179773
f010277d:	e8 17 d9 ff ff       	call   f0100099 <_panic>f010277d3895,179822
f0102782:	8b 5d d0             	mov    -0x30(%ebp),%ebxf01027823896,179879
f0102785:	8b 45 c8             	mov    -0x38(%ebp),%eaxf01027853898,179982
f0102788:	c1 e0 0c             	shl    $0xc,%eaxf01027883899,180038
f010278b:	89 45 d4             	mov    %eax,-0x2c(%ebp)f010278b3900,180087
f010278e:	be 00 00 00 00       	mov    $0x0,%esif010278e3901,180143
f0102793:	3b 75 d4             	cmp    -0x2c(%ebp),%esif01027933902,180192
f0102796:	73 3a                	jae    f01027d2 <mem_init+0x15b7>f01027963903,180248
f0102798:	8d 96 00 00 00 f0    	lea    -0x10000000(%esi),%edxf01027983905,180363
f010279e:	89 d8                	mov    %ebx,%eaxf010279e3906,180425
f01027a0:	e8 99 e2 ff ff       	call   f0100a3e <check_va2pa>f01027a03907,180474
f01027a5:	39 c6                	cmp    %eax,%esif01027a53908,180536
f01027a7:	75 08                	jne    f01027b1 <mem_init+0x1596>f01027a73909,180585
f01027a9:	81 c6 00 10 00 00    	add    $0x1000,%esif01027a93911,180698
f01027af:	eb e2                	jmp    f0102793 <mem_init+0x1578>f01027af3912,180750
f01027b1:	8d 87 f0 d5 fe ff    	lea    -0x12a10(%edi),%eaxf01027b13914,180865
f01027b7:	50                   	push   %eaxf01027b73915,180924
f01027b8:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01027b83916,180968
f01027be:	50                   	push   %eaxf01027be3917,181027
f01027bf:	68 9c 02 00 00       	push   $0x29cf01027bf3918,181071
f01027c4:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01027c43919,181117
f01027ca:	50                   	push   %eaxf01027ca3920,181176
f01027cb:	89 fb                	mov    %edi,%ebxf01027cb3921,181220
f01027cd:	e8 c7 d8 ff ff       	call   f0100099 <_panic>f01027cd3922,181269
f01027d2:	be 00 80 ff ef       	mov    $0xefff8000,%esif01027d23924,181373
f01027d7:	c7 c0 00 e0 10 f0    	mov    $0xf010e000,%eaxf01027d73926,181460
f01027dd:	89 45 d4             	mov    %eax,-0x2c(%ebp)f01027dd3927,181516
f01027e0:	05 00 80 00 20       	add    $0x20008000,%eaxf01027e03929,181652
f01027e5:	89 45 d0             	mov    %eax,-0x30(%ebp)f01027e53930,181708
f01027e8:	89 f2                	mov    %esi,%edxf01027e83931,181764
f01027ea:	89 d8                	mov    %ebx,%eaxf01027ea3932,181813
f01027ec:	e8 4d e2 ff ff       	call   f0100a3e <check_va2pa>f01027ec3933,181862
f01027f1:	81 7d d4 ff ff ff ef 	cmpl   $0xefffffff,-0x2c(%ebp)f01027f13934,181924
f01027f8:	76 33                	jbe    f010282d <mem_init+0x1612>f01027f83935,181987
f01027fa:	8b 4d d0             	mov    -0x30(%ebp),%ecxf01027fa3936,182053
f01027fd:	8d 14 31             	lea    (%ecx,%esi,1),%edxf01027fd3937,182109
f0102800:	39 c2                	cmp    %eax,%edxf01028003938,182167
f0102802:	75 49                	jne    f010284d <mem_init+0x1632>f01028023939,182216
f0102804:	81 c6 00 10 00 00    	add    $0x1000,%esif01028043940,182282
f010280a:	81 fe 00 00 00 f0    	cmp    $0xf0000000,%esif010280a3942,182374
f0102810:	75 d6                	jne    f01027e8 <mem_init+0x15cd>f01028103943,182430
f0102812:	ba 00 00 c0 ef       	mov    $0xefc00000,%edxf01028123945,182551
f0102817:	89 d8                	mov    %ebx,%eaxf01028173946,182607
f0102819:	e8 20 e2 ff ff       	call   f0100a3e <check_va2pa>f01028193947,182656
f010281e:	83 f8 ff             	cmp    $0xffffffff,%eaxf010281e3948,182718
f0102821:	75 4b                	jne    f010286e <mem_init+0x1653>f01028213949,182774
f0102823:	b8 00 00 00 00       	mov    $0x0,%eaxf01028233951,182876
f0102828:	e9 8b 00 00 00       	jmp    f01028b8 <mem_init+0x169d>f01028283952,182925
f010282d:	ff b7 fc ff ff ff    	pushl  -0x4(%edi)f010282d3954,183057
f0102833:	8d 87 40 d1 fe ff    	lea    -0x12ec0(%edi),%eaxf01028333955,183107
f0102839:	50                   	push   %eaxf01028393956,183166
f010283a:	68 a0 02 00 00       	push   $0x2a0f010283a3957,183210
f010283f:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf010283f3958,183256
f0102845:	50                   	push   %eaxf01028453959,183315
f0102846:	89 fb                	mov    %edi,%ebxf01028463960,183359
f0102848:	e8 4c d8 ff ff       	call   f0100099 <_panic>f01028483961,183408
f010284d:	8d 87 18 d6 fe ff    	lea    -0x129e8(%edi),%eaxf010284d3963,183545
f0102853:	50                   	push   %eaxf01028533964,183604
f0102854:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01028543965,183648
f010285a:	50                   	push   %eaxf010285a3966,183707
f010285b:	68 a0 02 00 00       	push   $0x2a0f010285b3967,183751
f0102860:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01028603968,183797
f0102866:	50                   	push   %eaxf01028663969,183856
f0102867:	89 fb                	mov    %edi,%ebxf01028673970,183900
f0102869:	e8 2b d8 ff ff       	call   f0100099 <_panic>f01028693971,183949
f010286e:	8d 87 60 d6 fe ff    	lea    -0x129a0(%edi),%eaxf010286e3973,184061
f0102874:	50                   	push   %eaxf01028743974,184120
f0102875:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01028753975,184164
f010287b:	50                   	push   %eaxf010287b3976,184223
f010287c:	68 a1 02 00 00       	push   $0x2a1f010287c3977,184267
f0102881:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01028813978,184313
f0102887:	50                   	push   %eaxf01028873979,184372
f0102888:	89 fb                	mov    %edi,%ebxf01028883980,184416
f010288a:	e8 0a d8 ff ff       	call   f0100099 <_panic>f010288a3981,184465
f010288f:	f6 04 83 01          	testb  $0x1,(%ebx,%eax,4)f010288f3983,184551
f0102893:	74 51                	je     f01028e6 <mem_init+0x16cb>f01028933984,184609
f0102895:	83 c0 01             	add    $0x1,%eaxf01028953986,184711
f0102898:	3d ff 03 00 00       	cmp    $0x3ff,%eaxf01028983987,184760
f010289d:	0f 87 b3 00 00 00    	ja     f0102956 <mem_init+0x173b>f010289d3988,184811
f01028a3:	3d bc 03 00 00       	cmp    $0x3bc,%eaxf01028a33990,184892
f01028a8:	72 0e                	jb     f01028b8 <mem_init+0x169d>f01028a83991,184943
f01028aa:	3d bd 03 00 00       	cmp    $0x3bd,%eaxf01028aa3992,185009
f01028af:	76 de                	jbe    f010288f <mem_init+0x1674>f01028af3993,185060
f01028b1:	3d bf 03 00 00       	cmp    $0x3bf,%eaxf01028b13994,185126
f01028b6:	74 d7                	je     f010288f <mem_init+0x1674>f01028b63995,185177
f01028b8:	3d bf 03 00 00       	cmp    $0x3bf,%eaxf01028b83997,185272
f01028bd:	77 48                	ja     f0102907 <mem_init+0x16ec>f01028bd3998,185323
f01028bf:	83 3c 83 00          	cmpl   $0x0,(%ebx,%eax,4)f01028bf4000,185416
f01028c3:	74 d0                	je     f0102895 <mem_init+0x167a>f01028c34001,185474
f01028c5:	8d 87 25 da fe ff    	lea    -0x125db(%edi),%eaxf01028c54002,185540
f01028cb:	50                   	push   %eaxf01028cb4003,185599
f01028cc:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01028cc4004,185643
f01028d2:	50                   	push   %eaxf01028d24005,185702
f01028d3:	68 b0 02 00 00       	push   $0x2b0f01028d34006,185746
f01028d8:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01028d84007,185792
f01028de:	50                   	push   %eaxf01028de4008,185851
f01028df:	89 fb                	mov    %edi,%ebxf01028df4009,185895
f01028e1:	e8 b3 d7 ff ff       	call   f0100099 <_panic>f01028e14010,185944
f01028e6:	8d 87 03 da fe ff    	lea    -0x125fd(%edi),%eaxf01028e64012,186030
f01028ec:	50                   	push   %eaxf01028ec4013,186089
f01028ed:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf01028ed4014,186133
f01028f3:	50                   	push   %eaxf01028f34015,186192
f01028f4:	68 a9 02 00 00       	push   $0x2a9f01028f44016,186236
f01028f9:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01028f94017,186282
f01028ff:	50                   	push   %eaxf01028ff4018,186341
f0102900:	89 fb                	mov    %edi,%ebxf01029004019,186385
f0102902:	e8 92 d7 ff ff       	call   f0100099 <_panic>f01029024020,186434
f0102907:	8b 14 83             	mov    (%ebx,%eax,4),%edxf01029074022,186521
f010290a:	f6 c2 01             	test   $0x1,%dlf010290a4023,186579
f010290d:	74 26                	je     f0102935 <mem_init+0x171a>f010290d4024,186627
f010290f:	f6 c2 02             	test   $0x2,%dlf010290f4026,186723
f0102912:	75 81                	jne    f0102895 <mem_init+0x167a>f01029124027,186771
f0102914:	8d 87 14 da fe ff    	lea    -0x125ec(%edi),%eaxf01029144028,186837
f010291a:	50                   	push   %eaxf010291a4029,186896
f010291b:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010291b4030,186940
f0102921:	50                   	push   %eaxf01029214031,186999
f0102922:	68 ae 02 00 00       	push   $0x2aef01029224032,187043
f0102927:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01029274033,187089
f010292d:	50                   	push   %eaxf010292d4034,187148
f010292e:	89 fb                	mov    %edi,%ebxf010292e4035,187192
f0102930:	e8 64 d7 ff ff       	call   f0100099 <_panic>f01029304036,187241
f0102935:	8d 87 03 da fe ff    	lea    -0x125fd(%edi),%eaxf01029354038,187328
f010293b:	50                   	push   %eaxf010293b4039,187387
f010293c:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf010293c4040,187431
f0102942:	50                   	push   %eaxf01029424041,187490
f0102943:	68 ad 02 00 00       	push   $0x2adf01029434042,187534
f0102948:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf01029484043,187580
f010294e:	50                   	push   %eaxf010294e4044,187639
f010294f:	89 fb                	mov    %edi,%ebxf010294f4045,187683
f0102951:	e8 43 d7 ff ff       	call   f0100099 <_panic>f01029514046,187732
f0102956:	83 ec 0c             	sub    $0xc,%espf01029564048,187834
f0102959:	8d 87 90 d6 fe ff    	lea    -0x12970(%edi),%eaxf01029594049,187883
f010295f:	50                   	push   %eaxf010295f4050,187942
f0102960:	89 fb                	mov    %edi,%ebxf01029604051,187986
f0102962:	e8 ca 04 00 00       	call   f0102e31 <cprintf>f01029624052,188035
f0102967:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf01029674054,188119
f010296d:	8b 00                	mov    (%eax),%eaxf010296d4055,188175
f010296f:	83 c4 10             	add    $0x10,%espf010296f4057,188257
f0102972:	3d ff ff ff ef       	cmp    $0xefffffff,%eaxf01029724058,188307
f0102977:	0f 86 33 02 00 00    	jbe    f0102bb0 <mem_init+0x1995>f01029774059,188363
f010297d:	05 00 00 00 10       	add    $0x10000000,%eaxf010297d4061,188465
static inline voidstatic4064,188524
f0102982:	0f 22 d8             	mov    %eax,%cr3f01029824068,188610
f0102985:	b8 00 00 00 00       	mov    $0x0,%eaxf01029854070,188685
f010298a:	e8 2c e1 ff ff       	call   f0100abb <check_page_free_list>f010298a4071,188734
f010298f:	0f 20 c0             	mov    %cr0,%eaxf010298f4073,188850
f0102992:	83 e0 f3             	and    $0xfffffff3,%eaxf01029924075,188925
f0102995:	0d 23 00 05 80       	or     $0x80050023,%eaxf01029954076,188981
f010299a:	0f 22 c0             	mov    %eax,%cr0f010299a4078,189083
	pp1 = pp2 = 0;pp14083,189209
f010299d:	83 ec 0c             	sub    $0xc,%espf010299d4085,189257
f01029a0:	6a 00                	push   $0x0f01029a04086,189306
f01029a2:	e8 89 e5 ff ff       	call   f0100f30 <page_alloc>f01029a24087,189350
f01029a7:	89 c6                	mov    %eax,%esif01029a74088,189411
f01029a9:	83 c4 10             	add    $0x10,%espf01029a94089,189460
f01029ac:	85 c0                	test   %eax,%eaxf01029ac4090,189510
f01029ae:	0f 84 15 02 00 00    	je     f0102bc9 <mem_init+0x19ae>f01029ae4091,189559
f01029b4:	83 ec 0c             	sub    $0xc,%espf01029b44093,189657
f01029b7:	6a 00                	push   $0x0f01029b74094,189706
f01029b9:	e8 72 e5 ff ff       	call   f0100f30 <page_alloc>f01029b94095,189750
f01029be:	89 45 d0             	mov    %eax,-0x30(%ebp)f01029be4096,189811
f01029c1:	83 c4 10             	add    $0x10,%espf01029c14097,189867
f01029c4:	85 c0                	test   %eax,%eaxf01029c44098,189917
f01029c6:	0f 84 1c 02 00 00    	je     f0102be8 <mem_init+0x19cd>f01029c64099,189966
f01029cc:	83 ec 0c             	sub    $0xc,%espf01029cc4101,190064
f01029cf:	6a 00                	push   $0x0f01029cf4102,190113
f01029d1:	e8 5a e5 ff ff       	call   f0100f30 <page_alloc>f01029d14103,190157
f01029d6:	89 45 d4             	mov    %eax,-0x2c(%ebp)f01029d64104,190218
f01029d9:	83 c4 10             	add    $0x10,%espf01029d94105,190274
f01029dc:	85 c0                	test   %eax,%eaxf01029dc4106,190324
f01029de:	0f 84 23 02 00 00    	je     f0102c07 <mem_init+0x19ec>f01029de4107,190373
f01029e4:	83 ec 0c             	sub    $0xc,%espf01029e44109,190456
f01029e7:	56                   	push   %esif01029e74110,190505
f01029e8:	e8 d1 e5 ff ff       	call   f0100fbe <page_free>f01029e84111,190549
f01029ed:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01029ed4113,190642
f01029f3:	8b 4d d0             	mov    -0x30(%ebp),%ecxf01029f34114,190698
f01029f6:	2b 08                	sub    (%eax),%ecxf01029f64115,190754
f01029f8:	89 c8                	mov    %ecx,%eaxf01029f84116,190805
f01029fa:	c1 f8 03             	sar    $0x3,%eaxf01029fa4117,190854
f01029fd:	c1 e0 0c             	shl    $0xc,%eaxf01029fd4118,190903
f0102a00:	89 c1                	mov    %eax,%ecxf0102a004120,190978
f0102a02:	c1 e9 0c             	shr    $0xc,%ecxf0102a024121,191027
f0102a05:	83 c4 10             	add    $0x10,%espf0102a054122,191076
f0102a08:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf0102a084123,191126
f0102a0e:	3b 0a                	cmp    (%edx),%ecxf0102a0e4124,191182
f0102a10:	0f 83 10 02 00 00    	jae    f0102c26 <mem_init+0x1a0b>f0102a104125,191233
f0102a16:	83 ec 04             	sub    $0x4,%espf0102a164127,191334
f0102a19:	68 00 10 00 00       	push   $0x1000f0102a194128,191383
f0102a1e:	6a 01                	push   $0x1f0102a1e4129,191430
f0102a20:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0102a204131,191507
f0102a25:	50                   	push   %eaxf0102a254132,191563
f0102a26:	e8 62 0f 00 00       	call   f010398d <memset>f0102a264133,191607
f0102a2b:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0102a2b4135,191697
f0102a31:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0102a314136,191753
f0102a34:	2b 08                	sub    (%eax),%ecxf0102a344137,191809
f0102a36:	89 c8                	mov    %ecx,%eaxf0102a364138,191860
f0102a38:	c1 f8 03             	sar    $0x3,%eaxf0102a384139,191909
f0102a3b:	c1 e0 0c             	shl    $0xc,%eaxf0102a3b4140,191958
f0102a3e:	89 c1                	mov    %eax,%ecxf0102a3e4142,192033
f0102a40:	c1 e9 0c             	shr    $0xc,%ecxf0102a404143,192082
f0102a43:	83 c4 10             	add    $0x10,%espf0102a434144,192131
f0102a46:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf0102a464145,192181
f0102a4c:	3b 0a                	cmp    (%edx),%ecxf0102a4c4146,192237
f0102a4e:	0f 83 e8 01 00 00    	jae    f0102c3c <mem_init+0x1a21>f0102a4e4147,192288
f0102a54:	83 ec 04             	sub    $0x4,%espf0102a544149,192389
f0102a57:	68 00 10 00 00       	push   $0x1000f0102a574150,192438
f0102a5c:	6a 02                	push   $0x2f0102a5c4151,192485
f0102a5e:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0102a5e4153,192562
f0102a63:	50                   	push   %eaxf0102a634154,192618
f0102a64:	e8 24 0f 00 00       	call   f010398d <memset>f0102a644155,192662
f0102a69:	6a 02                	push   $0x2f0102a694157,192773
f0102a6b:	68 00 10 00 00       	push   $0x1000f0102a6b4158,192817
f0102a70:	8b 5d d0             	mov    -0x30(%ebp),%ebxf0102a704159,192864
f0102a73:	53                   	push   %ebxf0102a734160,192920
f0102a74:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0102a744161,192964
f0102a7a:	ff 30                	pushl  (%eax)f0102a7a4162,193020
f0102a7c:	e8 29 e7 ff ff       	call   f01011aa <page_insert>f0102a7c4163,193066
f0102a81:	83 c4 20             	add    $0x20,%espf0102a814165,193155
f0102a84:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)f0102a844166,193205
f0102a89:	0f 85 c3 01 00 00    	jne    f0102c52 <mem_init+0x1a37>f0102a894167,193259
f0102a8f:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000f0102a8f4169,193370
f0102a96:	01 01 01 f0102a964170,193427
f0102a99:	0f 85 d4 01 00 00    	jne    f0102c73 <mem_init+0x1a58>f0102a994171,193447
f0102a9f:	6a 02                	push   $0x2f0102a9f4173,193567
f0102aa1:	68 00 10 00 00       	push   $0x1000f0102aa14174,193611
f0102aa6:	ff 75 d4             	pushl  -0x2c(%ebp)f0102aa64175,193658
f0102aa9:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0102aa94176,193709
f0102aaf:	ff 30                	pushl  (%eax)f0102aaf4177,193765
f0102ab1:	e8 f4 e6 ff ff       	call   f01011aa <page_insert>f0102ab14178,193811
f0102ab6:	83 c4 10             	add    $0x10,%espf0102ab64180,193918
f0102ab9:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000f0102ab94181,193968
f0102ac0:	02 02 02 f0102ac04182,194025
f0102ac3:	0f 85 cb 01 00 00    	jne    f0102c94 <mem_init+0x1a79>f0102ac34183,194045
f0102ac9:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0102ac94185,194138
f0102acc:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)f0102acc4186,194194
f0102ad1:	0f 85 de 01 00 00    	jne    f0102cb5 <mem_init+0x1a9a>f0102ad14187,194248
f0102ad7:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0102ad74189,194341
f0102ada:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)f0102ada4190,194397
f0102adf:	0f 85 f1 01 00 00    	jne    f0102cd6 <mem_init+0x1abb>f0102adf4191,194451
f0102ae5:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000f0102ae54193,194553
f0102aec:	03 03 03 f0102aec4194,194610
f0102aef:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0102aef4196,194663
f0102af5:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0102af54197,194719
f0102af8:	2b 08                	sub    (%eax),%ecxf0102af84198,194775
f0102afa:	89 c8                	mov    %ecx,%eaxf0102afa4199,194826
f0102afc:	c1 f8 03             	sar    $0x3,%eaxf0102afc4200,194875
f0102aff:	c1 e0 0c             	shl    $0xc,%eaxf0102aff4201,194924
f0102b02:	89 c1                	mov    %eax,%ecxf0102b024203,194999
f0102b04:	c1 e9 0c             	shr    $0xc,%ecxf0102b044204,195048
f0102b07:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf0102b074205,195097
f0102b0d:	3b 0a                	cmp    (%edx),%ecxf0102b0d4206,195153
f0102b0f:	0f 83 e2 01 00 00    	jae    f0102cf7 <mem_init+0x1adc>f0102b0f4207,195204
f0102b15:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)f0102b154209,195322
f0102b1c:	03 03 03 f0102b1c4210,195390
f0102b1f:	0f 85 ea 01 00 00    	jne    f0102d0f <mem_init+0x1af4>f0102b1f4211,195410
f0102b25:	83 ec 08             	sub    $0x8,%espf0102b254213,195518
f0102b28:	68 00 10 00 00       	push   $0x1000f0102b284214,195567
f0102b2d:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0102b2d4215,195614
f0102b33:	ff 30                	pushl  (%eax)f0102b334216,195670
f0102b35:	e8 40 e6 ff ff       	call   f010117a <page_remove>f0102b354217,195716
f0102b3a:	83 c4 10             	add    $0x10,%espf0102b3a4219,195805
f0102b3d:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0102b3d4220,195855
f0102b40:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)f0102b404221,195911
f0102b45:	0f 85 e5 01 00 00    	jne    f0102d30 <mem_init+0x1b15>f0102b454222,195965
f0102b4b:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0102b4b4226,196109
f0102b51:	8b 08                	mov    (%eax),%ecxf0102b514227,196165
f0102b53:	8b 11                	mov    (%ecx),%edxf0102b534228,196216
f0102b55:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf0102b554229,196267
f0102b5b:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0102b5b4231,196356
f0102b61:	89 f3                	mov    %esi,%ebxf0102b614232,196412
f0102b63:	2b 18                	sub    (%eax),%ebxf0102b634233,196461
f0102b65:	89 d8                	mov    %ebx,%eaxf0102b654234,196512
f0102b67:	c1 f8 03             	sar    $0x3,%eaxf0102b674235,196561
f0102b6a:	c1 e0 0c             	shl    $0xc,%eaxf0102b6a4236,196610
f0102b6d:	39 c2                	cmp    %eax,%edxf0102b6d4237,196659
f0102b6f:	0f 85 dc 01 00 00    	jne    f0102d51 <mem_init+0x1b36>f0102b6f4238,196708
f0102b75:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)f0102b754240,196794
f0102b7b:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)f0102b7b4242,196872
f0102b80:	0f 85 ec 01 00 00    	jne    f0102d72 <mem_init+0x1b57>f0102b804243,196926
f0102b86:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)f0102b864245,197010
f0102b8c:	83 ec 0c             	sub    $0xc,%espf0102b8c4249,197109
f0102b8f:	56                   	push   %esif0102b8f4250,197158
f0102b90:	e8 29 e4 ff ff       	call   f0100fbe <page_free>f0102b904251,197202
f0102b95:	8d 87 24 d7 fe ff    	lea    -0x128dc(%edi),%eaxf0102b954254,197318
f0102b9b:	89 04 24             	mov    %eax,(%esp)f0102b9b4255,197377
f0102b9e:	89 fb                	mov    %edi,%ebxf0102b9e4256,197428
f0102ba0:	e8 8c 02 00 00       	call   f0102e31 <cprintf>f0102ba04257,197477
f0102ba5:	83 c4 10             	add    $0x10,%espf0102ba54259,197537
f0102ba8:	8d 65 f4             	lea    -0xc(%ebp),%espf0102ba84260,197587
f0102bab:	5b                   	pop    %ebxf0102bab4261,197642
f0102bac:	5e                   	pop    %esif0102bac4262,197686
f0102bad:	5f                   	pop    %edif0102bad4263,197730
f0102bae:	5d                   	pop    %ebpf0102bae4264,197774
f0102baf:	c3                   	ret    f0102baf4265,197818
f0102bb0:	50                   	push   %eaxf0102bb04267,197924
f0102bb1:	8d 87 40 d1 fe ff    	lea    -0x12ec0(%edi),%eaxf0102bb14268,197968
f0102bb7:	50                   	push   %eaxf0102bb74269,198027
f0102bb8:	68 d4 00 00 00       	push   $0xd4f0102bb84270,198071
f0102bbd:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf0102bbd4271,198116
f0102bc3:	50                   	push   %eaxf0102bc34272,198175
f0102bc4:	e8 d0 d4 ff ff       	call   f0100099 <_panic>f0102bc44273,198219
f0102bc9:	8d 87 21 d8 fe ff    	lea    -0x127df(%edi),%eaxf0102bc94275,198308
f0102bcf:	50                   	push   %eaxf0102bcf4276,198367
f0102bd0:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf0102bd04277,198411
f0102bd6:	50                   	push   %eaxf0102bd64278,198470
f0102bd7:	68 6f 03 00 00       	push   $0x36ff0102bd74279,198514
f0102bdc:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf0102bdc4280,198560
f0102be2:	50                   	push   %eaxf0102be24281,198619
f0102be3:	e8 b1 d4 ff ff       	call   f0100099 <_panic>f0102be34282,198663
f0102be8:	8d 87 37 d8 fe ff    	lea    -0x127c9(%edi),%eaxf0102be84284,198752
f0102bee:	50                   	push   %eaxf0102bee4285,198811
f0102bef:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf0102bef4286,198855
f0102bf5:	50                   	push   %eaxf0102bf54287,198914
f0102bf6:	68 70 03 00 00       	push   $0x370f0102bf64288,198958
f0102bfb:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf0102bfb4289,199004
f0102c01:	50                   	push   %eaxf0102c014290,199063
f0102c02:	e8 92 d4 ff ff       	call   f0100099 <_panic>f0102c024291,199107
f0102c07:	8d 87 4d d8 fe ff    	lea    -0x127b3(%edi),%eaxf0102c074293,199196
f0102c0d:	50                   	push   %eaxf0102c0d4294,199255
f0102c0e:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf0102c0e4295,199299
f0102c14:	50                   	push   %eaxf0102c144296,199358
f0102c15:	68 71 03 00 00       	push   $0x371f0102c154297,199402
f0102c1a:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf0102c1a4298,199448
f0102c20:	50                   	push   %eaxf0102c204299,199507
f0102c21:	e8 73 d4 ff ff       	call   f0100099 <_panic>f0102c214300,199551
f0102c26:	50                   	push   %eaxf0102c264302,199672
f0102c27:	8d 87 84 cf fe ff    	lea    -0x1307c(%edi),%eaxf0102c274303,199716
f0102c2d:	50                   	push   %eaxf0102c2d4304,199775
f0102c2e:	6a 52                	push   $0x52f0102c2e4305,199819
f0102c30:	8d 87 5c d7 fe ff    	lea    -0x128a4(%edi),%eaxf0102c304306,199864
f0102c36:	50                   	push   %eaxf0102c364307,199923
f0102c37:	e8 5d d4 ff ff       	call   f0100099 <_panic>f0102c374308,199967
f0102c3c:	50                   	push   %eaxf0102c3c4309,200024
f0102c3d:	8d 87 84 cf fe ff    	lea    -0x1307c(%edi),%eaxf0102c3d4310,200068
f0102c43:	50                   	push   %eaxf0102c434311,200127
f0102c44:	6a 52                	push   $0x52f0102c444312,200171
f0102c46:	8d 87 5c d7 fe ff    	lea    -0x128a4(%edi),%eaxf0102c464313,200216
f0102c4c:	50                   	push   %eaxf0102c4c4314,200275
f0102c4d:	e8 47 d4 ff ff       	call   f0100099 <_panic>f0102c4d4315,200319
f0102c52:	8d 87 1e d9 fe ff    	lea    -0x126e2(%edi),%eaxf0102c524317,200403
f0102c58:	50                   	push   %eaxf0102c584318,200462
f0102c59:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf0102c594319,200506
f0102c5f:	50                   	push   %eaxf0102c5f4320,200565
f0102c60:	68 76 03 00 00       	push   $0x376f0102c604321,200609
f0102c65:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf0102c654322,200655
f0102c6b:	50                   	push   %eaxf0102c6b4323,200714
f0102c6c:	89 fb                	mov    %edi,%ebxf0102c6c4324,200758
f0102c6e:	e8 26 d4 ff ff       	call   f0100099 <_panic>f0102c6e4325,200807
f0102c73:	8d 87 b0 d6 fe ff    	lea    -0x12950(%edi),%eaxf0102c734327,200909
f0102c79:	50                   	push   %eaxf0102c794328,200968
f0102c7a:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf0102c7a4329,201012
f0102c80:	50                   	push   %eaxf0102c804330,201071
f0102c81:	68 77 03 00 00       	push   $0x377f0102c814331,201115
f0102c86:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf0102c864332,201161
f0102c8c:	50                   	push   %eaxf0102c8c4333,201220
f0102c8d:	89 fb                	mov    %edi,%ebxf0102c8d4334,201264
f0102c8f:	e8 05 d4 ff ff       	call   f0100099 <_panic>f0102c8f4335,201313
f0102c94:	8d 87 d4 d6 fe ff    	lea    -0x1292c(%edi),%eaxf0102c944337,201415
f0102c9a:	50                   	push   %eaxf0102c9a4338,201474
f0102c9b:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf0102c9b4339,201518
f0102ca1:	50                   	push   %eaxf0102ca14340,201577
f0102ca2:	68 79 03 00 00       	push   $0x379f0102ca24341,201621
f0102ca7:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf0102ca74342,201667
f0102cad:	50                   	push   %eaxf0102cad4343,201726
f0102cae:	89 fb                	mov    %edi,%ebxf0102cae4344,201770
f0102cb0:	e8 e4 d3 ff ff       	call   f0100099 <_panic>f0102cb04345,201819
f0102cb5:	8d 87 40 d9 fe ff    	lea    -0x126c0(%edi),%eaxf0102cb54347,201903
f0102cbb:	50                   	push   %eaxf0102cbb4348,201962
f0102cbc:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf0102cbc4349,202006
f0102cc2:	50                   	push   %eaxf0102cc24350,202065
f0102cc3:	68 7a 03 00 00       	push   $0x37af0102cc34351,202109
f0102cc8:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf0102cc84352,202155
f0102cce:	50                   	push   %eaxf0102cce4353,202214
f0102ccf:	89 fb                	mov    %edi,%ebxf0102ccf4354,202258
f0102cd1:	e8 c3 d3 ff ff       	call   f0100099 <_panic>f0102cd14355,202307
f0102cd6:	8d 87 aa d9 fe ff    	lea    -0x12656(%edi),%eaxf0102cd64357,202391
f0102cdc:	50                   	push   %eaxf0102cdc4358,202450
f0102cdd:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf0102cdd4359,202494
f0102ce3:	50                   	push   %eaxf0102ce34360,202553
f0102ce4:	68 7b 03 00 00       	push   $0x37bf0102ce44361,202597
f0102ce9:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf0102ce94362,202643
f0102cef:	50                   	push   %eaxf0102cef4363,202702
f0102cf0:	89 fb                	mov    %edi,%ebxf0102cf04364,202746
f0102cf2:	e8 a2 d3 ff ff       	call   f0100099 <_panic>f0102cf24365,202795
f0102cf7:	50                   	push   %eaxf0102cf74366,202852
f0102cf8:	8d 87 84 cf fe ff    	lea    -0x1307c(%edi),%eaxf0102cf84367,202896
f0102cfe:	50                   	push   %eaxf0102cfe4368,202955
f0102cff:	6a 52                	push   $0x52f0102cff4369,202999
f0102d01:	8d 87 5c d7 fe ff    	lea    -0x128a4(%edi),%eaxf0102d014370,203044
f0102d07:	50                   	push   %eaxf0102d074371,203103
f0102d08:	89 fb                	mov    %edi,%ebxf0102d084372,203147
f0102d0a:	e8 8a d3 ff ff       	call   f0100099 <_panic>f0102d0a4373,203196
f0102d0f:	8d 87 f8 d6 fe ff    	lea    -0x12908(%edi),%eaxf0102d0f4375,203305
f0102d15:	50                   	push   %eaxf0102d154376,203364
f0102d16:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf0102d164377,203408
f0102d1c:	50                   	push   %eaxf0102d1c4378,203467
f0102d1d:	68 7d 03 00 00       	push   $0x37df0102d1d4379,203511
f0102d22:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf0102d224380,203557
f0102d28:	50                   	push   %eaxf0102d284381,203616
f0102d29:	89 fb                	mov    %edi,%ebxf0102d294382,203660
f0102d2b:	e8 69 d3 ff ff       	call   f0100099 <_panic>f0102d2b4383,203709
f0102d30:	8d 87 78 d9 fe ff    	lea    -0x12688(%edi),%eaxf0102d304385,203793
f0102d36:	50                   	push   %eaxf0102d364386,203852
f0102d37:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf0102d374387,203896
f0102d3d:	50                   	push   %eaxf0102d3d4388,203955
f0102d3e:	68 7f 03 00 00       	push   $0x37ff0102d3e4389,203999
f0102d43:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf0102d434390,204045
f0102d49:	50                   	push   %eaxf0102d494391,204104
f0102d4a:	89 fb                	mov    %edi,%ebxf0102d4a4392,204148
f0102d4c:	e8 48 d3 ff ff       	call   f0100099 <_panic>f0102d4c4393,204197
f0102d51:	8d 87 3c d2 fe ff    	lea    -0x12dc4(%edi),%eaxf0102d514395,204304
f0102d57:	50                   	push   %eaxf0102d574396,204363
f0102d58:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf0102d584397,204407
f0102d5e:	50                   	push   %eaxf0102d5e4398,204466
f0102d5f:	68 82 03 00 00       	push   $0x382f0102d5f4399,204510
f0102d64:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf0102d644400,204556
f0102d6a:	50                   	push   %eaxf0102d6a4401,204615
f0102d6b:	89 fb                	mov    %edi,%ebxf0102d6b4402,204659
f0102d6d:	e8 27 d3 ff ff       	call   f0100099 <_panic>f0102d6d4403,204708
f0102d72:	8d 87 2f d9 fe ff    	lea    -0x126d1(%edi),%eaxf0102d724405,204792
f0102d78:	50                   	push   %eaxf0102d784406,204851
f0102d79:	8d 87 76 d7 fe ff    	lea    -0x1288a(%edi),%eaxf0102d794407,204895
f0102d7f:	50                   	push   %eaxf0102d7f4408,204954
f0102d80:	68 84 03 00 00       	push   $0x384f0102d804409,204998
f0102d85:	8d 87 50 d7 fe ff    	lea    -0x128b0(%edi),%eaxf0102d854410,205044
f0102d8b:	50                   	push   %eaxf0102d8b4411,205103
f0102d8c:	89 fb                	mov    %edi,%ebxf0102d8c4412,205147
f0102d8e:	e8 06 d3 ff ff       	call   f0100099 <_panic>f0102d8e4413,205196
f0102d93 <tlb_invalidate>:f0102d934415,205254
f0102d93:	55                   	push   %ebpf0102d934417,205283
f0102d94:	89 e5                	mov    %esp,%ebpf0102d944418,205327
f0102d96:	8b 45 0c             	mov    0xc(%ebp),%eaxf0102d964420,205432
f0102d99:	0f 01 38             	invlpg (%eax)f0102d994421,205486
f0102d9c:	5d                   	pop    %ebpf0102d9c4423,205534
f0102d9d:	c3                   	ret    f0102d9d4424,205578
f0102d9e <__x86.get_pc_thunk.cx>:f0102d9e4426,205619
f0102d9e:	8b 0c 24             	mov    (%esp),%ecxf0102d9e4427,205653
f0102da1:	c3                   	ret    f0102da14428,205704
f0102da2 <__x86.get_pc_thunk.si>:f0102da24430,205745
f0102da2:	8b 34 24             	mov    (%esp),%esif0102da24431,205779
f0102da5:	c3                   	ret    f0102da54432,205830
f0102da6 <__x86.get_pc_thunk.di>:f0102da64434,205871
f0102da6:	8b 3c 24             	mov    (%esp),%edif0102da64435,205905
f0102da9:	c3                   	ret    f0102da94436,205956
f0102daa <mc146818_read>:f0102daa4438,205997
unsignedunsigned4442,206050
f0102daa:	55                   	push   %ebpf0102daa4445,206089
f0102dab:	89 e5                	mov    %esp,%ebpf0102dab4446,206133
f0102dad:	8b 45 08             	mov    0x8(%ebp),%eaxf0102dad4448,206239
f0102db0:	ba 70 00 00 00       	mov    $0x70,%edxf0102db04449,206293
f0102db5:	ee                   	out    %al,(%dx)f0102db54450,206343
f0102db6:	ba 71 00 00 00       	mov    $0x71,%edxf0102db64452,206448
f0102dbb:	ec                   	in     (%dx),%alf0102dbb4453,206498
f0102dbc:	0f b6 c0             	movzbl %al,%eaxf0102dbc4456,206590
f0102dbf:	5d                   	pop    %ebpf0102dbf4458,206640
f0102dc0:	c3                   	ret    f0102dc04459,206684
f0102dc1 <mc146818_write>:f0102dc14461,206725
voidvoid4463,206753
f0102dc1:	55                   	push   %ebpf0102dc14466,206805
f0102dc2:	89 e5                	mov    %esp,%ebpf0102dc24467,206849
f0102dc4:	8b 45 08             	mov    0x8(%ebp),%eaxf0102dc44469,206955
f0102dc7:	ba 70 00 00 00       	mov    $0x70,%edxf0102dc74470,207009
f0102dcc:	ee                   	out    %al,(%dx)f0102dcc4471,207059
f0102dcd:	8b 45 0c             	mov    0xc(%ebp),%eaxf0102dcd4472,207108
f0102dd0:	ba 71 00 00 00       	mov    $0x71,%edxf0102dd04473,207162
f0102dd5:	ee                   	out    %al,(%dx)f0102dd54474,207212
f0102dd6:	5d                   	pop    %ebpf0102dd64478,207307
f0102dd7:	c3                   	ret    f0102dd74479,207351
f0102dd8 <putch>:f0102dd84481,207392
static voidstatic4485,207436
f0102dd8:	55                   	push   %ebpf0102dd84488,207474
f0102dd9:	89 e5                	mov    %esp,%ebpf0102dd94489,207518
f0102ddb:	53                   	push   %ebxf0102ddb4490,207567
f0102ddc:	83 ec 10             	sub    $0x10,%espf0102ddc4491,207611
f0102ddf:	e8 6b d3 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0102ddf4492,207661
f0102de4:	81 c3 28 45 01 00    	add    $0x14528,%ebxf0102de44493,207733
f0102dea:	ff 75 08             	pushl  0x8(%ebp)f0102dea4495,207801
f0102ded:	e8 d4 d8 ff ff       	call   f01006c6 <cputchar>f0102ded4496,207850
f0102df2:	83 c4 10             	add    $0x10,%espf0102df24499,207920
f0102df5:	8b 5d fc             	mov    -0x4(%ebp),%ebxf0102df54500,207970
f0102df8:	c9                   	leave  f0102df84501,208025
f0102df9:	c3                   	ret    f0102df94502,208065
f0102dfa <vcprintf>:f0102dfa4504,208106
intint4506,208128
f0102dfa:	55                   	push   %ebpf0102dfa4509,208172
f0102dfb:	89 e5                	mov    %esp,%ebpf0102dfb4510,208216
f0102dfd:	53                   	push   %ebxf0102dfd4511,208265
f0102dfe:	83 ec 14             	sub    $0x14,%espf0102dfe4512,208309
f0102e01:	e8 49 d3 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0102e014513,208359
f0102e06:	81 c3 06 45 01 00    	add    $0x14506,%ebxf0102e064514,208431
f0102e0c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)f0102e0c4516,208498
f0102e13:	ff 75 0c             	pushl  0xc(%ebp)f0102e134519,208595
f0102e16:	ff 75 08             	pushl  0x8(%ebp)f0102e164520,208644
f0102e19:	8d 45 f4             	lea    -0xc(%ebp),%eaxf0102e194521,208693
f0102e1c:	50                   	push   %eaxf0102e1c4522,208748
f0102e1d:	8d 83 cc ba fe ff    	lea    -0x14534(%ebx),%eaxf0102e1d4523,208792
f0102e23:	50                   	push   %eaxf0102e234524,208851
f0102e24:	e8 18 04 00 00       	call   f0103241 <vprintfmt>f0102e244525,208895
f0102e29:	8b 45 f4             	mov    -0xc(%ebp),%eaxf0102e294528,208970
f0102e2c:	8b 5d fc             	mov    -0x4(%ebp),%ebxf0102e2c4529,209025
f0102e2f:	c9                   	leave  f0102e2f4530,209080
f0102e30:	c3                   	ret    f0102e304531,209120
f0102e31 <cprintf>:f0102e314533,209161
intint4535,209182
f0102e31:	55                   	push   %ebpf0102e314538,209218
f0102e32:	89 e5                	mov    %esp,%ebpf0102e324539,209262
f0102e34:	83 ec 10             	sub    $0x10,%espf0102e344540,209311
f0102e37:	8d 45 0c             	lea    0xc(%ebp),%eaxf0102e374545,209405
	cnt = vcprintf(fmt, ap);cnt4546,209459
f0102e3a:	50                   	push   %eaxf0102e3a4547,209485
f0102e3b:	ff 75 08             	pushl  0x8(%ebp)f0102e3b4548,209529
f0102e3e:	e8 b7 ff ff ff       	call   f0102dfa <vcprintf>f0102e3e4549,209578
f0102e43:	c9                   	leave  f0102e434554,209666
f0102e44:	c3                   	ret    f0102e444555,209706
f0102e45 <stab_binsearch>:f0102e454557,209747
static voidstatic4560,209823
f0102e45:	55                   	push   %ebpf0102e454564,209949
f0102e46:	89 e5                	mov    %esp,%ebpf0102e464565,209993
f0102e48:	57                   	push   %edif0102e484566,210042
f0102e49:	56                   	push   %esif0102e494567,210086
f0102e4a:	53                   	push   %ebxf0102e4a4568,210130
f0102e4b:	83 ec 14             	sub    $0x14,%espf0102e4b4569,210174
f0102e4e:	89 45 ec             	mov    %eax,-0x14(%ebp)f0102e4e4570,210224
f0102e51:	89 55 e4             	mov    %edx,-0x1c(%ebp)f0102e514571,210280
f0102e54:	89 4d e0             	mov    %ecx,-0x20(%ebp)f0102e544572,210336
f0102e57:	8b 7d 08             	mov    0x8(%ebp),%edif0102e574573,210392
f0102e5a:	8b 32                	mov    (%edx),%esif0102e5a4575,210505
f0102e5c:	8b 01                	mov    (%ecx),%eaxf0102e5c4576,210556
f0102e5e:	89 45 f0             	mov    %eax,-0x10(%ebp)f0102e5e4577,210607
f0102e61:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)f0102e614578,210663
f0102e68:	eb 2f                	jmp    f0102e99 <stab_binsearch+0x54>f0102e684581,210738
f0102e6a:	83 e8 01             	sub    $0x1,%eaxf0102e6a4587,210947
f0102e6d:	39 c6                	cmp    %eax,%esif0102e6d4589,211040
f0102e6f:	7f 49                	jg     f0102eba <stab_binsearch+0x75>f0102e6f4590,211089
f0102e71:	0f b6 0a             	movzbl (%edx),%ecxf0102e714591,211159
f0102e74:	83 ea 0c             	sub    $0xc,%edxf0102e744592,211210
f0102e77:	39 f9                	cmp    %edi,%ecxf0102e774593,211259
f0102e79:	75 ef                	jne    f0102e6a <stab_binsearch+0x25>f0102e794594,211308
		any_matches = 1;any_matches4599,211422
f0102e7b:	8d 14 40             	lea    (%eax,%eax,2),%edxf0102e7b4601,211474
f0102e7e:	8b 4d ec             	mov    -0x14(%ebp),%ecxf0102e7e4602,211532
f0102e81:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edxf0102e814603,211588
f0102e85:	3b 55 0c             	cmp    0xc(%ebp),%edxf0102e854604,211649
f0102e88:	73 35                	jae    f0102ebf <stab_binsearch+0x7a>f0102e884605,211703
f0102e8a:	8b 75 e4             	mov    -0x1c(%ebp),%esif0102e8a4607,211794
f0102e8d:	89 06                	mov    %eax,(%esi)f0102e8d4608,211850
			l = true_m + 1;l4609,211901
f0102e8f:	8d 73 01             	lea    0x1(%ebx),%esif0102e8f4610,211920
		any_matches = 1;any_matches4611,211974
f0102e92:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)f0102e924612,211993
f0102e99:	3b 75 f0             	cmp    -0x10(%ebp),%esif0102e994614,212067
f0102e9c:	7f 4e                	jg     f0102eec <stab_binsearch+0xa7>f0102e9c4615,212123
f0102e9e:	8b 45 f0             	mov    -0x10(%ebp),%eaxf0102e9e4617,212233
f0102ea1:	01 f0                	add    %esi,%eaxf0102ea14618,212289
f0102ea3:	89 c3                	mov    %eax,%ebxf0102ea34619,212338
f0102ea5:	c1 eb 1f             	shr    $0x1f,%ebxf0102ea54620,212387
f0102ea8:	01 c3                	add    %eax,%ebxf0102ea84621,212437
f0102eaa:	d1 fb                	sar    %ebxf0102eaa4622,212486
f0102eac:	8d 04 5b             	lea    (%ebx,%ebx,2),%eaxf0102eac4623,212530
f0102eaf:	8b 4d ec             	mov    -0x14(%ebp),%ecxf0102eaf4624,212588
f0102eb2:	8d 54 81 04          	lea    0x4(%ecx,%eax,4),%edxf0102eb24625,212644
f0102eb6:	89 d8                	mov    %ebx,%eaxf0102eb64626,212705
f0102eb8:	eb b3                	jmp    f0102e6d <stab_binsearch+0x28>f0102eb84628,212798
			l = true_m + 1;l4629,212868
f0102eba:	8d 73 01             	lea    0x1(%ebx),%esif0102eba4630,212887
f0102ebd:	eb da                	jmp    f0102e99 <stab_binsearch+0x54>f0102ebd4632,212954
f0102ebf:	3b 55 0c             	cmp    0xc(%ebp),%edxf0102ebf4634,213064
f0102ec2:	76 14                	jbe    f0102ed8 <stab_binsearch+0x93>f0102ec24635,213118
f0102ec4:	83 e8 01             	sub    $0x1,%eaxf0102ec44637,213214
f0102ec7:	89 45 f0             	mov    %eax,-0x10(%ebp)f0102ec74638,213263
f0102eca:	8b 5d e0             	mov    -0x20(%ebp),%ebxf0102eca4639,213319
f0102ecd:	89 03                	mov    %eax,(%ebx)f0102ecd4640,213375
		any_matches = 1;any_matches4641,213426
f0102ecf:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)f0102ecf4642,213445
f0102ed6:	eb c1                	jmp    f0102e99 <stab_binsearch+0x54>f0102ed64643,213501
			r = m - 1;r4644,213571
f0102ed8:	8b 75 e4             	mov    -0x1c(%ebp),%esif0102ed84649,213693
f0102edb:	89 06                	mov    %eax,(%esi)f0102edb4650,213749
			l = m;l4651,213800
f0102edd:	83 45 0c 01          	addl   $0x1,0xc(%ebp)f0102edd4653,213821
f0102ee1:	89 c6                	mov    %eax,%esif0102ee14654,213875
		any_matches = 1;any_matches4655,213924
f0102ee3:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)f0102ee34656,213943
f0102eea:	eb ad                	jmp    f0102e99 <stab_binsearch+0x54>f0102eea4657,213999
f0102eec:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)f0102eec4662,214096
f0102ef0:	74 16                	je     f0102f08 <stab_binsearch+0xc3>f0102ef04663,214152
f0102ef2:	8b 45 e0             	mov    -0x20(%ebp),%eaxf0102ef24668,214337
f0102ef5:	8b 00                	mov    (%eax),%eaxf0102ef54669,214393
f0102ef7:	8b 75 e4             	mov    -0x1c(%ebp),%esif0102ef74671,214496
f0102efa:	8b 0e                	mov    (%esi),%ecxf0102efa4672,214552
f0102efc:	8d 14 40             	lea    (%eax,%eax,2),%edxf0102efc4673,214603
f0102eff:	8b 75 ec             	mov    -0x14(%ebp),%esif0102eff4674,214661
f0102f02:	8d 54 96 04          	lea    0x4(%esi,%edx,4),%edxf0102f024675,214717
f0102f06:	eb 12                	jmp    f0102f1a <stab_binsearch+0xd5>f0102f064677,214804
f0102f08:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf0102f084679,214910
f0102f0b:	8b 00                	mov    (%eax),%eaxf0102f0b4680,214966
f0102f0d:	83 e8 01             	sub    $0x1,%eaxf0102f0d4681,215017
f0102f10:	8b 7d e0             	mov    -0x20(%ebp),%edif0102f104682,215066
f0102f13:	89 07                	mov    %eax,(%edi)f0102f134683,215122
f0102f15:	eb 16                	jmp    f0102f2d <stab_binsearch+0xe8>f0102f154684,215173
f0102f17:	83 e8 01             	sub    $0x1,%eaxf0102f174686,215255
f0102f1a:	39 c1                	cmp    %eax,%ecxf0102f1a4688,215330
f0102f1c:	7d 0a                	jge    f0102f28 <stab_binsearch+0xe3>f0102f1c4689,215379
f0102f1e:	0f b6 1a             	movzbl (%edx),%ebxf0102f1e4691,215501
f0102f21:	83 ea 0c             	sub    $0xc,%edxf0102f214692,215552
f0102f24:	39 fb                	cmp    %edi,%ebxf0102f244693,215601
f0102f26:	75 ef                	jne    f0102f17 <stab_binsearch+0xd2>f0102f264694,215650
f0102f28:	8b 7d e4             	mov    -0x1c(%ebp),%edif0102f284697,215761
f0102f2b:	89 07                	mov    %eax,(%edi)f0102f2b4698,215817
f0102f2d:	83 c4 14             	add    $0x14,%espf0102f2d4701,215873
f0102f30:	5b                   	pop    %ebxf0102f304702,215923
f0102f31:	5e                   	pop    %esif0102f314703,215967
f0102f32:	5f                   	pop    %edif0102f324704,216011
f0102f33:	5d                   	pop    %ebpf0102f334705,216055
f0102f34:	c3                   	ret    f0102f344706,216099
f0102f35 <debuginfo_eip>:f0102f354708,216140
intint4712,216270
f0102f35:	55                   	push   %ebpf0102f354715,216333
f0102f36:	89 e5                	mov    %esp,%ebpf0102f364716,216377
f0102f38:	57                   	push   %edif0102f384717,216426
f0102f39:	56                   	push   %esif0102f394718,216470
f0102f3a:	53                   	push   %ebxf0102f3a4719,216514
f0102f3b:	83 ec 2c             	sub    $0x2c,%espf0102f3b4720,216558
f0102f3e:	e8 5b fe ff ff       	call   f0102d9e <__x86.get_pc_thunk.cx>f0102f3e4721,216608
f0102f43:	81 c1 c9 43 01 00    	add    $0x143c9,%ecxf0102f434722,216680
f0102f49:	89 4d d4             	mov    %ecx,-0x2c(%ebp)f0102f494723,216733
f0102f4c:	8b 5d 08             	mov    0x8(%ebp),%ebxf0102f4c4724,216789
f0102f4f:	8b 7d 0c             	mov    0xc(%ebp),%edif0102f4f4725,216843
	const struct Stab *stabs, *stab_end;const4726,216897
f0102f52:	8d 81 33 da fe ff    	lea    -0x125cd(%ecx),%eaxf0102f524732,217069
f0102f58:	89 07                	mov    %eax,(%edi)f0102f584733,217128
f0102f5a:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)f0102f5a4735,217200
f0102f61:	89 47 08             	mov    %eax,0x8(%edi)f0102f614737,217288
f0102f64:	c7 47 0c 09 00 00 00 	movl   $0x9,0xc(%edi)f0102f644739,217369
f0102f6b:	89 5f 10             	mov    %ebx,0x10(%edi)f0102f6b4741,217450
f0102f6e:	c7 47 14 00 00 00 00 	movl   $0x0,0x14(%edi)f0102f6e4743,217529
f0102f75:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebxf0102f754747,217641
f0102f7b:	0f 86 f4 00 00 00    	jbe    f0103075 <debuginfo_eip+0x140>f0102f7b4748,217697
f0102f81:	c7 c0 cd b3 10 f0    	mov    $0xf010b3cd,%eaxf0102f814755,217939
f0102f87:	39 81 f8 ff ff ff    	cmp    %eax,-0x8(%ecx)f0102f874756,217995
f0102f8d:	0f 86 88 01 00 00    	jbe    f010311b <debuginfo_eip+0x1e6>f0102f8d4757,218050
f0102f93:	8b 75 d4             	mov    -0x2c(%ebp),%esif0102f934758,218120
f0102f96:	c7 c0 6c d1 10 f0    	mov    $0xf010d16c,%eaxf0102f964759,218176
f0102f9c:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)f0102f9c4760,218232
f0102fa0:	0f 85 7c 01 00 00    	jne    f0103122 <debuginfo_eip+0x1ed>f0102fa04761,218287
	lfile = 0;lfile4767,218588
f0102fa6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)f0102fa64768,218600
	rfile = (stab_end - stabs) - 1;rfile4769,218656
f0102fad:	c7 c0 58 4f 10 f0    	mov    $0xf0104f58,%eaxf0102fad4770,218689
f0102fb3:	c7 c2 cc b3 10 f0    	mov    $0xf010b3cc,%edxf0102fb34771,218745
f0102fb9:	29 c2                	sub    %eax,%edxf0102fb94772,218801
f0102fbb:	c1 fa 02             	sar    $0x2,%edxf0102fbb4773,218850
f0102fbe:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edxf0102fbe4774,218899
f0102fc4:	83 ea 01             	sub    $0x1,%edxf0102fc44775,218960
f0102fc7:	89 55 e0             	mov    %edx,-0x20(%ebp)f0102fc74776,219009
f0102fca:	8d 4d e0             	lea    -0x20(%ebp),%ecxf0102fca4778,219117
f0102fcd:	8d 55 e4             	lea    -0x1c(%ebp),%edxf0102fcd4779,219173
f0102fd0:	83 ec 08             	sub    $0x8,%espf0102fd04780,219229
f0102fd3:	53                   	push   %ebxf0102fd34781,219278
f0102fd4:	6a 64                	push   $0x64f0102fd44782,219322
f0102fd6:	e8 6a fe ff ff       	call   f0102e45 <stab_binsearch>f0102fd64783,219367
f0102fdb:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf0102fdb4785,219449
f0102fde:	83 c4 10             	add    $0x10,%espf0102fde4786,219505
f0102fe1:	85 c0                	test   %eax,%eaxf0102fe14787,219555
f0102fe3:	0f 84 40 01 00 00    	je     f0103129 <debuginfo_eip+0x1f4>f0102fe34788,219604
	lfun = lfile;lfun4793,219765
f0102fe9:	89 45 dc             	mov    %eax,-0x24(%ebp)f0102fe94794,219780
	rfun = rfile;rfun4795,219836
f0102fec:	8b 45 e0             	mov    -0x20(%ebp),%eaxf0102fec4796,219851
f0102fef:	89 45 d8             	mov    %eax,-0x28(%ebp)f0102fef4797,219907
f0102ff2:	8d 4d d8             	lea    -0x28(%ebp),%ecxf0102ff24799,220014
f0102ff5:	8d 55 dc             	lea    -0x24(%ebp),%edxf0102ff54800,220070
f0102ff8:	83 ec 08             	sub    $0x8,%espf0102ff84801,220126
f0102ffb:	53                   	push   %ebxf0102ffb4802,220175
f0102ffc:	6a 24                	push   $0x24f0102ffc4803,220219
f0102ffe:	89 75 d4             	mov    %esi,-0x2c(%ebp)f0102ffe4804,220264
f0103001:	c7 c0 58 4f 10 f0    	mov    $0xf0104f58,%eaxf01030014805,220320
f0103007:	e8 39 fe ff ff       	call   f0102e45 <stab_binsearch>f01030074806,220376
f010300c:	8b 75 dc             	mov    -0x24(%ebp),%esif010300c4809,220463
f010300f:	83 c4 10             	add    $0x10,%espf010300f4810,220519
f0103012:	3b 75 d8             	cmp    -0x28(%ebp),%esif01030124811,220569
f0103015:	7f 79                	jg     f0103090 <debuginfo_eip+0x15b>f01030154812,220625
f0103017:	8d 04 76             	lea    (%esi,%esi,2),%eaxf01030174816,220847
f010301a:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010301a4817,220905
f010301d:	c7 c2 58 4f 10 f0    	mov    $0xf0104f58,%edxf010301d4818,220961
f0103023:	8d 0c 82             	lea    (%edx,%eax,4),%ecxf01030234819,221017
f0103026:	8b 11                	mov    (%ecx),%edxf01030264820,221075
f0103028:	c7 c0 6c d1 10 f0    	mov    $0xf010d16c,%eaxf01030284821,221126
f010302e:	81 e8 cd b3 10 f0    	sub    $0xf010b3cd,%eaxf010302e4822,221182
f0103034:	39 c2                	cmp    %eax,%edxf01030344823,221238
f0103036:	73 09                	jae    f0103041 <debuginfo_eip+0x10c>f01030364824,221287
f0103038:	81 c2 cd b3 10 f0    	add    $0xf010b3cd,%edxf01030384826,221410
f010303e:	89 57 08             	mov    %edx,0x8(%edi)f010303e4827,221466
f0103041:	8b 41 08             	mov    0x8(%ecx),%eaxf01030414829,221563
f0103044:	89 47 10             	mov    %eax,0x10(%edi)f01030444830,221617
		lline = lfile;lline4832,221700
		rline = rfile;rline4833,221717
f0103047:	83 ec 08             	sub    $0x8,%espf01030474837,221848
f010304a:	6a 3a                	push   $0x3af010304a4838,221897
f010304c:	ff 77 08             	pushl  0x8(%edi)f010304c4839,221942
f010304f:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010304f4840,221991
f0103052:	e8 1a 09 00 00       	call   f0103971 <strfind>f01030524841,222047
f0103057:	2b 47 08             	sub    0x8(%edi),%eaxf01030574842,222105
f010305a:	89 47 0c             	mov    %eax,0xc(%edi)f010305a4843,222159
f010305d:	8b 5d e4             	mov    -0x1c(%ebp),%ebxf010305d4850,222483
f0103060:	8d 04 76             	lea    (%esi,%esi,2),%eaxf01030604851,222539
f0103063:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf01030634852,222597
f0103066:	c7 c2 58 4f 10 f0    	mov    $0xf0104f58,%edxf01030664853,222653
f010306c:	8d 44 82 04          	lea    0x4(%edx,%eax,4),%eaxf010306c4854,222709
f0103070:	83 c4 10             	add    $0x10,%espf01030704855,222770
f0103073:	eb 29                	jmp    f010309e <debuginfo_eip+0x169>f01030734856,222820
f0103075:	83 ec 04             	sub    $0x4,%espf01030754858,222924
f0103078:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01030784859,222973
f010307b:	8d 83 3d da fe ff    	lea    -0x125c3(%ebx),%eaxf010307b4860,223029
f0103081:	50                   	push   %eaxf01030814861,223088
f0103082:	6a 7f                	push   $0x7ff01030824862,223132
f0103084:	8d 83 4a da fe ff    	lea    -0x125b6(%ebx),%eaxf01030844863,223177
f010308a:	50                   	push   %eaxf010308a4864,223236
f010308b:	e8 09 d0 ff ff       	call   f0100099 <_panic>f010308b4865,223280
f0103090:	89 5f 10             	mov    %ebx,0x10(%edi)f01030904867,223365
		lline = lfile;lline4868,223420
f0103093:	8b 75 e4             	mov    -0x1c(%ebp),%esif01030934869,223437
f0103096:	eb af                	jmp    f0103047 <debuginfo_eip+0x112>f01030964870,223493
f0103098:	83 ee 01             	sub    $0x1,%esif01030984874,223681
f010309b:	83 e8 0c             	sub    $0xc,%eaxf010309b4875,223730
f010309e:	39 f3                	cmp    %esi,%ebxf010309e4877,223802
f01030a0:	7f 3a                	jg     f01030dc <debuginfo_eip+0x1a7>f01030a04878,223851
f01030a2:	0f b6 10             	movzbl (%eax),%edxf01030a24880,223961
f01030a5:	80 fa 84             	cmp    $0x84,%dlf01030a54881,224012
f01030a8:	74 0b                	je     f01030b5 <debuginfo_eip+0x180>f01030a84882,224061
f01030aa:	80 fa 64             	cmp    $0x64,%dlf01030aa4884,224198
f01030ad:	75 e9                	jne    f0103098 <debuginfo_eip+0x163>f01030ad4885,224247
f01030af:	83 78 04 00          	cmpl   $0x0,0x4(%eax)f01030af4886,224317
f01030b3:	74 e3                	je     f0103098 <debuginfo_eip+0x163>f01030b34887,224371
f01030b5:	8d 14 76             	lea    (%esi,%esi,2),%edxf01030b54889,224509
f01030b8:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01030b84890,224567
f01030bb:	c7 c0 58 4f 10 f0    	mov    $0xf0104f58,%eaxf01030bb4891,224623
f01030c1:	8b 14 90             	mov    (%eax,%edx,4),%edxf01030c14892,224679
f01030c4:	c7 c0 6c d1 10 f0    	mov    $0xf010d16c,%eaxf01030c44893,224737
f01030ca:	81 e8 cd b3 10 f0    	sub    $0xf010b3cd,%eaxf01030ca4894,224793
f01030d0:	39 c2                	cmp    %eax,%edxf01030d04895,224849
f01030d2:	73 08                	jae    f01030dc <debuginfo_eip+0x1a7>f01030d24896,224898
f01030d4:	81 c2 cd b3 10 f0    	add    $0xf010b3cd,%edxf01030d44898,225018
f01030da:	89 17                	mov    %edx,(%edi)f01030da4899,225074
f01030dc:	8b 5d dc             	mov    -0x24(%ebp),%ebxf01030dc4905,225261
f01030df:	8b 4d d8             	mov    -0x28(%ebp),%ecxf01030df4906,225317
f01030e2:	b8 00 00 00 00       	mov    $0x0,%eaxf01030e24913,225504
f01030e7:	39 cb                	cmp    %ecx,%ebxf01030e74915,225571
f01030e9:	7d 4a                	jge    f0103135 <debuginfo_eip+0x200>f01030e94916,225620
f01030eb:	8d 53 01             	lea    0x1(%ebx),%edxf01030eb4918,225715
f01030ee:	8d 1c 5b             	lea    (%ebx,%ebx,2),%ebxf01030ee4919,225769
f01030f1:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf01030f14920,225827
f01030f4:	c7 c0 58 4f 10 f0    	mov    $0xf0104f58,%eaxf01030f44921,225883
f01030fa:	8d 44 98 10          	lea    0x10(%eax,%ebx,4),%eaxf01030fa4922,225939
f01030fe:	eb 07                	jmp    f0103107 <debuginfo_eip+0x1d2>f01030fe4923,226001
f0103100:	83 47 14 01          	addl   $0x1,0x14(%edi)f01031004925,226095
f0103104:	83 c2 01             	add    $0x1,%edxf01031044927,226166
f0103107:	39 d1                	cmp    %edx,%ecxf01031074929,226240
f0103109:	74 25                	je     f0103130 <debuginfo_eip+0x1fb>f01031094930,226289
f010310b:	83 c0 0c             	add    $0xc,%eaxf010310b4931,226359
f010310e:	80 78 f4 a0          	cmpb   $0xa0,-0xc(%eax)f010310e4933,226462
f0103112:	74 ec                	je     f0103100 <debuginfo_eip+0x1cb>f01031124934,226518
f0103114:	b8 00 00 00 00       	mov    $0x0,%eaxf01031144936,226599
f0103119:	eb 1a                	jmp    f0103135 <debuginfo_eip+0x200>f01031194937,226648
f010311b:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf010311b4939,226731
f0103120:	eb 13                	jmp    f0103135 <debuginfo_eip+0x200>f01031204940,226787
f0103122:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf01031224941,226857
f0103127:	eb 0c                	jmp    f0103135 <debuginfo_eip+0x200>f01031274942,226913
f0103129:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf01031294944,226996
f010312e:	eb 05                	jmp    f0103135 <debuginfo_eip+0x200>f010312e4945,227052
f0103130:	b8 00 00 00 00       	mov    $0x0,%eaxf01031304947,227133
f0103135:	8d 65 f4             	lea    -0xc(%ebp),%espf01031354949,227184
f0103138:	5b                   	pop    %ebxf01031384950,227239
f0103139:	5e                   	pop    %esif01031394951,227283
f010313a:	5f                   	pop    %edif010313a4952,227327
f010313b:	5d                   	pop    %ebpf010313b4953,227371
f010313c:	c3                   	ret    f010313c4954,227415
f010313d <printnum>:f010313d4956,227456
static voidstatic4959,227546
f010313d:	55                   	push   %ebpf010313d4963,227672
f010313e:	89 e5                	mov    %esp,%ebpf010313e4964,227716
f0103140:	57                   	push   %edif01031404965,227765
f0103141:	56                   	push   %esif01031414966,227809
f0103142:	53                   	push   %ebxf01031424967,227853
f0103143:	83 ec 2c             	sub    $0x2c,%espf01031434968,227897
f0103146:	e8 53 fc ff ff       	call   f0102d9e <__x86.get_pc_thunk.cx>f01031464969,227947
f010314b:	81 c1 c1 41 01 00    	add    $0x141c1,%ecxf010314b4970,228019
f0103151:	89 4d e4             	mov    %ecx,-0x1c(%ebp)f01031514971,228072
f0103154:	89 c7                	mov    %eax,%edif01031544972,228128
f0103156:	89 d6                	mov    %edx,%esif01031564973,228177
f0103158:	8b 45 08             	mov    0x8(%ebp),%eaxf01031584974,228226
f010315b:	8b 55 0c             	mov    0xc(%ebp),%edxf010315b4975,228280
f010315e:	89 45 d0             	mov    %eax,-0x30(%ebp)f010315e4976,228334
f0103161:	89 55 d4             	mov    %edx,-0x2c(%ebp)f01031614977,228390
f0103164:	8b 4d 10             	mov    0x10(%ebp),%ecxf01031644980,228534
f0103167:	bb 00 00 00 00       	mov    $0x0,%ebxf01031674981,228589
f010316c:	89 4d d8             	mov    %ecx,-0x28(%ebp)f010316c4982,228638
f010316f:	89 5d dc             	mov    %ebx,-0x24(%ebp)f010316f4983,228694
f0103172:	39 d3                	cmp    %edx,%ebxf01031724984,228750
f0103174:	72 09                	jb     f010317f <printnum+0x42>f01031744985,228799
f0103176:	39 45 10             	cmp    %eax,0x10(%ebp)f01031764986,228863
f0103179:	0f 87 83 00 00 00    	ja     f0103202 <printnum+0xc5>f01031794987,228918
f010317f:	83 ec 0c             	sub    $0xc,%espf010317f4989,229044
f0103182:	ff 75 18             	pushl  0x18(%ebp)f01031824990,229093
f0103185:	8b 45 14             	mov    0x14(%ebp),%eaxf01031854991,229143
f0103188:	8d 58 ff             	lea    -0x1(%eax),%ebxf01031884992,229198
f010318b:	53                   	push   %ebxf010318b4993,229253
f010318c:	ff 75 10             	pushl  0x10(%ebp)f010318c4994,229297
f010318f:	83 ec 08             	sub    $0x8,%espf010318f4995,229347
f0103192:	ff 75 dc             	pushl  -0x24(%ebp)f01031924996,229396
f0103195:	ff 75 d8             	pushl  -0x28(%ebp)f01031954997,229447
f0103198:	ff 75 d4             	pushl  -0x2c(%ebp)f01031984998,229498
f010319b:	ff 75 d0             	pushl  -0x30(%ebp)f010319b4999,229549
f010319e:	8b 5d e4             	mov    -0x1c(%ebp),%ebxf010319e5000,229600
f01031a1:	e8 ea 09 00 00       	call   f0103b90 <__udivdi3>f01031a15001,229656
f01031a6:	83 c4 18             	add    $0x18,%espf01031a65002,229716
f01031a9:	52                   	push   %edxf01031a95003,229766
f01031aa:	50                   	push   %eaxf01031aa5004,229810
f01031ab:	89 f2                	mov    %esi,%edxf01031ab5005,229854
f01031ad:	89 f8                	mov    %edi,%eaxf01031ad5006,229903
f01031af:	e8 89 ff ff ff       	call   f010313d <printnum>f01031af5007,229952
f01031b4:	83 c4 20             	add    $0x20,%espf01031b45008,230011
f01031b7:	eb 13                	jmp    f01031cc <printnum+0x8f>f01031b75009,230061
f01031b9:	83 ec 08             	sub    $0x8,%espf01031b95014,230237
f01031bc:	56                   	push   %esif01031bc5015,230286
f01031bd:	ff 75 18             	pushl  0x18(%ebp)f01031bd5016,230330
f01031c0:	ff d7                	call   *%edif01031c05017,230380
f01031c2:	83 c4 10             	add    $0x10,%espf01031c25018,230425
f01031c5:	83 eb 01             	sub    $0x1,%ebxf01031c55020,230497
f01031c8:	85 db                	test   %ebx,%ebxf01031c85021,230546
f01031ca:	7f ed                	jg     f01031b9 <printnum+0x7c>f01031ca5022,230595
f01031cc:	83 ec 08             	sub    $0x8,%espf01031cc5027,230761
f01031cf:	56                   	push   %esif01031cf5028,230810
f01031d0:	83 ec 04             	sub    $0x4,%espf01031d05029,230854
f01031d3:	ff 75 dc             	pushl  -0x24(%ebp)f01031d35030,230903
f01031d6:	ff 75 d8             	pushl  -0x28(%ebp)f01031d65031,230954
f01031d9:	ff 75 d4             	pushl  -0x2c(%ebp)f01031d95032,231005
f01031dc:	ff 75 d0             	pushl  -0x30(%ebp)f01031dc5033,231056
f01031df:	8b 75 e4             	mov    -0x1c(%ebp),%esif01031df5034,231107
f01031e2:	89 f3                	mov    %esi,%ebxf01031e25035,231163
f01031e4:	e8 c7 0a 00 00       	call   f0103cb0 <__umoddi3>f01031e45036,231212
f01031e9:	83 c4 14             	add    $0x14,%espf01031e95037,231272
f01031ec:	0f be 84 06 58 da fe 	movsbl -0x125a8(%esi,%eax,1),%eaxf01031ec5038,231322
f01031f3:	ff f01031f35039,231388
f01031f4:	50                   	push   %eaxf01031f45040,231402
f01031f5:	ff d7                	call   *%edif01031f55041,231446
f01031f7:	83 c4 10             	add    $0x10,%espf01031f75043,231493
f01031fa:	8d 65 f4             	lea    -0xc(%ebp),%espf01031fa5044,231543
f01031fd:	5b                   	pop    %ebxf01031fd5045,231598
f01031fe:	5e                   	pop    %esif01031fe5046,231642
f01031ff:	5f                   	pop    %edif01031ff5047,231686
f0103200:	5d                   	pop    %ebpf01032005048,231730
f0103201:	c3                   	ret    f01032015049,231774
f0103202:	8b 5d 14             	mov    0x14(%ebp),%ebxf01032025050,231814
f0103205:	eb be                	jmp    f01031c5 <printnum+0x88>f01032055051,231869
f0103207 <sprintputch>:f01032075053,231934
static voidstatic5057,231972
f0103207:	55                   	push   %ebpf01032075060,232027
f0103208:	89 e5                	mov    %esp,%ebpf01032085061,232071
f010320a:	8b 45 0c             	mov    0xc(%ebp),%eaxf010320a5062,232120
f010320d:	83 40 08 01          	addl   $0x1,0x8(%eax)f010320d5064,232185
f0103211:	8b 10                	mov    (%eax),%edxf01032115066,232262
f0103213:	3b 50 04             	cmp    0x4(%eax),%edxf01032135067,232313
f0103216:	73 0a                	jae    f0103222 <sprintputch+0x1b>f01032165068,232367
f0103218:	8d 4a 01             	lea    0x1(%edx),%ecxf01032185070,232452
f010321b:	89 08                	mov    %ecx,(%eax)f010321b5071,232506
f010321d:	8b 45 08             	mov    0x8(%ebp),%eaxf010321d5072,232557
f0103220:	88 02                	mov    %al,(%edx)f01032205073,232611
f0103222:	5d                   	pop    %ebpf01032225075,232663
f0103223:	c3                   	ret    f01032235076,232707
f0103224 <printfmt>:f01032245078,232748
f0103224:	55                   	push   %ebpf01032245080,232771
f0103225:	89 e5                	mov    %esp,%ebpf01032255081,232815
f0103227:	83 ec 08             	sub    $0x8,%espf01032275082,232864
f010322a:	8d 45 14             	lea    0x14(%ebp),%eaxf010322a5084,232933
f010322d:	50                   	push   %eaxf010322d5086,233024
f010322e:	ff 75 10             	pushl  0x10(%ebp)f010322e5087,233068
f0103231:	ff 75 0c             	pushl  0xc(%ebp)f01032315088,233118
f0103234:	ff 75 08             	pushl  0x8(%ebp)f01032345089,233167
f0103237:	e8 05 00 00 00       	call   f0103241 <vprintfmt>f01032375090,233216
f010323c:	83 c4 10             	add    $0x10,%espf010323c5092,233278
f010323f:	c9                   	leave  f010323f5093,233328
f0103240:	c3                   	ret    f01032405094,233368
f0103241 <vprintfmt>:f01032415096,233409
f0103241:	55                   	push   %ebpf01032415098,233433
f0103242:	89 e5                	mov    %esp,%ebpf01032425099,233477
f0103244:	57                   	push   %edif01032445100,233526
f0103245:	56                   	push   %esif01032455101,233570
f0103246:	53                   	push   %ebxf01032465102,233614
f0103247:	83 ec 2c             	sub    $0x2c,%espf01032475103,233658
f010324a:	e8 00 cf ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f010324a5104,233708
f010324f:	81 c3 bd 40 01 00    	add    $0x140bd,%ebxf010324f5105,233780
f0103255:	8b 75 0c             	mov    0xc(%ebp),%esif01032555106,233833
f0103258:	8b 7d 10             	mov    0x10(%ebp),%edif01032585107,233887
f010325b:	e9 8e 03 00 00       	jmp    f01035ee <.L35+0x48>f010325b5108,233942
		padc = ' ';padc5109,234002
f0103260:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)f01032605110,234016
		altflag = 0;altflag5111,234073
f0103264:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)f01032645112,234088
		precision = -1;precision5113,234144
f010326b:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)f010326b5114,234162
		width = -1;width5115,234225
f0103272:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)f01032725116,234239
		lflag = 0;lflag5117,234302
f0103279:	b9 00 00 00 00       	mov    $0x0,%ecxf01032795118,234315
f010327e:	89 4d cc             	mov    %ecx,-0x34(%ebp)f010327e5119,234364
f0103281:	8d 47 01             	lea    0x1(%edi),%eaxf01032815121,234463
f0103284:	89 45 e4             	mov    %eax,-0x1c(%ebp)f01032845122,234517
f0103287:	0f b6 17             	movzbl (%edi),%edxf01032875123,234573
f010328a:	8d 42 dd             	lea    -0x23(%edx),%eaxf010328a5124,234624
f010328d:	3c 55                	cmp    $0x55,%alf010328d5125,234680
f010328f:	0f 87 e1 03 00 00    	ja     f0103676 <.L22>f010328f5126,234729
f0103295:	0f b6 c0             	movzbl %al,%eaxf01032955127,234784
f0103298:	89 d9                	mov    %ebx,%ecxf01032985128,234832
f010329a:	03 8c 83 e4 da fe ff 	add    -0x1251c(%ebx,%eax,4),%ecxf010329a5129,234881
f01032a1:	ff e1                	jmp    *%ecxf01032a15130,234947
f01032a3 <.L67>:f01032a35132,234993
f01032a3:	8b 7d e4             	mov    -0x1c(%ebp),%edif01032a35133,235010
			padc = '-';padc5134,235066
f01032a6:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)f01032a65135,235081
f01032aa:	eb d5                	jmp    f0103281 <vprintfmt+0x40>f01032aa5136,235138
f01032ac <.L28>:f01032ac5138,235204
f01032ac:	8b 7d e4             	mov    -0x1c(%ebp),%edif01032ac5140,235264
			padc = '0';padc5141,235320
f01032af:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)f01032af5142,235335
f01032b3:	eb cc                	jmp    f0103281 <vprintfmt+0x40>f01032b35143,235392
f01032b5 <.L29>:f01032b55145,235458
f01032b5:	0f b6 d2             	movzbl %dl,%edxf01032b55147,235518
f01032b8:	8b 7d e4             	mov    -0x1c(%ebp),%edif01032b85148,235566
f01032bb:	b8 00 00 00 00       	mov    $0x0,%eaxf01032bb5150,235656
				precision = precision * 10 + ch - '0';precision5151,235705
f01032c0:	8d 04 80             	lea    (%eax,%eax,4),%eaxf01032c05152,235748
f01032c3:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eaxf01032c35153,235806
				ch = *fmt;ch5154,235869
f01032c7:	0f be 17             	movsbl (%edi),%edxf01032c75155,235884
f01032ca:	8d 4a d0             	lea    -0x30(%edx),%ecxf01032ca5157,235965
f01032cd:	83 f9 09             	cmp    $0x9,%ecxf01032cd5158,236021
f01032d0:	77 55                	ja     f0103327 <.L23+0xf>f01032d05159,236070
f01032d2:	83 c7 01             	add    $0x1,%edif01032d25161,236163
				precision = precision * 10 + ch - '0';precision5162,236212
f01032d5:	eb e9                	jmp    f01032c0 <.L29+0xb>f01032d55163,236255
f01032d7 <.L26>:f01032d75165,236315
			precision = va_arg(ap, int);precision5166,236332
f01032d7:	8b 45 14             	mov    0x14(%ebp),%eaxf01032d75167,236364
f01032da:	8b 00                	mov    (%eax),%eaxf01032da5168,236419
f01032dc:	89 45 d0             	mov    %eax,-0x30(%ebp)f01032dc5169,236470
f01032df:	8b 45 14             	mov    0x14(%ebp),%eaxf01032df5170,236526
f01032e2:	8d 40 04             	lea    0x4(%eax),%eaxf01032e25171,236581
f01032e5:	89 45 14             	mov    %eax,0x14(%ebp)f01032e55172,236635
f01032e8:	8b 7d e4             	mov    -0x1c(%ebp),%edif01032e85174,236733
f01032eb:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)f01032eb5176,236807
f01032ef:	79 90                	jns    f0103281 <vprintfmt+0x40>f01032ef5177,236863
				width = precision, precision = -1;width5178,236928
f01032f1:	8b 45 d0             	mov    -0x30(%ebp),%eaxf01032f15179,236967
f01032f4:	89 45 e0             	mov    %eax,-0x20(%ebp)f01032f45180,237023
f01032f7:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)f01032f75181,237079
f01032fe:	eb 81                	jmp    f0103281 <vprintfmt+0x40>f01032fe5182,237142
f0103300 <.L27>:f01033005184,237208
f0103300:	8b 45 e0             	mov    -0x20(%ebp),%eaxf01033005185,237225
f0103303:	85 c0                	test   %eax,%eaxf01033035186,237281
f0103305:	ba 00 00 00 00       	mov    $0x0,%edxf01033055187,237330
f010330a:	0f 49 d0             	cmovns %eax,%edxf010330a5188,237379
f010330d:	89 55 e0             	mov    %edx,-0x20(%ebp)f010330d5189,237428
f0103310:	8b 7d e4             	mov    -0x1c(%ebp),%edif01033105191,237527
f0103313:	e9 69 ff ff ff       	jmp    f0103281 <vprintfmt+0x40>f01033135192,237583
f0103318 <.L23>:f01033185194,237649
f0103318:	8b 7d e4             	mov    -0x1c(%ebp),%edif01033185195,237666
			altflag = 1;altflag5196,237722
f010331b:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)f010331b5197,237738
f0103322:	e9 5a ff ff ff       	jmp    f0103281 <vprintfmt+0x40>f01033225199,237812
f0103327:	89 45 d0             	mov    %eax,-0x30(%ebp)f01033275200,237877
f010332a:	eb bf                	jmp    f01032eb <.L26+0x14>f010332a5201,237933
f010332c <.L33>:f010332c5203,237994
f010332c:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)f010332c5205,238023
f0103330:	8b 7d e4             	mov    -0x1c(%ebp),%edif01033305207,238122
f0103333:	e9 49 ff ff ff       	jmp    f0103281 <vprintfmt+0x40>f01033335209,238196
f0103338 <.L30>:f01033385211,238262
f0103338:	8b 45 14             	mov    0x14(%ebp),%eaxf01033385213,238314
f010333b:	8d 78 04             	lea    0x4(%eax),%edif010333b5214,238369
f010333e:	83 ec 08             	sub    $0x8,%espf010333e5215,238423
f0103341:	56                   	push   %esif01033415216,238472
f0103342:	ff 30                	pushl  (%eax)f01033425217,238516
f0103344:	ff 55 08             	call   *0x8(%ebp)f01033445218,238562
f0103347:	83 c4 10             	add    $0x10,%espf01033475220,238622
f010334a:	89 7d 14             	mov    %edi,0x14(%ebp)f010334a5222,238707
f010334d:	e9 99 02 00 00       	jmp    f01035eb <.L35+0x45>f010334d5224,238772
f0103352 <.L32>:f01033525226,238833
			err = va_arg(ap, int);err5227,238850
f0103352:	8b 45 14             	mov    0x14(%ebp),%eaxf01033525228,238876
f0103355:	8d 78 04             	lea    0x4(%eax),%edif01033555229,238931
f0103358:	8b 00                	mov    (%eax),%eaxf01033585230,238985
f010335a:	99                   	cltd   f010335a5231,239036
f010335b:	31 d0                	xor    %edx,%eaxf010335b5232,239076
f010335d:	29 d0                	sub    %edx,%eaxf010335d5233,239125
f010335f:	83 f8 06             	cmp    $0x6,%eaxf010335f5235,239233
f0103362:	7f 27                	jg     f010338b <.L32+0x39>f01033625236,239282
f0103364:	8b 94 83 1c 1d 00 00 	mov    0x1d1c(%ebx,%eax,4),%edxf01033645237,239342
f010336b:	85 d2                	test   %edx,%edxf010336b5238,239406
f010336d:	74 1c                	je     f010338b <.L32+0x39>f010336d5239,239455
f010336f:	52                   	push   %edxf010336f5241,239553
f0103370:	8d 83 88 d7 fe ff    	lea    -0x12878(%ebx),%eaxf01033705242,239597
f0103376:	50                   	push   %eaxf01033765243,239656
f0103377:	56                   	push   %esif01033775244,239700
f0103378:	ff 75 08             	pushl  0x8(%ebp)f01033785245,239744
f010337b:	e8 a4 fe ff ff       	call   f0103224 <printfmt>f010337b5246,239793
f0103380:	83 c4 10             	add    $0x10,%espf01033805247,239852
			err = va_arg(ap, int);err5248,239902
f0103383:	89 7d 14             	mov    %edi,0x14(%ebp)f01033835249,239928
f0103386:	e9 60 02 00 00       	jmp    f01035eb <.L35+0x45>f01033865250,239983
f010338b:	50                   	push   %eaxf010338b5252,240089
f010338c:	8d 83 70 da fe ff    	lea    -0x12590(%ebx),%eaxf010338c5253,240133
f0103392:	50                   	push   %eaxf01033925254,240192
f0103393:	56                   	push   %esif01033935255,240236
f0103394:	ff 75 08             	pushl  0x8(%ebp)f01033945256,240280
f0103397:	e8 88 fe ff ff       	call   f0103224 <printfmt>f01033975257,240329
f010339c:	83 c4 10             	add    $0x10,%espf010339c5258,240388
			err = va_arg(ap, int);err5259,240438
f010339f:	89 7d 14             	mov    %edi,0x14(%ebp)f010339f5260,240464
f01033a2:	e9 44 02 00 00       	jmp    f01035eb <.L35+0x45>f01033a25262,240565
f01033a7 <.L36>:f01033a75264,240626
f01033a7:	8b 45 14             	mov    0x14(%ebp),%eaxf01033a75266,240684
f01033aa:	83 c0 04             	add    $0x4,%eaxf01033aa5267,240739
f01033ad:	89 45 cc             	mov    %eax,-0x34(%ebp)f01033ad5268,240788
f01033b0:	8b 45 14             	mov    0x14(%ebp),%eaxf01033b05269,240844
f01033b3:	8b 38                	mov    (%eax),%edif01033b35270,240899
				p = "(null)";p5271,240950
f01033b5:	85 ff                	test   %edi,%edif01033b55272,240968
f01033b7:	8d 83 69 da fe ff    	lea    -0x12597(%ebx),%eaxf01033b75273,241017
f01033bd:	0f 44 f8             	cmove  %eax,%edif01033bd5274,241076
f01033c0:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)f01033c05276,241158
f01033c4:	0f 8e b5 00 00 00    	jle    f010347f <.L36+0xd8>f01033c45277,241214
f01033ca:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)f01033ca5278,241274
f01033ce:	75 08                	jne    f01033d8 <.L36+0x31>f01033ce5279,241331
f01033d0:	89 75 0c             	mov    %esi,0xc(%ebp)f01033d05280,241391
f01033d3:	8b 75 d0             	mov    -0x30(%ebp),%esif01033d35281,241445
f01033d6:	eb 6d                	jmp    f0103445 <.L36+0x9e>f01033d65282,241501
f01033d8:	83 ec 08             	sub    $0x8,%espf01033d85284,241622
f01033db:	ff 75 d0             	pushl  -0x30(%ebp)f01033db5285,241671
f01033de:	57                   	push   %edif01033de5286,241722
f01033df:	e8 49 04 00 00       	call   f010382d <strnlen>f01033df5287,241766
f01033e4:	8b 55 e0             	mov    -0x20(%ebp),%edxf01033e45288,241824
f01033e7:	29 c2                	sub    %eax,%edxf01033e75289,241880
f01033e9:	89 55 c8             	mov    %edx,-0x38(%ebp)f01033e95290,241929
f01033ec:	83 c4 10             	add    $0x10,%espf01033ec5291,241985
f01033ef:	0f be 45 d4          	movsbl -0x2c(%ebp),%eaxf01033ef5293,242061
f01033f3:	89 45 e0             	mov    %eax,-0x20(%ebp)f01033f35294,242117
f01033f6:	89 7d d4             	mov    %edi,-0x2c(%ebp)f01033f65295,242173
f01033f9:	89 d7                	mov    %edx,%edif01033f95296,242229
f01033fb:	eb 10                	jmp    f010340d <.L36+0x66>f01033fb5298,242339
f01033fd:	83 ec 08             	sub    $0x8,%espf01033fd5300,242425
f0103400:	56                   	push   %esif01034005301,242474
f0103401:	ff 75 e0             	pushl  -0x20(%ebp)f01034015302,242518
f0103404:	ff 55 08             	call   *0x8(%ebp)f01034045303,242569
f0103407:	83 ef 01             	sub    $0x1,%edif01034075305,242680
f010340a:	83 c4 10             	add    $0x10,%espf010340a5306,242729
f010340d:	85 ff                	test   %edi,%edif010340d5307,242779
f010340f:	7f ec                	jg     f01033fd <.L36+0x56>f010340f5308,242828
f0103411:	8b 7d d4             	mov    -0x2c(%ebp),%edif01034115309,242888
f0103414:	8b 55 c8             	mov    -0x38(%ebp),%edxf01034145310,242944
f0103417:	85 d2                	test   %edx,%edxf01034175311,243000
f0103419:	b8 00 00 00 00       	mov    $0x0,%eaxf01034195312,243049
f010341e:	0f 49 c2             	cmovns %edx,%eaxf010341e5313,243098
f0103421:	29 c2                	sub    %eax,%edxf01034215314,243147
f0103423:	89 55 e0             	mov    %edx,-0x20(%ebp)f01034235315,243196
f0103426:	89 75 0c             	mov    %esi,0xc(%ebp)f01034265316,243252
f0103429:	8b 75 d0             	mov    -0x30(%ebp),%esif01034295317,243306
f010342c:	eb 17                	jmp    f0103445 <.L36+0x9e>f010342c5318,243362
f010342e:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)f010342e5320,243465
f0103432:	75 30                	jne    f0103464 <.L36+0xbd>f01034325321,243521
f0103434:	83 ec 08             	sub    $0x8,%espf01034345323,243605
f0103437:	ff 75 0c             	pushl  0xc(%ebp)f01034375324,243654
f010343a:	50                   	push   %eaxf010343a5325,243703
f010343b:	ff 55 08             	call   *0x8(%ebp)f010343b5326,243747
f010343e:	83 c4 10             	add    $0x10,%espf010343e5327,243797
f0103441:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)f01034415329,243926
f0103445:	83 c7 01             	add    $0x1,%edif01034455330,243982
f0103448:	0f b6 57 ff          	movzbl -0x1(%edi),%edxf01034485331,244031
f010344c:	0f be c2             	movsbl %dl,%eaxf010344c5332,244086
f010344f:	85 c0                	test   %eax,%eaxf010344f5333,244134
f0103451:	74 52                	je     f01034a5 <.L36+0xfe>f01034515334,244183
f0103453:	85 f6                	test   %esi,%esif01034535335,244243
f0103455:	78 d7                	js     f010342e <.L36+0x87>f01034555336,244292
f0103457:	83 ee 01             	sub    $0x1,%esif01034575337,244352
f010345a:	79 d2                	jns    f010342e <.L36+0x87>f010345a5338,244401
f010345c:	8b 75 0c             	mov    0xc(%ebp),%esif010345c5339,244461
f010345f:	8b 7d e0             	mov    -0x20(%ebp),%edif010345f5340,244515
f0103462:	eb 32                	jmp    f0103496 <.L36+0xef>f01034625341,244571
f0103464:	0f be d2             	movsbl %dl,%edxf01034645343,244674
f0103467:	83 ea 20             	sub    $0x20,%edxf01034675344,244722
f010346a:	83 fa 5e             	cmp    $0x5e,%edxf010346a5345,244772
f010346d:	76 c5                	jbe    f0103434 <.L36+0x8d>f010346d5346,244822
f010346f:	83 ec 08             	sub    $0x8,%espf010346f5348,244907
f0103472:	ff 75 0c             	pushl  0xc(%ebp)f01034725349,244956
f0103475:	6a 3f                	push   $0x3ff01034755350,245005
f0103477:	ff 55 08             	call   *0x8(%ebp)f01034775351,245050
f010347a:	83 c4 10             	add    $0x10,%espf010347a5352,245100
f010347d:	eb c2                	jmp    f0103441 <.L36+0x9a>f010347d5353,245150
f010347f:	89 75 0c             	mov    %esi,0xc(%ebp)f010347f5354,245210
f0103482:	8b 75 d0             	mov    -0x30(%ebp),%esif01034825355,245264
f0103485:	eb be                	jmp    f0103445 <.L36+0x9e>f01034855356,245320
f0103487:	83 ec 08             	sub    $0x8,%espf01034875358,245404
f010348a:	56                   	push   %esif010348a5359,245453
f010348b:	6a 20                	push   $0x20f010348b5360,245497
f010348d:	ff 55 08             	call   *0x8(%ebp)f010348d5361,245542
f0103490:	83 ef 01             	sub    $0x1,%edif01034905363,245622
f0103493:	83 c4 10             	add    $0x10,%espf01034935364,245671
f0103496:	85 ff                	test   %edi,%edif01034965365,245721
f0103498:	7f ed                	jg     f0103487 <.L36+0xe0>f01034985366,245770
f010349a:	8b 45 cc             	mov    -0x34(%ebp),%eaxf010349a5368,245871
f010349d:	89 45 14             	mov    %eax,0x14(%ebp)f010349d5369,245927
f01034a0:	e9 46 01 00 00       	jmp    f01035eb <.L35+0x45>f01034a05370,245982
f01034a5:	8b 7d e0             	mov    -0x20(%ebp),%edif01034a55371,246042
f01034a8:	8b 75 0c             	mov    0xc(%ebp),%esif01034a85372,246098
f01034ab:	eb e9                	jmp    f0103496 <.L36+0xef>f01034ab5373,246152
f01034ad <.L31>:f01034ad5375,246213
f01034ad:	8b 4d cc             	mov    -0x34(%ebp),%ecxf01034ad5376,246230
f01034b0:	83 f9 01             	cmp    $0x1,%ecxf01034b05378,246303
f01034b3:	7e 40                	jle    f01034f5 <.L31+0x48>f01034b35379,246352
f01034b5:	8b 45 14             	mov    0x14(%ebp),%eaxf01034b55381,246445
f01034b8:	8b 50 04             	mov    0x4(%eax),%edxf01034b85382,246500
f01034bb:	8b 00                	mov    (%eax),%eaxf01034bb5383,246554
f01034bd:	89 45 d8             	mov    %eax,-0x28(%ebp)f01034bd5384,246605
f01034c0:	89 55 dc             	mov    %edx,-0x24(%ebp)f01034c05385,246661
f01034c3:	8b 45 14             	mov    0x14(%ebp),%eaxf01034c35386,246717
f01034c6:	8d 40 08             	lea    0x8(%eax),%eaxf01034c65387,246772
f01034c9:	89 45 14             	mov    %eax,0x14(%ebp)f01034c95388,246826
f01034cc:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)f01034cc5390,246911
f01034d0:	79 55                	jns    f0103527 <.L31+0x7a>f01034d05391,246967
f01034d2:	83 ec 08             	sub    $0x8,%espf01034d25393,247051
f01034d5:	56                   	push   %esif01034d55394,247100
f01034d6:	6a 2d                	push   $0x2df01034d65395,247144
f01034d8:	ff 55 08             	call   *0x8(%ebp)f01034d85396,247189
				num = -(long long) num;num5397,247239
f01034db:	8b 55 d8             	mov    -0x28(%ebp),%edxf01034db5398,247267
f01034de:	8b 4d dc             	mov    -0x24(%ebp),%ecxf01034de5399,247323
f01034e1:	f7 da                	neg    %edxf01034e15400,247379
f01034e3:	83 d1 00             	adc    $0x0,%ecxf01034e35401,247423
f01034e6:	f7 d9                	neg    %ecxf01034e65402,247472
f01034e8:	83 c4 10             	add    $0x10,%espf01034e85403,247516
			base = 10;base5404,247566
f01034eb:	b8 0a 00 00 00       	mov    $0xa,%eaxf01034eb5405,247580
f01034f0:	e9 db 00 00 00       	jmp    f01035d0 <.L35+0x2a>f01034f05406,247629
f01034f5:	85 c9                	test   %ecx,%ecxf01034f55408,247706
f01034f7:	75 17                	jne    f0103510 <.L31+0x63>f01034f75409,247755
f01034f9:	8b 45 14             	mov    0x14(%ebp),%eaxf01034f95411,247842
f01034fc:	8b 00                	mov    (%eax),%eaxf01034fc5412,247897
f01034fe:	89 45 d8             	mov    %eax,-0x28(%ebp)f01034fe5413,247948
f0103501:	99                   	cltd   f01035015414,248004
f0103502:	89 55 dc             	mov    %edx,-0x24(%ebp)f01035025415,248044
f0103505:	8b 45 14             	mov    0x14(%ebp),%eaxf01035055416,248100
f0103508:	8d 40 04             	lea    0x4(%eax),%eaxf01035085417,248155
f010350b:	89 45 14             	mov    %eax,0x14(%ebp)f010350b5418,248209
f010350e:	eb bc                	jmp    f01034cc <.L31+0x1f>f010350e5419,248264
f0103510:	8b 45 14             	mov    0x14(%ebp),%eaxf01035105421,248352
f0103513:	8b 00                	mov    (%eax),%eaxf01035135422,248407
f0103515:	89 45 d8             	mov    %eax,-0x28(%ebp)f01035155423,248458
f0103518:	99                   	cltd   f01035185424,248514
f0103519:	89 55 dc             	mov    %edx,-0x24(%ebp)f01035195425,248554
f010351c:	8b 45 14             	mov    0x14(%ebp),%eaxf010351c5426,248610
f010351f:	8d 40 04             	lea    0x4(%eax),%eaxf010351f5427,248665
f0103522:	89 45 14             	mov    %eax,0x14(%ebp)f01035225428,248719
f0103525:	eb a5                	jmp    f01034cc <.L31+0x1f>f01035255429,248774
			num = getint(&ap, lflag);num5430,248834
f0103527:	8b 55 d8             	mov    -0x28(%ebp),%edxf01035275431,248863
f010352a:	8b 4d dc             	mov    -0x24(%ebp),%ecxf010352a5432,248919
			base = 10;base5433,248975
f010352d:	b8 0a 00 00 00       	mov    $0xa,%eaxf010352d5434,248989
f0103532:	e9 99 00 00 00       	jmp    f01035d0 <.L35+0x2a>f01035325435,249038
f0103537 <.L37>:f01035375437,249099
f0103537:	8b 4d cc             	mov    -0x34(%ebp),%ecxf01035375438,249116
f010353a:	83 f9 01             	cmp    $0x1,%ecxf010353a5440,249189
f010353d:	7e 15                	jle    f0103554 <.L37+0x1d>f010353d5441,249238
f010353f:	8b 45 14             	mov    0x14(%ebp),%eaxf010353f5443,249340
f0103542:	8b 10                	mov    (%eax),%edxf01035425444,249395
f0103544:	8b 48 04             	mov    0x4(%eax),%ecxf01035445445,249446
f0103547:	8d 40 08             	lea    0x8(%eax),%eaxf01035475446,249500
f010354a:	89 45 14             	mov    %eax,0x14(%ebp)f010354a5447,249554
			base = 10;base5448,249609
f010354d:	b8 0a 00 00 00       	mov    $0xa,%eaxf010354d5449,249623
f0103552:	eb 7c                	jmp    f01035d0 <.L35+0x2a>f01035525450,249672
f0103554:	85 c9                	test   %ecx,%ecxf01035545452,249749
f0103556:	75 17                	jne    f010356f <.L37+0x38>f01035565453,249798
f0103558:	8b 45 14             	mov    0x14(%ebp),%eaxf01035585455,249894
f010355b:	8b 10                	mov    (%eax),%edxf010355b5456,249949
f010355d:	b9 00 00 00 00       	mov    $0x0,%ecxf010355d5457,250000
f0103562:	8d 40 04             	lea    0x4(%eax),%eaxf01035625458,250049
f0103565:	89 45 14             	mov    %eax,0x14(%ebp)f01035655459,250103
			base = 10;base5460,250158
f0103568:	b8 0a 00 00 00       	mov    $0xa,%eaxf01035685461,250172
f010356d:	eb 61                	jmp    f01035d0 <.L35+0x2a>f010356d5462,250221
f010356f:	8b 45 14             	mov    0x14(%ebp),%eaxf010356f5464,250318
f0103572:	8b 10                	mov    (%eax),%edxf01035725465,250373
f0103574:	b9 00 00 00 00       	mov    $0x0,%ecxf01035745466,250424
f0103579:	8d 40 04             	lea    0x4(%eax),%eaxf01035795467,250473
f010357c:	89 45 14             	mov    %eax,0x14(%ebp)f010357c5468,250527
			base = 10;base5469,250582
f010357f:	b8 0a 00 00 00       	mov    $0xa,%eaxf010357f5470,250596
f0103584:	eb 4a                	jmp    f01035d0 <.L35+0x2a>f01035845471,250645
f0103586 <.L34>:f01035865473,250706
f0103586:	83 ec 08             	sub    $0x8,%espf01035865475,250746
f0103589:	56                   	push   %esif01035895476,250795
f010358a:	6a 58                	push   $0x58f010358a5477,250839
f010358c:	ff 55 08             	call   *0x8(%ebp)f010358c5478,250884
f010358f:	83 c4 08             	add    $0x8,%espf010358f5480,250957
f0103592:	56                   	push   %esif01035925481,251006
f0103593:	6a 58                	push   $0x58f01035935482,251050
f0103595:	ff 55 08             	call   *0x8(%ebp)f01035955483,251095
f0103598:	83 c4 08             	add    $0x8,%espf01035985485,251168
f010359b:	56                   	push   %esif010359b5486,251217
f010359c:	6a 58                	push   $0x58f010359c5487,251261
f010359e:	ff 55 08             	call   *0x8(%ebp)f010359e5488,251306
f01035a1:	83 c4 10             	add    $0x10,%espf01035a15490,251366
f01035a4:	eb 45                	jmp    f01035eb <.L35+0x45>f01035a45491,251416
f01035a6 <.L35>:f01035a65493,251477
f01035a6:	83 ec 08             	sub    $0x8,%espf01035a65495,251517
f01035a9:	56                   	push   %esif01035a95496,251566
f01035aa:	6a 30                	push   $0x30f01035aa5497,251610
f01035ac:	ff 55 08             	call   *0x8(%ebp)f01035ac5498,251655
f01035af:	83 c4 08             	add    $0x8,%espf01035af5500,251728
f01035b2:	56                   	push   %esif01035b25501,251777
f01035b3:	6a 78                	push   $0x78f01035b35502,251821
f01035b5:	ff 55 08             	call   *0x8(%ebp)f01035b55503,251866
			num = (unsigned long long)num5504,251916
f01035b8:	8b 45 14             	mov    0x14(%ebp),%eaxf01035b85505,251946
f01035bb:	8b 10                	mov    (%eax),%edxf01035bb5506,252001
f01035bd:	b9 00 00 00 00       	mov    $0x0,%ecxf01035bd5507,252052
f01035c2:	83 c4 10             	add    $0x10,%espf01035c25509,252117
f01035c5:	8d 40 04             	lea    0x4(%eax),%eaxf01035c55511,252203
f01035c8:	89 45 14             	mov    %eax,0x14(%ebp)f01035c85512,252257
			base = 16;base5513,252312
f01035cb:	b8 10 00 00 00       	mov    $0x10,%eaxf01035cb5514,252326
f01035d0:	83 ec 0c             	sub    $0xc,%espf01035d05516,252428
f01035d3:	0f be 7d d4          	movsbl -0x2c(%ebp),%edif01035d35517,252477
f01035d7:	57                   	push   %edif01035d75518,252533
f01035d8:	ff 75 e0             	pushl  -0x20(%ebp)f01035d85519,252577
f01035db:	50                   	push   %eaxf01035db5520,252628
f01035dc:	51                   	push   %ecxf01035dc5521,252672
f01035dd:	52                   	push   %edxf01035dd5522,252716
f01035de:	89 f2                	mov    %esi,%edxf01035de5523,252760
f01035e0:	8b 45 08             	mov    0x8(%ebp),%eaxf01035e05524,252809
f01035e3:	e8 55 fb ff ff       	call   f010313d <printnum>f01035e35525,252863
f01035e8:	83 c4 20             	add    $0x20,%espf01035e85527,252932
			err = va_arg(ap, int);err5528,252982
f01035eb:	8b 7d e4             	mov    -0x1c(%ebp),%edif01035eb5529,253008
f01035ee:	83 c7 01             	add    $0x1,%edif01035ee5531,253115
f01035f1:	0f b6 47 ff          	movzbl -0x1(%edi),%eaxf01035f15532,253164
f01035f5:	83 f8 25             	cmp    $0x25,%eaxf01035f55533,253219
f01035f8:	0f 84 62 fc ff ff    	je     f0103260 <vprintfmt+0x1f>f01035f85534,253269
f01035fe:	85 c0                	test   %eax,%eaxf01035fe5536,253353
f0103600:	0f 84 91 00 00 00    	je     f0103697 <.L22+0x21>f01036005537,253402
f0103606:	83 ec 08             	sub    $0x8,%espf01036065539,253484
f0103609:	56                   	push   %esif01036095540,253533
f010360a:	50                   	push   %eaxf010360a5541,253577
f010360b:	ff 55 08             	call   *0x8(%ebp)f010360b5542,253621
f010360e:	83 c4 10             	add    $0x10,%espf010360e5543,253671
f0103611:	eb db                	jmp    f01035ee <.L35+0x48>f01036115544,253721
f0103613 <.L38>:f01036135546,253782
f0103613:	8b 4d cc             	mov    -0x34(%ebp),%ecxf01036135547,253799
f0103616:	83 f9 01             	cmp    $0x1,%ecxf01036165549,253872
f0103619:	7e 15                	jle    f0103630 <.L38+0x1d>f01036195550,253921
f010361b:	8b 45 14             	mov    0x14(%ebp),%eaxf010361b5552,254023
f010361e:	8b 10                	mov    (%eax),%edxf010361e5553,254078
f0103620:	8b 48 04             	mov    0x4(%eax),%ecxf01036205554,254129
f0103623:	8d 40 08             	lea    0x8(%eax),%eaxf01036235555,254183
f0103626:	89 45 14             	mov    %eax,0x14(%ebp)f01036265556,254237
			base = 16;base5557,254292
f0103629:	b8 10 00 00 00       	mov    $0x10,%eaxf01036295558,254306
f010362e:	eb a0                	jmp    f01035d0 <.L35+0x2a>f010362e5559,254356
f0103630:	85 c9                	test   %ecx,%ecxf01036305561,254433
f0103632:	75 17                	jne    f010364b <.L38+0x38>f01036325562,254482
f0103634:	8b 45 14             	mov    0x14(%ebp),%eaxf01036345564,254578
f0103637:	8b 10                	mov    (%eax),%edxf01036375565,254633
f0103639:	b9 00 00 00 00       	mov    $0x0,%ecxf01036395566,254684
f010363e:	8d 40 04             	lea    0x4(%eax),%eaxf010363e5567,254733
f0103641:	89 45 14             	mov    %eax,0x14(%ebp)f01036415568,254787
			base = 16;base5569,254842
f0103644:	b8 10 00 00 00       	mov    $0x10,%eaxf01036445570,254856
f0103649:	eb 85                	jmp    f01035d0 <.L35+0x2a>f01036495571,254906
f010364b:	8b 45 14             	mov    0x14(%ebp),%eaxf010364b5573,255003
f010364e:	8b 10                	mov    (%eax),%edxf010364e5574,255058
f0103650:	b9 00 00 00 00       	mov    $0x0,%ecxf01036505575,255109
f0103655:	8d 40 04             	lea    0x4(%eax),%eaxf01036555576,255158
f0103658:	89 45 14             	mov    %eax,0x14(%ebp)f01036585577,255212
			base = 16;base5578,255267
f010365b:	b8 10 00 00 00       	mov    $0x10,%eaxf010365b5579,255281
f0103660:	e9 6b ff ff ff       	jmp    f01035d0 <.L35+0x2a>f01036605580,255331
f0103665 <.L25>:f01036655582,255392
f0103665:	83 ec 08             	sub    $0x8,%espf01036655584,255431
f0103668:	56                   	push   %esif01036685585,255480
f0103669:	6a 25                	push   $0x25f01036695586,255524
f010366b:	ff 55 08             	call   *0x8(%ebp)f010366b5587,255569
f010366e:	83 c4 10             	add    $0x10,%espf010366e5589,255629
f0103671:	e9 75 ff ff ff       	jmp    f01035eb <.L35+0x45>f01036715590,255679
f0103676 <.L22>:f01036765592,255740
f0103676:	83 ec 08             	sub    $0x8,%espf01036765594,255780
f0103679:	56                   	push   %esif01036795595,255829
f010367a:	6a 25                	push   $0x25f010367a5596,255873
f010367c:	ff 55 08             	call   *0x8(%ebp)f010367c5597,255918
f010367f:	83 c4 10             	add    $0x10,%espf010367f5599,256006
f0103682:	89 f8                	mov    %edi,%eaxf01036825600,256056
f0103684:	eb 03                	jmp    f0103689 <.L22+0x13>f01036845601,256105
f0103686:	83 e8 01             	sub    $0x1,%eaxf01036865602,256165
f0103689:	80 78 ff 25          	cmpb   $0x25,-0x1(%eax)f01036895603,256214
f010368d:	75 f7                	jne    f0103686 <.L22+0x10>f010368d5604,256270
f010368f:	89 45 e4             	mov    %eax,-0x1c(%ebp)f010368f5605,256330
f0103692:	e9 54 ff ff ff       	jmp    f01035eb <.L35+0x45>f01036925606,256386
f0103697:	8d 65 f4             	lea    -0xc(%ebp),%espf01036975608,256448
f010369a:	5b                   	pop    %ebxf010369a5609,256503
f010369b:	5e                   	pop    %esif010369b5610,256547
f010369c:	5f                   	pop    %edif010369c5611,256591
f010369d:	5d                   	pop    %ebpf010369d5612,256635
f010369e:	c3                   	ret    f010369e5613,256679
f010369f <vsnprintf>:f010369f5615,256720
intint5617,256743
f010369f:	55                   	push   %ebpf010369f5620,256806
f01036a0:	89 e5                	mov    %esp,%ebpf01036a05621,256850
f01036a2:	53                   	push   %ebxf01036a25622,256899
f01036a3:	83 ec 14             	sub    $0x14,%espf01036a35623,256943
f01036a6:	e8 a4 ca ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01036a65624,256993
f01036ab:	81 c3 61 3c 01 00    	add    $0x13c61,%ebxf01036ab5625,257065
f01036b1:	8b 45 08             	mov    0x8(%ebp),%eaxf01036b15626,257118
f01036b4:	8b 55 0c             	mov    0xc(%ebp),%edxf01036b45627,257172
f01036b7:	89 45 ec             	mov    %eax,-0x14(%ebp)f01036b75629,257267
f01036ba:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecxf01036ba5630,257323
f01036be:	89 4d f0             	mov    %ecx,-0x10(%ebp)f01036be5631,257385
f01036c1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)f01036c15632,257441
f01036c8:	85 c0                	test   %eax,%eaxf01036c85635,257524
f01036ca:	74 2b                	je     f01036f7 <vsnprintf+0x58>f01036ca5636,257573
f01036cc:	85 d2                	test   %edx,%edxf01036cc5637,257638
f01036ce:	7e 27                	jle    f01036f7 <vsnprintf+0x58>f01036ce5638,257687
f01036d0:	ff 75 14             	pushl  0x14(%ebp)f01036d05643,257852
f01036d3:	ff 75 10             	pushl  0x10(%ebp)f01036d35644,257902
f01036d6:	8d 45 ec             	lea    -0x14(%ebp),%eaxf01036d65645,257952
f01036d9:	50                   	push   %eaxf01036d95646,258008
f01036da:	8d 83 fb be fe ff    	lea    -0x14105(%ebx),%eaxf01036da5647,258052
f01036e0:	50                   	push   %eaxf01036e05648,258111
f01036e1:	e8 5b fb ff ff       	call   f0103241 <vprintfmt>f01036e15649,258155
f01036e6:	8b 45 ec             	mov    -0x14(%ebp),%eaxf01036e65653,258262
f01036e9:	c6 00 00             	movb   $0x0,(%eax)f01036e95654,258318
f01036ec:	8b 45 f4             	mov    -0xc(%ebp),%eaxf01036ec5657,258385
f01036ef:	83 c4 10             	add    $0x10,%espf01036ef5658,258440
f01036f2:	8b 5d fc             	mov    -0x4(%ebp),%ebxf01036f25660,258492
f01036f5:	c9                   	leave  f01036f55661,258547
f01036f6:	c3                   	ret    f01036f65662,258587
f01036f7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eaxf01036f75664,258646
f01036fc:	eb f4                	jmp    f01036f2 <vsnprintf+0x53>f01036fc5665,258702
f01036fe <snprintf>:f01036fe5667,258768
intint5669,258790
f01036fe:	55                   	push   %ebpf01036fe5672,258845
f01036ff:	89 e5                	mov    %esp,%ebpf01036ff5673,258889
f0103701:	83 ec 08             	sub    $0x8,%espf01037015674,258938
f0103704:	8d 45 14             	lea    0x14(%ebp),%eaxf01037045679,259030
	rc = vsnprintf(buf, n, fmt, ap);rc5680,259085
f0103707:	50                   	push   %eaxf01037075681,259119
f0103708:	ff 75 10             	pushl  0x10(%ebp)f01037085682,259163
f010370b:	ff 75 0c             	pushl  0xc(%ebp)f010370b5683,259213
f010370e:	ff 75 08             	pushl  0x8(%ebp)f010370e5684,259262
f0103711:	e8 89 ff ff ff       	call   f010369f <vsnprintf>f01037115685,259311
f0103716:	c9                   	leave  f01037165690,259399
f0103717:	c3                   	ret    f01037175691,259439
f0103718 <readline>:f01037185693,259480
#define BUFLEN 1024BUFLEN5694,259501
static char buf[BUFLEN];static5695,259521
char *char5697,259547
f0103718:	55                   	push   %ebpf01037185700,259585
f0103719:	89 e5                	mov    %esp,%ebpf01037195701,259629
f010371b:	57                   	push   %edif010371b5702,259678
f010371c:	56                   	push   %esif010371c5703,259722
f010371d:	53                   	push   %ebxf010371d5704,259766
f010371e:	83 ec 1c             	sub    $0x1c,%espf010371e5705,259810
f0103721:	e8 29 ca ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01037215706,259860
f0103726:	81 c3 e6 3b 01 00    	add    $0x13be6,%ebxf01037265707,259932
f010372c:	8b 45 08             	mov    0x8(%ebp),%eaxf010372c5708,259985
f010372f:	85 c0                	test   %eax,%eaxf010372f5712,260081
f0103731:	74 13                	je     f0103746 <readline+0x2e>f01037315713,260130
f0103733:	83 ec 08             	sub    $0x8,%espf01037335715,260219
f0103736:	50                   	push   %eaxf01037365716,260268
f0103737:	8d 83 88 d7 fe ff    	lea    -0x12878(%ebx),%eaxf01037375717,260312
f010373d:	50                   	push   %eaxf010373d5718,260371
f010373e:	e8 ee f6 ff ff       	call   f0102e31 <cprintf>f010373e5719,260415
f0103743:	83 c4 10             	add    $0x10,%espf01037435720,260473
	i = 0;i5722,260524
	echoing = iscons(0);echoing5723,260532
f0103746:	83 ec 0c             	sub    $0xc,%espf01037465724,260554
f0103749:	6a 00                	push   $0x0f01037495725,260603
f010374b:	e8 97 cf ff ff       	call   f01006e7 <iscons>f010374b5726,260647
f0103750:	89 45 e4             	mov    %eax,-0x1c(%ebp)f01037505727,260704
f0103753:	83 c4 10             	add    $0x10,%espf01037535728,260760
	i = 0;i5729,260810
f0103756:	bf 00 00 00 00       	mov    $0x0,%edif01037565730,260818
f010375b:	eb 46                	jmp    f01037a3 <readline+0x8b>f010375b5731,260867
		c = getchar();c5733,260944
f010375d:	83 ec 08             	sub    $0x8,%espf010375d5736,261011
f0103760:	50                   	push   %eaxf01037605737,261060
f0103761:	8d 83 3c dc fe ff    	lea    -0x123c4(%ebx),%eaxf01037615738,261104
f0103767:	50                   	push   %eaxf01037675739,261163
f0103768:	e8 c4 f6 ff ff       	call   f0102e31 <cprintf>f01037685740,261207
f010376d:	83 c4 10             	add    $0x10,%espf010376d5742,261281
f0103770:	b8 00 00 00 00       	mov    $0x0,%eaxf01037705743,261331
f0103775:	8d 65 f4             	lea    -0xc(%ebp),%espf01037755750,261439
f0103778:	5b                   	pop    %ebxf01037785751,261494
f0103779:	5e                   	pop    %esif01037795752,261538
f010377a:	5f                   	pop    %edif010377a5753,261582
f010377b:	5d                   	pop    %ebpf010377b5754,261626
f010377c:	c3                   	ret    f010377c5755,261670
f010377d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)f010377d5757,261726
f0103781:	75 05                	jne    f0103788 <readline+0x70>f01037815758,261782
f0103783:	83 ef 01             	sub    $0x1,%edif01037835760,261854
f0103786:	eb 1b                	jmp    f01037a3 <readline+0x8b>f01037865761,261903
f0103788:	83 ec 0c             	sub    $0xc,%espf01037885763,261987
f010378b:	6a 08                	push   $0x8f010378b5764,262036
f010378d:	e8 34 cf ff ff       	call   f01006c6 <cputchar>f010378d5765,262080
f0103792:	83 c4 10             	add    $0x10,%espf01037925766,262139
f0103795:	eb ec                	jmp    f0103783 <readline+0x6b>f01037955767,262189
f0103797:	89 f0                	mov    %esi,%eaxf01037975769,262270
f0103799:	88 84 3b b4 1f 00 00 	mov    %al,0x1fb4(%ebx,%edi,1)f01037995770,262319
f01037a0:	8d 7f 01             	lea    0x1(%edi),%edif01037a05771,262382
		c = getchar();c5772,262436
f01037a3:	e8 2e cf ff ff       	call   f01006d6 <getchar>f01037a35773,262453
f01037a8:	89 c6                	mov    %eax,%esif01037a85774,262511
f01037aa:	85 c0                	test   %eax,%eaxf01037aa5776,262575
f01037ac:	78 af                	js     f010375d <readline+0x45>f01037ac5777,262624
f01037ae:	83 f8 08             	cmp    $0x8,%eaxf01037ae5779,262740
f01037b1:	0f 94 c2             	sete   %dlf01037b15780,262789
f01037b4:	83 f8 7f             	cmp    $0x7f,%eaxf01037b45781,262832
f01037b7:	0f 94 c0             	sete   %alf01037b75782,262882
f01037ba:	08 c2                	or     %al,%dlf01037ba5783,262925
f01037bc:	74 04                	je     f01037c2 <readline+0xaa>f01037bc5784,262972
f01037be:	85 ff                	test   %edi,%edif01037be5785,263036
f01037c0:	7f bb                	jg     f010377d <readline+0x65>f01037c05786,263085
f01037c2:	83 fe 1f             	cmp    $0x1f,%esif01037c25788,263190
f01037c5:	7e 1c                	jle    f01037e3 <readline+0xcb>f01037c55789,263240
f01037c7:	81 ff fe 03 00 00    	cmp    $0x3fe,%edif01037c75790,263304
f01037cd:	7f 14                	jg     f01037e3 <readline+0xcb>f01037cd5791,263355
f01037cf:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)f01037cf5793,263435
f01037d3:	74 c2                	je     f0103797 <readline+0x7f>f01037d35794,263491
f01037d5:	83 ec 0c             	sub    $0xc,%espf01037d55796,263572
f01037d8:	56                   	push   %esif01037d85797,263621
f01037d9:	e8 e8 ce ff ff       	call   f01006c6 <cputchar>f01037d95798,263665
f01037de:	83 c4 10             	add    $0x10,%espf01037de5799,263724
f01037e1:	eb b4                	jmp    f0103797 <readline+0x7f>f01037e15800,263774
f01037e3:	83 fe 0a             	cmp    $0xa,%esif01037e35802,263877
f01037e6:	74 05                	je     f01037ed <readline+0xd5>f01037e65803,263926
f01037e8:	83 fe 0d             	cmp    $0xd,%esif01037e85804,263990
f01037eb:	75 b6                	jne    f01037a3 <readline+0x8b>f01037eb5805,264039
f01037ed:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)f01037ed5807,264119
f01037f1:	75 13                	jne    f0103806 <readline+0xee>f01037f15808,264175
f01037f3:	c6 84 3b b4 1f 00 00 	movb   $0x0,0x1fb4(%ebx,%edi,1)f01037f35810,264254
f01037fa:	00 f01037fa5811,264318
f01037fb:	8d 83 b4 1f 00 00    	lea    0x1fb4(%ebx),%eaxf01037fb5813,264347
f0103801:	e9 6f ff ff ff       	jmp    f0103775 <readline+0x5d>f01038015814,264404
f0103806:	83 ec 0c             	sub    $0xc,%espf01038065816,264488
f0103809:	6a 0a                	push   $0xaf01038095817,264537
f010380b:	e8 b6 ce ff ff       	call   f01006c6 <cputchar>f010380b5818,264581
f0103810:	83 c4 10             	add    $0x10,%espf01038105819,264640
f0103813:	eb de                	jmp    f01037f3 <readline+0xdb>f01038135820,264690
f0103815 <strlen>:f01038155822,264755
#define ASM 1ASM5824,264813
intint5826,264828
f0103815:	55                   	push   %ebpf01038155829,264856
f0103816:	89 e5                	mov    %esp,%ebpf01038165830,264900
f0103818:	8b 55 08             	mov    0x8(%ebp),%edxf01038185831,264949
f010381b:	b8 00 00 00 00       	mov    $0x0,%eaxf010381b5835,265042
f0103820:	eb 03                	jmp    f0103825 <strlen+0x10>f01038205836,265091
f0103822:	83 c0 01             	add    $0x1,%eaxf01038225838,265160
f0103825:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)f01038255840,265239
f0103829:	75 f7                	jne    f0103822 <strlen+0xd>f01038295841,265297
f010382b:	5d                   	pop    %ebpf010382b5844,265371
f010382c:	c3                   	ret    f010382c5845,265415
f010382d <strnlen>:f010382d5847,265456
intint5849,265477
f010382d:	55                   	push   %ebpf010382d5852,265519
f010382e:	89 e5                	mov    %esp,%ebpf010382e5853,265563
f0103830:	8b 4d 08             	mov    0x8(%ebp),%ecxf01038305854,265612
f0103833:	8b 55 0c             	mov    0xc(%ebp),%edxf01038335855,265666
f0103836:	b8 00 00 00 00       	mov    $0x0,%eaxf01038365859,265779
f010383b:	eb 03                	jmp    f0103840 <strnlen+0x13>f010383b5860,265828
f010383d:	83 c0 01             	add    $0x1,%eaxf010383d5862,265898
f0103840:	39 d0                	cmp    %edx,%eaxf01038405864,265997
f0103842:	74 06                	je     f010384a <strnlen+0x1d>f01038425865,266046
f0103844:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)f01038445866,266109
f0103848:	75 f3                	jne    f010383d <strnlen+0x10>f01038485867,266167
f010384a:	5d                   	pop    %ebpf010384a5870,266243
f010384b:	c3                   	ret    f010384b5871,266287
f010384c <strcpy>:f010384c5873,266328
char *char5875,266348
f010384c:	55                   	push   %ebpf010384c5878,266392
f010384d:	89 e5                	mov    %esp,%ebpf010384d5879,266436
f010384f:	53                   	push   %ebxf010384f5880,266485
f0103850:	8b 45 08             	mov    0x8(%ebp),%eaxf01038505881,266529
f0103853:	8b 4d 0c             	mov    0xc(%ebp),%ecxf01038535882,266583
	ret = dst;ret5885,266650
f0103856:	89 c2                	mov    %eax,%edxf01038565887,266697
f0103858:	83 c1 01             	add    $0x1,%ecxf01038585888,266746
f010385b:	83 c2 01             	add    $0x1,%edxf010385b5889,266795
f010385e:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebxf010385e5890,266844
f0103862:	88 5a ff             	mov    %bl,-0x1(%edx)f01038625891,266899
f0103865:	84 db                	test   %bl,%blf01038655892,266953
f0103867:	75 ef                	jne    f0103858 <strcpy+0xc>f01038675893,267000
f0103869:	5b                   	pop    %ebxf01038695897,267096
f010386a:	5d                   	pop    %ebpf010386a5898,267140
f010386b:	c3                   	ret    f010386b5899,267184
f010386c <strcat>:f010386c5901,267225
char *char5903,267245
f010386c:	55                   	push   %ebpf010386c5906,267289
f010386d:	89 e5                	mov    %esp,%ebpf010386d5907,267333
f010386f:	53                   	push   %ebxf010386f5908,267382
f0103870:	8b 5d 08             	mov    0x8(%ebp),%ebxf01038705909,267426
f0103873:	53                   	push   %ebxf01038735911,267504
f0103874:	e8 9c ff ff ff       	call   f0103815 <strlen>f01038745912,267548
f0103879:	83 c4 04             	add    $0x4,%espf01038795913,267605
f010387c:	ff 75 0c             	pushl  0xc(%ebp)f010387c5915,267679
f010387f:	01 d8                	add    %ebx,%eaxf010387f5916,267728
f0103881:	50                   	push   %eaxf01038815917,267777
f0103882:	e8 c5 ff ff ff       	call   f010384c <strcpy>f01038825918,267821
f0103887:	89 d8                	mov    %ebx,%eaxf01038875921,267893
f0103889:	8b 5d fc             	mov    -0x4(%ebp),%ebxf01038895922,267942
f010388c:	c9                   	leave  f010388c5923,267997
f010388d:	c3                   	ret    f010388d5924,268037
f010388e <strncpy>:f010388e5926,268078
char *char5928,268099
f010388e:	55                   	push   %ebpf010388e5930,268157
f010388f:	89 e5                	mov    %esp,%ebpf010388f5931,268201
f0103891:	56                   	push   %esif01038915932,268250
f0103892:	53                   	push   %ebxf01038925933,268294
f0103893:	8b 75 08             	mov    0x8(%ebp),%esif01038935934,268338
f0103896:	8b 4d 0c             	mov    0xc(%ebp),%ecxf01038965935,268392
f0103899:	89 f3                	mov    %esi,%ebxf01038995936,268446
f010389b:	03 5d 10             	add    0x10(%ebp),%ebxf010389b5937,268495
	ret = dst;ret5941,268574
f010389e:	89 f2                	mov    %esi,%edxf010389e5943,268616
f01038a0:	eb 0f                	jmp    f01038b1 <strncpy+0x23>f01038a05944,268665
f01038a2:	83 c2 01             	add    $0x1,%edxf01038a25946,268745
f01038a5:	0f b6 01             	movzbl (%ecx),%eaxf01038a55947,268794
f01038a8:	88 42 ff             	mov    %al,-0x1(%edx)f01038a85948,268845
f01038ab:	80 39 01             	cmpb   $0x1,(%ecx)f01038ab5952,268992
f01038ae:	83 d9 ff             	sbb    $0xffffffff,%ecxf01038ae5953,269043
f01038b1:	39 da                	cmp    %ebx,%edxf01038b15955,269129
f01038b3:	75 ed                	jne    f01038a2 <strncpy+0x14>f01038b35956,269178
f01038b5:	89 f0                	mov    %esi,%eaxf01038b55960,269259
f01038b7:	5b                   	pop    %ebxf01038b75961,269308
f01038b8:	5e                   	pop    %esif01038b85962,269352
f01038b9:	5d                   	pop    %ebpf01038b95963,269396
f01038ba:	c3                   	ret    f01038ba5964,269440
f01038bb <strlcpy>:f01038bb5966,269481
size_tsize_t5968,269502
f01038bb:	55                   	push   %ebpf01038bb5971,269560
f01038bc:	89 e5                	mov    %esp,%ebpf01038bc5972,269604
f01038be:	56                   	push   %esif01038be5973,269653
f01038bf:	53                   	push   %ebxf01038bf5974,269697
f01038c0:	8b 75 08             	mov    0x8(%ebp),%esif01038c05975,269741
f01038c3:	8b 55 0c             	mov    0xc(%ebp),%edxf01038c35976,269795
f01038c6:	8b 4d 10             	mov    0x10(%ebp),%ecxf01038c65977,269849
f01038c9:	89 f0                	mov    %esi,%eaxf01038c95978,269904
f01038cb:	8d 5c 0e ff          	lea    -0x1(%esi,%ecx,1),%ebxf01038cb5979,269953
	dst_in = dst;dst_in5982,270031
f01038cf:	85 c9                	test   %ecx,%ecxf01038cf5984,270063
f01038d1:	75 0b                	jne    f01038de <strlcpy+0x23>f01038d15985,270112
f01038d3:	eb 17                	jmp    f01038ec <strlcpy+0x31>f01038d35986,270175
f01038d5:	83 c2 01             	add    $0x1,%edxf01038d55989,270295
f01038d8:	83 c0 01             	add    $0x1,%eaxf01038d85990,270344
f01038db:	88 48 ff             	mov    %cl,-0x1(%eax)f01038db5991,270393
f01038de:	39 d8                	cmp    %ebx,%eaxf01038de5993,270484
f01038e0:	74 07                	je     f01038e9 <strlcpy+0x2e>f01038e05994,270533
f01038e2:	0f b6 0a             	movzbl (%edx),%ecxf01038e25995,270596
f01038e5:	84 c9                	test   %cl,%clf01038e55996,270647
f01038e7:	75 ec                	jne    f01038d5 <strlcpy+0x1a>f01038e75997,270694
f01038e9:	c6 00 00             	movb   $0x0,(%eax)f01038e95999,270772
f01038ec:	29 f0                	sub    %esi,%eaxf01038ec6002,270848
f01038ee:	5b                   	pop    %ebxf01038ee6004,270899
f01038ef:	5e                   	pop    %esif01038ef6005,270943
f01038f0:	5d                   	pop    %ebpf01038f06006,270987
f01038f1:	c3                   	ret    f01038f16007,271031
f01038f2 <strcmp>:f01038f26009,271072
intint6011,271092
f01038f2:	55                   	push   %ebpf01038f26014,271135
f01038f3:	89 e5                	mov    %esp,%ebpf01038f36015,271179
f01038f5:	8b 4d 08             	mov    0x8(%ebp),%ecxf01038f56016,271228
f01038f8:	8b 55 0c             	mov    0xc(%ebp),%edxf01038f86017,271282
f01038fb:	eb 06                	jmp    f0103903 <strcmp+0x11>f01038fb6019,271360
f01038fd:	83 c1 01             	add    $0x1,%ecxf01038fd6021,271434
f0103900:	83 c2 01             	add    $0x1,%edxf01039006022,271483
f0103903:	0f b6 01             	movzbl (%ecx),%eaxf01039036024,271556
f0103906:	84 c0                	test   %al,%alf01039066025,271607
f0103908:	74 04                	je     f010390e <strcmp+0x1c>f01039086026,271654
f010390a:	3a 02                	cmp    (%edx),%alf010390a6027,271716
f010390c:	74 ef                	je     f01038fd <strcmp+0xb>f010390c6028,271766
f010390e:	0f b6 c0             	movzbl %al,%eaxf010390e6030,271884
f0103911:	0f b6 12             	movzbl (%edx),%edxf01039116031,271932
f0103914:	29 d0                	sub    %edx,%eaxf01039146032,271983
f0103916:	5d                   	pop    %ebpf01039166034,272034
f0103917:	c3                   	ret    f01039176035,272078
f0103918 <strncmp>:f01039186037,272119
intint6039,272140
f0103918:	55                   	push   %ebpf01039186042,272194
f0103919:	89 e5                	mov    %esp,%ebpf01039196043,272238
f010391b:	53                   	push   %ebxf010391b6044,272287
f010391c:	8b 45 08             	mov    0x8(%ebp),%eaxf010391c6045,272331
f010391f:	8b 55 0c             	mov    0xc(%ebp),%edxf010391f6046,272385
f0103922:	89 c3                	mov    %eax,%ebxf01039226047,272439
f0103924:	03 5d 10             	add    0x10(%ebp),%ebxf01039246048,272488
f0103927:	eb 06                	jmp    f010392f <strncmp+0x17>f01039276050,272576
f0103929:	83 c0 01             	add    $0x1,%eaxf01039296052,272656
f010392c:	83 c2 01             	add    $0x1,%edxf010392c6053,272705
f010392f:	39 d8                	cmp    %ebx,%eaxf010392f6055,272787
f0103931:	74 16                	je     f0103949 <strncmp+0x31>f01039316056,272836
f0103933:	0f b6 08             	movzbl (%eax),%ecxf01039336057,272899
f0103936:	84 c9                	test   %cl,%clf01039366058,272950
f0103938:	74 04                	je     f010393e <strncmp+0x26>f01039386059,272997
f010393a:	3a 0a                	cmp    (%edx),%clf010393a6060,273060
f010393c:	74 eb                	je     f0103929 <strncmp+0x11>f010393c6061,273110
f010393e:	0f b6 00             	movzbl (%eax),%eaxf010393e6066,273262
f0103941:	0f b6 12             	movzbl (%edx),%edxf01039416067,273313
f0103944:	29 d0                	sub    %edx,%eaxf01039446068,273364
f0103946:	5b                   	pop    %ebxf01039466070,273415
f0103947:	5d                   	pop    %ebpf01039476071,273459
f0103948:	c3                   	ret    f01039486072,273503
f0103949:	b8 00 00 00 00       	mov    $0x0,%eaxf01039496074,273555
f010394e:	eb f6                	jmp    f0103946 <strncmp+0x2e>f010394e6075,273604
f0103950 <strchr>:f01039506077,273668
char *char6081,273794
f0103950:	55                   	push   %ebpf01039506084,273833
f0103951:	89 e5                	mov    %esp,%ebpf01039516085,273877
f0103953:	8b 45 08             	mov    0x8(%ebp),%eaxf01039536086,273926
f0103956:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecxf01039566087,273980
f010395a:	0f b6 10             	movzbl (%eax),%edxf010395a6089,274051
f010395d:	84 d2                	test   %dl,%dlf010395d6090,274102
f010395f:	74 09                	je     f010396a <strchr+0x1a>f010395f6091,274149
f0103961:	38 ca                	cmp    %cl,%dlf01039616093,274226
f0103963:	74 0a                	je     f010396f <strchr+0x1f>f01039636094,274273
f0103965:	83 c0 01             	add    $0x1,%eaxf01039656096,274352
f0103968:	eb f0                	jmp    f010395a <strchr+0xa>f01039686097,274401
f010396a:	b8 00 00 00 00       	mov    $0x0,%eaxf010396a6100,274495
f010396f:	5d                   	pop    %ebpf010396f6102,274546
f0103970:	c3                   	ret    f01039706103,274590
f0103971 <strfind>:f01039716105,274631
char *char6109,274789
f0103971:	55                   	push   %ebpf01039716112,274829
f0103972:	89 e5                	mov    %esp,%ebpf01039726113,274873
f0103974:	8b 45 08             	mov    0x8(%ebp),%eaxf01039746114,274922
f0103977:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecxf01039776115,274976
f010397b:	eb 03                	jmp    f0103980 <strfind+0xf>f010397b6117,275047
f010397d:	83 c0 01             	add    $0x1,%eaxf010397d6118,275109
f0103980:	0f b6 10             	movzbl (%eax),%edxf01039806119,275158
f0103983:	38 ca                	cmp    %cl,%dlf01039836121,275224
f0103985:	74 04                	je     f010398b <strfind+0x1a>f01039856122,275271
f0103987:	84 d2                	test   %dl,%dlf01039876123,275334
f0103989:	75 f2                	jne    f010397d <strfind+0xc>f01039896124,275381
f010398b:	5d                   	pop    %ebpf010398b6128,275475
f010398c:	c3                   	ret    f010398c6129,275519
f010398d <memset>:f010398d6131,275560
void *void6134,275588
f010398d:	55                   	push   %ebpf010398d6137,275630
f010398e:	89 e5                	mov    %esp,%ebpf010398e6138,275674
f0103990:	57                   	push   %edif01039906139,275723
f0103991:	56                   	push   %esif01039916140,275767
f0103992:	53                   	push   %ebxf01039926141,275811
f0103993:	8b 7d 08             	mov    0x8(%ebp),%edif01039936142,275855
f0103996:	8b 4d 10             	mov    0x10(%ebp),%ecxf01039966143,275909
f0103999:	85 c9                	test   %ecx,%ecxf01039996147,275988
f010399b:	74 13                	je     f01039b0 <memset+0x23>f010399b6148,276037
f010399d:	f7 c7 03 00 00 00    	test   $0x3,%edif010399d6151,276145
f01039a3:	75 05                	jne    f01039aa <memset+0x1d>f01039a36152,276194
f01039a5:	f6 c1 03             	test   $0x3,%clf01039a56153,276256
f01039a8:	74 0d                	je     f01039b7 <memset+0x2a>f01039a86154,276304
		c = (c<<24)|(c<<16)|(c<<8)|c;c6155,276366
f01039aa:	8b 45 0c             	mov    0xc(%ebp),%eaxf01039aa6161,276530
f01039ad:	fc                   	cld    f01039ad6162,276584
f01039ae:	f3 aa                	rep stos %al,%es:(%edi)f01039ae6163,276624
f01039b0:	89 f8                	mov    %edi,%eaxf01039b06168,276747
f01039b2:	5b                   	pop    %ebxf01039b26169,276796
f01039b3:	5e                   	pop    %esif01039b36170,276840
f01039b4:	5f                   	pop    %edif01039b46171,276884
f01039b5:	5d                   	pop    %ebpf01039b56172,276928
f01039b6:	c3                   	ret    f01039b66173,276972
f01039b7:	0f b6 55 0c          	movzbl 0xc(%ebp),%edxf01039b76175,277025
		c = (c<<24)|(c<<16)|(c<<8)|c;c6176,277079
f01039bb:	89 d3                	mov    %edx,%ebxf01039bb6177,277111
f01039bd:	c1 e3 08             	shl    $0x8,%ebxf01039bd6178,277160
f01039c0:	89 d0                	mov    %edx,%eaxf01039c06179,277209
f01039c2:	c1 e0 18             	shl    $0x18,%eaxf01039c26180,277258
f01039c5:	89 d6                	mov    %edx,%esif01039c56181,277308
f01039c7:	c1 e6 10             	shl    $0x10,%esif01039c76182,277357
f01039ca:	09 f0                	or     %esi,%eaxf01039ca6183,277407
f01039cc:	09 c2                	or     %eax,%edxf01039cc6184,277456
f01039ce:	09 da                	or     %ebx,%edxf01039ce6185,277505
f01039d0:	c1 e9 02             	shr    $0x2,%ecxf01039d06187,277588
f01039d3:	89 d0                	mov    %edx,%eaxf01039d36189,277671
f01039d5:	fc                   	cld    f01039d56190,277720
f01039d6:	f3 ab                	rep stos %eax,%es:(%edi)f01039d66191,277760
f01039d8:	eb d6                	jmp    f01039b0 <memset+0x23>f01039d86192,277817
f01039da <memmove>:f01039da6194,277880
void *void6196,277901
f01039da:	55                   	push   %ebpf01039da6199,277956
f01039db:	89 e5                	mov    %esp,%ebpf01039db6200,278000
f01039dd:	57                   	push   %edif01039dd6201,278049
f01039de:	56                   	push   %esif01039de6202,278093
f01039df:	8b 45 08             	mov    0x8(%ebp),%eaxf01039df6203,278137
f01039e2:	8b 75 0c             	mov    0xc(%ebp),%esif01039e26204,278191
f01039e5:	8b 4d 10             	mov    0x10(%ebp),%ecxf01039e56205,278245
	s = src;s6209,278327
	d = dst;d6210,278337
f01039e8:	39 c6                	cmp    %eax,%esif01039e86212,278374
f01039ea:	73 35                	jae    f0103a21 <memmove+0x47>f01039ea6213,278423
f01039ec:	8d 14 0e             	lea    (%esi,%ecx,1),%edxf01039ec6214,278486
f01039ef:	39 c2                	cmp    %eax,%edxf01039ef6215,278544
f01039f1:	76 2e                	jbe    f0103a21 <memmove+0x47>f01039f16216,278593
f01039f3:	8d 3c 08             	lea    (%eax,%ecx,1),%edif01039f36219,278676
f01039f6:	89 d6                	mov    %edx,%esif01039f66221,278784
f01039f8:	09 fe                	or     %edi,%esif01039f86222,278833
f01039fa:	f7 c6 03 00 00 00    	test   $0x3,%esif01039fa6223,278882
f0103a00:	74 0c                	je     f0103a0e <memmove+0x34>f0103a006224,278931
f0103a02:	83 ef 01             	sub    $0x1,%edif0103a026230,279185
f0103a05:	8d 72 ff             	lea    -0x1(%edx),%esif0103a056231,279234
f0103a08:	fd                   	std    f0103a086233,279324
f0103a09:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)f0103a096234,279364
f0103a0b:	fc                   	cld    f0103a0b6237,279509
f0103a0c:	eb 21                	jmp    f0103a2f <memmove+0x55>f0103a0c6238,279549
f0103a0e:	f6 c1 03             	test   $0x3,%clf0103a0e6240,279662
f0103a11:	75 ef                	jne    f0103a02 <memmove+0x28>f0103a116241,279710
f0103a13:	83 ef 04             	sub    $0x4,%edif0103a136243,279831
f0103a16:	8d 72 fc             	lea    -0x4(%edx),%esif0103a166244,279880
f0103a19:	c1 e9 02             	shr    $0x2,%ecxf0103a196245,279935
f0103a1c:	fd                   	std    f0103a1c6247,280019
f0103a1d:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)f0103a1d6248,280059
f0103a1f:	eb ea                	jmp    f0103a0b <memmove+0x31>f0103a1f6249,280123
f0103a21:	89 f2                	mov    %esi,%edxf0103a216252,280246
f0103a23:	09 c2                	or     %eax,%edxf0103a236253,280295
f0103a25:	f6 c2 03             	test   $0x3,%dlf0103a256254,280344
f0103a28:	74 09                	je     f0103a33 <memmove+0x59>f0103a286255,280392
f0103a2a:	89 c7                	mov    %eax,%edif0103a2a6260,280586
f0103a2c:	fc                   	cld    f0103a2c6261,280635
f0103a2d:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)f0103a2d6262,280675
f0103a2f:	5e                   	pop    %esif0103a2f6267,280809
f0103a30:	5f                   	pop    %edif0103a306268,280853
f0103a31:	5d                   	pop    %ebpf0103a316269,280897
f0103a32:	c3                   	ret    f0103a326270,280941
f0103a33:	f6 c1 03             	test   $0x3,%clf0103a336272,281031
f0103a36:	75 f2                	jne    f0103a2a <memmove+0x50>f0103a366273,281079
f0103a38:	c1 e9 02             	shr    $0x2,%ecxf0103a386275,281196
f0103a3b:	89 c7                	mov    %eax,%edif0103a3b6277,281280
f0103a3d:	fc                   	cld    f0103a3d6278,281329
f0103a3e:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)f0103a3e6279,281369
f0103a40:	eb ed                	jmp    f0103a2f <memmove+0x55>f0103a406280,281433
f0103a42 <memcpy>:f0103a426282,281497
void *void6286,281526
f0103a42:	55                   	push   %ebpf0103a426289,281580
f0103a43:	89 e5                	mov    %esp,%ebpf0103a436290,281624
f0103a45:	ff 75 10             	pushl  0x10(%ebp)f0103a456292,281703
f0103a48:	ff 75 0c             	pushl  0xc(%ebp)f0103a486293,281753
f0103a4b:	ff 75 08             	pushl  0x8(%ebp)f0103a4b6294,281802
f0103a4e:	e8 87 ff ff ff       	call   f01039da <memmove>f0103a4e6295,281851
f0103a53:	c9                   	leave  f0103a536297,281911
f0103a54:	c3                   	ret    f0103a546298,281951
f0103a55 <memcmp>:f0103a556300,281992
intint6302,282012
f0103a55:	55                   	push   %ebpf0103a556305,282067
f0103a56:	89 e5                	mov    %esp,%ebpf0103a566306,282111
f0103a58:	56                   	push   %esif0103a586307,282160
f0103a59:	53                   	push   %ebxf0103a596308,282204
f0103a5a:	8b 45 08             	mov    0x8(%ebp),%eaxf0103a5a6309,282248
f0103a5d:	8b 55 0c             	mov    0xc(%ebp),%edxf0103a5d6310,282302
f0103a60:	89 c6                	mov    %eax,%esif0103a606311,282356
f0103a62:	03 75 10             	add    0x10(%ebp),%esif0103a626312,282405
f0103a65:	39 f0                	cmp    %esi,%eaxf0103a656317,282566
f0103a67:	74 1c                	je     f0103a85 <memcmp+0x30>f0103a676318,282615
f0103a69:	0f b6 08             	movzbl (%eax),%ecxf0103a696320,282695
f0103a6c:	0f b6 1a             	movzbl (%edx),%ebxf0103a6c6321,282746
f0103a6f:	38 d9                	cmp    %bl,%clf0103a6f6322,282797
f0103a71:	75 08                	jne    f0103a7b <memcmp+0x26>f0103a716323,282844
f0103a73:	83 c0 01             	add    $0x1,%eaxf0103a736326,282953
f0103a76:	83 c2 01             	add    $0x1,%edxf0103a766327,283002
f0103a79:	eb ea                	jmp    f0103a65 <memcmp+0x10>f0103a796328,283051
f0103a7b:	0f b6 c1             	movzbl %cl,%eaxf0103a7b6330,283146
f0103a7e:	0f b6 db             	movzbl %bl,%ebxf0103a7e6331,283194
f0103a81:	29 d8                	sub    %ebx,%eaxf0103a816332,283242
f0103a83:	eb 05                	jmp    f0103a8a <memcmp+0x35>f0103a836333,283291
f0103a85:	b8 00 00 00 00       	mov    $0x0,%eaxf0103a856337,283368
f0103a8a:	5b                   	pop    %ebxf0103a8a6339,283419
f0103a8b:	5e                   	pop    %esif0103a8b6340,283463
f0103a8c:	5d                   	pop    %ebpf0103a8c6341,283507
f0103a8d:	c3                   	ret    f0103a8d6342,283551
f0103a8e <memfind>:f0103a8e6344,283592
void *void6346,283613
f0103a8e:	55                   	push   %ebpf0103a8e6349,283662
f0103a8f:	89 e5                	mov    %esp,%ebpf0103a8f6350,283706
f0103a91:	8b 45 08             	mov    0x8(%ebp),%eaxf0103a916351,283755
f0103a94:	8b 4d 0c             	mov    0xc(%ebp),%ecxf0103a946352,283809
f0103a97:	89 c2                	mov    %eax,%edxf0103a976354,283905
f0103a99:	03 55 10             	add    0x10(%ebp),%edxf0103a996355,283954
f0103a9c:	39 d0                	cmp    %edx,%eaxf0103a9c6357,284032
f0103a9e:	73 09                	jae    f0103aa9 <memfind+0x1b>f0103a9e6358,284081
f0103aa0:	38 08                	cmp    %cl,(%eax)f0103aa06360,284199
f0103aa2:	74 05                	je     f0103aa9 <memfind+0x1b>f0103aa26361,284249
f0103aa4:	83 c0 01             	add    $0x1,%eaxf0103aa46363,284335
f0103aa7:	eb f3                	jmp    f0103a9c <memfind+0xe>f0103aa76364,284384
f0103aa9:	5d                   	pop    %ebpf0103aa96368,284478
f0103aaa:	c3                   	ret    f0103aaa6369,284522
f0103aab <strtol>:f0103aab6371,284563
longlong6373,284583
f0103aab:	55                   	push   %ebpf0103aab6376,284637
f0103aac:	89 e5                	mov    %esp,%ebpf0103aac6377,284681
f0103aae:	57                   	push   %edif0103aae6378,284730
f0103aaf:	56                   	push   %esif0103aaf6379,284774
f0103ab0:	53                   	push   %ebxf0103ab06380,284818
f0103ab1:	8b 4d 08             	mov    0x8(%ebp),%ecxf0103ab16381,284862
f0103ab4:	8b 5d 10             	mov    0x10(%ebp),%ebxf0103ab46382,284916
f0103ab7:	eb 03                	jmp    f0103abc <strtol+0x11>f0103ab76388,285064
f0103ab9:	83 c1 01             	add    $0x1,%ecxf0103ab96390,285133
f0103abc:	0f b6 01             	movzbl (%ecx),%eaxf0103abc6392,285215
f0103abf:	3c 20                	cmp    $0x20,%alf0103abf6393,285266
f0103ac1:	74 f6                	je     f0103ab9 <strtol+0xe>f0103ac16394,285315
f0103ac3:	3c 09                	cmp    $0x9,%alf0103ac36395,285376
f0103ac5:	74 f2                	je     f0103ab9 <strtol+0xe>f0103ac56396,285424
f0103ac7:	3c 2b                	cmp    $0x2b,%alf0103ac76400,285522
f0103ac9:	74 2e                	je     f0103af9 <strtol+0x4e>f0103ac96401,285571
f0103acb:	bf 00 00 00 00       	mov    $0x0,%edif0103acb6403,285647
f0103ad0:	3c 2d                	cmp    $0x2d,%alf0103ad06406,285724
f0103ad2:	74 2f                	je     f0103b03 <strtol+0x58>f0103ad26407,285773
f0103ad4:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebxf0103ad46412,285945
f0103ada:	75 05                	jne    f0103ae1 <strtol+0x36>f0103ada6413,286001
f0103adc:	80 39 30             	cmpb   $0x30,(%ecx)f0103adc6414,286063
f0103adf:	74 2c                	je     f0103b0d <strtol+0x62>f0103adf6415,286115
f0103ae1:	85 db                	test   %ebx,%ebxf0103ae16418,286234
f0103ae3:	75 0a                	jne    f0103aef <strtol+0x44>f0103ae36419,286283
		base = 10;base6422,286383
f0103ae5:	bb 0a 00 00 00       	mov    $0xa,%ebxf0103ae56423,286396
f0103aea:	80 39 30             	cmpb   $0x30,(%ecx)f0103aea6425,286481
f0103aed:	74 28                	je     f0103b17 <strtol+0x6c>f0103aed6426,286533
		base = 10;base6427,286595
f0103aef:	b8 00 00 00 00       	mov    $0x0,%eaxf0103aef6428,286608
f0103af4:	89 5d 10             	mov    %ebx,0x10(%ebp)f0103af46429,286657
f0103af7:	eb 50                	jmp    f0103b49 <strtol+0x9e>f0103af76430,286712
f0103af9:	83 c1 01             	add    $0x1,%ecxf0103af96432,286781
f0103afc:	bf 00 00 00 00       	mov    $0x0,%edif0103afc6434,286844
f0103b01:	eb d1                	jmp    f0103ad4 <strtol+0x29>f0103b016435,286893
f0103b03:	83 c1 01             	add    $0x1,%ecxf0103b036437,286971
f0103b06:	bf 01 00 00 00       	mov    $0x1,%edif0103b066438,287020
f0103b0b:	eb c7                	jmp    f0103ad4 <strtol+0x29>f0103b0b6439,287069
f0103b0d:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)f0103b0d6441,287195
f0103b11:	74 0e                	je     f0103b21 <strtol+0x76>f0103b116442,287250
f0103b13:	85 db                	test   %ebx,%ebxf0103b136444,287348
f0103b15:	75 d8                	jne    f0103aef <strtol+0x44>f0103b156445,287397
f0103b17:	83 c1 01             	add    $0x1,%ecxf0103b176447,287476
f0103b1a:	bb 08 00 00 00       	mov    $0x8,%ebxf0103b1a6448,287525
f0103b1f:	eb ce                	jmp    f0103aef <strtol+0x44>f0103b1f6449,287574
f0103b21:	83 c1 02             	add    $0x2,%ecxf0103b216451,287657
f0103b24:	bb 10 00 00 00       	mov    $0x10,%ebxf0103b246452,287706
f0103b29:	eb c4                	jmp    f0103aef <strtol+0x44>f0103b296453,287756
			dig = *s - '0';dig6458,287873
f0103b2b:	8d 72 9f             	lea    -0x61(%edx),%esif0103b2b6460,287927
f0103b2e:	89 f3                	mov    %esi,%ebxf0103b2e6461,287983
f0103b30:	80 fb 19             	cmp    $0x19,%blf0103b306462,288032
f0103b33:	77 29                	ja     f0103b5e <strtol+0xb3>f0103b336463,288081
			dig = *s - 'a' + 10;dig6464,288143
f0103b35:	0f be d2             	movsbl %dl,%edxf0103b356465,288167
f0103b38:	83 ea 57             	sub    $0x57,%edxf0103b386466,288215
			dig = *s - 'A' + 10;dig6468,288300
f0103b3b:	3b 55 10             	cmp    0x10(%ebp),%edxf0103b3b6472,288360
f0103b3e:	7d 30                	jge    f0103b70 <strtol+0xc5>f0103b3e6473,288415
f0103b40:	83 c1 01             	add    $0x1,%ecxf0103b406476,288520
f0103b43:	0f af 45 10          	imul   0x10(%ebp),%eaxf0103b436477,288569
f0103b47:	01 d0                	add    %edx,%eaxf0103b476478,288624
f0103b49:	0f b6 11             	movzbl (%ecx),%edxf0103b496480,288703
f0103b4c:	8d 72 d0             	lea    -0x30(%edx),%esif0103b4c6481,288754
f0103b4f:	89 f3                	mov    %esi,%ebxf0103b4f6482,288810
f0103b51:	80 fb 09             	cmp    $0x9,%blf0103b516483,288859
f0103b54:	77 d5                	ja     f0103b2b <strtol+0x80>f0103b546484,288907
			dig = *s - '0';dig6485,288969
f0103b56:	0f be d2             	movsbl %dl,%edxf0103b566486,288988
f0103b59:	83 ea 30             	sub    $0x30,%edxf0103b596487,289036
f0103b5c:	eb dd                	jmp    f0103b3b <strtol+0x90>f0103b5c6488,289086
f0103b5e:	8d 72 bf             	lea    -0x41(%edx),%esif0103b5e6490,289183
f0103b61:	89 f3                	mov    %esi,%ebxf0103b616491,289239
f0103b63:	80 fb 19             	cmp    $0x19,%blf0103b636492,289288
f0103b66:	77 08                	ja     f0103b70 <strtol+0xc5>f0103b666493,289337
			dig = *s - 'A' + 10;dig6494,289399
f0103b68:	0f be d2             	movsbl %dl,%edxf0103b686495,289423
f0103b6b:	83 ea 37             	sub    $0x37,%edxf0103b6b6496,289471
f0103b6e:	eb cb                	jmp    f0103b3b <strtol+0x90>f0103b6e6497,289521
f0103b70:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)f0103b706502,289640
f0103b74:	74 05                	je     f0103b7b <strtol+0xd0>f0103b746503,289694
f0103b76:	8b 75 0c             	mov    0xc(%ebp),%esif0103b766505,289780
f0103b79:	89 0e                	mov    %ecx,(%esi)f0103b796506,289834
f0103b7b:	89 c2                	mov    %eax,%edxf0103b7b6508,289913
f0103b7d:	f7 da                	neg    %edxf0103b7d6509,289962
f0103b7f:	85 ff                	test   %edi,%edif0103b7f6510,290006
f0103b81:	0f 45 c2             	cmovne %edx,%eaxf0103b816511,290055
f0103b84:	5b                   	pop    %ebxf0103b846513,290106
f0103b85:	5e                   	pop    %esif0103b856514,290150
f0103b86:	5f                   	pop    %edif0103b866515,290194
f0103b87:	5d                   	pop    %ebpf0103b876516,290238
f0103b88:	c3                   	ret    f0103b886517,290282
f0103b89:	66 90                	xchg   %ax,%axf0103b896518,290322
f0103b8b:	66 90                	xchg   %ax,%axf0103b8b6519,290369
f0103b8d:	66 90                	xchg   %ax,%axf0103b8d6520,290416
f0103b8f:	90                   	nopf0103b8f6521,290463
f0103b90 <__udivdi3>:f0103b906523,290500
f0103b90:	55                   	push   %ebpf0103b906524,290522
f0103b91:	57                   	push   %edif0103b916525,290566
f0103b92:	56                   	push   %esif0103b926526,290610
f0103b93:	53                   	push   %ebxf0103b936527,290654
f0103b94:	83 ec 1c             	sub    $0x1c,%espf0103b946528,290698
f0103b97:	8b 54 24 3c          	mov    0x3c(%esp),%edxf0103b976529,290748
f0103b9b:	8b 6c 24 30          	mov    0x30(%esp),%ebpf0103b9b6530,290803
f0103b9f:	8b 74 24 34          	mov    0x34(%esp),%esif0103b9f6531,290858
f0103ba3:	8b 5c 24 38          	mov    0x38(%esp),%ebxf0103ba36532,290913
f0103ba7:	85 d2                	test   %edx,%edxf0103ba76533,290968
f0103ba9:	75 35                	jne    f0103be0 <__udivdi3+0x50>f0103ba96534,291017
f0103bab:	39 f3                	cmp    %esi,%ebxf0103bab6535,291082
f0103bad:	0f 87 bd 00 00 00    	ja     f0103c70 <__udivdi3+0xe0>f0103bad6536,291131
f0103bb3:	85 db                	test   %ebx,%ebxf0103bb36537,291196
f0103bb5:	89 d9                	mov    %ebx,%ecxf0103bb56538,291245
f0103bb7:	75 0b                	jne    f0103bc4 <__udivdi3+0x34>f0103bb76539,291294
f0103bb9:	b8 01 00 00 00       	mov    $0x1,%eaxf0103bb96540,291359
f0103bbe:	31 d2                	xor    %edx,%edxf0103bbe6541,291408
f0103bc0:	f7 f3                	div    %ebxf0103bc06542,291457
f0103bc2:	89 c1                	mov    %eax,%ecxf0103bc26543,291501
f0103bc4:	31 d2                	xor    %edx,%edxf0103bc46544,291550
f0103bc6:	89 f0                	mov    %esi,%eaxf0103bc66545,291599
f0103bc8:	f7 f1                	div    %ecxf0103bc86546,291648
f0103bca:	89 c6                	mov    %eax,%esif0103bca6547,291692
f0103bcc:	89 e8                	mov    %ebp,%eaxf0103bcc6548,291741
f0103bce:	89 f7                	mov    %esi,%edif0103bce6549,291790
f0103bd0:	f7 f1                	div    %ecxf0103bd06550,291839
f0103bd2:	89 fa                	mov    %edi,%edxf0103bd26551,291883
f0103bd4:	83 c4 1c             	add    $0x1c,%espf0103bd46552,291932
f0103bd7:	5b                   	pop    %ebxf0103bd76553,291982
f0103bd8:	5e                   	pop    %esif0103bd86554,292026
f0103bd9:	5f                   	pop    %edif0103bd96555,292070
f0103bda:	5d                   	pop    %ebpf0103bda6556,292114
f0103bdb:	c3                   	ret    f0103bdb6557,292158
f0103bdc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esif0103bdc6558,292198
f0103be0:	39 f2                	cmp    %esi,%edxf0103be06559,292259
f0103be2:	77 7c                	ja     f0103c60 <__udivdi3+0xd0>f0103be26560,292308
f0103be4:	0f bd fa             	bsr    %edx,%edif0103be46561,292373
f0103be7:	83 f7 1f             	xor    $0x1f,%edif0103be76562,292422
f0103bea:	0f 84 98 00 00 00    	je     f0103c88 <__udivdi3+0xf8>f0103bea6563,292472
f0103bf0:	89 f9                	mov    %edi,%ecxf0103bf06564,292537
f0103bf2:	b8 20 00 00 00       	mov    $0x20,%eaxf0103bf26565,292586
f0103bf7:	29 f8                	sub    %edi,%eaxf0103bf76566,292636
f0103bf9:	d3 e2                	shl    %cl,%edxf0103bf96567,292685
f0103bfb:	89 54 24 08          	mov    %edx,0x8(%esp)f0103bfb6568,292733
f0103bff:	89 c1                	mov    %eax,%ecxf0103bff6569,292787
f0103c01:	89 da                	mov    %ebx,%edxf0103c016570,292836
f0103c03:	d3 ea                	shr    %cl,%edxf0103c036571,292885
f0103c05:	8b 4c 24 08          	mov    0x8(%esp),%ecxf0103c056572,292933
f0103c09:	09 d1                	or     %edx,%ecxf0103c096573,292987
f0103c0b:	89 f2                	mov    %esi,%edxf0103c0b6574,293036
f0103c0d:	89 4c 24 08          	mov    %ecx,0x8(%esp)f0103c0d6575,293085
f0103c11:	89 f9                	mov    %edi,%ecxf0103c116576,293139
f0103c13:	d3 e3                	shl    %cl,%ebxf0103c136577,293188
f0103c15:	89 c1                	mov    %eax,%ecxf0103c156578,293236
f0103c17:	d3 ea                	shr    %cl,%edxf0103c176579,293285
f0103c19:	89 f9                	mov    %edi,%ecxf0103c196580,293333
f0103c1b:	89 5c 24 0c          	mov    %ebx,0xc(%esp)f0103c1b6581,293382
f0103c1f:	d3 e6                	shl    %cl,%esif0103c1f6582,293436
f0103c21:	89 eb                	mov    %ebp,%ebxf0103c216583,293484
f0103c23:	89 c1                	mov    %eax,%ecxf0103c236584,293533
f0103c25:	d3 eb                	shr    %cl,%ebxf0103c256585,293582
f0103c27:	09 de                	or     %ebx,%esif0103c276586,293630
f0103c29:	89 f0                	mov    %esi,%eaxf0103c296587,293679
f0103c2b:	f7 74 24 08          	divl   0x8(%esp)f0103c2b6588,293728
f0103c2f:	89 d6                	mov    %edx,%esif0103c2f6589,293777
f0103c31:	89 c3                	mov    %eax,%ebxf0103c316590,293826
f0103c33:	f7 64 24 0c          	mull   0xc(%esp)f0103c336591,293875
f0103c37:	39 d6                	cmp    %edx,%esif0103c376592,293924
f0103c39:	72 0c                	jb     f0103c47 <__udivdi3+0xb7>f0103c396593,293973
f0103c3b:	89 f9                	mov    %edi,%ecxf0103c3b6594,294038
f0103c3d:	d3 e5                	shl    %cl,%ebpf0103c3d6595,294087
f0103c3f:	39 c5                	cmp    %eax,%ebpf0103c3f6596,294135
f0103c41:	73 5d                	jae    f0103ca0 <__udivdi3+0x110>f0103c416597,294184
f0103c43:	39 d6                	cmp    %edx,%esif0103c436598,294250
f0103c45:	75 59                	jne    f0103ca0 <__udivdi3+0x110>f0103c456599,294299
f0103c47:	8d 43 ff             	lea    -0x1(%ebx),%eaxf0103c476600,294365
f0103c4a:	31 ff                	xor    %edi,%edif0103c4a6601,294420
f0103c4c:	89 fa                	mov    %edi,%edxf0103c4c6602,294469
f0103c4e:	83 c4 1c             	add    $0x1c,%espf0103c4e6603,294518
f0103c51:	5b                   	pop    %ebxf0103c516604,294568
f0103c52:	5e                   	pop    %esif0103c526605,294612
f0103c53:	5f                   	pop    %edif0103c536606,294656
f0103c54:	5d                   	pop    %ebpf0103c546607,294700
f0103c55:	c3                   	ret    f0103c556608,294744
f0103c56:	8d 76 00             	lea    0x0(%esi),%esif0103c566609,294784
f0103c59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edif0103c596610,294838
f0103c60:	31 ff                	xor    %edi,%edif0103c606611,294899
f0103c62:	31 c0                	xor    %eax,%eaxf0103c626612,294948
f0103c64:	89 fa                	mov    %edi,%edxf0103c646613,294997
f0103c66:	83 c4 1c             	add    $0x1c,%espf0103c666614,295046
f0103c69:	5b                   	pop    %ebxf0103c696615,295096
f0103c6a:	5e                   	pop    %esif0103c6a6616,295140
f0103c6b:	5f                   	pop    %edif0103c6b6617,295184
f0103c6c:	5d                   	pop    %ebpf0103c6c6618,295228
f0103c6d:	c3                   	ret    f0103c6d6619,295272
f0103c6e:	66 90                	xchg   %ax,%axf0103c6e6620,295312
f0103c70:	31 ff                	xor    %edi,%edif0103c706621,295359
f0103c72:	89 e8                	mov    %ebp,%eaxf0103c726622,295408
f0103c74:	89 f2                	mov    %esi,%edxf0103c746623,295457
f0103c76:	f7 f3                	div    %ebxf0103c766624,295506
f0103c78:	89 fa                	mov    %edi,%edxf0103c786625,295550
f0103c7a:	83 c4 1c             	add    $0x1c,%espf0103c7a6626,295599
f0103c7d:	5b                   	pop    %ebxf0103c7d6627,295649
f0103c7e:	5e                   	pop    %esif0103c7e6628,295693
f0103c7f:	5f                   	pop    %edif0103c7f6629,295737
f0103c80:	5d                   	pop    %ebpf0103c806630,295781
f0103c81:	c3                   	ret    f0103c816631,295825
f0103c82:	8d b6 00 00 00 00    	lea    0x0(%esi),%esif0103c826632,295865
f0103c88:	39 f2                	cmp    %esi,%edxf0103c886633,295919
f0103c8a:	72 06                	jb     f0103c92 <__udivdi3+0x102>f0103c8a6634,295968
f0103c8c:	31 c0                	xor    %eax,%eaxf0103c8c6635,296034
f0103c8e:	39 eb                	cmp    %ebp,%ebxf0103c8e6636,296083
f0103c90:	77 d2                	ja     f0103c64 <__udivdi3+0xd4>f0103c906637,296132
f0103c92:	b8 01 00 00 00       	mov    $0x1,%eaxf0103c926638,296197
f0103c97:	eb cb                	jmp    f0103c64 <__udivdi3+0xd4>f0103c976639,296246
f0103c99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esif0103c996640,296311
f0103ca0:	89 d8                	mov    %ebx,%eaxf0103ca06641,296372
f0103ca2:	31 ff                	xor    %edi,%edif0103ca26642,296421
f0103ca4:	eb be                	jmp    f0103c64 <__udivdi3+0xd4>f0103ca46643,296470
f0103ca6:	66 90                	xchg   %ax,%axf0103ca66644,296535
f0103ca8:	66 90                	xchg   %ax,%axf0103ca86645,296582
f0103caa:	66 90                	xchg   %ax,%axf0103caa6646,296629
f0103cac:	66 90                	xchg   %ax,%axf0103cac6647,296676
f0103cae:	66 90                	xchg   %ax,%axf0103cae6648,296723
f0103cb0 <__umoddi3>:f0103cb06650,296771
f0103cb0:	55                   	push   %ebpf0103cb06651,296793
f0103cb1:	57                   	push   %edif0103cb16652,296837
f0103cb2:	56                   	push   %esif0103cb26653,296881
f0103cb3:	53                   	push   %ebxf0103cb36654,296925
f0103cb4:	83 ec 1c             	sub    $0x1c,%espf0103cb46655,296969
f0103cb7:	8b 6c 24 3c          	mov    0x3c(%esp),%ebpf0103cb76656,297019
f0103cbb:	8b 74 24 30          	mov    0x30(%esp),%esif0103cbb6657,297074
f0103cbf:	8b 5c 24 34          	mov    0x34(%esp),%ebxf0103cbf6658,297129
f0103cc3:	8b 7c 24 38          	mov    0x38(%esp),%edif0103cc36659,297184
f0103cc7:	85 ed                	test   %ebp,%ebpf0103cc76660,297239
f0103cc9:	89 f0                	mov    %esi,%eaxf0103cc96661,297288
f0103ccb:	89 da                	mov    %ebx,%edxf0103ccb6662,297337
f0103ccd:	75 19                	jne    f0103ce8 <__umoddi3+0x38>f0103ccd6663,297386
f0103ccf:	39 df                	cmp    %ebx,%edif0103ccf6664,297451
f0103cd1:	0f 86 b1 00 00 00    	jbe    f0103d88 <__umoddi3+0xd8>f0103cd16665,297500
f0103cd7:	f7 f7                	div    %edif0103cd76666,297565
f0103cd9:	89 d0                	mov    %edx,%eaxf0103cd96667,297609
f0103cdb:	31 d2                	xor    %edx,%edxf0103cdb6668,297658
f0103cdd:	83 c4 1c             	add    $0x1c,%espf0103cdd6669,297707
f0103ce0:	5b                   	pop    %ebxf0103ce06670,297757
f0103ce1:	5e                   	pop    %esif0103ce16671,297801
f0103ce2:	5f                   	pop    %edif0103ce26672,297845
f0103ce3:	5d                   	pop    %ebpf0103ce36673,297889
f0103ce4:	c3                   	ret    f0103ce46674,297933
f0103ce5:	8d 76 00             	lea    0x0(%esi),%esif0103ce56675,297973
f0103ce8:	39 dd                	cmp    %ebx,%ebpf0103ce86676,298027
f0103cea:	77 f1                	ja     f0103cdd <__umoddi3+0x2d>f0103cea6677,298076
f0103cec:	0f bd cd             	bsr    %ebp,%ecxf0103cec6678,298141
f0103cef:	83 f1 1f             	xor    $0x1f,%ecxf0103cef6679,298190
f0103cf2:	89 4c 24 04          	mov    %ecx,0x4(%esp)f0103cf26680,298240
f0103cf6:	0f 84 b4 00 00 00    	je     f0103db0 <__umoddi3+0x100>f0103cf66681,298294
f0103cfc:	b8 20 00 00 00       	mov    $0x20,%eaxf0103cfc6682,298360
f0103d01:	89 c2                	mov    %eax,%edxf0103d016683,298410
f0103d03:	8b 44 24 04          	mov    0x4(%esp),%eaxf0103d036684,298459
f0103d07:	29 c2                	sub    %eax,%edxf0103d076685,298513
f0103d09:	89 c1                	mov    %eax,%ecxf0103d096686,298562
f0103d0b:	89 f8                	mov    %edi,%eaxf0103d0b6687,298611
f0103d0d:	d3 e5                	shl    %cl,%ebpf0103d0d6688,298660
f0103d0f:	89 d1                	mov    %edx,%ecxf0103d0f6689,298708
f0103d11:	89 54 24 0c          	mov    %edx,0xc(%esp)f0103d116690,298757
f0103d15:	d3 e8                	shr    %cl,%eaxf0103d156691,298811
f0103d17:	09 c5                	or     %eax,%ebpf0103d176692,298859
f0103d19:	8b 44 24 04          	mov    0x4(%esp),%eaxf0103d196693,298908
f0103d1d:	89 c1                	mov    %eax,%ecxf0103d1d6694,298962
f0103d1f:	d3 e7                	shl    %cl,%edif0103d1f6695,299011
f0103d21:	89 d1                	mov    %edx,%ecxf0103d216696,299059
f0103d23:	89 7c 24 08          	mov    %edi,0x8(%esp)f0103d236697,299108
f0103d27:	89 df                	mov    %ebx,%edif0103d276698,299162
f0103d29:	d3 ef                	shr    %cl,%edif0103d296699,299211
f0103d2b:	89 c1                	mov    %eax,%ecxf0103d2b6700,299259
f0103d2d:	89 f0                	mov    %esi,%eaxf0103d2d6701,299308
f0103d2f:	d3 e3                	shl    %cl,%ebxf0103d2f6702,299357
f0103d31:	89 d1                	mov    %edx,%ecxf0103d316703,299405
f0103d33:	89 fa                	mov    %edi,%edxf0103d336704,299454
f0103d35:	d3 e8                	shr    %cl,%eaxf0103d356705,299503
f0103d37:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecxf0103d376706,299551
f0103d3c:	09 d8                	or     %ebx,%eaxf0103d3c6707,299605
f0103d3e:	f7 f5                	div    %ebpf0103d3e6708,299654
f0103d40:	d3 e6                	shl    %cl,%esif0103d406709,299698
f0103d42:	89 d1                	mov    %edx,%ecxf0103d426710,299746
f0103d44:	f7 64 24 08          	mull   0x8(%esp)f0103d446711,299795
f0103d48:	39 d1                	cmp    %edx,%ecxf0103d486712,299844
f0103d4a:	89 c3                	mov    %eax,%ebxf0103d4a6713,299893
f0103d4c:	89 d7                	mov    %edx,%edif0103d4c6714,299942
f0103d4e:	72 06                	jb     f0103d56 <__umoddi3+0xa6>f0103d4e6715,299991
f0103d50:	75 0e                	jne    f0103d60 <__umoddi3+0xb0>f0103d506716,300056
f0103d52:	39 c6                	cmp    %eax,%esif0103d526717,300121
f0103d54:	73 0a                	jae    f0103d60 <__umoddi3+0xb0>f0103d546718,300170
f0103d56:	2b 44 24 08          	sub    0x8(%esp),%eaxf0103d566719,300235
f0103d5a:	19 ea                	sbb    %ebp,%edxf0103d5a6720,300289
f0103d5c:	89 d7                	mov    %edx,%edif0103d5c6721,300338
f0103d5e:	89 c3                	mov    %eax,%ebxf0103d5e6722,300387
f0103d60:	89 ca                	mov    %ecx,%edxf0103d606723,300436
f0103d62:	0f b6 4c 24 0c       	movzbl 0xc(%esp),%ecxf0103d626724,300485
f0103d67:	29 de                	sub    %ebx,%esif0103d676725,300539
f0103d69:	19 fa                	sbb    %edi,%edxf0103d696726,300588
f0103d6b:	8b 5c 24 04          	mov    0x4(%esp),%ebxf0103d6b6727,300637
f0103d6f:	89 d0                	mov    %edx,%eaxf0103d6f6728,300691
f0103d71:	d3 e0                	shl    %cl,%eaxf0103d716729,300740
f0103d73:	89 d9                	mov    %ebx,%ecxf0103d736730,300788
f0103d75:	d3 ee                	shr    %cl,%esif0103d756731,300837
f0103d77:	d3 ea                	shr    %cl,%edxf0103d776732,300885
f0103d79:	09 f0                	or     %esi,%eaxf0103d796733,300933
f0103d7b:	83 c4 1c             	add    $0x1c,%espf0103d7b6734,300982
f0103d7e:	5b                   	pop    %ebxf0103d7e6735,301032
f0103d7f:	5e                   	pop    %esif0103d7f6736,301076
f0103d80:	5f                   	pop    %edif0103d806737,301120
f0103d81:	5d                   	pop    %ebpf0103d816738,301164
f0103d82:	c3                   	ret    f0103d826739,301208
f0103d83:	90                   	nopf0103d836740,301248
f0103d84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esif0103d846741,301284
f0103d88:	85 ff                	test   %edi,%edif0103d886742,301345
f0103d8a:	89 f9                	mov    %edi,%ecxf0103d8a6743,301394
f0103d8c:	75 0b                	jne    f0103d99 <__umoddi3+0xe9>f0103d8c6744,301443
f0103d8e:	b8 01 00 00 00       	mov    $0x1,%eaxf0103d8e6745,301508
f0103d93:	31 d2                	xor    %edx,%edxf0103d936746,301557
f0103d95:	f7 f7                	div    %edif0103d956747,301606
f0103d97:	89 c1                	mov    %eax,%ecxf0103d976748,301650
f0103d99:	89 d8                	mov    %ebx,%eaxf0103d996749,301699
f0103d9b:	31 d2                	xor    %edx,%edxf0103d9b6750,301748
f0103d9d:	f7 f1                	div    %ecxf0103d9d6751,301797
f0103d9f:	89 f0                	mov    %esi,%eaxf0103d9f6752,301841
f0103da1:	f7 f1                	div    %ecxf0103da16753,301890
f0103da3:	e9 31 ff ff ff       	jmp    f0103cd9 <__umoddi3+0x29>f0103da36754,301934
f0103da8:	90                   	nopf0103da86755,301999
f0103da9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esif0103da96756,302035
f0103db0:	39 dd                	cmp    %ebx,%ebpf0103db06757,302096
f0103db2:	72 08                	jb     f0103dbc <__umoddi3+0x10c>f0103db26758,302145
f0103db4:	39 f7                	cmp    %esi,%edif0103db46759,302211
f0103db6:	0f 87 21 ff ff ff    	ja     f0103cdd <__umoddi3+0x2d>f0103db66760,302260
f0103dbc:	89 da                	mov    %ebx,%edxf0103dbc6761,302325
f0103dbe:	89 f0                	mov    %esi,%eaxf0103dbe6762,302374
f0103dc0:	29 f8                	sub    %edi,%eaxf0103dc06763,302423
f0103dc2:	19 ea                	sbb    %ebp,%edxf0103dc26764,302472
f0103dc4:	e9 14 ff ff ff       	jmp    f0103cdd <__umoddi3+0x2d>f0103dc46765,302521

fs/test.c,99
static char *msg = "This is the NEW message of the day!\n\n";msg6,63
fs_test(void)fs_test9,131

user/sendpage.c,265
const char *str1 = "hello child environment! how are you?";str16,128
const char *str2 = "hello parent environment! I'm good.";str27,188
#define TEMP_ADDR	TEMP_ADDR9,247
#define TEMP_ADDR_CHILD	TEMP_ADDR_CHILD10,283
umain(int argc, char **argv)umain13,331

conf/env.mk,14
V = @V9,359

conf/lab.mk,71
LAB=2LAB1,0
PACKAGEDATE=Wed Sep 12 14:51:29 EDT 2018PACKAGEDATE2,6

kern/console.h,275
#define _CONSOLE_H__CONSOLE_H_4,68
#define MONO_BASE	MONO_BASE11,215
#define MONO_BUF	MONO_BUF12,239
#define CGA_BASE	CGA_BASE13,264
#define CGA_BUF	CGA_BUF14,287
#define CRT_ROWS	CRT_ROWS16,313
#define CRT_COLS	CRT_COLS17,333
#define CRT_SIZE	CRT_SIZE18,353

kern/kclock.c,116
mc146818_read(unsigned reg)mc146818_read11,169
mc146818_write(unsigned reg, unsigned datum)mc146818_write18,250

kern/monitor.c,821
#define CMDBUF_SIZE	CMDBUF_SIZE14,314
struct Command {Command17,371
	const char *name;name18,388
	const char *name;Command::name18,388
	const char *desc;desc19,407
	const char *desc;Command::desc19,407
	int (*func)(int argc, char** argv, struct Trapframe* tf);func21,465
	int (*func)(int argc, char** argv, struct Trapframe* tf);Command::func21,465
static struct Command commands[] = {commands24,528
mon_help(int argc, char **argv, struct Trapframe *tf)mon_help32,764
mon_kerninfo(int argc, char **argv, struct Trapframe *tf)mon_kerninfo42,951
mon_backtrace(int argc, char **argv, struct Trapframe *tf)mon_backtrace58,1572
#define WHITESPACE WHITESPACE68,1719
#define MAXARGS MAXARGS69,1748
runcmd(char *buf, struct Trapframe *tf)runcmd72,1779
monitor(struct Trapframe *tf)monitor111,2571

kern/kdebug.h,1042
#define JOS_KERN_KDEBUG_HJOS_KERN_KDEBUG_H2,26
struct Eipdebuginfo {Eipdebuginfo7,137
	const char *eip_file;		// Source code filename for EIPeip_file8,159
	const char *eip_file;		// Source code filename for EIPEipdebuginfo::eip_file8,159
	int eip_line;			// Source code linenumber for EIPeip_line9,215
	int eip_line;			// Source code linenumber for EIPEipdebuginfo::eip_line9,215
	const char *eip_fn_name;	// Name of function containing EIPeip_fn_name11,267
	const char *eip_fn_name;	// Name of function containing EIPEipdebuginfo::eip_fn_name11,267
	int eip_fn_namelen;		// Length of function nameeip_fn_namelen13,366
	int eip_fn_namelen;		// Length of function nameEipdebuginfo::eip_fn_namelen13,366
	uintptr_t eip_fn_addr;		// Address of start of functioneip_fn_addr14,415
	uintptr_t eip_fn_addr;		// Address of start of functionEipdebuginfo::eip_fn_addr14,415
	int eip_fn_narg;		// Number of function argumentseip_fn_narg15,472
	int eip_fn_narg;		// Number of function argumentsEipdebuginfo::eip_fn_narg15,472

kern/console.c,2436
delay(void)delay16,352
#define COM1	COM126,448
#define COM_RX	COM_RX28,469
#define COM_TX	COM_TX29,518
#define COM_DLL	COM_DLL30,569
#define COM_DLM	COM_DLM31,623
#define COM_IER	COM_IER32,678
#define   COM_IER_RDI	COM_IER_RDI33,731
#define COM_IIR	COM_IIR34,794
#define COM_FCR	COM_FCR35,842
#define COM_LCR	COM_LCR36,891
#define	  COM_LCR_DLAB	COM_LCR_DLAB37,940
#define	  COM_LCR_WLEN8	COM_LCR_WLEN838,998
#define COM_MCR	COM_MCR39,1051
#define	  COM_MCR_RTS	COM_MCR_RTS40,1101
#define	  COM_MCR_DTR	COM_MCR_DTR41,1146
#define	  COM_MCR_OUT2	COM_MCR_OUT242,1191
#define COM_LSR	COM_LSR43,1238
#define   COM_LSR_DATA	COM_LSR_DATA44,1285
#define   COM_LSR_TXRDY	COM_LSR_TXRDY45,1333
#define   COM_LSR_TSRE	COM_LSR_TSRE46,1389
static bool serial_exists;serial_exists48,1439
serial_proc_data(void)serial_proc_data51,1478
serial_intr(void)serial_intr59,1592
serial_putc(int c)serial_putc66,1678
serial_init(void)serial_init79,1843
lpt_putc(int c)lpt_putc112,2633
static unsigned addr_6845;addr_6845128,2853
static uint16_t *crt_buf;crt_buf129,2880
static uint16_t crt_pos;crt_pos130,2906
cga_init(void)cga_init133,2944
cga_putc(int c)cga_putc163,3430
#define NO	NO214,4399
#define SHIFT	SHIFT216,4414
#define CTL	CTL217,4436
#define ALT	ALT218,4456
#define CAPSLOCK	CAPSLOCK220,4477
#define NUMLOCK	NUMLOCK221,4501
#define SCROLLLOCK	SCROLLLOCK222,4525
#define E0ESC	E0ESC224,4552
static uint8_t shiftcode[256] =shiftcode226,4575
static uint8_t togglecode[256] =togglecode236,4706
static uint8_t normalmap[256] =normalmap243,4805
static uint8_t shiftmap[256] =shiftmap264,5690
#define C(C285,6574
static uint8_t ctlmap[256] =ctlmap287,6598
static uint8_t *charcode[4] = {charcode304,7327
kbd_proc_data(void)kbd_proc_data316,7524
kbd_intr(void)kbd_intr368,8510
kbd_init(void)kbd_init374,8569
#define CONSBUFSIZE CONSBUFSIZE385,8809
	uint8_t buf[CONSBUFSIZE];buf388,8850
	uint8_t buf[CONSBUFSIZE];__anon3::buf388,8850
	uint32_t rpos;rpos389,8877
	uint32_t rpos;__anon3::rpos389,8877
	uint32_t wpos;wpos390,8893
	uint32_t wpos;__anon3::wpos390,8893
} cons;cons391,8909
cons_intr(int (*proc)(void))cons_intr396,9037
cons_getc(void)cons_getc411,9300
cons_putc(int c)cons_putc433,9754
cons_init(void)cons_init442,9860
cputchar(int c)cputchar456,10056
getchar(void)getchar462,10096
iscons(int fdnum)iscons472,10191

kern/entrypgdir.c,163
pte_t entry_pgtable[NPTENTRIES];entry_pgtable4,49
pde_t entry_pgdir[NPDENTRIES] = {entry_pgdir21,934
pte_t entry_pgtable[NPTENTRIES] = {entry_pgtable33,1329

kern/monitor.h,51
#define JOS_KERN_MONITOR_HJOS_KERN_MONITOR_H2,27

kern/pmap.h,397
#define JOS_KERN_PMAP_HJOS_KERN_PMAP_H4,72
#define PADDR(PADDR25,645
_paddr(const char *file, int line, void *kva)_paddr28,722
#define KADDR(KADDR37,1057
_kaddr(const char *file, int line, physaddr_t pa)_kaddr40,1127
	ALLOC_ZERO = 1<<0,ALLOC_ZERO50,1366
page2pa(struct PageInfo *pp)page2pa66,1815
pa2page(physaddr_t pa)pa2page72,1913
page2kva(struct PageInfo *pp)page2kva80,2057

kern/pmap.c,1558
size_t npages;			// Amount of physical memory (in pages)npages13,262
static size_t npages_basemem;	// Amount of base memory (in pages)npages_basemem14,319
pde_t *kern_pgdir;		// Kernel's initial page directorykern_pgdir17,427
struct PageInfo *pages;		// Physical page state arraypages18,482
static struct PageInfo *page_free_list;	// Free list of physical pagespage_free_list19,536
nvram_read(int r)nvram_read27,796
i386_detect_memory(void)i386_detect_memory33,887
boot_alloc(uint32_t n)boot_alloc85,2707
mem_init(void)mem_init126,4082
page_init(void)page_init240,8644
page_alloc(int alloc_flags)page_alloc292,10453
page_free(struct PageInfo *pp)page_free313,10849
page_decref(struct PageInfo* pp)page_decref332,11314
pgdir_walk(pde_t *pgdir, const void *va, int create)pgdir_walk361,12450
boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)boot_map_region404,13474
page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)page_insert435,14570
page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)page_lookup457,15213
page_remove(pde_t *pgdir, void *va)page_remove480,15961
tlb_invalidate(pde_t *pgdir, void *va)tlb_invalidate493,16256
check_page_free_list(bool only_low_memory)check_page_free_list509,16689
check_page_alloc(void)check_page_alloc571,18450
check_kern_pgdir(void)check_kern_pgdir653,20267
check_va2pa(pde_t *pgdir, uintptr_t va)check_va2pa701,21522
check_page(void)check_page717,21803
check_page_installed_pgdir(void)check_page_installed_pgdir869,26598

kern/entry.S,533
#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))SRL7,120
#define	RELOC(x) ((x) - KERNBASE)RELOC18,566
#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)MULTIBOOT_HEADER_MAGIC20,601
#define MULTIBOOT_HEADER_FLAGS (0)MULTIBOOT_HEADER_FLAGS21,645
#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))CHECKSUM22,680
_start = RELOC(entry)_start40,1231
entry:entry43,1267
relocated:relocated69,2169
spin:	jmp	spinspin83,2501
bootstack:bootstack92,2734
bootstacktop:bootstacktop95,2788

kern/init.c,211
i386_init(void)i386_init14,227
const char *panicstr;panicstr42,921
_panic(const char *file, int line, const char *fmt,...)_panic49,1069
_warn(const char *file, int line, const char *fmt,...)_warn74,1502

kern/kdebug.c,181
stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,stab_binsearch51,1753
debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)debuginfo_eip105,3021

kern/kclock.h,420
#define JOS_KERN_KCLOCK_HJOS_KERN_KCLOCK_H4,74
#define	IO_RTC	IO_RTC9,203
#define	MC_NVRAM_START	MC_NVRAM_START11,242
#define	MC_NVRAM_SIZE	MC_NVRAM_SIZE12,301
#define NVRAM_BASELO	NVRAM_BASELO15,393
#define NVRAM_BASEHI	NVRAM_BASEHI16,465
#define NVRAM_EXTLO	NVRAM_EXTLO19,609
#define NVRAM_EXTHI	NVRAM_EXTHI20,680
#define NVRAM_EXT16LO	NVRAM_EXT16LO23,826
#define NVRAM_EXT16HI	NVRAM_EXT16HI24,900

kern/printf.c,136
putch(int ch, int *cnt)putch10,212
vcprintf(const char *fmt, va_list ap)vcprintf17,269
cprintf(const char *fmt, ...)cprintf26,385

grade-lab2,306
r = Runner(save("jos.out"),r5,47
def test_jos():test_jos9,140
def test_check_page_alloc():test_check_page_alloc13,228
def test_check_page():test_check_page17,352
def test_check_kern_pgdir():test_check_kern_pgdir21,470
def test_check_page_installed_pgdir():test_check_page_installed_pgdir25,596

gradelib.py,2816
__all__ = []__all__7,194
TESTS = []TESTS15,361
CURRENT_TEST = NoneCURRENT_TEST18,424
def test(points, title=None, parent=None):test20,445
    def register_test(fn, title=title):register_test26,703
        def run_test():run_test33,923
def end_part(name):end_part79,2398
    def show_part():show_part80,2418
def run_tests():run_tests89,2709
def get_current_test():get_current_test120,3671
def assert_equal(got, expect, msg=""):assert_equal131,3928
def assert_lines_match(text, *regexps, **kw):assert_lines_match140,4221
    def assert_lines_match_kw(no=[]):assert_lines_match_kw145,4445
MAKE_TIMESTAMP = 0MAKE_TIMESTAMP196,6022
def pre_make():pre_make198,6042
def post_make():post_make203,6197
def make(*target):make209,6385
def show_command(cmd):show_command215,6497
def maybe_unlink(*paths):maybe_unlink219,6593
COLORS = {"default": "\033[0m", "red": "\033[31m", "green": "\033[32m"}COLORS227,6784
def color(name, text):color229,6857
def reset_fs():reset_fs234,7032
class QEMU(object):QEMU244,7277
    _GDBPORT = None_GDBPORT245,7297
    def __init__(self, *make_args):__init__247,7318
    def get_gdb_port():get_gdb_port273,8258
    def fileno(self):fileno285,8713
    def handle_read(self):handle_read289,8803
    def wait(self):wait299,9115
    def kill(self):kill304,9216
class GDBClient(object):GDBClient308,9293
    def __init__(self, port, timeout=15):__init__309,9318
    def fileno(self):fileno322,9717
    def handle_read(self):handle_read326,9800
    def __send(self, cmd):__send348,10398
    def __send_break(self):__send_break352,10538
    def close(self):close355,10602
    def cont(self):cont360,10705
    def breakpoint(self, addr):breakpoint363,10751
class TerminateTest(Exception):TerminateTest373,10952
class Runner():Runner376,10994
    def __init__(self, *default_monitors):__init__377,11010
    def run_qemu(self, *monitors, **kw):run_qemu380,11105
        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):run_qemu_kw389,11629
    def __monitor_start(self, output):__monitor_start436,13129
    def __react(self, reactors, timeout):__react446,13439
    def user_test(self, binary, *monitors, **kw):user_test466,14081
    def match(self, *args, **kwargs):match476,14579
def save(path):save488,14924
    def setup_save(runner):setup_save492,15062
    def save_on_finish(fail):save_on_finish498,15236
def stop_breakpoint(addr):stop_breakpoint511,15660
    def setup_breakpoint(runner):setup_breakpoint515,15800
def call_on_line(regexp, callback):call_on_line525,16182
    def setup_call_on_line(runner):setup_call_on_line529,16316
        def handle_output(output):handle_output531,16378
def stop_on_line(regexp):stop_on_line541,16743
    def stop(line):stop545,16856

.dir-locals.el,0

GNUmakefile,1598
OBJDIR := objOBJDIR8,197
LABSETUP ?= ./LABSETUP22,403
TOP = .TOP24,419
GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >/dev/null 2>&1; \GCCPREFIX36,874
QEMU := $(shell if which qemu >/dev/null 2>&1; \QEMU52,1637
GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)GDBPORT67,2275
CC	:= $(GCCPREFIX)gcc -pipeCC69,2324
GDB	:= $(GCCPREFIX)gdbGDB70,2352
AS	:= $(GCCPREFIX)asAS71,2375
AR	:= $(GCCPREFIX)arAR72,2396
LD	:= $(GCCPREFIX)ldLD73,2417
OBJCOPY	:= $(GCCPREFIX)objcopyOBJCOPY74,2438
OBJDUMP	:= $(GCCPREFIX)objdumpOBJDUMP75,2469
NM	:= $(GCCPREFIX)nmNM76,2500
NCC	:= gcc $(CC_VER) -pipeNCC79,2540
NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -WallNATIVE_CFLAGS80,2567
TAR	:= gtarTAR81,2632
PERL	:= perlPERL82,2644
CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MDCFLAGS87,2831
LDFLAGS := -m elf_i386LDFLAGS100,3389
ULDFLAGS := -T user/user.ldULDFLAGS103,3450
GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)GCC_LIB105,3479
OBJDIRS :=OBJDIRS108,3599
KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabsKERN_CFLAGS124,3990
USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabsUSER_CFLAGS125,4036
QEMUOPTS = -drive file=$(OBJDIR)/kern/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)QEMUOPTS143,4546
IMAGES = $(OBJDIR)/kern/kernel.imgIMAGES145,4759
WEBSUB := https://6828.scripts.mit.edu/2018/handin.pyWEBSUB223,6476
UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu/6.828/2018/jos.git (fetch)" | awk '{split($$0,a," "); print a[1]}')UPSTREAM256,7498
