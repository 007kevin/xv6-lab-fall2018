
grade-lab1,445
r = Runner(save("jos.out"),r6,57
def test_jos():test_jos10,150
def test_printf():test_printf14,211
BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"BACKTRACE_RE17,275
def test_backtrace_count():test_backtrace_count20,386
def test_backtrace_arguments():test_backtrace_arguments25,544
def test_backtrace_symbols():test_backtrace_symbols31,777
def test_backtrace_lines():test_backtrace_lines37,1018

mergedep.pl,31
sub readdeps {readdeps27,909

lib/readline.c,106
#define BUFLEN BUFLEN4,47
static char buf[BUFLEN];buf5,67
readline(const char *prompt)readline8,100

lib/string.c,1018
#define ASM ASM9,264
strlen(const char *s)strlen12,283
strnlen(const char *s, size_t size)strnlen22,371
strcpy(char *dst, const char *src)strcpy32,496
strcat(char *dst, const char *src)strcat43,636
strncpy(char *dst, const char *src, size_t size) {strncpy51,745
strlcpy(char *dst, const char *src, size_t size)strlcpy66,998
strcmp(const char *p, const char *q)strcmp80,1201
strncmp(const char *p, const char *q, size_t n)strncmp88,1340
strchr(const char *s, char c)strchr101,1645
strfind(const char *s, char c)strfind112,1889
memset(void *v, int c, size_t n)memset122,2002
memmove(void *dst, const void *src, size_t n)memmove142,2359
memset(void *v, int c, size_t n)memset174,3099
memmove(void *dst, const void *src, size_t n)memmove188,3221
memcpy(void *dst, const void *src, size_t n)memcpy209,3470
memcmp(const void *v1, const void *v2, size_t n)memcmp215,3554
memfind(const void *s, int c, size_t n)memfind230,3801
strtol(const char *s, char **endptr, int base)strtol240,4001

lib/printfmt.c,845
static const char * const error_string[MAXERROR] =error_string21,589
printnum(void (*putch)(int, void*), void *putdat,printnum36,995
getuint(va_list *ap, int lflag)getuint55,1609
getint(va_list *ap, int lflag)getint68,1897
vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)vprintfmt83,2193
printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)printfmt247,5283
struct sprintbuf {sprintbuf256,5443
	char *buf;buf257,5462
	char *buf;sprintbuf::buf257,5462
	char *ebuf;ebuf258,5474
	char *ebuf;sprintbuf::ebuf258,5474
	int cnt;cnt259,5487
	int cnt;sprintbuf::cnt259,5487
sprintputch(int ch, struct sprintbuf *b)sprintputch263,5513
vsnprintf(char *buf, int n, const char *fmt, va_list ap)vsnprintf271,5615
snprintf(char *buf, int n, const char *fmt, ...)snprintf288,5913

inc/memlayout.h,1127
#define JOS_INC_MEMLAYOUT_HJOS_INC_MEMLAYOUT_H2,28
#define GD_KT GD_KT15,324
#define GD_KD GD_KD16,366
#define GD_UT GD_UT17,408
#define GD_UD GD_UD18,448
#define GD_TSS0 GD_TSS019,488
#define	KERNBASE	KERNBASE87,4609
#define IOPHYSMEM	IOPHYSMEM92,4814
#define EXTPHYSMEM	EXTPHYSMEM93,4841
#define KSTACKTOP	KSTACKTOP96,4887
#define KSTKSIZE	KSTKSIZE97,4914
#define KSTKGAP	KSTKGAP98,4972
#define MMIOLIM	MMIOLIM101,5058
#define MMIOBASE	MMIOBASE102,5096
#define ULIM	ULIM104,5133
#define UVPT	UVPT112,5361
#define UPAGES	UPAGES114,5434
#define UENVS	UENVS116,5515
#define UTOP	UTOP123,5650
#define UXSTACKTOP	UXSTACKTOP125,5710
#define USTACKTOP	USTACKTOP128,5837
#define UTEXT	UTEXT131,5913
#define UTEMP	UTEMP134,6008
#define PFTEMP	PFTEMP137,6168
#define USTABDATA	USTABDATA139,6265
typedef uint32_t pte_t;pte_t143,6320
typedef uint32_t pde_t;pde_t144,6344
struct PageInfo {PageInfo175,7643
	struct PageInfo *pp_link;pp_link177,7693
	struct PageInfo *pp_link;PageInfo::pp_link177,7693
	uint16_t pp_ref;pp_ref184,7951
	uint16_t pp_ref;PageInfo::pp_ref184,7951

inc/stab.h,1529
#define JOS_STAB_HJOS_STAB_H2,19
#define	N_GSYM	N_GSYM15,436
#define	N_FNAME	N_FNAME16,474
#define	N_FUN	N_FUN17,517
#define	N_STSYM	N_STSYM18,555
#define	N_LCSYM	N_LCSYM19,602
#define	N_MAIN	N_MAIN20,648
#define	N_PC	N_PC21,691
#define	N_RSYM	N_RSYM22,734
#define	N_SLINE	N_SLINE23,776
#define	N_DSLINE	N_DSLINE24,826
#define	N_BSLINE	N_BSLINE25,876
#define	N_SSYM	N_SSYM26,925
#define	N_SO	N_SO27,973
#define	N_LSYM	N_LSYM28,1017
#define	N_BINCL	N_BINCL29,1056
#define	N_SOL	N_SOL30,1104
#define	N_PSYM	N_PSYM31,1153
#define	N_EINCL	N_EINCL32,1196
#define	N_ENTRY	N_ENTRY33,1238
#define	N_LBRAC	N_LBRAC34,1285
#define	N_EXCL	N_EXCL35,1323
#define	N_RBRAC	N_RBRAC36,1368
#define	N_BCOMM	N_BCOMM37,1407
#define	N_ECOMM	N_ECOMM38,1445
#define	N_ECOML	N_ECOML39,1481
#define	N_LENG	N_LENG40,1530
struct Stab {Stab43,1637
	uint32_t n_strx;	// index into string table of namen_strx44,1651
	uint32_t n_strx;	// index into string table of nameStab::n_strx44,1651
	uint8_t n_type;         // type of symboln_type45,1704
	uint8_t n_type;         // type of symbolStab::n_type45,1704
	uint8_t n_other;        // misc info (usually empty)n_other46,1747
	uint8_t n_other;        // misc info (usually empty)Stab::n_other46,1747
	uint16_t n_desc;        // description fieldn_desc47,1801
	uint16_t n_desc;        // description fieldStab::n_desc47,1801
	uintptr_t n_value;	// value of symboln_value48,1847
	uintptr_t n_value;	// value of symbolStab::n_value48,1847

inc/string.h,47
#define JOS_INC_STRING_HJOS_INC_STRING_H2,25

inc/stdio.h,69
#define JOS_INC_STDIO_HJOS_INC_STDIO_H2,24
#define NULL	NULL7,87

inc/x86.h,1331
#define JOS_INC_X86_HJOS_INC_X86_H2,22
breakpoint(void)breakpoint7,88
inb(int port)inb13,155
insb(int port, void *addr, int cnt)insb21,278
inw(int port)inw30,481
insw(int port, void *addr, int cnt)insw38,605
inl(int port)inl47,808
insl(int port, void *addr, int cnt)insl55,932
outb(int port, uint8_t data)outb64,1131
outsb(int port, const void *addr, int cnt)outsb70,1241
outw(int port, uint16_t data)outw79,1438
outsw(int port, const void *addr, int cnt)outsw85,1549
outsl(int port, const void *addr, int cnt)outsl94,1746
outl(int port, uint32_t data)outl103,1943
invlpg(void *addr)invlpg109,2054
lidt(void *p)lidt115,2153
lgdt(void *p)lgdt121,2231
lldt(uint16_t sel)lldt127,2309
ltr(uint16_t sel)ltr133,2392
lcr0(uint32_t val)lcr0139,2473
rcr0(void)rcr0145,2566
rcr2(void)rcr2153,2678
lcr3(uint32_t val)lcr3161,2786
rcr3(void)rcr3167,2879
lcr4(uint32_t val)lcr4175,2987
rcr4(void)rcr4181,3080
tlbflush(void)tlbflush189,3188
read_eflags(void)read_eflags197,3337
write_eflags(uint32_t eflags)write_eflags205,3463
read_ebp(void)read_ebp211,3572
read_esp(void)read_esp219,3688
cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)cpuid227,3800
read_tsc(void)read_tsc244,4147
xchg(volatile uint32_t *addr, uint32_t newval)xchg252,4255

inc/elf.h,3208
#define JOS_INC_ELF_HJOS_INC_ELF_H2,22
#define ELF_MAGIC ELF_MAGIC4,45
struct Elf {Elf6,109
	uint32_t e_magic;	// must equal ELF_MAGICe_magic7,122
	uint32_t e_magic;	// must equal ELF_MAGICElf::e_magic7,122
	uint8_t e_elf[12];e_elf8,165
	uint8_t e_elf[12];Elf::e_elf8,165
	uint16_t e_type;e_type9,185
	uint16_t e_type;Elf::e_type9,185
	uint16_t e_machine;e_machine10,203
	uint16_t e_machine;Elf::e_machine10,203
	uint32_t e_version;e_version11,224
	uint32_t e_version;Elf::e_version11,224
	uint32_t e_entry;e_entry12,245
	uint32_t e_entry;Elf::e_entry12,245
	uint32_t e_phoff;e_phoff13,264
	uint32_t e_phoff;Elf::e_phoff13,264
	uint32_t e_shoff;e_shoff14,283
	uint32_t e_shoff;Elf::e_shoff14,283
	uint32_t e_flags;e_flags15,302
	uint32_t e_flags;Elf::e_flags15,302
	uint16_t e_ehsize;e_ehsize16,321
	uint16_t e_ehsize;Elf::e_ehsize16,321
	uint16_t e_phentsize;e_phentsize17,341
	uint16_t e_phentsize;Elf::e_phentsize17,341
	uint16_t e_phnum;e_phnum18,364
	uint16_t e_phnum;Elf::e_phnum18,364
	uint16_t e_shentsize;e_shentsize19,383
	uint16_t e_shentsize;Elf::e_shentsize19,383
	uint16_t e_shnum;e_shnum20,406
	uint16_t e_shnum;Elf::e_shnum20,406
	uint16_t e_shstrndx;e_shstrndx21,425
	uint16_t e_shstrndx;Elf::e_shstrndx21,425
struct Proghdr {Proghdr24,451
	uint32_t p_type;p_type25,468
	uint32_t p_type;Proghdr::p_type25,468
	uint32_t p_offset;p_offset26,486
	uint32_t p_offset;Proghdr::p_offset26,486
	uint32_t p_va;p_va27,506
	uint32_t p_va;Proghdr::p_va27,506
	uint32_t p_pa;p_pa28,522
	uint32_t p_pa;Proghdr::p_pa28,522
	uint32_t p_filesz;p_filesz29,538
	uint32_t p_filesz;Proghdr::p_filesz29,538
	uint32_t p_memsz;p_memsz30,558
	uint32_t p_memsz;Proghdr::p_memsz30,558
	uint32_t p_flags;p_flags31,577
	uint32_t p_flags;Proghdr::p_flags31,577
	uint32_t p_align;p_align32,596
	uint32_t p_align;Proghdr::p_align32,596
struct Secthdr {Secthdr35,619
	uint32_t sh_name;sh_name36,636
	uint32_t sh_name;Secthdr::sh_name36,636
	uint32_t sh_type;sh_type37,655
	uint32_t sh_type;Secthdr::sh_type37,655
	uint32_t sh_flags;sh_flags38,674
	uint32_t sh_flags;Secthdr::sh_flags38,674
	uint32_t sh_addr;sh_addr39,694
	uint32_t sh_addr;Secthdr::sh_addr39,694
	uint32_t sh_offset;sh_offset40,713
	uint32_t sh_offset;Secthdr::sh_offset40,713
	uint32_t sh_size;sh_size41,734
	uint32_t sh_size;Secthdr::sh_size41,734
	uint32_t sh_link;sh_link42,753
	uint32_t sh_link;Secthdr::sh_link42,753
	uint32_t sh_info;sh_info43,772
	uint32_t sh_info;Secthdr::sh_info43,772
	uint32_t sh_addralign;sh_addralign44,791
	uint32_t sh_addralign;Secthdr::sh_addralign44,791
	uint32_t sh_entsize;sh_entsize45,815
	uint32_t sh_entsize;Secthdr::sh_entsize45,815
#define ELF_PROG_LOAD	ELF_PROG_LOAD49,871
#define ELF_PROG_FLAG_EXEC	ELF_PROG_FLAG_EXEC52,931
#define ELF_PROG_FLAG_WRITE	ELF_PROG_FLAG_WRITE53,960
#define ELF_PROG_FLAG_READ	ELF_PROG_FLAG_READ54,990
#define ELF_SHT_NULL	ELF_SHT_NULL57,1051
#define ELF_SHT_PROGBITS	ELF_SHT_PROGBITS58,1075
#define ELF_SHT_SYMTAB	ELF_SHT_SYMTAB59,1102
#define ELF_SHT_STRTAB	ELF_SHT_STRTAB60,1128
#define ELF_SHN_UNDEF	ELF_SHN_UNDEF63,1186

inc/mmu.h,10794
#define JOS_INC_MMU_HJOS_INC_MMU_H2,22
#define PGNUM(PGNUM30,964
#define PDX(PDX33,1040
#define PTX(PTX36,1121
#define PGOFF(PGOFF39,1200
#define PGADDR(PGADDR42,1300
#define NPDENTRIES	NPDENTRIES45,1421
#define NPTENTRIES	NPTENTRIES46,1491
#define PGSIZE	PGSIZE48,1554
#define PGSHIFT	PGSHIFT49,1602
#define PTSIZE	PTSIZE51,1640
#define PTSHIFT	PTSHIFT52,1718
#define PTXSHIFT	PTXSHIFT54,1756
#define PDXSHIFT	PDXSHIFT55,1814
#define PTE_P	PTE_P58,1910
#define PTE_W	PTE_W59,1942
#define PTE_U	PTE_U60,1976
#define PTE_PWT	PTE_PWT61,2005
#define PTE_PCD	PTE_PCD62,2045
#define PTE_A	PTE_A63,2085
#define PTE_D	PTE_D64,2118
#define PTE_PS	PTE_PS65,2148
#define PTE_G	PTE_G66,2183
#define PTE_AVAIL	PTE_AVAIL70,2353
#define PTE_SYSCALL	PTE_SYSCALL73,2480
#define PTE_ADDR(PTE_ADDR76,2586
#define CR0_PE	CR0_PE79,2665
#define CR0_MP	CR0_MP80,2713
#define CR0_EM	CR0_EM81,2763
#define CR0_TS	CR0_TS82,2803
#define CR0_ET	CR0_ET83,2847
#define CR0_NE	CR0_NE84,2892
#define CR0_WP	CR0_WP85,2937
#define CR0_AM	CR0_AM86,2981
#define CR0_NW	CR0_NW87,3026
#define CR0_CD	CR0_CD88,3073
#define CR0_PG	CR0_PG89,3117
#define CR4_PCE	CR4_PCE91,3155
#define CR4_MCE	CR4_MCE92,3213
#define CR4_PSE	CR4_PSE93,3265
#define CR4_DE	CR4_DE94,3317
#define CR4_TSD	CR4_TSD95,3368
#define CR4_PVI	CR4_PVI96,3418
#define CR4_VME	CR4_VME97,3483
#define FL_CF	FL_CF100,3554
#define FL_PF	FL_PF101,3594
#define FL_AF	FL_AF102,3635
#define FL_ZF	FL_ZF103,3685
#define FL_SF	FL_SF104,3724
#define FL_TF	FL_TF105,3763
#define FL_IF	FL_IF106,3802
#define FL_DF	FL_DF107,3846
#define FL_OF	FL_OF108,3890
#define FL_IOPL_MASK	FL_IOPL_MASK109,3933
#define FL_IOPL_0	FL_IOPL_0110,3996
#define FL_IOPL_1	FL_IOPL_1111,4040
#define FL_IOPL_2	FL_IOPL_2112,4084
#define FL_IOPL_3	FL_IOPL_3113,4128
#define FL_NT	FL_NT114,4172
#define FL_RF	FL_RF115,4213
#define FL_VM	FL_VM116,4254
#define FL_AC	FL_AC117,4301
#define FL_VIF	FL_VIF118,4346
#define FL_VIP	FL_VIP119,4399
#define FL_ID	FL_ID120,4455
#define FEC_PR	FEC_PR123,4519
#define FEC_WR	FEC_WR124,4584
#define FEC_U	FEC_U125,4636
#define SEG_NULL	SEG_NULL139,4841
#define SEG(SEG142,4903
struct Segdesc {Segdesc152,5176
	unsigned sd_lim_15_0 : 16;  // Low bits of segment limitsd_lim_15_0153,5193
	unsigned sd_lim_15_0 : 16;  // Low bits of segment limitSegdesc::sd_lim_15_0153,5193
	unsigned sd_base_15_0 : 16; // Low bits of segment base addresssd_base_15_0154,5251
	unsigned sd_base_15_0 : 16; // Low bits of segment base addressSegdesc::sd_base_15_0154,5251
	unsigned sd_base_23_16 : 8; // Middle bits of segment base addresssd_base_23_16155,5316
	unsigned sd_base_23_16 : 8; // Middle bits of segment base addressSegdesc::sd_base_23_16155,5316
	unsigned sd_type : 4;       // Segment type (see STS_ constants)sd_type156,5384
	unsigned sd_type : 4;       // Segment type (see STS_ constants)Segdesc::sd_type156,5384
	unsigned sd_s : 1;          // 0 = system, 1 = applicationsd_s157,5450
	unsigned sd_s : 1;          // 0 = system, 1 = applicationSegdesc::sd_s157,5450
	unsigned sd_dpl : 2;        // Descriptor Privilege Levelsd_dpl158,5510
	unsigned sd_dpl : 2;        // Descriptor Privilege LevelSegdesc::sd_dpl158,5510
	unsigned sd_p : 1;          // Presentsd_p159,5569
	unsigned sd_p : 1;          // PresentSegdesc::sd_p159,5569
	unsigned sd_lim_19_16 : 4;  // High bits of segment limitsd_lim_19_16160,5609
	unsigned sd_lim_19_16 : 4;  // High bits of segment limitSegdesc::sd_lim_19_16160,5609
	unsigned sd_avl : 1;        // Unused (available for software use)sd_avl161,5668
	unsigned sd_avl : 1;        // Unused (available for software use)Segdesc::sd_avl161,5668
	unsigned sd_rsv1 : 1;       // Reservedsd_rsv1162,5736
	unsigned sd_rsv1 : 1;       // ReservedSegdesc::sd_rsv1162,5736
	unsigned sd_db : 1;         // 0 = 16-bit segment, 1 = 32-bit segmentsd_db163,5777
	unsigned sd_db : 1;         // 0 = 16-bit segment, 1 = 32-bit segmentSegdesc::sd_db163,5777
	unsigned sd_g : 1;          // Granularity: limit scaled by 4K when setsd_g164,5848
	unsigned sd_g : 1;          // Granularity: limit scaled by 4K when setSegdesc::sd_g164,5848
	unsigned sd_base_31_24 : 8; // High bits of segment base addresssd_base_31_24165,5921
	unsigned sd_base_31_24 : 8; // High bits of segment base addressSegdesc::sd_base_31_24165,5921
#define SEG_NULL	SEG_NULL168,6006
#define SEG_FAULT	SEG_FAULT170,6114
#define SEG(SEG172,6192
#define SEG16(SEG16176,6391
#define STA_X	STA_X184,6662
#define STA_E	STA_E185,6707
#define STA_C	STA_C186,6771
#define STA_W	STA_W187,6839
#define STA_R	STA_R188,6901
#define STA_A	STA_A189,6958
#define STS_T16A	STS_T16A192,7022
#define STS_LDT	STS_LDT193,7071
#define STS_T16B	STS_T16B194,7122
#define STS_CG16	STS_CG16195,7166
#define STS_TG	STS_TG196,7211
#define STS_IG16	STS_IG16197,7268
#define STS_TG16	STS_TG16198,7318
#define STS_T32A	STS_T32A199,7363
#define STS_T32B	STS_T32B200,7412
#define STS_CG32	STS_CG32201,7456
#define STS_IG32	STS_IG32202,7501
#define STS_TG32	STS_TG32203,7551
struct Taskstate {Taskstate215,7731
	uint32_t ts_link;	// Old ts selectorts_link216,7750
	uint32_t ts_link;	// Old ts selectorTaskstate::ts_link216,7750
	uintptr_t ts_esp0;	// Stack pointers and segment selectorsts_esp0217,7788
	uintptr_t ts_esp0;	// Stack pointers and segment selectorsTaskstate::ts_esp0217,7788
	uint16_t ts_ss0;	//   after an increase in privilege levelts_ss0218,7848
	uint16_t ts_ss0;	//   after an increase in privilege levelTaskstate::ts_ss0218,7848
	uint16_t ts_padding1;ts_padding1219,7908
	uint16_t ts_padding1;Taskstate::ts_padding1219,7908
	uintptr_t ts_esp1;ts_esp1220,7931
	uintptr_t ts_esp1;Taskstate::ts_esp1220,7931
	uint16_t ts_ss1;ts_ss1221,7951
	uint16_t ts_ss1;Taskstate::ts_ss1221,7951
	uint16_t ts_padding2;ts_padding2222,7969
	uint16_t ts_padding2;Taskstate::ts_padding2222,7969
	uintptr_t ts_esp2;ts_esp2223,7992
	uintptr_t ts_esp2;Taskstate::ts_esp2223,7992
	uint16_t ts_ss2;ts_ss2224,8012
	uint16_t ts_ss2;Taskstate::ts_ss2224,8012
	uint16_t ts_padding3;ts_padding3225,8030
	uint16_t ts_padding3;Taskstate::ts_padding3225,8030
	physaddr_t ts_cr3;	// Page directory basets_cr3226,8053
	physaddr_t ts_cr3;	// Page directory baseTaskstate::ts_cr3226,8053
	uintptr_t ts_eip;	// Saved state from last task switchts_eip227,8096
	uintptr_t ts_eip;	// Saved state from last task switchTaskstate::ts_eip227,8096
	uint32_t ts_eflags;ts_eflags228,8152
	uint32_t ts_eflags;Taskstate::ts_eflags228,8152
	uint32_t ts_eax;	// More saved state (registers)ts_eax229,8173
	uint32_t ts_eax;	// More saved state (registers)Taskstate::ts_eax229,8173
	uint32_t ts_ecx;ts_ecx230,8223
	uint32_t ts_ecx;Taskstate::ts_ecx230,8223
	uint32_t ts_edx;ts_edx231,8241
	uint32_t ts_edx;Taskstate::ts_edx231,8241
	uint32_t ts_ebx;ts_ebx232,8259
	uint32_t ts_ebx;Taskstate::ts_ebx232,8259
	uintptr_t ts_esp;ts_esp233,8277
	uintptr_t ts_esp;Taskstate::ts_esp233,8277
	uintptr_t ts_ebp;ts_ebp234,8296
	uintptr_t ts_ebp;Taskstate::ts_ebp234,8296
	uint32_t ts_esi;ts_esi235,8315
	uint32_t ts_esi;Taskstate::ts_esi235,8315
	uint32_t ts_edi;ts_edi236,8333
	uint32_t ts_edi;Taskstate::ts_edi236,8333
	uint16_t ts_es;		// Even more saved state (segment selectors)ts_es237,8351
	uint16_t ts_es;		// Even more saved state (segment selectors)Taskstate::ts_es237,8351
	uint16_t ts_padding4;ts_padding4238,8414
	uint16_t ts_padding4;Taskstate::ts_padding4238,8414
	uint16_t ts_cs;ts_cs239,8437
	uint16_t ts_cs;Taskstate::ts_cs239,8437
	uint16_t ts_padding5;ts_padding5240,8454
	uint16_t ts_padding5;Taskstate::ts_padding5240,8454
	uint16_t ts_ss;ts_ss241,8477
	uint16_t ts_ss;Taskstate::ts_ss241,8477
	uint16_t ts_padding6;ts_padding6242,8494
	uint16_t ts_padding6;Taskstate::ts_padding6242,8494
	uint16_t ts_ds;ts_ds243,8517
	uint16_t ts_ds;Taskstate::ts_ds243,8517
	uint16_t ts_padding7;ts_padding7244,8534
	uint16_t ts_padding7;Taskstate::ts_padding7244,8534
	uint16_t ts_fs;ts_fs245,8557
	uint16_t ts_fs;Taskstate::ts_fs245,8557
	uint16_t ts_padding8;ts_padding8246,8574
	uint16_t ts_padding8;Taskstate::ts_padding8246,8574
	uint16_t ts_gs;ts_gs247,8597
	uint16_t ts_gs;Taskstate::ts_gs247,8597
	uint16_t ts_padding9;ts_padding9248,8614
	uint16_t ts_padding9;Taskstate::ts_padding9248,8614
	uint16_t ts_ldt;ts_ldt249,8637
	uint16_t ts_ldt;Taskstate::ts_ldt249,8637
	uint16_t ts_padding10;ts_padding10250,8655
	uint16_t ts_padding10;Taskstate::ts_padding10250,8655
	uint16_t ts_t;		// Trap on task switchts_t251,8679
	uint16_t ts_t;		// Trap on task switchTaskstate::ts_t251,8679
	uint16_t ts_iomb;	// I/O map base addressts_iomb252,8719
	uint16_t ts_iomb;	// I/O map base addressTaskstate::ts_iomb252,8719
struct Gatedesc {Gatedesc256,8811
	unsigned gd_off_15_0 : 16;   // low 16 bits of offset in segmentgd_off_15_0257,8829
	unsigned gd_off_15_0 : 16;   // low 16 bits of offset in segmentGatedesc::gd_off_15_0257,8829
	unsigned gd_sel : 16;        // segment selectorgd_sel258,8895
	unsigned gd_sel : 16;        // segment selectorGatedesc::gd_sel258,8895
	unsigned gd_args : 5;        // # args, 0 for interrupt/trap gatesgd_args259,8945
	unsigned gd_args : 5;        // # args, 0 for interrupt/trap gatesGatedesc::gd_args259,8945
	unsigned gd_rsv1 : 3;        // reserved(should be zero I guess)gd_rsv1260,9013
	unsigned gd_rsv1 : 3;        // reserved(should be zero I guess)Gatedesc::gd_rsv1260,9013
	unsigned gd_type : 4;        // type(STS_{TG,IG32,TG32})gd_type261,9079
	unsigned gd_type : 4;        // type(STS_{TG,IG32,TG32})Gatedesc::gd_type261,9079
	unsigned gd_s : 1;           // must be 0 (system)gd_s262,9137
	unsigned gd_s : 1;           // must be 0 (system)Gatedesc::gd_s262,9137
	unsigned gd_dpl : 2;         // descriptor(meaning new) privilege levelgd_dpl263,9189
	unsigned gd_dpl : 2;         // descriptor(meaning new) privilege levelGatedesc::gd_dpl263,9189
	unsigned gd_p : 1;           // Presentgd_p264,9262
	unsigned gd_p : 1;           // PresentGatedesc::gd_p264,9262
	unsigned gd_off_31_16 : 16;  // high bits of offset in segmentgd_off_31_16265,9303
	unsigned gd_off_31_16 : 16;  // high bits of offset in segmentGatedesc::gd_off_31_16265,9303
#define SETGATE(SETGATE282,10286
#define SETCALLGATE(SETCALLGATE296,10699
struct Pseudodesc {Pseudodesc310,11137
	uint16_t pd_lim;		// Limitpd_lim311,11157
	uint16_t pd_lim;		// LimitPseudodesc::pd_lim311,11157
	uint32_t pd_base;		// Base addresspd_base312,11185
	uint32_t pd_base;		// Base addressPseudodesc::pd_base312,11185

inc/stdarg.h,189
#define	JOS_INC_STDARG_HJOS_INC_STDARG_H4,91
typedef __builtin_va_list va_list;va_list6,117
#define va_start(va_start8,153
#define va_arg(va_arg10,210
#define va_end(va_end12,263

inc/error.h,460
#define JOS_INC_ERROR_HJOS_INC_ERROR_H4,72
	E_UNSPECIFIED	= 1,	// Unspecified or unknown problemE_UNSPECIFIED8,172
	E_BAD_ENV	,	// Environment doesn't exist or otherwiseE_BAD_ENV9,226
	E_INVAL		,	// Invalid parameterE_INVAL11,323
	E_NO_MEM	,	// Request failed due to memory shortageE_NO_MEM12,356
	E_NO_FREE_ENV	,	// Attempt to create a new environment beyondE_NO_FREE_ENV13,409
	E_FAULT		,	// Memory faultE_FAULT15,499
	MAXERRORMAXERROR17,528

inc/kbdreg.h,2510
#define JOS_KBDREG_HJOS_KBDREG_H2,21
#define KEY_HOME	KEY_HOME5,63
#define KEY_END	KEY_END6,85
#define KEY_UP	KEY_UP7,107
#define KEY_DN	KEY_DN8,128
#define KEY_LF	KEY_LF9,149
#define KEY_RT	KEY_RT10,170
#define KEY_PGUP	KEY_PGUP11,191
#define KEY_PGDN	KEY_PGDN12,213
#define KEY_INS	KEY_INS13,235
#define KEY_DEL	KEY_DEL14,257
#define	KBSTATP	KBSTATP19,331
#define	 KBS_DIB	KBS_DIB20,389
#define	 KBS_IBF	KBS_IBF21,436
#define	 KBS_WARM	KBS_WARM22,485
#define	 KBS_OCMD	KBS_OCMD23,535
#define	 KBS_NOSEC	KBS_NOSEC24,594
#define	 KBS_TERR	KBS_TERR25,654
#define	 KBS_RERR	KBS_RERR26,720
#define	 KBS_PERR	KBS_PERR27,767
#define	KBCMDP	KBCMDP29,814
#define	 KBC_RAMREAD	KBC_RAMREAD30,864
#define	 KBC_RAMWRITE	KBC_RAMWRITE31,910
#define	 KBC_AUXDISABLE	KBC_AUXDISABLE32,956
#define	 KBC_AUXENABLE	KBC_AUXENABLE33,1014
#define	 KBC_AUXTEST	KBC_AUXTEST34,1070
#define	 KBC_KBDECHO	KBC_KBDECHO35,1122
#define	 KBC_AUXECHO	KBC_AUXECHO36,1176
#define	 KBC_AUXWRITE	KBC_AUXWRITE37,1231
#define	 KBC_SELFTEST	KBC_SELFTEST38,1288
#define	 KBC_KBDTEST	KBC_KBDTEST39,1337
#define	 KBC_KBDDISABLE	KBC_KBDDISABLE40,1388
#define	 KBC_KBDENABLE	KBC_KBDENABLE41,1445
#define	 KBC_PULSE0	KBC_PULSE042,1500
#define	 KBC_PULSE1	KBC_PULSE143,1550
#define	 KBC_PULSE2	KBC_PULSE244,1600
#define	 KBC_PULSE3	KBC_PULSE345,1650
#define	KBDATAP	KBDATAP47,1701
#define	KBOUTP	KBOUTP48,1746
#define	K_RDCMDBYTE	K_RDCMDBYTE50,1791
#define	K_LDCMDBYTE	K_LDCMDBYTE51,1816
#define	KC8_TRANS	KC8_TRANS53,1842
#define	KC8_MDISABLE	KC8_MDISABLE54,1897
#define	KC8_KDISABLE	KC8_KDISABLE55,1943
#define	KC8_IGNSEC	KC8_IGNSEC56,1992
#define	KC8_CPU	KC8_CPU57,2043
#define	KC8_MENABLE	KC8_MENABLE58,2102
#define	KC8_KENABLE	KC8_KENABLE59,2156
#define	CMDBYTE	CMDBYTE60,2213
#define	KBC_RESET	KBC_RESET63,2299
#define	KBC_RESEND	KBC_RESEND64,2347
#define	KBC_SETDEFAULT	KBC_SETDEFAULT65,2419
#define	KBC_DISABLE	KBC_DISABLE66,2494
#define	KBC_ENABLE	KBC_ENABLE67,2578
#define	KBC_TYPEMATIC	KBC_TYPEMATIC68,2628
#define	KBC_SETTABLE	KBC_SETTABLE69,2690
#define	KBC_MODEIND	KBC_MODEIND70,2753
#define	KBC_ECHO	KBC_ECHO71,2815
#define	KBR_EXTENDED	KBR_EXTENDED74,2903
#define	KBR_RESEND	KBR_RESEND75,2957
#define	KBR_ACK	KBR_ACK76,3011
#define	KBR_OVERRUN	KBR_OVERRUN77,3064
#define	KBR_FAILURE	KBR_FAILURE78,3103
#define	KBR_BREAK	KBR_BREAK79,3152
#define	KBR_RSTDONE	KBR_RSTDONE80,3221
#define	KBR_ECHO	KBR_ECHO81,3267

inc/types.h,1005
#define JOS_INC_TYPES_HJOS_INC_TYPES_H2,24
#define NULL NULL5,62
typedef _Bool bool;bool9,130
enum { false, true };false10,150
enum { false, true };true10,150
typedef __signed char int8_t;int8_t13,219
typedef unsigned char uint8_t;uint8_t14,249
typedef short int16_t;int16_t15,280
typedef unsigned short uint16_t;uint16_t16,303
typedef int int32_t;int32_t17,336
typedef unsigned int uint32_t;uint32_t18,357
typedef long long int64_t;int64_t19,388
typedef unsigned long long uint64_t;uint64_t20,415
typedef int32_t intptr_t;intptr_t26,673
typedef uint32_t uintptr_t;uintptr_t27,699
typedef uint32_t physaddr_t;physaddr_t28,727
typedef uint32_t ppn_t;ppn_t31,791
typedef uint32_t size_t;size_t34,859
typedef int32_t ssize_t;ssize_t37,975
typedef int32_t off_t;off_t40,1048
#define MIN(MIN43,1108
#define MAX(MAX49,1241
#define ROUNDDOWN(ROUNDDOWN58,1476
#define ROUNDUP(ROUNDUP64,1637
#define ARRAY_SIZE(ARRAY_SIZE70,1778
#define offsetof(offsetof73,1904

inc/assert.h,175
#define JOS_INC_ASSERT_HJOS_INC_ASSERT_H4,73
#define warn(warn11,247
#define panic(panic12,304
#define assert(assert14,364
#define static_assert(static_assert18,521

boot/sign.pl,0

boot/main.c,255
#define SECTSIZE	SECTSIZE32,1131
#define ELFHDR	ELFHDR33,1152
bootmain(void)bootmain39,1293
readseg(uint32_t pa, uint32_t count, uint32_t offset)readseg72,2092
waitdisk(void)waitdisk99,2821
readsect(void *dst, uint32_t offset)readsect107,2928

boot/boot.S,108
start:start13,454
protcseg:protcseg58,1983
spin:spin72,2497
gdt:gdt77,2598
gdtdesc:gdtdesc82,2757

obj/boot/boot.asm,729
Disassembly of section .text:Disassembly5,49
start:start11,174
protcseg:protcseg84,2893
spin:spin108,3821
voidvoid132,4396
static inline uint8_tstatic137,4463
voidvoid157,5076
static inline voidstatic169,5412
	offset = (offset / SECTSIZE) + 1;offset226,7583
	end_pa = pa + count;end_pa230,7719
	offset = (offset / SECTSIZE) + 1;offset234,7851
	end_pa = pa + count;end_pa236,7935
	offset = (offset / SECTSIZE) + 1;offset238,8006
	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);ph282,9731
	eph = ph + ELFHDR->e_phnum;eph284,9848
	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);ph286,9929
	eph = ph + ELFHDR->e_phnum;eph288,10052
static inline voidstatic309,10911

obj/kern/kernel.asm,380842
Disassembly of section .text:Disassembly5,47
f0100000 <_start+0xeffffff4>:f01000007,78
_start = RELOC(entry)_start9,123
entry:entry12,159
f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dhf010000014,200
f0100006:	00 00                	add    %al,(%eax)f010000615,256
f0100008:	fe 4f 52             	decb   0x52(%edi)f010000816,306
f010000b:	e4                   	.byte 0xe4f010000b17,356
f010000c <entry>:f010000c19,400
f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472f010000c20,418
f0100013:	34 12 f010001321,471
f0100015:	b8 00 80 11 00       	mov    $0x118000,%eaxf010001528,696
f010001a:	0f 22 d8             	mov    %eax,%cr3f010001a30,767
f010001d:	0f 20 c0             	mov    %cr0,%eaxf010001d33,852
f0100020:	0d 01 00 01 80       	or     $0x80010001,%eaxf010002035,936
f0100025:	0f 22 c0             	mov    %eax,%cr0f010002537,1009
f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eaxf010002843,1219
f010002d:	ff e0                	jmp    *%eaxf010002d45,1286
f010002f <relocated>:f010002f47,1332
relocated:relocated48,1354
f010002f:	bd 00 00 00 00       	mov    $0x0,%ebpf010002f54,1542
f0100034:	bc 00 60 11 f0       	mov    $0xf0116000,%espf010003458,1644
f0100039:	e8 02 00 00 00       	call   f0100040 <i386_init>f010003962,1734
f010003e <spin>:f010003e64,1795
spin:	jmp	spinspin67,1869
f010003e:	eb fe                	jmp    f010003e <spin>f010003e68,1884
f0100040 <i386_init>:f010004070,1940
voidvoid74,1989
f0100040:	55                   	push   %ebpf010004077,2012
f0100041:	89 e5                	mov    %esp,%ebpf010004178,2056
f0100043:	53                   	push   %ebxf010004379,2105
f0100044:	83 ec 08             	sub    $0x8,%espf010004480,2149
f0100047:	e8 03 01 00 00       	call   f010014f <__x86.get_pc_thunk.bx>f010004781,2198
f010004c:	81 c3 c0 72 01 00    	add    $0x172c0,%ebxf010004c82,2270
f0100052:	c7 c2 60 90 11 f0    	mov    $0xf0119060,%edxf010005289,2587
f0100058:	c7 c0 c0 96 11 f0    	mov    $0xf01196c0,%eaxf010005890,2643
f010005e:	29 d0                	sub    %edx,%eaxf010005e91,2699
f0100060:	50                   	push   %eaxf010006092,2748
f0100061:	6a 00                	push   $0x0f010006193,2792
f0100063:	52                   	push   %edxf010006394,2836
f0100064:	e8 3d 3b 00 00       	call   f0103ba6 <memset>f010006495,2880
f0100069:	e8 36 05 00 00       	call   f01005a4 <cons_init>f0100069100,3027
f010006e:	83 c4 08             	add    $0x8,%espf010006e103,3135
f0100071:	68 ac 1a 00 00       	push   $0x1aacf0100071104,3184
f0100076:	8d 83 f4 cc fe ff    	lea    -0x1330c(%ebx),%eaxf0100076105,3231
f010007c:	50                   	push   %eaxf010007c106,3290
f010007d:	e8 c8 2f 00 00       	call   f010304a <cprintf>f010007d107,3334
f0100082:	e8 49 12 00 00       	call   f01012d0 <mem_init>f0100082111,3459
f0100087:	83 c4 10             	add    $0x10,%espf0100087112,3518
f010008a:	83 ec 0c             	sub    $0xc,%espf010008a117,3631
f010008d:	6a 00                	push   $0x0f010008d118,3680
f010008f:	e8 8c 07 00 00       	call   f0100820 <monitor>f010008f119,3724
f0100094:	83 c4 10             	add    $0x10,%espf0100094120,3782
f0100097:	eb f1                	jmp    f010008a <i386_init+0x4a>f0100097121,3832
f0100099 <_panic>:f0100099123,3898
voidvoid127,4034
f0100099:	55                   	push   %ebpf0100099130,4097
f010009a:	89 e5                	mov    %esp,%ebpf010009a131,4141
f010009c:	57                   	push   %edif010009c132,4190
f010009d:	56                   	push   %esif010009d133,4234
f010009e:	53                   	push   %ebxf010009e134,4278
f010009f:	83 ec 0c             	sub    $0xc,%espf010009f135,4322
f01000a2:	e8 a8 00 00 00       	call   f010014f <__x86.get_pc_thunk.bx>f01000a2136,4371
f01000a7:	81 c3 65 72 01 00    	add    $0x17265,%ebxf01000a7137,4443
f01000ad:	8b 7d 10             	mov    0x10(%ebp),%edif01000ad138,4496
f01000b0:	c7 c0 c4 96 11 f0    	mov    $0xf01196c4,%eaxf01000b0142,4580
f01000b6:	83 38 00             	cmpl   $0x0,(%eax)f01000b6143,4636
f01000b9:	74 0f                	je     f01000ca <_panic+0x31>f01000b9144,4687
dead:dead147,4763
f01000bb:	83 ec 0c             	sub    $0xc,%espf01000bb151,4834
f01000be:	6a 00                	push   $0x0f01000be152,4883
f01000c0:	e8 5b 07 00 00       	call   f0100820 <monitor>f01000c0153,4927
f01000c5:	83 c4 10             	add    $0x10,%espf01000c5154,4985
f01000c8:	eb f1                	jmp    f01000bb <_panic+0x22>f01000c8155,5035
	panicstr = fmt;panicstr156,5097
f01000ca:	89 38                	mov    %edi,(%eax)f01000ca157,5114
f01000cc:	fa                   	cli    f01000cc159,5192
f01000cd:	fc                   	cld    f01000cd160,5232
f01000ce:	8d 75 14             	lea    0x14(%ebp),%esif01000ce162,5292
f01000d1:	83 ec 04             	sub    $0x4,%espf01000d1164,5396
f01000d4:	ff 75 0c             	pushl  0xc(%ebp)f01000d4165,5445
f01000d7:	ff 75 08             	pushl  0x8(%ebp)f01000d7166,5494
f01000da:	8d 83 0f cd fe ff    	lea    -0x132f1(%ebx),%eaxf01000da167,5543
f01000e0:	50                   	push   %eaxf01000e0168,5602
f01000e1:	e8 64 2f 00 00       	call   f010304a <cprintf>f01000e1169,5646
f01000e6:	83 c4 08             	add    $0x8,%espf01000e6171,5724
f01000e9:	56                   	push   %esif01000e9172,5773
f01000ea:	57                   	push   %edif01000ea173,5817
f01000eb:	e8 23 2f 00 00       	call   f0103013 <vcprintf>f01000eb174,5861
f01000f0:	8d 83 59 dc fe ff    	lea    -0x123a7(%ebx),%eaxf01000f0176,5936
f01000f6:	89 04 24             	mov    %eax,(%esp)f01000f6177,5995
f01000f9:	e8 4c 2f 00 00       	call   f010304a <cprintf>f01000f9178,6046
f01000fe:	83 c4 10             	add    $0x10,%espf01000fe179,6104
f0100101:	eb b8                	jmp    f01000bb <_panic+0x22>f0100101180,6154
f0100103 <_warn>:f0100103182,6217
voidvoid186,6266
f0100103:	55                   	push   %ebpf0100103189,6328
f0100104:	89 e5                	mov    %esp,%ebpf0100104190,6372
f0100106:	56                   	push   %esif0100106191,6421
f0100107:	53                   	push   %ebxf0100107192,6465
f0100108:	e8 42 00 00 00       	call   f010014f <__x86.get_pc_thunk.bx>f0100108193,6509
f010010d:	81 c3 ff 71 01 00    	add    $0x171ff,%ebxf010010d194,6581
f0100113:	8d 75 14             	lea    0x14(%ebp),%esif0100113198,6668
f0100116:	83 ec 04             	sub    $0x4,%espf0100116200,6774
f0100119:	ff 75 0c             	pushl  0xc(%ebp)f0100119201,6823
f010011c:	ff 75 08             	pushl  0x8(%ebp)f010011c202,6872
f010011f:	8d 83 27 cd fe ff    	lea    -0x132d9(%ebx),%eaxf010011f203,6921
f0100125:	50                   	push   %eaxf0100125204,6980
f0100126:	e8 1f 2f 00 00       	call   f010304a <cprintf>f0100126205,7024
f010012b:	83 c4 08             	add    $0x8,%espf010012b207,7102
f010012e:	56                   	push   %esif010012e208,7151
f010012f:	ff 75 10             	pushl  0x10(%ebp)f010012f209,7195
f0100132:	e8 dc 2e 00 00       	call   f0103013 <vcprintf>f0100132210,7245
f0100137:	8d 83 59 dc fe ff    	lea    -0x123a7(%ebx),%eaxf0100137212,7320
f010013d:	89 04 24             	mov    %eax,(%esp)f010013d213,7379
f0100140:	e8 05 2f 00 00       	call   f010304a <cprintf>f0100140214,7430
f0100145:	83 c4 10             	add    $0x10,%espf0100145217,7503
f0100148:	8d 65 f8             	lea    -0x8(%ebp),%espf0100148218,7553
f010014b:	5b                   	pop    %ebxf010014b219,7608
f010014c:	5e                   	pop    %esif010014c220,7652
f010014d:	5d                   	pop    %ebpf010014d221,7696
f010014e:	c3                   	ret    f010014e222,7740
f010014f <__x86.get_pc_thunk.bx>:f010014f224,7781
f010014f:	8b 1c 24             	mov    (%esp),%ebxf010014f225,7815
f0100152:	c3                   	ret    f0100152226,7866
f0100153 <serial_proc_data>:f0100153228,7907
static bool serial_exists;static230,7937
static intstatic232,7965
f0100153:	55                   	push   %ebpf0100153235,8001
f0100154:	89 e5                	mov    %esp,%ebpf0100154236,8045
static inline uint8_tstatic238,8095
f0100156:	ba fd 03 00 00       	mov    $0x3fd,%edxf0100156243,8204
f010015b:	ec                   	in     (%dx),%alf010015b244,8255
f010015c:	a8 01                	test   $0x1,%alf010015c246,8346
f010015e:	74 0b                	je     f010016b <serial_proc_data+0x18>f010015e247,8394
f0100160:	ba f8 03 00 00       	mov    $0x3f8,%edxf0100160248,8466
f0100165:	ec                   	in     (%dx),%alf0100165249,8517
f0100166:	0f b6 c0             	movzbl %al,%eaxf0100166252,8605
f0100169:	5d                   	pop    %ebpf0100169254,8655
f010016a:	c3                   	ret    f010016a255,8699
f010016b:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf010016b257,8752
f0100170:	eb f7                	jmp    f0100169 <serial_proc_data+0x16>f0100170258,8808
f0100172 <cons_intr>:f0100172260,8881
static voidstatic264,9011
f0100172:	55                   	push   %ebpf0100172267,9054
f0100173:	89 e5                	mov    %esp,%ebpf0100173268,9098
f0100175:	56                   	push   %esif0100175269,9147
f0100176:	53                   	push   %ebxf0100176270,9191
f0100177:	e8 d3 ff ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0100177271,9235
f010017c:	81 c3 90 71 01 00    	add    $0x17190,%ebxf010017c272,9307
f0100182:	89 c6                	mov    %eax,%esif0100182273,9360
f0100184:	ff d6                	call   *%esif0100184277,9451
f0100186:	83 f8 ff             	cmp    $0xffffffff,%eaxf0100186278,9496
f0100189:	74 2e                	je     f01001b9 <cons_intr+0x47>f0100189279,9552
f010018b:	85 c0                	test   %eax,%eaxf010018b281,9631
f010018d:	74 f5                	je     f0100184 <cons_intr+0x12>f010018d282,9680
f010018f:	8b 8b 78 1f 00 00    	mov    0x1f78(%ebx),%ecxf010018f285,9787
f0100195:	8d 51 01             	lea    0x1(%ecx),%edxf0100195286,9844
f0100198:	89 93 78 1f 00 00    	mov    %edx,0x1f78(%ebx)f0100198287,9898
f010019e:	88 84 0b 74 1d 00 00 	mov    %al,0x1d74(%ebx,%ecx,1)f010019e288,9955
f01001a5:	81 fa 00 02 00 00    	cmp    $0x200,%edxf01001a5290,10050
f01001ab:	75 d7                	jne    f0100184 <cons_intr+0x12>f01001ab291,10101
f01001ad:	c7 83 78 1f 00 00 00 	movl   $0x0,0x1f78(%ebx)f01001ad293,10184
f01001b4:	00 00 00 f01001b4294,10241
f01001b7:	eb cb                	jmp    f0100184 <cons_intr+0x12>f01001b7295,10261
f01001b9:	5b                   	pop    %ebxf01001b9298,10331
f01001ba:	5e                   	pop    %esif01001ba299,10375
f01001bb:	5d                   	pop    %ebpf01001bb300,10419
f01001bc:	c3                   	ret    f01001bc301,10463
f01001bd <kbd_proc_data>:f01001bd303,10504
f01001bd:	55                   	push   %ebpf01001bd305,10532
f01001be:	89 e5                	mov    %esp,%ebpf01001be306,10576
f01001c0:	56                   	push   %esif01001c0307,10625
f01001c1:	53                   	push   %ebxf01001c1308,10669
f01001c2:	e8 88 ff ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01001c2309,10713
f01001c7:	81 c3 45 71 01 00    	add    $0x17145,%ebxf01001c7310,10785
f01001cd:	ba 64 00 00 00       	mov    $0x64,%edxf01001cd311,10838
f01001d2:	ec                   	in     (%dx),%alf01001d2312,10888
f01001d3:	a8 01                	test   $0x1,%alf01001d3314,10965
f01001d5:	0f 84 06 01 00 00    	je     f01002e1 <kbd_proc_data+0x124>f01001d5315,11013
f01001db:	a8 20                	test   $0x20,%alf01001db317,11105
f01001dd:	0f 85 05 01 00 00    	jne    f01002e8 <kbd_proc_data+0x12b>f01001dd318,11154
f01001e3:	ba 60 00 00 00       	mov    $0x60,%edxf01001e3319,11224
f01001e8:	ec                   	in     (%dx),%alf01001e8320,11274
f01001e9:	89 c2                	mov    %eax,%edxf01001e9321,11323
f01001eb:	3c e0                	cmp    $0xe0,%alf01001eb323,11393
f01001ed:	0f 84 93 00 00 00    	je     f0100286 <kbd_proc_data+0xc9>f01001ed324,11442
f01001f3:	84 c0                	test   %al,%alf01001f3326,11538
f01001f5:	0f 88 a0 00 00 00    	js     f010029b <kbd_proc_data+0xde>f01001f5327,11585
f01001fb:	8b 8b 54 1d 00 00    	mov    0x1d54(%ebx),%ecxf01001fb329,11683
f0100201:	f6 c1 40             	test   $0x40,%clf0100201330,11740
f0100204:	74 0e                	je     f0100214 <kbd_proc_data+0x57>f0100204331,11789
f0100206:	83 c8 80             	or     $0xffffff80,%eaxf0100206333,11874
f0100209:	89 c2                	mov    %eax,%edxf0100209334,11930
f010020b:	83 e1 bf             	and    $0xffffffbf,%ecxf010020b336,11998
f010020e:	89 8b 54 1d 00 00    	mov    %ecx,0x1d54(%ebx)f010020e337,12054
f0100214:	0f b6 d2             	movzbl %dl,%edxf0100214339,12138
f0100217:	0f b6 84 13 74 ce fe 	movzbl -0x1318c(%ebx,%edx,1),%eaxf0100217340,12186
f010021e:	ff f010021e341,12252
f010021f:	0b 83 54 1d 00 00    	or     0x1d54(%ebx),%eaxf010021f342,12266
f0100225:	0f b6 8c 13 74 cd fe 	movzbl -0x1328c(%ebx,%edx,1),%ecxf0100225344,12351
f010022c:	ff f010022c345,12417
f010022d:	31 c8                	xor    %ecx,%eaxf010022d346,12431
f010022f:	89 83 54 1d 00 00    	mov    %eax,0x1d54(%ebx)f010022f347,12480
	c = charcode[shift & (CTL | SHIFT)][data];c348,12537
f0100235:	89 c1                	mov    %eax,%ecxf0100235349,12581
f0100237:	83 e1 03             	and    $0x3,%ecxf0100237350,12630
f010023a:	8b 8c 8b f4 1c 00 00 	mov    0x1cf4(%ebx,%ecx,4),%ecxf010023a351,12679
f0100241:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edxf0100241352,12743
f0100245:	0f b6 f2             	movzbl %dl,%esif0100245353,12801
f0100248:	a8 08                	test   $0x8,%alf0100248355,12874
f010024a:	74 0d                	je     f0100259 <kbd_proc_data+0x9c>f010024a356,12922
f010024c:	89 f2                	mov    %esi,%edxf010024c358,13019
f010024e:	8d 4e 9f             	lea    -0x61(%esi),%ecxf010024e359,13068
f0100251:	83 f9 19             	cmp    $0x19,%ecxf0100251360,13124
f0100254:	77 7a                	ja     f01002d0 <kbd_proc_data+0x113>f0100254361,13174
f0100256:	83 ee 20             	sub    $0x20,%esif0100256363,13263
f0100259:	f7 d0                	not    %eaxf0100259365,13361
f010025b:	a8 06                	test   $0x6,%alf010025b366,13405
f010025d:	75 33                	jne    f0100292 <kbd_proc_data+0xd5>f010025d367,13453
f010025f:	81 fe e9 00 00 00    	cmp    $0xe9,%esif010025f368,13522
f0100265:	75 2b                	jne    f0100292 <kbd_proc_data+0xd5>f0100265369,13572
f0100267:	83 ec 0c             	sub    $0xc,%espf0100267371,13668
f010026a:	8d 83 41 cd fe ff    	lea    -0x132bf(%ebx),%eaxf010026a372,13717
f0100270:	50                   	push   %eaxf0100270373,13776
f0100271:	e8 d4 2d 00 00       	call   f010304a <cprintf>f0100271374,13820
static inline voidstatic377,13881
f0100276:	b8 03 00 00 00       	mov    $0x3,%eaxf0100276381,13988
f010027b:	ba 92 00 00 00       	mov    $0x92,%edxf010027b382,14037
f0100280:	ee                   	out    %al,(%dx)f0100280383,14087
f0100281:	83 c4 10             	add    $0x10,%espf0100281384,14136
f0100284:	eb 0c                	jmp    f0100292 <kbd_proc_data+0xd5>f0100284385,14186
f0100286:	83 8b 54 1d 00 00 40 	orl    $0x40,0x1d54(%ebx)f0100286387,14273
f010028d:	be 00 00 00 00       	mov    $0x0,%esif010028d389,14343
f0100292:	89 f0                	mov    %esi,%eaxf0100292391,14394
f0100294:	8d 65 f8             	lea    -0x8(%ebp),%espf0100294392,14443
f0100297:	5b                   	pop    %ebxf0100297393,14498
f0100298:	5e                   	pop    %esif0100298394,14542
f0100299:	5d                   	pop    %ebpf0100299395,14586
f010029a:	c3                   	ret    f010029a396,14630
		data = (shift & E0ESC ? data : data & 0x7F);data397,14670
f010029b:	8b 8b 54 1d 00 00    	mov    0x1d54(%ebx),%ecxf010029b398,14717
f01002a1:	89 ce                	mov    %ecx,%esif01002a1399,14774
f01002a3:	83 e6 40             	and    $0x40,%esif01002a3400,14823
f01002a6:	83 e0 7f             	and    $0x7f,%eaxf01002a6401,14873
f01002a9:	85 f6                	test   %esi,%esif01002a9402,14923
f01002ab:	0f 44 d0             	cmove  %eax,%edxf01002ab403,14972
f01002ae:	0f b6 d2             	movzbl %dl,%edxf01002ae405,15060
f01002b1:	0f b6 84 13 74 ce fe 	movzbl -0x1318c(%ebx,%edx,1),%eaxf01002b1406,15108
f01002b8:	ff f01002b8407,15174
f01002b9:	83 c8 40             	or     $0x40,%eaxf01002b9408,15188
f01002bc:	0f b6 c0             	movzbl %al,%eaxf01002bc409,15238
f01002bf:	f7 d0                	not    %eaxf01002bf410,15286
f01002c1:	21 c8                	and    %ecx,%eaxf01002c1411,15330
f01002c3:	89 83 54 1d 00 00    	mov    %eax,0x1d54(%ebx)f01002c3412,15379
f01002c9:	be 00 00 00 00       	mov    $0x0,%esif01002c9414,15448
f01002ce:	eb c2                	jmp    f0100292 <kbd_proc_data+0xd5>f01002ce415,15497
f01002d0:	83 ea 41             	sub    $0x41,%edxf01002d0417,15599
f01002d3:	8d 4e 20             	lea    0x20(%esi),%ecxf01002d3419,15668
f01002d6:	83 fa 1a             	cmp    $0x1a,%edxf01002d6420,15723
f01002d9:	0f 42 f1             	cmovb  %ecx,%esif01002d9421,15773
f01002dc:	e9 78 ff ff ff       	jmp    f0100259 <kbd_proc_data+0x9c>f01002dc422,15822
f01002e1:	be ff ff ff ff       	mov    $0xffffffff,%esif01002e1424,15904
f01002e6:	eb aa                	jmp    f0100292 <kbd_proc_data+0xd5>f01002e6425,15960
f01002e8:	be ff ff ff ff       	mov    $0xffffffff,%esif01002e8427,16042
f01002ed:	eb a3                	jmp    f0100292 <kbd_proc_data+0xd5>f01002ed428,16098
f01002ef <cons_putc>:f01002ef430,16168
static voidstatic434,16230
f01002ef:	55                   	push   %ebpf01002ef437,16261
f01002f0:	89 e5                	mov    %esp,%ebpf01002f0438,16305
f01002f2:	57                   	push   %edif01002f2439,16354
f01002f3:	56                   	push   %esif01002f3440,16398
f01002f4:	53                   	push   %ebxf01002f4441,16442
f01002f5:	83 ec 1c             	sub    $0x1c,%espf01002f5442,16486
f01002f8:	e8 52 fe ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01002f8443,16536
f01002fd:	81 c3 0f 70 01 00    	add    $0x1700f,%ebxf01002fd444,16608
f0100303:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0100303445,16661
f0100306:	be 00 00 00 00       	mov    $0x0,%esif0100306447,16730
f010030b:	bf fd 03 00 00       	mov    $0x3fd,%edif010030b449,16835
f0100310:	b9 84 00 00 00       	mov    $0x84,%ecxf0100310450,16886
f0100315:	eb 09                	jmp    f0100320 <cons_putc+0x31>f0100315451,16936
f0100317:	89 ca                	mov    %ecx,%edxf0100317452,17001
f0100319:	ec                   	in     (%dx),%alf0100319453,17050
f010031a:	ec                   	in     (%dx),%alf010031a454,17099
f010031b:	ec                   	in     (%dx),%alf010031b455,17148
f010031c:	ec                   	in     (%dx),%alf010031c456,17197
f010031d:	83 c6 01             	add    $0x1,%esif010031d458,17257
f0100320:	89 fa                	mov    %edi,%edxf0100320459,17306
f0100322:	ec                   	in     (%dx),%alf0100322460,17355
f0100323:	a8 20                	test   $0x20,%alf0100323462,17463
f0100325:	75 08                	jne    f010032f <cons_putc+0x40>f0100325463,17512
f0100327:	81 fe ff 31 00 00    	cmp    $0x31ff,%esif0100327464,17577
f010032d:	7e e8                	jle    f0100317 <cons_putc+0x28>f010032d465,17629
f010032f:	8b 7d e4             	mov    -0x1c(%ebp),%edif010032f467,17719
f0100332:	89 f8                	mov    %edi,%eaxf0100332468,17775
f0100334:	88 45 e3             	mov    %al,-0x1d(%ebp)f0100334469,17824
f0100337:	ba f8 03 00 00       	mov    $0x3f8,%edxf0100337471,17936
f010033c:	ee                   	out    %al,(%dx)f010033c472,17987
f010033d:	be 00 00 00 00       	mov    $0x0,%esif010033d474,18091
f0100342:	bf 79 03 00 00       	mov    $0x379,%edif0100342476,18196
f0100347:	b9 84 00 00 00       	mov    $0x84,%ecxf0100347477,18247
f010034c:	eb 09                	jmp    f0100357 <cons_putc+0x68>f010034c478,18297
f010034e:	89 ca                	mov    %ecx,%edxf010034e479,18362
f0100350:	ec                   	in     (%dx),%alf0100350480,18411
f0100351:	ec                   	in     (%dx),%alf0100351481,18460
f0100352:	ec                   	in     (%dx),%alf0100352482,18509
f0100353:	ec                   	in     (%dx),%alf0100353483,18558
f0100354:	83 c6 01             	add    $0x1,%esif0100354484,18607
f0100357:	89 fa                	mov    %edi,%edxf0100357485,18656
f0100359:	ec                   	in     (%dx),%alf0100359486,18705
f010035a:	81 fe ff 31 00 00    	cmp    $0x31ff,%esif010035a487,18754
f0100360:	7f 04                	jg     f0100366 <cons_putc+0x77>f0100360488,18806
f0100362:	84 c0                	test   %al,%alf0100362489,18871
f0100364:	79 e8                	jns    f010034e <cons_putc+0x5f>f0100364490,18918
f0100366:	ba 78 03 00 00       	mov    $0x378,%edxf0100366492,19040
f010036b:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eaxf010036b493,19091
f010036f:	ee                   	out    %al,(%dx)f010036f494,19147
f0100370:	ba 7a 03 00 00       	mov    $0x37a,%edxf0100370495,19196
f0100375:	b8 0d 00 00 00       	mov    $0xd,%eaxf0100375496,19247
f010037a:	ee                   	out    %al,(%dx)f010037a497,19296
f010037b:	b8 08 00 00 00       	mov    $0x8,%eaxf010037b498,19345
f0100380:	ee                   	out    %al,(%dx)f0100380499,19394
f0100381:	8b 7d e4             	mov    -0x1c(%ebp),%edif0100381501,19462
f0100384:	89 fa                	mov    %edi,%edxf0100384502,19518
f0100386:	81 e2 00 ff ff ff    	and    $0xffffff00,%edxf0100386503,19567
f010038c:	89 f8                	mov    %edi,%eaxf010038c505,19638
f010038e:	80 cc 07             	or     $0x7,%ahf010038e506,19687
f0100391:	85 d2                	test   %edx,%edxf0100391507,19735
f0100393:	0f 45 c7             	cmovne %edi,%eaxf0100393508,19784
f0100396:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0100396509,19833
f0100399:	0f b6 c0             	movzbl %al,%eaxf0100399511,19910
f010039c:	83 f8 09             	cmp    $0x9,%eaxf010039c512,19958
f010039f:	0f 84 b9 00 00 00    	je     f010045e <cons_putc+0x16f>f010039f513,20007
f01003a5:	83 f8 09             	cmp    $0x9,%eaxf01003a5514,20073
f01003a8:	7e 74                	jle    f010041e <cons_putc+0x12f>f01003a8515,20122
f01003aa:	83 f8 0a             	cmp    $0xa,%eaxf01003aa516,20188
f01003ad:	0f 84 9e 00 00 00    	je     f0100451 <cons_putc+0x162>f01003ad517,20237
f01003b3:	83 f8 0d             	cmp    $0xd,%eaxf01003b3518,20303
f01003b6:	0f 85 d9 00 00 00    	jne    f0100495 <cons_putc+0x1a6>f01003b6519,20352
f01003bc:	0f b7 83 7c 1f 00 00 	movzwl 0x1f7c(%ebx),%eaxf01003bc521,20453
f01003c3:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eaxf01003c3522,20510
f01003c9:	c1 e8 16             	shr    $0x16,%eaxf01003c9523,20567
f01003cc:	8d 04 80             	lea    (%eax,%eax,4),%eaxf01003cc524,20617
f01003cf:	c1 e0 04             	shl    $0x4,%eaxf01003cf525,20675
f01003d2:	66 89 83 7c 1f 00 00 	mov    %ax,0x1f7c(%ebx)f01003d2526,20724
f01003d9:	66 81 bb 7c 1f 00 00 	cmpw   $0x7cf,0x1f7c(%ebx)f01003d9528,20808
f01003e0:	cf 07 f01003e0529,20867
f01003e2:	0f 87 d4 00 00 00    	ja     f01004bc <cons_putc+0x1cd>f01003e2530,20884
f01003e8:	8b 8b 84 1f 00 00    	mov    0x1f84(%ebx),%ecxf01003e8532,20972
f01003ee:	b8 0e 00 00 00       	mov    $0xe,%eaxf01003ee533,21029
f01003f3:	89 ca                	mov    %ecx,%edxf01003f3534,21078
f01003f5:	ee                   	out    %al,(%dx)f01003f5535,21127
f01003f6:	0f b7 9b 7c 1f 00 00 	movzwl 0x1f7c(%ebx),%ebxf01003f6537,21212
f01003fd:	8d 71 01             	lea    0x1(%ecx),%esif01003fd538,21269
f0100400:	89 d8                	mov    %ebx,%eaxf0100400539,21323
f0100402:	66 c1 e8 08          	shr    $0x8,%axf0100402540,21372
f0100406:	89 f2                	mov    %esi,%edxf0100406541,21420
f0100408:	ee                   	out    %al,(%dx)f0100408542,21469
f0100409:	b8 0f 00 00 00       	mov    $0xf,%eaxf0100409543,21518
f010040e:	89 ca                	mov    %ecx,%edxf010040e544,21567
f0100410:	ee                   	out    %al,(%dx)f0100410545,21616
f0100411:	89 d8                	mov    %ebx,%eaxf0100411546,21665
f0100413:	89 f2                	mov    %esi,%edxf0100413547,21714
f0100415:	ee                   	out    %al,(%dx)f0100415548,21763
f0100416:	8d 65 f4             	lea    -0xc(%ebp),%espf0100416553,21859
f0100419:	5b                   	pop    %ebxf0100419554,21914
f010041a:	5e                   	pop    %esif010041a555,21958
f010041b:	5f                   	pop    %edif010041b556,22002
f010041c:	5d                   	pop    %ebpf010041c557,22046
f010041d:	c3                   	ret    f010041d558,22090
f010041e:	83 f8 08             	cmp    $0x8,%eaxf010041e560,22151
f0100421:	75 72                	jne    f0100495 <cons_putc+0x1a6>f0100421561,22200
f0100423:	0f b7 83 7c 1f 00 00 	movzwl 0x1f7c(%ebx),%eaxf0100423563,22287
f010042a:	66 85 c0             	test   %ax,%axf010042a564,22344
f010042d:	74 b9                	je     f01003e8 <cons_putc+0xf9>f010042d565,22391
f010042f:	83 e8 01             	sub    $0x1,%eaxf010042f567,22470
f0100432:	66 89 83 7c 1f 00 00 	mov    %ax,0x1f7c(%ebx)f0100432568,22519
f0100439:	0f b7 c0             	movzwl %ax,%eaxf0100439570,22616
f010043c:	0f b7 55 e4          	movzwl -0x1c(%ebp),%edxf010043c571,22664
f0100440:	b2 00                	mov    $0x0,%dlf0100440572,22720
f0100442:	83 ca 20             	or     $0x20,%edxf0100442573,22768
f0100445:	8b 8b 80 1f 00 00    	mov    0x1f80(%ebx),%ecxf0100445574,22818
f010044b:	66 89 14 41          	mov    %dx,(%ecx,%eax,2)f010044b575,22875
f010044f:	eb 88                	jmp    f01003d9 <cons_putc+0xea>f010044f576,22932
f0100451:	66 83 83 7c 1f 00 00 	addw   $0x50,0x1f7c(%ebx)f0100451578,23020
f0100458:	50 f0100458579,23078
f0100459:	e9 5e ff ff ff       	jmp    f01003bc <cons_putc+0xcd>f0100459580,23092
f010045e:	b8 20 00 00 00       	mov    $0x20,%eaxf010045e582,23175
f0100463:	e8 87 fe ff ff       	call   f01002ef <cons_putc>f0100463583,23225
f0100468:	b8 20 00 00 00       	mov    $0x20,%eaxf0100468585,23303
f010046d:	e8 7d fe ff ff       	call   f01002ef <cons_putc>f010046d586,23353
f0100472:	b8 20 00 00 00       	mov    $0x20,%eaxf0100472588,23431
f0100477:	e8 73 fe ff ff       	call   f01002ef <cons_putc>f0100477589,23481
f010047c:	b8 20 00 00 00       	mov    $0x20,%eaxf010047c591,23559
f0100481:	e8 69 fe ff ff       	call   f01002ef <cons_putc>f0100481592,23609
f0100486:	b8 20 00 00 00       	mov    $0x20,%eaxf0100486594,23687
f010048b:	e8 5f fe ff ff       	call   f01002ef <cons_putc>f010048b595,23737
f0100490:	e9 44 ff ff ff       	jmp    f01003d9 <cons_putc+0xea>f0100490596,23797
f0100495:	0f b7 83 7c 1f 00 00 	movzwl 0x1f7c(%ebx),%eaxf0100495598,23915
f010049c:	8d 50 01             	lea    0x1(%eax),%edxf010049c599,23972
f010049f:	66 89 93 7c 1f 00 00 	mov    %dx,0x1f7c(%ebx)f010049f600,24026
f01004a6:	0f b7 c0             	movzwl %ax,%eaxf01004a6601,24082
f01004a9:	8b 93 80 1f 00 00    	mov    0x1f80(%ebx),%edxf01004a9602,24130
f01004af:	0f b7 7d e4          	movzwl -0x1c(%ebp),%edif01004af603,24187
f01004b3:	66 89 3c 42          	mov    %di,(%edx,%eax,2)f01004b3604,24243
f01004b7:	e9 1d ff ff ff       	jmp    f01003d9 <cons_putc+0xea>f01004b7605,24300
f01004bc:	8b 83 80 1f 00 00    	mov    0x1f80(%ebx),%eaxf01004bc607,24447
f01004c2:	83 ec 04             	sub    $0x4,%espf01004c2608,24504
f01004c5:	68 00 0f 00 00       	push   $0xf00f01004c5609,24553
f01004ca:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edxf01004ca610,24599
f01004d0:	52                   	push   %edxf01004d0611,24654
f01004d1:	50                   	push   %eaxf01004d1612,24698
f01004d2:	e8 1c 37 00 00       	call   f0103bf3 <memmove>f01004d2613,24742
f01004d7:	8b 93 80 1f 00 00    	mov    0x1f80(%ebx),%edxf01004d7615,24830
f01004dd:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eaxf01004dd616,24887
f01004e3:	81 c2 a0 0f 00 00    	add    $0xfa0,%edxf01004e3617,24943
f01004e9:	83 c4 10             	add    $0x10,%espf01004e9618,24994
f01004ec:	66 c7 00 20 07       	movw   $0x720,(%eax)f01004ec619,25044
f01004f1:	83 c0 02             	add    $0x2,%eaxf01004f1620,25097
f01004f4:	39 d0                	cmp    %edx,%eaxf01004f4622,25197
f01004f6:	75 f4                	jne    f01004ec <cons_putc+0x1fd>f01004f6623,25246
f01004f8:	66 83 ab 7c 1f 00 00 	subw   $0x50,0x1f7c(%ebx)f01004f8625,25335
f01004ff:	50 f01004ff626,25393
f0100500:	e9 e3 fe ff ff       	jmp    f01003e8 <cons_putc+0xf9>f0100500627,25407
f0100505 <serial_intr>:f0100505629,25473
f0100505:	e8 e7 01 00 00       	call   f01006f1 <__x86.get_pc_thunk.ax>f0100505631,25499
f010050a:	05 02 6e 01 00       	add    $0x16e02,%eaxf010050a632,25571
f010050f:	80 b8 88 1f 00 00 00 	cmpb   $0x0,0x1f88(%eax)f010050f634,25644
f0100516:	75 02                	jne    f010051a <serial_intr+0x15>f0100516635,25701
f0100518:	f3 c3                	repz ret f0100518636,25768
f010051a:	55                   	push   %ebpf010051a638,25812
f010051b:	89 e5                	mov    %esp,%ebpf010051b639,25856
f010051d:	83 ec 08             	sub    $0x8,%espf010051d640,25905
f0100520:	8d 80 47 8e fe ff    	lea    -0x171b9(%eax),%eaxf0100520642,25985
f0100526:	e8 47 fc ff ff       	call   f0100172 <cons_intr>f0100526643,26044
f010052b:	c9                   	leave  f010052b645,26106
f010052c:	c3                   	ret    f010052c646,26146
f010052d <kbd_intr>:f010052d648,26187
f010052d:	55                   	push   %ebpf010052d650,26210
f010052e:	89 e5                	mov    %esp,%ebpf010052e651,26254
f0100530:	83 ec 08             	sub    $0x8,%espf0100530652,26303
f0100533:	e8 b9 01 00 00       	call   f01006f1 <__x86.get_pc_thunk.ax>f0100533653,26352
f0100538:	05 d4 6d 01 00       	add    $0x16dd4,%eaxf0100538654,26424
f010053d:	8d 80 b1 8e fe ff    	lea    -0x1714f(%eax),%eaxf010053d656,26504
f0100543:	e8 2a fc ff ff       	call   f0100172 <cons_intr>f0100543657,26563
f0100548:	c9                   	leave  f0100548659,26625
f0100549:	c3                   	ret    f0100549660,26665
f010054a <cons_getc>:f010054a662,26706
f010054a:	55                   	push   %ebpf010054a664,26730
f010054b:	89 e5                	mov    %esp,%ebpf010054b665,26774
f010054d:	53                   	push   %ebxf010054d666,26823
f010054e:	83 ec 04             	sub    $0x4,%espf010054e667,26867
f0100551:	e8 f9 fb ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0100551668,26916
f0100556:	81 c3 b6 6d 01 00    	add    $0x16db6,%ebxf0100556669,26988
f010055c:	e8 a4 ff ff ff       	call   f0100505 <serial_intr>f010055c671,27057
f0100561:	e8 c7 ff ff ff       	call   f010052d <kbd_intr>f0100561673,27132
f0100566:	8b 93 74 1f 00 00    	mov    0x1f74(%ebx),%edxf0100566675,27222
f010056c:	b8 00 00 00 00       	mov    $0x0,%eaxf010056c677,27290
f0100571:	3b 93 78 1f 00 00    	cmp    0x1f78(%ebx),%edxf0100571679,27370
f0100577:	74 19                	je     f0100592 <cons_getc+0x48>f0100577680,27427
		c = cons.buf[cons.rpos++];c681,27492
f0100579:	8d 4a 01             	lea    0x1(%edx),%ecxf0100579682,27521
f010057c:	89 8b 74 1f 00 00    	mov    %ecx,0x1f74(%ebx)f010057c683,27575
f0100582:	0f b6 84 13 74 1d 00 	movzbl 0x1d74(%ebx,%edx,1),%eaxf0100582684,27632
f0100589:	00 f0100589685,27696
f010058a:	81 f9 00 02 00 00    	cmp    $0x200,%ecxf010058a687,27742
f0100590:	74 06                	je     f0100598 <cons_getc+0x4e>f0100590688,27793
f0100592:	83 c4 04             	add    $0x4,%espf0100592690,27860
f0100595:	5b                   	pop    %ebxf0100595691,27909
f0100596:	5d                   	pop    %ebpf0100596692,27953
f0100597:	c3                   	ret    f0100597693,27997
f0100598:	c7 83 74 1f 00 00 00 	movl   $0x0,0x1f74(%ebx)f0100598695,28055
f010059f:	00 00 00 f010059f696,28112
f01005a2:	eb ee                	jmp    f0100592 <cons_getc+0x48>f01005a2697,28132
f01005a4 <cons_init>:f01005a4699,28198
voidvoid702,28255
f01005a4:	55                   	push   %ebpf01005a4705,28278
f01005a5:	89 e5                	mov    %esp,%ebpf01005a5706,28322
f01005a7:	57                   	push   %edif01005a7707,28371
f01005a8:	56                   	push   %esif01005a8708,28415
f01005a9:	53                   	push   %ebxf01005a9709,28459
f01005aa:	83 ec 1c             	sub    $0x1c,%espf01005aa710,28503
f01005ad:	e8 9d fb ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01005ad711,28553
f01005b2:	81 c3 5a 6d 01 00    	add    $0x16d5a,%ebxf01005b2712,28625
	was = *cp;was713,28678
f01005b8:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edxf01005b8714,28690
f01005bf:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000f01005bf716,28771
f01005c6:	5a a5 f01005c6717,28829
f01005c8:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eaxf01005c8719,28868
f01005cf:	66 3d 5a a5          	cmp    $0xa55a,%axf01005cf720,28923
f01005d3:	0f 84 bc 00 00 00    	je     f0100695 <cons_init+0xf1>f01005d3721,28974
		addr_6845 = MONO_BASE;addr_6845722,29039
f01005d9:	c7 83 84 1f 00 00 b4 	movl   $0x3b4,0x1f84(%ebx)f01005d9723,29064
f01005e0:	03 00 00 f01005e0724,29123
		cp = (uint16_t*) (KERNBASE + MONO_BUF);cp725,29143
f01005e3:	c7 45 e4 00 00 0b f0 	movl   $0xf00b0000,-0x1c(%ebp)f01005e3726,29185
f01005ea:	8b bb 84 1f 00 00    	mov    0x1f84(%ebx),%edif01005ea728,29270
f01005f0:	b8 0e 00 00 00       	mov    $0xe,%eaxf01005f0729,29327
f01005f5:	89 fa                	mov    %edi,%edxf01005f5730,29376
f01005f7:	ee                   	out    %al,(%dx)f01005f7731,29425
	pos = inb(addr_6845 + 1) << 8;pos732,29474
f01005f8:	8d 4f 01             	lea    0x1(%edi),%ecxf01005f8733,29506
f01005fb:	89 ca                	mov    %ecx,%edxf01005fb735,29616
f01005fd:	ec                   	in     (%dx),%alf01005fd736,29665
f01005fe:	0f b6 f0             	movzbl %al,%esif01005fe737,29714
f0100601:	c1 e6 08             	shl    $0x8,%esif0100601738,29762
f0100604:	b8 0f 00 00 00       	mov    $0xf,%eaxf0100604740,29868
f0100609:	89 fa                	mov    %edi,%edxf0100609741,29917
f010060b:	ee                   	out    %al,(%dx)f010060b742,29966
f010060c:	89 ca                	mov    %ecx,%edxf010060c744,30071
f010060e:	ec                   	in     (%dx),%alf010060e745,30120
	crt_buf = (uint16_t*) cp;crt_buf746,30169
f010060f:	8b 7d e4             	mov    -0x1c(%ebp),%edif010060f747,30196
f0100612:	89 bb 80 1f 00 00    	mov    %edi,0x1f80(%ebx)f0100612748,30252
f0100618:	0f b6 c0             	movzbl %al,%eaxf0100618750,30337
f010061b:	09 c6                	or     %eax,%esif010061b751,30385
	crt_pos = pos;crt_pos752,30434
f010061d:	66 89 b3 7c 1f 00 00 	mov    %si,0x1f7c(%ebx)f010061d753,30450
f0100624:	b9 00 00 00 00       	mov    $0x0,%ecxf0100624755,30563
f0100629:	89 c8                	mov    %ecx,%eaxf0100629756,30612
f010062b:	ba fa 03 00 00       	mov    $0x3fa,%edxf010062b757,30661
f0100630:	ee                   	out    %al,(%dx)f0100630758,30712
f0100631:	bf fb 03 00 00       	mov    $0x3fb,%edif0100631759,30761
f0100636:	b8 80 ff ff ff       	mov    $0xffffff80,%eaxf0100636760,30812
f010063b:	89 fa                	mov    %edi,%edxf010063b761,30868
f010063d:	ee                   	out    %al,(%dx)f010063d762,30917
f010063e:	b8 0c 00 00 00       	mov    $0xc,%eaxf010063e763,30966
f0100643:	ba f8 03 00 00       	mov    $0x3f8,%edxf0100643764,31015
f0100648:	ee                   	out    %al,(%dx)f0100648765,31066
f0100649:	be f9 03 00 00       	mov    $0x3f9,%esif0100649766,31115
f010064e:	89 c8                	mov    %ecx,%eaxf010064e767,31166
f0100650:	89 f2                	mov    %esi,%edxf0100650768,31215
f0100652:	ee                   	out    %al,(%dx)f0100652769,31264
f0100653:	b8 03 00 00 00       	mov    $0x3,%eaxf0100653770,31313
f0100658:	89 fa                	mov    %edi,%edxf0100658771,31362
f010065a:	ee                   	out    %al,(%dx)f010065a772,31411
f010065b:	ba fc 03 00 00       	mov    $0x3fc,%edxf010065b773,31460
f0100660:	89 c8                	mov    %ecx,%eaxf0100660774,31511
f0100662:	ee                   	out    %al,(%dx)f0100662775,31560
f0100663:	b8 01 00 00 00       	mov    $0x1,%eaxf0100663776,31609
f0100668:	89 f2                	mov    %esi,%edxf0100668777,31658
f010066a:	ee                   	out    %al,(%dx)f010066a778,31707
f010066b:	ba fd 03 00 00       	mov    $0x3fd,%edxf010066b780,31812
f0100670:	ec                   	in     (%dx),%alf0100670781,31863
f0100671:	89 c1                	mov    %eax,%ecxf0100671782,31912
	serial_exists = (inb(COM1+COM_LSR) != 0xFF);serial_exists783,31961
f0100673:	3c ff                	cmp    $0xff,%alf0100673784,32007
f0100675:	0f 95 83 88 1f 00 00 	setne  0x1f88(%ebx)f0100675785,32056
f010067c:	ba fa 03 00 00       	mov    $0x3fa,%edxf010067c786,32108
f0100681:	ec                   	in     (%dx),%alf0100681787,32159
f0100682:	ba f8 03 00 00       	mov    $0x3f8,%edxf0100682788,32208
f0100687:	ec                   	in     (%dx),%alf0100687789,32259
f0100688:	80 f9 ff             	cmp    $0xff,%clf0100688795,32372
f010068b:	74 25                	je     f01006b2 <cons_init+0x10e>f010068b796,32421
f010068d:	8d 65 f4             	lea    -0xc(%ebp),%espf010068d799,32533
f0100690:	5b                   	pop    %ebxf0100690800,32588
f0100691:	5e                   	pop    %esif0100691801,32632
f0100692:	5f                   	pop    %edif0100692802,32676
f0100693:	5d                   	pop    %ebpf0100693803,32720
f0100694:	c3                   	ret    f0100694804,32764
f0100695:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000f0100695806,32817
		addr_6845 = CGA_BASE;addr_6845807,32871
f010069c:	c7 83 84 1f 00 00 d4 	movl   $0x3d4,0x1f84(%ebx)f010069c808,32895
f01006a3:	03 00 00 f01006a3809,32954
	cp = (uint16_t*) (KERNBASE + CGA_BUF);cp810,32974
f01006a6:	c7 45 e4 00 80 0b f0 	movl   $0xf00b8000,-0x1c(%ebp)f01006a6811,33014
f01006ad:	e9 38 ff ff ff       	jmp    f01005ea <cons_init+0x46>f01006ad812,33077
f01006b2:	83 ec 0c             	sub    $0xc,%espf01006b2814,33186
f01006b5:	8d 83 4d cd fe ff    	lea    -0x132b3(%ebx),%eaxf01006b5815,33235
f01006bb:	50                   	push   %eaxf01006bb816,33294
f01006bc:	e8 89 29 00 00       	call   f010304a <cprintf>f01006bc817,33338
f01006c1:	83 c4 10             	add    $0x10,%espf01006c1818,33396
f01006c4:	eb c7                	jmp    f010068d <cons_init+0xe9>f01006c4820,33448
f01006c6 <cputchar>:f01006c6822,33514
voidvoid826,33597
f01006c6:	55                   	push   %ebpf01006c6829,33620
f01006c7:	89 e5                	mov    %esp,%ebpf01006c7830,33664
f01006c9:	83 ec 08             	sub    $0x8,%espf01006c9831,33713
f01006cc:	8b 45 08             	mov    0x8(%ebp),%eaxf01006cc833,33777
f01006cf:	e8 1b fc ff ff       	call   f01002ef <cons_putc>f01006cf834,33831
f01006d4:	c9                   	leave  f01006d4836,33893
f01006d5:	c3                   	ret    f01006d5837,33933
f01006d6 <getchar>:f01006d6839,33974
intint841,33995
f01006d6:	55                   	push   %ebpf01006d6844,34015
f01006d7:	89 e5                	mov    %esp,%ebpf01006d7845,34059
f01006d9:	83 ec 08             	sub    $0x8,%espf01006d9846,34108
f01006dc:	e8 69 fe ff ff       	call   f010054a <cons_getc>f01006dc850,34198
f01006e1:	85 c0                	test   %eax,%eaxf01006e1851,34258
f01006e3:	74 f7                	je     f01006dc <getchar+0x6>f01006e3852,34307
f01006e5:	c9                   	leave  f01006e5856,34402
f01006e6:	c3                   	ret    f01006e6857,34442
f01006e7 <iscons>:f01006e7859,34483
intint861,34503
f01006e7:	55                   	push   %ebpf01006e7864,34527
f01006e8:	89 e5                	mov    %esp,%ebpf01006e8865,34571
f01006ea:	b8 01 00 00 00       	mov    $0x1,%eaxf01006ea869,34654
f01006ef:	5d                   	pop    %ebpf01006ef870,34703
f01006f0:	c3                   	ret    f01006f0871,34747
f01006f1 <__x86.get_pc_thunk.ax>:f01006f1873,34788
f01006f1:	8b 04 24             	mov    (%esp),%eaxf01006f1874,34822
f01006f4:	c3                   	ret    f01006f4875,34873
f01006f5 <mon_help>:f01006f5877,34914
intint881,35000
f01006f5:	55                   	push   %ebpf01006f5884,35060
f01006f6:	89 e5                	mov    %esp,%ebpf01006f6885,35104
f01006f8:	56                   	push   %esif01006f8886,35153
f01006f9:	53                   	push   %ebxf01006f9887,35197
f01006fa:	e8 50 fa ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01006fa888,35241
f01006ff:	81 c3 0d 6c 01 00    	add    $0x16c0d,%ebxf01006ff889,35313
f0100705:	83 ec 04             	sub    $0x4,%espf0100705894,35479
f0100708:	8d 83 74 cf fe ff    	lea    -0x1308c(%ebx),%eaxf0100708895,35528
f010070e:	50                   	push   %eaxf010070e896,35587
f010070f:	8d 83 92 cf fe ff    	lea    -0x1306e(%ebx),%eaxf010070f897,35631
f0100715:	50                   	push   %eaxf0100715898,35690
f0100716:	8d b3 97 cf fe ff    	lea    -0x13069(%ebx),%esif0100716899,35734
f010071c:	56                   	push   %esif010071c900,35793
f010071d:	e8 28 29 00 00       	call   f010304a <cprintf>f010071d901,35837
f0100722:	83 c4 0c             	add    $0xc,%espf0100722902,35895
f0100725:	8d 83 00 d0 fe ff    	lea    -0x13000(%ebx),%eaxf0100725903,35944
f010072b:	50                   	push   %eaxf010072b904,36003
f010072c:	8d 83 a0 cf fe ff    	lea    -0x13060(%ebx),%eaxf010072c905,36047
f0100732:	50                   	push   %eaxf0100732906,36106
f0100733:	56                   	push   %esif0100733907,36150
f0100734:	e8 11 29 00 00       	call   f010304a <cprintf>f0100734908,36194
f0100739:	b8 00 00 00 00       	mov    $0x0,%eaxf0100739911,36265
f010073e:	8d 65 f8             	lea    -0x8(%ebp),%espf010073e912,36314
f0100741:	5b                   	pop    %ebxf0100741913,36369
f0100742:	5e                   	pop    %esif0100742914,36413
f0100743:	5d                   	pop    %ebpf0100743915,36457
f0100744:	c3                   	ret    f0100744916,36501
f0100745 <mon_kerninfo>:f0100745918,36542
intint920,36568
f0100745:	55                   	push   %ebpf0100745923,36632
f0100746:	89 e5                	mov    %esp,%ebpf0100746924,36676
f0100748:	57                   	push   %edif0100748925,36725
f0100749:	56                   	push   %esif0100749926,36769
f010074a:	53                   	push   %ebxf010074a927,36813
f010074b:	83 ec 18             	sub    $0x18,%espf010074b928,36857
f010074e:	e8 fc f9 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f010074e929,36907
f0100753:	81 c3 b9 6b 01 00    	add    $0x16bb9,%ebxf0100753930,36979
f0100759:	8d 83 a9 cf fe ff    	lea    -0x13057(%ebx),%eaxf0100759934,37129
f010075f:	50                   	push   %eaxf010075f935,37188
f0100760:	e8 e5 28 00 00       	call   f010304a <cprintf>f0100760936,37232
f0100765:	83 c4 08             	add    $0x8,%espf0100765938,37351
f0100768:	ff b3 f4 ff ff ff    	pushl  -0xc(%ebx)f0100768939,37400
f010076e:	8d 83 28 d0 fe ff    	lea    -0x12fd8(%ebx),%eaxf010076e940,37450
f0100774:	50                   	push   %eaxf0100774941,37509
f0100775:	e8 d0 28 00 00       	call   f010304a <cprintf>f0100775942,37553
f010077a:	83 c4 0c             	add    $0xc,%espf010077a944,37685
f010077d:	c7 c7 0c 00 10 f0    	mov    $0xf010000c,%edif010077d945,37734
f0100783:	8d 87 00 00 00 10    	lea    0x10000000(%edi),%eaxf0100783946,37790
f0100789:	50                   	push   %eaxf0100789947,37851
f010078a:	57                   	push   %edif010078a948,37895
f010078b:	8d 83 50 d0 fe ff    	lea    -0x12fb0(%ebx),%eaxf010078b949,37939
f0100791:	50                   	push   %eaxf0100791950,37998
f0100792:	e8 b3 28 00 00       	call   f010304a <cprintf>f0100792951,38042
f0100797:	83 c4 0c             	add    $0xc,%espf0100797953,38174
f010079a:	c7 c0 e9 3f 10 f0    	mov    $0xf0103fe9,%eaxf010079a954,38223
f01007a0:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edxf01007a0955,38279
f01007a6:	52                   	push   %edxf01007a6956,38340
f01007a7:	50                   	push   %eaxf01007a7957,38384
f01007a8:	8d 83 74 d0 fe ff    	lea    -0x12f8c(%ebx),%eaxf01007a8958,38428
f01007ae:	50                   	push   %eaxf01007ae959,38487
f01007af:	e8 96 28 00 00       	call   f010304a <cprintf>f01007af960,38531
f01007b4:	83 c4 0c             	add    $0xc,%espf01007b4962,38663
f01007b7:	c7 c0 60 90 11 f0    	mov    $0xf0119060,%eaxf01007b7963,38712
f01007bd:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edxf01007bd964,38768
f01007c3:	52                   	push   %edxf01007c3965,38829
f01007c4:	50                   	push   %eaxf01007c4966,38873
f01007c5:	8d 83 98 d0 fe ff    	lea    -0x12f68(%ebx),%eaxf01007c5967,38917
f01007cb:	50                   	push   %eaxf01007cb968,38976
f01007cc:	e8 79 28 00 00       	call   f010304a <cprintf>f01007cc969,39020
f01007d1:	83 c4 0c             	add    $0xc,%espf01007d1971,39148
f01007d4:	c7 c6 c0 96 11 f0    	mov    $0xf01196c0,%esif01007d4972,39197
f01007da:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eaxf01007da973,39253
f01007e0:	50                   	push   %eaxf01007e0974,39314
f01007e1:	56                   	push   %esif01007e1975,39358
f01007e2:	8d 83 bc d0 fe ff    	lea    -0x12f44(%ebx),%eaxf01007e2976,39402
f01007e8:	50                   	push   %eaxf01007e8977,39461
f01007e9:	e8 5c 28 00 00       	call   f010304a <cprintf>f01007e9978,39505
f01007ee:	83 c4 08             	add    $0x8,%espf01007ee980,39618
f01007f1:	81 c6 ff 03 00 00    	add    $0x3ff,%esif01007f1982,39705
f01007f7:	29 fe                	sub    %edi,%esif01007f7983,39756
f01007f9:	c1 fe 0a             	sar    $0xa,%esif01007f9985,39860
f01007fc:	56                   	push   %esif01007fc986,39909
f01007fd:	8d 83 e0 d0 fe ff    	lea    -0x12f20(%ebx),%eaxf01007fd987,39953
f0100803:	50                   	push   %eaxf0100803988,40012
f0100804:	e8 41 28 00 00       	call   f010304a <cprintf>f0100804989,40056
f0100809:	b8 00 00 00 00       	mov    $0x0,%eaxf0100809992,40127
f010080e:	8d 65 f4             	lea    -0xc(%ebp),%espf010080e993,40176
f0100811:	5b                   	pop    %ebxf0100811994,40231
f0100812:	5e                   	pop    %esif0100812995,40275
f0100813:	5f                   	pop    %edif0100813996,40319
f0100814:	5d                   	pop    %ebpf0100814997,40363
f0100815:	c3                   	ret    f0100815998,40407
f0100816 <mon_backtrace>:f01008161000,40448
intint1002,40475
f0100816:	55                   	push   %ebpf01008161005,40540
f0100817:	89 e5                	mov    %esp,%ebpf01008171006,40584
f0100819:	b8 00 00 00 00       	mov    $0x0,%eaxf01008191010,40666
f010081e:	5d                   	pop    %ebpf010081e1011,40715
f010081f:	c3                   	ret    f010081f1012,40759
f0100820 <monitor>:f01008201014,40800
voidvoid1018,40834
f0100820:	55                   	push   %ebpf01008201021,40871
f0100821:	89 e5                	mov    %esp,%ebpf01008211022,40915
f0100823:	57                   	push   %edif01008231023,40964
f0100824:	56                   	push   %esif01008241024,41008
f0100825:	53                   	push   %ebxf01008251025,41052
f0100826:	83 ec 68             	sub    $0x68,%espf01008261026,41096
f0100829:	e8 21 f9 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01008291027,41146
f010082e:	81 c3 de 6a 01 00    	add    $0x16ade,%ebxf010082e1028,41218
f0100834:	8d 83 0c d1 fe ff    	lea    -0x12ef4(%ebx),%eaxf01008341032,41334
f010083a:	50                   	push   %eaxf010083a1033,41393
f010083b:	e8 0a 28 00 00       	call   f010304a <cprintf>f010083b1034,41437
f0100840:	8d 83 30 d1 fe ff    	lea    -0x12ed0(%ebx),%eaxf01008401036,41546
f0100846:	89 04 24             	mov    %eax,(%esp)f01008461037,41605
f0100849:	e8 fc 27 00 00       	call   f010304a <cprintf>f01008491038,41656
f010084e:	83 c4 10             	add    $0x10,%espf010084e1039,41714
f0100851:	8d bb c6 cf fe ff    	lea    -0x1303a(%ebx),%edif01008511041,41807
f0100857:	eb 4a                	jmp    f01008a3 <monitor+0x83>f01008571042,41866
f0100859:	83 ec 08             	sub    $0x8,%espf01008591043,41929
f010085c:	0f be c0             	movsbl %al,%eaxf010085c1044,41978
f010085f:	50                   	push   %eaxf010085f1045,42026
f0100860:	57                   	push   %edif01008601046,42070
f0100861:	e8 03 33 00 00       	call   f0103b69 <strchr>f01008611047,42114
f0100866:	83 c4 10             	add    $0x10,%espf01008661048,42171
f0100869:	85 c0                	test   %eax,%eaxf01008691049,42221
f010086b:	74 08                	je     f0100875 <monitor+0x55>f010086b1050,42270
f010086d:	c6 06 00             	movb   $0x0,(%esi)f010086d1052,42348
f0100870:	8d 76 01             	lea    0x1(%esi),%esif01008701053,42399
f0100873:	eb 79                	jmp    f01008ee <monitor+0xce>f01008731054,42453
f0100875:	80 3e 00             	cmpb   $0x0,(%esi)f01008751056,42533
f0100878:	74 7f                	je     f01008f9 <monitor+0xd9>f01008781057,42584
f010087a:	83 7d a4 0f          	cmpl   $0xf,-0x5c(%ebp)f010087a1059,42674
f010087e:	74 0f                	je     f010088f <monitor+0x6f>f010087e1060,42730
f0100880:	8b 45 a4             	mov    -0x5c(%ebp),%eaxf01008801062,42815
f0100883:	8d 48 01             	lea    0x1(%eax),%ecxf01008831063,42871
f0100886:	89 4d a4             	mov    %ecx,-0x5c(%ebp)f01008861064,42925
f0100889:	89 74 85 a8          	mov    %esi,-0x58(%ebp,%eax,4)f01008891065,42981
f010088d:	eb 44                	jmp    f01008d3 <monitor+0xb3>f010088d1066,43044
f010088f:	83 ec 08             	sub    $0x8,%espf010088f1068,43161
f0100892:	6a 10                	push   $0x10f01008921069,43210
f0100894:	8d 83 cb cf fe ff    	lea    -0x13035(%ebx),%eaxf01008941070,43255
f010089a:	50                   	push   %eaxf010089a1071,43314
f010089b:	e8 aa 27 00 00       	call   f010304a <cprintf>f010089b1072,43358
f01008a0:	83 c4 10             	add    $0x10,%espf01008a01073,43416
		buf = readline("K> ");buf1077,43481
f01008a3:	8d 83 c2 cf fe ff    	lea    -0x1303e(%ebx),%eaxf01008a31078,43506
f01008a9:	89 45 a4             	mov    %eax,-0x5c(%ebp)f01008a91079,43565
f01008ac:	83 ec 0c             	sub    $0xc,%espf01008ac1080,43621
f01008af:	ff 75 a4             	pushl  -0x5c(%ebp)f01008af1081,43670
f01008b2:	e8 7a 30 00 00       	call   f0103931 <readline>f01008b21082,43721
f01008b7:	89 c6                	mov    %eax,%esif01008b71083,43780
f01008b9:	83 c4 10             	add    $0x10,%espf01008b91085,43848
f01008bc:	85 c0                	test   %eax,%eaxf01008bc1086,43898
f01008be:	74 ec                	je     f01008ac <monitor+0x8c>f01008be1087,43947
f01008c0:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)f01008c01089,44027
	argc = 0;argc1090,44083
f01008c7:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)f01008c71091,44094
f01008ce:	eb 1e                	jmp    f01008ee <monitor+0xce>f01008ce1092,44150
f01008d0:	83 c6 01             	add    $0x1,%esif01008d01094,44223
f01008d3:	0f b6 06             	movzbl (%esi),%eaxf01008d31096,44316
f01008d6:	84 c0                	test   %al,%alf01008d61097,44367
f01008d8:	74 14                	je     f01008ee <monitor+0xce>f01008d81098,44414
f01008da:	83 ec 08             	sub    $0x8,%espf01008da1099,44477
f01008dd:	0f be c0             	movsbl %al,%eaxf01008dd1100,44526
f01008e0:	50                   	push   %eaxf01008e01101,44574
f01008e1:	57                   	push   %edif01008e11102,44618
f01008e2:	e8 82 32 00 00       	call   f0103b69 <strchr>f01008e21103,44662
f01008e7:	83 c4 10             	add    $0x10,%espf01008e71104,44719
f01008ea:	85 c0                	test   %eax,%eaxf01008ea1105,44769
f01008ec:	74 e2                	je     f01008d0 <monitor+0xb0>f01008ec1106,44818
f01008ee:	0f b6 06             	movzbl (%esi),%eaxf01008ee1108,44924
f01008f1:	84 c0                	test   %al,%alf01008f11109,44975
f01008f3:	0f 85 60 ff ff ff    	jne    f0100859 <monitor+0x39>f01008f31110,45022
f01008f9:	8b 45 a4             	mov    -0x5c(%ebp),%eaxf01008f91112,45102
f01008fc:	c7 44 85 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%eax,4)f01008fc1113,45158
f0100903:	00 f01009031114,45221
f0100904:	85 c0                	test   %eax,%eaxf01009041116,45251
f0100906:	74 9b                	je     f01008a3 <monitor+0x83>f01009061117,45300
f0100908:	83 ec 08             	sub    $0x8,%espf01009081119,45409
f010090b:	8d 83 92 cf fe ff    	lea    -0x1306e(%ebx),%eaxf010090b1120,45458
f0100911:	50                   	push   %eaxf01009111121,45517
f0100912:	ff 75 a8             	pushl  -0x58(%ebp)f01009121122,45561
f0100915:	e8 f1 31 00 00       	call   f0103b0b <strcmp>f01009151123,45612
f010091a:	83 c4 10             	add    $0x10,%espf010091a1124,45669
f010091d:	85 c0                	test   %eax,%eaxf010091d1125,45719
f010091f:	74 38                	je     f0100959 <monitor+0x139>f010091f1126,45768
f0100921:	83 ec 08             	sub    $0x8,%espf01009211127,45832
f0100924:	8d 83 a0 cf fe ff    	lea    -0x13060(%ebx),%eaxf01009241128,45881
f010092a:	50                   	push   %eaxf010092a1129,45940
f010092b:	ff 75 a8             	pushl  -0x58(%ebp)f010092b1130,45984
f010092e:	e8 d8 31 00 00       	call   f0103b0b <strcmp>f010092e1131,46035
f0100933:	83 c4 10             	add    $0x10,%espf01009331132,46092
f0100936:	85 c0                	test   %eax,%eaxf01009361133,46142
f0100938:	74 1a                	je     f0100954 <monitor+0x134>f01009381134,46191
f010093a:	83 ec 08             	sub    $0x8,%espf010093a1136,46300
f010093d:	ff 75 a8             	pushl  -0x58(%ebp)f010093d1137,46349
f0100940:	8d 83 e8 cf fe ff    	lea    -0x13018(%ebx),%eaxf01009401138,46400
f0100946:	50                   	push   %eaxf01009461139,46459
f0100947:	e8 fe 26 00 00       	call   f010304a <cprintf>f01009471140,46503
f010094c:	83 c4 10             	add    $0x10,%espf010094c1141,46561
f010094f:	e9 4f ff ff ff       	jmp    f01008a3 <monitor+0x83>f010094f1142,46611
f0100954:	b8 01 00 00 00       	mov    $0x1,%eaxf01009541144,46720
f0100959:	83 ec 04             	sub    $0x4,%espf01009591146,46813
f010095c:	8d 04 40             	lea    (%eax,%eax,2),%eaxf010095c1147,46862
f010095f:	ff 75 08             	pushl  0x8(%ebp)f010095f1148,46920
f0100962:	8d 55 a8             	lea    -0x58(%ebp),%edxf01009621149,46969
f0100965:	52                   	push   %edxf01009651150,47025
f0100966:	ff 75 a4             	pushl  -0x5c(%ebp)f01009661151,47069
f0100969:	ff 94 83 0c 1d 00 00 	call   *0x1d0c(%ebx,%eax,4)f01009691152,47120
f0100970:	83 c4 10             	add    $0x10,%espf01009701154,47208
f0100973:	85 c0                	test   %eax,%eaxf01009731155,47258
f0100975:	0f 89 28 ff ff ff    	jns    f01008a3 <monitor+0x83>f01009751156,47307
f010097b:	8d 65 f4             	lea    -0xc(%ebp),%espf010097b1160,47386
f010097e:	5b                   	pop    %ebxf010097e1161,47441
f010097f:	5e                   	pop    %esif010097f1162,47485
f0100980:	5f                   	pop    %edif01009801163,47529
f0100981:	5d                   	pop    %ebpf01009811164,47573
f0100982:	c3                   	ret    f01009821165,47617
f0100983 <nvram_read>:f01009831167,47658
static intstatic1171,47791
f0100983:	55                   	push   %ebpf01009831174,47822
f0100984:	89 e5                	mov    %esp,%ebpf01009841175,47866
f0100986:	57                   	push   %edif01009861176,47915
f0100987:	56                   	push   %esif01009871177,47959
f0100988:	53                   	push   %ebxf01009881178,48003
f0100989:	83 ec 18             	sub    $0x18,%espf01009891179,48047
f010098c:	e8 be f7 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f010098c1180,48097
f0100991:	81 c3 7b 69 01 00    	add    $0x1697b,%ebxf01009911181,48169
f0100997:	89 c7                	mov    %eax,%edif01009971182,48222
f0100999:	50                   	push   %eaxf01009991184,48327
f010099a:	e8 24 26 00 00       	call   f0102fc3 <mc146818_read>f010099a1185,48371
f010099f:	89 c6                	mov    %eax,%esif010099f1186,48435
f01009a1:	83 c7 01             	add    $0x1,%edif01009a11187,48484
f01009a4:	89 3c 24             	mov    %edi,(%esp)f01009a41188,48533
f01009a7:	e8 17 26 00 00       	call   f0102fc3 <mc146818_read>f01009a71189,48584
f01009ac:	c1 e0 08             	shl    $0x8,%eaxf01009ac1190,48648
f01009af:	09 f0                	or     %esi,%eaxf01009af1191,48697
f01009b1:	8d 65 f4             	lea    -0xc(%ebp),%espf01009b11193,48748
f01009b4:	5b                   	pop    %ebxf01009b41194,48803
f01009b5:	5e                   	pop    %esif01009b51195,48847
f01009b6:	5f                   	pop    %edif01009b61196,48891
f01009b7:	5d                   	pop    %ebpf01009b71197,48935
f01009b8:	c3                   	ret    f01009b81198,48979
f01009b9 <boot_alloc>:f01009b91200,49020
static void *static1204,49203
f01009b9:	55                   	push   %ebpf01009b91207,49242
f01009ba:	89 e5                	mov    %esp,%ebpf01009ba1208,49286
f01009bc:	53                   	push   %ebxf01009bc1209,49335
f01009bd:	83 ec 04             	sub    $0x4,%espf01009bd1210,49379
f01009c0:	e8 f2 25 00 00       	call   f0102fb7 <__x86.get_pc_thunk.cx>f01009c01211,49428
f01009c5:	81 c1 47 69 01 00    	add    $0x16947,%ecxf01009c51212,49500
f01009cb:	89 c2                	mov    %eax,%edxf01009cb1213,49553
f01009cd:	83 b9 8c 1f 00 00 00 	cmpl   $0x0,0x1f8c(%ecx)f01009cd1220,49902
f01009d4:	74 34                	je     f0100a0a <boot_alloc+0x51>f01009d41221,49959
f01009d6:	8b 81 8c 1f 00 00    	mov    0x1f8c(%ecx),%eaxf01009d61228,50291
f01009dc:	8b 99 94 1f 00 00    	mov    0x1f94(%ecx),%ebxf01009dc1229,50348
f01009e2:	c1 e3 0c             	shl    $0xc,%ebxf01009e21230,50405
f01009e5:	81 c3 c0 96 11 f0    	add    $0xf01196c0,%ebxf01009e51231,50454
f01009eb:	29 c3                	sub    %eax,%ebxf01009eb1232,50510
f01009ed:	39 d3                	cmp    %edx,%ebxf01009ed1235,50587
f01009ef:	72 31                	jb     f0100a22 <boot_alloc+0x69>f01009ef1236,50636
        result = nextfree;result1240,50838
f01009f1:	81 c2 ff 0f 00 00    	add    $0xfff,%edxf01009f11242,50905
f01009f7:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf01009f71243,50956
f01009fd:	01 c2                	add    %eax,%edxf01009fd1244,51012
f01009ff:	89 91 8c 1f 00 00    	mov    %edx,0x1f8c(%ecx)f01009ff1245,51061
f0100a05:	8b 5d fc             	mov    -0x4(%ebp),%ebxf0100a051248,51143
f0100a08:	c9                   	leave  f0100a081249,51198
f0100a09:	c3                   	ret    f0100a091250,51238
		nextfree = ROUNDUP((char *) end, PGSIZE);nextfree1251,51278
f0100a0a:	c7 c0 c0 96 11 f0    	mov    $0xf01196c0,%eaxf0100a0a1252,51322
f0100a10:	05 ff 0f 00 00       	add    $0xfff,%eaxf0100a101253,51378
f0100a15:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf0100a151254,51429
f0100a1a:	89 81 8c 1f 00 00    	mov    %eax,0x1f8c(%ecx)f0100a1a1255,51485
f0100a20:	eb b4                	jmp    f01009d6 <boot_alloc+0x1d>f0100a201256,51542
f0100a22:	83 ec 0c             	sub    $0xc,%espf0100a221258,51706
f0100a25:	53                   	push   %ebxf0100a251259,51755
f0100a26:	52                   	push   %edxf0100a261260,51799
f0100a27:	8d 81 58 d1 fe ff    	lea    -0x12ea8(%ecx),%eaxf0100a271261,51843
f0100a2d:	50                   	push   %eaxf0100a2d1262,51902
f0100a2e:	6a 6d                	push   $0x6df0100a2e1263,51946
f0100a30:	8d 81 a8 d9 fe ff    	lea    -0x12658(%ecx),%eaxf0100a301264,51991
f0100a36:	50                   	push   %eaxf0100a361265,52050
f0100a37:	89 cb                	mov    %ecx,%ebxf0100a371266,52094
f0100a39:	e8 5b f6 ff ff       	call   f0100099 <_panic>f0100a391267,52143
f0100a3e <check_va2pa>:f0100a3e1269,52201
static physaddr_tstatic1273,52365
f0100a3e:	55                   	push   %ebpf0100a3e1276,52425
f0100a3f:	89 e5                	mov    %esp,%ebpf0100a3f1277,52469
f0100a41:	56                   	push   %esif0100a411278,52518
f0100a42:	53                   	push   %ebxf0100a421279,52562
f0100a43:	e8 6f 25 00 00       	call   f0102fb7 <__x86.get_pc_thunk.cx>f0100a431280,52606
f0100a48:	81 c1 c4 68 01 00    	add    $0x168c4,%ecxf0100a481281,52678
	pgdir = &pgdir[PDX(va)];pgdir1284,52743
f0100a4e:	89 d3                	mov    %edx,%ebxf0100a4e1285,52769
f0100a50:	c1 eb 16             	shr    $0x16,%ebxf0100a501286,52818
f0100a53:	8b 04 98             	mov    (%eax,%ebx,4),%eaxf0100a531288,52892
f0100a56:	a8 01                	test   $0x1,%alf0100a561289,52950
f0100a58:	74 5a                	je     f0100ab4 <check_va2pa+0x76>f0100a581290,52998
	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));p1292,53078
f0100a5a:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf0100a5a1293,53117
#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)KADDR1294,53173
static inline void*static1296,53223
f0100a5f:	89 c6                	mov    %eax,%esif0100a5f1300,53321
f0100a61:	c1 ee 0c             	shr    $0xc,%esif0100a611301,53370
f0100a64:	c7 c3 c8 96 11 f0    	mov    $0xf01196c8,%ebxf0100a641302,53419
f0100a6a:	3b 33                	cmp    (%ebx),%esif0100a6a1303,53475
f0100a6c:	73 2b                	jae    f0100a99 <check_va2pa+0x5b>f0100a6c1304,53526
f0100a6e:	c1 ea 0c             	shr    $0xc,%edxf0100a6e1306,53621
f0100a71:	81 e2 ff 03 00 00    	and    $0x3ff,%edxf0100a711307,53670
f0100a77:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eaxf0100a771308,53721
f0100a7e:	89 c2                	mov    %eax,%edxf0100a7e1309,53790
f0100a80:	83 e2 01             	and    $0x1,%edxf0100a801310,53839
f0100a83:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf0100a831313,53931
f0100a88:	85 d2                	test   %edx,%edxf0100a881314,53987
f0100a8a:	ba ff ff ff ff       	mov    $0xffffffff,%edxf0100a8a1315,54036
f0100a8f:	0f 44 c2             	cmove  %edx,%eaxf0100a8f1316,54092
f0100a92:	8d 65 f8             	lea    -0x8(%ebp),%espf0100a921318,54143
f0100a95:	5b                   	pop    %ebxf0100a951319,54198
f0100a96:	5e                   	pop    %esif0100a961320,54242
f0100a97:	5d                   	pop    %ebpf0100a971321,54286
f0100a98:	c3                   	ret    f0100a981322,54330
f0100a99:	50                   	push   %eaxf0100a991324,54434
f0100a9a:	8d 81 a4 d1 fe ff    	lea    -0x12e5c(%ecx),%eaxf0100a9a1325,54478
f0100aa0:	50                   	push   %eaxf0100aa01326,54537
f0100aa1:	68 c7 02 00 00       	push   $0x2c7f0100aa11327,54581
f0100aa6:	8d 81 a8 d9 fe ff    	lea    -0x12658(%ecx),%eaxf0100aa61328,54627
f0100aac:	50                   	push   %eaxf0100aac1329,54686
f0100aad:	89 cb                	mov    %ecx,%ebxf0100aad1330,54730
f0100aaf:	e8 e5 f5 ff ff       	call   f0100099 <_panic>f0100aaf1331,54779
f0100ab4:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf0100ab41333,54849
f0100ab9:	eb d7                	jmp    f0100a92 <check_va2pa+0x54>f0100ab91334,54905
f0100abb <check_page_free_list>:f0100abb1336,54973
f0100abb:	55                   	push   %ebpf0100abb1338,55008
f0100abc:	89 e5                	mov    %esp,%ebpf0100abc1339,55052
f0100abe:	57                   	push   %edif0100abe1340,55101
f0100abf:	56                   	push   %esif0100abf1341,55145
f0100ac0:	53                   	push   %ebxf0100ac01342,55189
f0100ac1:	83 ec 3c             	sub    $0x3c,%espf0100ac11343,55233
f0100ac4:	e8 f6 24 00 00       	call   f0102fbf <__x86.get_pc_thunk.di>f0100ac41344,55283
f0100ac9:	81 c7 43 68 01 00    	add    $0x16843,%edif0100ac91345,55355
f0100acf:	89 7d c4             	mov    %edi,-0x3c(%ebp)f0100acf1346,55408
f0100ad2:	84 c0                	test   %al,%alf0100ad21348,55520
f0100ad4:	0f 85 dd 02 00 00    	jne    f0100db7 <check_page_free_list+0x2fc>f0100ad41349,55567
f0100ada:	8b 45 c4             	mov    -0x3c(%ebp),%eaxf0100ada1351,55666
f0100add:	83 b8 90 1f 00 00 00 	cmpl   $0x0,0x1f90(%eax)f0100add1352,55722
f0100ae4:	74 0c                	je     f0100af2 <check_page_free_list+0x37>f0100ae41353,55779
f0100ae6:	c7 45 d4 00 04 00 00 	movl   $0x400,-0x2c(%ebp)f0100ae61355,55911
f0100aed:	e9 2f 03 00 00       	jmp    f0100e21 <check_page_free_list+0x366>f0100aed1356,55969
f0100af2:	83 ec 04             	sub    $0x4,%espf0100af21358,56094
f0100af5:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100af51359,56143
f0100af8:	8d 83 c8 d1 fe ff    	lea    -0x12e38(%ebx),%eaxf0100af81360,56199
f0100afe:	50                   	push   %eaxf0100afe1361,56258
f0100aff:	68 08 02 00 00       	push   $0x208f0100aff1362,56302
f0100b04:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0100b041363,56348
f0100b0a:	50                   	push   %eaxf0100b0a1364,56407
f0100b0b:	e8 89 f5 ff ff       	call   f0100099 <_panic>f0100b0b1365,56451
f0100b10:	50                   	push   %eaxf0100b101366,56508
f0100b11:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100b111367,56552
f0100b14:	8d 83 a4 d1 fe ff    	lea    -0x12e5c(%ebx),%eaxf0100b141368,56608
f0100b1a:	50                   	push   %eaxf0100b1a1369,56667
f0100b1b:	6a 52                	push   $0x52f0100b1b1370,56711
f0100b1d:	8d 83 b4 d9 fe ff    	lea    -0x1264c(%ebx),%eaxf0100b1d1371,56756
f0100b23:	50                   	push   %eaxf0100b231372,56815
f0100b24:	e8 70 f5 ff ff       	call   f0100099 <_panic>f0100b241373,56859
f0100b29:	8b 36                	mov    (%esi),%esif0100b291375,56965
f0100b2b:	85 f6                	test   %esi,%esif0100b2b1376,57016
f0100b2d:	74 40                	je     f0100b6f <check_page_free_list+0xb4>f0100b2d1377,57065
void	tlb_invalidate(pde_t *pgdir, void *va);void1378,57141
static inline physaddr_tstatic1380,57187
f0100b2f:	89 f0                	mov    %esi,%eaxf0100b2f1384,57276
f0100b31:	2b 07                	sub    (%edi),%eaxf0100b311385,57325
f0100b33:	c1 f8 03             	sar    $0x3,%eaxf0100b331386,57376
f0100b36:	c1 e0 0c             	shl    $0xc,%eaxf0100b361387,57425
f0100b39:	89 c2                	mov    %eax,%edxf0100b391389,57510
f0100b3b:	c1 ea 16             	shr    $0x16,%edxf0100b3b1390,57559
f0100b3e:	3b 55 d4             	cmp    -0x2c(%ebp),%edxf0100b3e1391,57609
f0100b41:	73 e6                	jae    f0100b29 <check_page_free_list+0x6e>f0100b411392,57665
f0100b43:	89 c2                	mov    %eax,%edxf0100b431394,57767
f0100b45:	c1 ea 0c             	shr    $0xc,%edxf0100b451395,57816
f0100b48:	8b 4d d0             	mov    -0x30(%ebp),%ecxf0100b481396,57865
f0100b4b:	3b 11                	cmp    (%ecx),%edxf0100b4b1397,57921
f0100b4d:	73 c1                	jae    f0100b10 <check_page_free_list+0x55>f0100b4d1398,57972
f0100b4f:	83 ec 04             	sub    $0x4,%espf0100b4f1400,58084
f0100b52:	68 80 00 00 00       	push   $0x80f0100b521401,58133
f0100b57:	68 97 00 00 00       	push   $0x97f0100b571402,58178
f0100b5c:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0100b5c1404,58256
f0100b61:	50                   	push   %eaxf0100b611405,58312
f0100b62:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100b621406,58356
f0100b65:	e8 3c 30 00 00       	call   f0103ba6 <memset>f0100b651407,58412
f0100b6a:	83 c4 10             	add    $0x10,%espf0100b6a1408,58469
f0100b6d:	eb ba                	jmp    f0100b29 <check_page_free_list+0x6e>f0100b6d1409,58519
	first_free_page = (char *) boot_alloc(0);first_free_page1410,58595
f0100b6f:	b8 00 00 00 00       	mov    $0x0,%eaxf0100b6f1411,58638
f0100b74:	e8 40 fe ff ff       	call   f01009b9 <boot_alloc>f0100b741412,58687
f0100b79:	89 45 c8             	mov    %eax,-0x38(%ebp)f0100b791413,58748
f0100b7c:	8b 7d c4             	mov    -0x3c(%ebp),%edif0100b7c1415,58855
f0100b7f:	8b 97 90 1f 00 00    	mov    0x1f90(%edi),%edxf0100b7f1416,58911
f0100b85:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100b851418,58991
f0100b8b:	8b 08                	mov    (%eax),%ecxf0100b8b1419,59047
f0100b8d:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf0100b8d1421,59129
f0100b93:	8b 00                	mov    (%eax),%eaxf0100b931422,59185
f0100b95:	89 45 cc             	mov    %eax,-0x34(%ebp)f0100b951423,59236
f0100b98:	8d 1c c1             	lea    (%ecx,%eax,8),%ebxf0100b981424,59292
f0100b9b:	89 4d d4             	mov    %ecx,-0x2c(%ebp)f0100b9b1426,59411
f0100b9e:	bf 00 00 00 00       	mov    $0x0,%edif0100b9e1428,59509
f0100ba3:	89 75 d0             	mov    %esi,-0x30(%ebp)f0100ba31429,59558
f0100ba6:	e9 08 01 00 00       	jmp    f0100cb3 <check_page_free_list+0x1f8>f0100ba61431,59665
f0100bab:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100bab1433,59765
f0100bae:	8d 83 c2 d9 fe ff    	lea    -0x1263e(%ebx),%eaxf0100bae1434,59821
f0100bb4:	50                   	push   %eaxf0100bb41435,59880
f0100bb5:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0100bb51436,59924
f0100bbb:	50                   	push   %eaxf0100bbb1437,59983
f0100bbc:	68 22 02 00 00       	push   $0x222f0100bbc1438,60027
f0100bc1:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0100bc11439,60073
f0100bc7:	50                   	push   %eaxf0100bc71440,60132
f0100bc8:	e8 cc f4 ff ff       	call   f0100099 <_panic>f0100bc81441,60176
f0100bcd:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100bcd1443,60264
f0100bd0:	8d 83 e3 d9 fe ff    	lea    -0x1261d(%ebx),%eaxf0100bd01444,60320
f0100bd6:	50                   	push   %eaxf0100bd61445,60379
f0100bd7:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0100bd71446,60423
f0100bdd:	50                   	push   %eaxf0100bdd1447,60482
f0100bde:	68 23 02 00 00       	push   $0x223f0100bde1448,60526
f0100be3:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0100be31449,60572
f0100be9:	50                   	push   %eaxf0100be91450,60631
f0100bea:	e8 aa f4 ff ff       	call   f0100099 <_panic>f0100bea1451,60675
f0100bef:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100bef1453,60793
f0100bf2:	8d 83 ec d1 fe ff    	lea    -0x12e14(%ebx),%eaxf0100bf21454,60849
f0100bf8:	50                   	push   %eaxf0100bf81455,60908
f0100bf9:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0100bf91456,60952
f0100bff:	50                   	push   %eaxf0100bff1457,61011
f0100c00:	68 24 02 00 00       	push   $0x224f0100c001458,61055
f0100c05:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0100c051459,61101
f0100c0b:	50                   	push   %eaxf0100c0b1460,61160
f0100c0c:	e8 88 f4 ff ff       	call   f0100099 <_panic>f0100c0c1461,61204
f0100c11:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100c111463,61289
f0100c14:	8d 83 f7 d9 fe ff    	lea    -0x12609(%ebx),%eaxf0100c141464,61345
f0100c1a:	50                   	push   %eaxf0100c1a1465,61404
f0100c1b:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0100c1b1466,61448
f0100c21:	50                   	push   %eaxf0100c211467,61507
f0100c22:	68 27 02 00 00       	push   $0x227f0100c221468,61551
f0100c27:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0100c271469,61597
f0100c2d:	50                   	push   %eaxf0100c2d1470,61656
f0100c2e:	e8 66 f4 ff ff       	call   f0100099 <_panic>f0100c2e1471,61700
f0100c33:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100c331473,61793
f0100c36:	8d 83 08 da fe ff    	lea    -0x125f8(%ebx),%eaxf0100c361474,61849
f0100c3c:	50                   	push   %eaxf0100c3c1475,61908
f0100c3d:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0100c3d1476,61952
f0100c43:	50                   	push   %eaxf0100c431477,62011
f0100c44:	68 28 02 00 00       	push   $0x228f0100c441478,62055
f0100c49:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0100c491479,62101
f0100c4f:	50                   	push   %eaxf0100c4f1480,62160
f0100c50:	e8 44 f4 ff ff       	call   f0100099 <_panic>f0100c501481,62204
f0100c55:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100c551483,62307
f0100c58:	8d 83 20 d2 fe ff    	lea    -0x12de0(%ebx),%eaxf0100c581484,62363
f0100c5e:	50                   	push   %eaxf0100c5e1485,62422
f0100c5f:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0100c5f1486,62466
f0100c65:	50                   	push   %eaxf0100c651487,62525
f0100c66:	68 29 02 00 00       	push   $0x229f0100c661488,62569
f0100c6b:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0100c6b1489,62615
f0100c71:	50                   	push   %eaxf0100c711490,62674
f0100c72:	e8 22 f4 ff ff       	call   f0100099 <_panic>f0100c721491,62718
f0100c77:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100c771493,62812
f0100c7a:	8d 83 21 da fe ff    	lea    -0x125df(%ebx),%eaxf0100c7a1494,62868
f0100c80:	50                   	push   %eaxf0100c801495,62927
f0100c81:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0100c811496,62971
f0100c87:	50                   	push   %eaxf0100c871497,63030
f0100c88:	68 2a 02 00 00       	push   $0x22af0100c881498,63074
f0100c8d:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0100c8d1499,63120
f0100c93:	50                   	push   %eaxf0100c931500,63179
f0100c94:	e8 00 f4 ff ff       	call   f0100099 <_panic>f0100c941501,63223
f0100c99:	89 c6                	mov    %eax,%esif0100c991503,63306
f0100c9b:	c1 ee 0c             	shr    $0xc,%esif0100c9b1504,63355
f0100c9e:	39 75 cc             	cmp    %esi,-0x34(%ebp)f0100c9e1505,63404
f0100ca1:	76 70                	jbe    f0100d13 <check_page_free_list+0x258>f0100ca11506,63460
f0100ca3:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0100ca31508,63570
f0100ca8:	39 45 c8             	cmp    %eax,-0x38(%ebp)f0100ca81510,63706
f0100cab:	77 7f                	ja     f0100d2c <check_page_free_list+0x271>f0100cab1511,63762
f0100cad:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)f0100cad1513,63858
f0100cb1:	8b 12                	mov    (%edx),%edxf0100cb11515,63965
f0100cb3:	85 d2                	test   %edx,%edxf0100cb31516,64016
f0100cb5:	0f 84 93 00 00 00    	je     f0100d4e <check_page_free_list+0x293>f0100cb51517,64065
f0100cbb:	39 d1                	cmp    %edx,%ecxf0100cbb1519,64165
f0100cbd:	0f 87 e8 fe ff ff    	ja     f0100bab <check_page_free_list+0xf0>f0100cbd1520,64214
f0100cc3:	39 d3                	cmp    %edx,%ebxf0100cc31522,64321
f0100cc5:	0f 86 02 ff ff ff    	jbe    f0100bcd <check_page_free_list+0x112>f0100cc51523,64370
f0100ccb:	89 d0                	mov    %edx,%eaxf0100ccb1525,64508
f0100ccd:	2b 45 d4             	sub    -0x2c(%ebp),%eaxf0100ccd1526,64557
f0100cd0:	a8 07                	test   $0x7,%alf0100cd01527,64613
f0100cd2:	0f 85 17 ff ff ff    	jne    f0100bef <check_page_free_list+0x134>f0100cd21528,64661
f0100cd8:	c1 f8 03             	sar    $0x3,%eaxf0100cd81530,64771
f0100cdb:	c1 e0 0c             	shl    $0xc,%eaxf0100cdb1531,64820
f0100cde:	85 c0                	test   %eax,%eaxf0100cde1533,64897
f0100ce0:	0f 84 2b ff ff ff    	je     f0100c11 <check_page_free_list+0x156>f0100ce01534,64946
f0100ce6:	3d 00 00 0a 00       	cmp    $0xa0000,%eaxf0100ce61536,65059
f0100ceb:	0f 84 42 ff ff ff    	je     f0100c33 <check_page_free_list+0x178>f0100ceb1537,65112
f0100cf1:	3d 00 f0 0f 00       	cmp    $0xff000,%eaxf0100cf11539,65235
f0100cf6:	0f 84 59 ff ff ff    	je     f0100c55 <check_page_free_list+0x19a>f0100cf61540,65288
f0100cfc:	3d 00 00 10 00       	cmp    $0x100000,%eaxf0100cfc1542,65402
f0100d01:	0f 84 70 ff ff ff    	je     f0100c77 <check_page_free_list+0x1bc>f0100d011543,65456
f0100d07:	3d ff ff 0f 00       	cmp    $0xfffff,%eaxf0100d071545,65613
f0100d0c:	77 8b                	ja     f0100c99 <check_page_free_list+0x1de>f0100d0c1546,65666
f0100d0e:	83 c7 01             	add    $0x1,%edif0100d0e1548,65763
f0100d11:	eb 9e                	jmp    f0100cb1 <check_page_free_list+0x1f6>f0100d111549,65812
f0100d13:	50                   	push   %eaxf0100d131551,65953
f0100d14:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d141552,65997
f0100d17:	8d 83 a4 d1 fe ff    	lea    -0x12e5c(%ebx),%eaxf0100d171553,66053
f0100d1d:	50                   	push   %eaxf0100d1d1554,66112
f0100d1e:	6a 52                	push   $0x52f0100d1e1555,66156
f0100d20:	8d 83 b4 d9 fe ff    	lea    -0x1264c(%ebx),%eaxf0100d201556,66201
f0100d26:	50                   	push   %eaxf0100d261557,66260
f0100d27:	e8 6d f3 ff ff       	call   f0100099 <_panic>f0100d271558,66304
f0100d2c:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d2c1560,66441
f0100d2f:	8d 83 44 d2 fe ff    	lea    -0x12dbc(%ebx),%eaxf0100d2f1561,66497
f0100d35:	50                   	push   %eaxf0100d351562,66556
f0100d36:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0100d361563,66600
f0100d3c:	50                   	push   %eaxf0100d3c1564,66659
f0100d3d:	68 2b 02 00 00       	push   $0x22bf0100d3d1565,66703
f0100d42:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0100d421566,66749
f0100d48:	50                   	push   %eaxf0100d481567,66808
f0100d49:	e8 4b f3 ff ff       	call   f0100099 <_panic>f0100d491568,66852
f0100d4e:	8b 75 d0             	mov    -0x30(%ebp),%esif0100d4e1569,66909
f0100d51:	85 ff                	test   %edi,%edif0100d511571,66993
f0100d53:	7e 1e                	jle    f0100d73 <check_page_free_list+0x2b8>f0100d531572,67042
f0100d55:	85 f6                	test   %esi,%esif0100d551574,67146
f0100d57:	7e 3c                	jle    f0100d95 <check_page_free_list+0x2da>f0100d571575,67195
f0100d59:	83 ec 0c             	sub    $0xc,%espf0100d591577,67321
f0100d5c:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d5c1578,67370
f0100d5f:	8d 83 8c d2 fe ff    	lea    -0x12d74(%ebx),%eaxf0100d5f1579,67426
f0100d65:	50                   	push   %eaxf0100d651580,67485
f0100d66:	e8 df 22 00 00       	call   f010304a <cprintf>f0100d661581,67529
f0100d6b:	8d 65 f4             	lea    -0xc(%ebp),%espf0100d6b1583,67589
f0100d6e:	5b                   	pop    %ebxf0100d6e1584,67644
f0100d6f:	5e                   	pop    %esif0100d6f1585,67688
f0100d70:	5f                   	pop    %edif0100d701586,67732
f0100d71:	5d                   	pop    %ebpf0100d711587,67776
f0100d72:	c3                   	ret    f0100d721588,67820
f0100d73:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d731590,67888
f0100d76:	8d 83 3b da fe ff    	lea    -0x125c5(%ebx),%eaxf0100d761591,67944
f0100d7c:	50                   	push   %eaxf0100d7c1592,68003
f0100d7d:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0100d7d1593,68047
f0100d83:	50                   	push   %eaxf0100d831594,68106
f0100d84:	68 33 02 00 00       	push   $0x233f0100d841595,68150
f0100d89:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0100d891596,68196
f0100d8f:	50                   	push   %eaxf0100d8f1597,68255
f0100d90:	e8 04 f3 ff ff       	call   f0100099 <_panic>f0100d901598,68299
f0100d95:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d951600,68383
f0100d98:	8d 83 4d da fe ff    	lea    -0x125b3(%ebx),%eaxf0100d981601,68439
f0100d9e:	50                   	push   %eaxf0100d9e1602,68498
f0100d9f:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0100d9f1603,68542
f0100da5:	50                   	push   %eaxf0100da51604,68601
f0100da6:	68 34 02 00 00       	push   $0x234f0100da61605,68645
f0100dab:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0100dab1606,68691
f0100db1:	50                   	push   %eaxf0100db11607,68750
f0100db2:	e8 e2 f2 ff ff       	call   f0100099 <_panic>f0100db21608,68794
f0100db7:	8b 45 c4             	mov    -0x3c(%ebp),%eaxf0100db71610,68873
f0100dba:	8b 80 90 1f 00 00    	mov    0x1f90(%eax),%eaxf0100dba1611,68929
f0100dc0:	85 c0                	test   %eax,%eaxf0100dc01612,68986
f0100dc2:	0f 84 2a fd ff ff    	je     f0100af2 <check_page_free_list+0x37>f0100dc21613,69035
f0100dc8:	8d 55 d8             	lea    -0x28(%ebp),%edxf0100dc81615,69155
f0100dcb:	89 55 e0             	mov    %edx,-0x20(%ebp)f0100dcb1616,69211
f0100dce:	8d 55 dc             	lea    -0x24(%ebp),%edxf0100dce1617,69267
f0100dd1:	89 55 e4             	mov    %edx,-0x1c(%ebp)f0100dd11618,69323
f0100dd4:	8b 7d c4             	mov    -0x3c(%ebp),%edif0100dd41620,69412
f0100dd7:	c7 c3 d0 96 11 f0    	mov    $0xf01196d0,%ebxf0100dd71621,69468
f0100ddd:	89 c2                	mov    %eax,%edxf0100ddd1622,69524
f0100ddf:	2b 13                	sub    (%ebx),%edxf0100ddf1623,69573
f0100de1:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edxf0100de11625,69673
f0100de7:	0f 95 c2             	setne  %dlf0100de71626,69727
f0100dea:	0f b6 d2             	movzbl %dl,%edxf0100dea1627,69770
f0100ded:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecxf0100ded1629,69841
f0100df1:	89 01                	mov    %eax,(%ecx)f0100df11630,69904
f0100df3:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)f0100df31632,69987
f0100df7:	8b 00                	mov    (%eax),%eaxf0100df71634,70102
f0100df9:	85 c0                	test   %eax,%eaxf0100df91635,70153
f0100dfb:	75 e0                	jne    f0100ddd <check_page_free_list+0x322>f0100dfb1636,70202
f0100dfd:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf0100dfd1638,70293
f0100e00:	c7 00 00 00 00 00    	movl   $0x0,(%eax)f0100e001639,70349
f0100e06:	8b 55 dc             	mov    -0x24(%ebp),%edxf0100e061641,70416
f0100e09:	8b 45 e0             	mov    -0x20(%ebp),%eaxf0100e091642,70472
f0100e0c:	89 10                	mov    %edx,(%eax)f0100e0c1643,70528
		page_free_list = pp1;page_free_list1644,70579
f0100e0e:	8b 45 d8             	mov    -0x28(%ebp),%eaxf0100e0e1645,70603
f0100e11:	8b 7d c4             	mov    -0x3c(%ebp),%edif0100e111646,70659
f0100e14:	89 87 90 1f 00 00    	mov    %eax,0x1f90(%edi)f0100e141647,70715
f0100e1a:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)f0100e1a1649,70828
f0100e21:	8b 45 c4             	mov    -0x3c(%ebp),%eaxf0100e211651,70933
f0100e24:	8b b0 90 1f 00 00    	mov    0x1f90(%eax),%esif0100e241652,70989
f0100e2a:	c7 c7 d0 96 11 f0    	mov    $0xf01196d0,%edif0100e2a1653,71046
f0100e30:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf0100e301655,71128
f0100e36:	89 45 d0             	mov    %eax,-0x30(%ebp)f0100e361656,71184
f0100e39:	e9 ed fc ff ff       	jmp    f0100b2b <check_page_free_list+0x70>f0100e391657,71240
f0100e3e <page_init>:f0100e3e1659,71317
f0100e3e:	55                   	push   %ebpf0100e3e1661,71341
f0100e3f:	89 e5                	mov    %esp,%ebpf0100e3f1662,71385
f0100e41:	57                   	push   %edif0100e411663,71434
f0100e42:	56                   	push   %esif0100e421664,71478
f0100e43:	53                   	push   %ebxf0100e431665,71522
f0100e44:	83 ec 1c             	sub    $0x1c,%espf0100e441666,71566
f0100e47:	e8 6f 21 00 00       	call   f0102fbb <__x86.get_pc_thunk.si>f0100e471667,71616
f0100e4c:	81 c6 c0 64 01 00    	add    $0x164c0,%esif0100e4c1668,71688
f0100e52:	bb 00 00 00 00       	mov    $0x0,%ebxf0100e521670,71773
f0100e57:	c7 c7 c8 96 11 f0    	mov    $0xf01196c8,%edif0100e571671,71822
f0100e5d:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100e5d1673,71902
f0100e63:	89 45 e0             	mov    %eax,-0x20(%ebp)f0100e631674,71958
f0100e66:	eb 38                	jmp    f0100ea0 <page_init+0x62>f0100e661676,72046
f0100e68:	39 9e 94 1f 00 00    	cmp    %ebx,0x1f94(%esi)f0100e681678,72146
f0100e6e:	76 52                	jbe    f0100ec2 <page_init+0x84>f0100e6e1679,72203
f0100e70:	8d 0c dd 00 00 00 00 	lea    0x0(,%ebx,8),%ecxf0100e701680,72268
f0100e77:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100e771682,72349
f0100e7d:	89 ca                	mov    %ecx,%edxf0100e7d1683,72405
f0100e7f:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0100e7f1684,72454
f0100e82:	03 10                	add    (%eax),%edxf0100e821685,72510
f0100e84:	66 c7 42 04 00 00    	movw   $0x0,0x4(%edx)f0100e841686,72561
f0100e8a:	8b 86 90 1f 00 00    	mov    0x1f90(%esi),%eaxf0100e8a1688,72653
f0100e90:	89 02                	mov    %eax,(%edx)f0100e901689,72710
			page_free_list = &pages[i];page_free_list1690,72761
f0100e92:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf0100e921691,72792
f0100e95:	03 08                	add    (%eax),%ecxf0100e951692,72848
f0100e97:	89 8e 90 1f 00 00    	mov    %ecx,0x1f90(%esi)f0100e971693,72899
f0100e9d:	83 c3 01             	add    $0x1,%ebxf0100e9d1695,72988
f0100ea0:	39 1f                	cmp    %ebx,(%edi)f0100ea01696,73037
f0100ea2:	0f 86 80 00 00 00    	jbe    f0100f28 <page_init+0xea>f0100ea21697,73088
f0100ea8:	85 db                	test   %ebx,%ebxf0100ea81699,73169
f0100eaa:	75 bc                	jne    f0100e68 <page_init+0x2a>f0100eaa1700,73218
f0100eac:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100eac1702,73307
f0100eb2:	8b 00                	mov    (%eax),%eaxf0100eb21703,73363
f0100eb4:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)f0100eb41704,73414
f0100eba:	c7 00 00 00 00 00    	movl   $0x0,(%eax)f0100eba1706,73496
f0100ec0:	eb db                	jmp    f0100e9d <page_init+0x5f>f0100ec01707,73547
f0100ec2:	81 fb ff 00 00 00    	cmp    $0xff,%ebxf0100ec21709,73702
f0100ec8:	77 16                	ja     f0100ee0 <page_init+0xa2>f0100ec81710,73752
f0100eca:	8b 45 e0             	mov    -0x20(%ebp),%eaxf0100eca1712,73841
f0100ecd:	8b 00                	mov    (%eax),%eaxf0100ecd1713,73897
f0100ecf:	8d 04 d8             	lea    (%eax,%ebx,8),%eaxf0100ecf1714,73948
f0100ed2:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)f0100ed21715,74006
f0100ed8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)f0100ed81717,74088
f0100ede:	eb bd                	jmp    f0100e9d <page_init+0x5f>f0100ede1718,74139
f0100ee0:	b8 00 00 00 00       	mov    $0x0,%eaxf0100ee01720,74294
f0100ee5:	e8 cf fa ff ff       	call   f01009b9 <boot_alloc>f0100ee51721,74343
f0100eea:	05 00 00 00 10       	add    $0x10000000,%eaxf0100eea1722,74404
f0100eef:	c1 e8 0c             	shr    $0xc,%eaxf0100eef1723,74460
f0100ef2:	39 d8                	cmp    %ebx,%eaxf0100ef21724,74509
f0100ef4:	77 d4                	ja     f0100eca <page_init+0x8c>f0100ef41725,74558
f0100ef6:	8d 0c dd 00 00 00 00 	lea    0x0(,%ebx,8),%ecxf0100ef61726,74623
f0100efd:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100efd1728,74704
f0100f03:	89 ca                	mov    %ecx,%edxf0100f031729,74760
f0100f05:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0100f051730,74809
f0100f08:	03 10                	add    (%eax),%edxf0100f081731,74865
f0100f0a:	66 c7 42 04 00 00    	movw   $0x0,0x4(%edx)f0100f0a1732,74916
f0100f10:	8b 86 90 1f 00 00    	mov    0x1f90(%esi),%eaxf0100f101734,75008
f0100f16:	89 02                	mov    %eax,(%edx)f0100f161735,75065
			page_free_list = &pages[i];page_free_list1736,75116
f0100f18:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf0100f181737,75147
f0100f1b:	03 08                	add    (%eax),%ecxf0100f1b1738,75203
f0100f1d:	89 8e 90 1f 00 00    	mov    %ecx,0x1f90(%esi)f0100f1d1739,75254
f0100f23:	e9 75 ff ff ff       	jmp    f0100e9d <page_init+0x5f>f0100f231740,75311
f0100f28:	83 c4 1c             	add    $0x1c,%espf0100f281742,75378
f0100f2b:	5b                   	pop    %ebxf0100f2b1743,75428
f0100f2c:	5e                   	pop    %esif0100f2c1744,75472
f0100f2d:	5f                   	pop    %edif0100f2d1745,75516
f0100f2e:	5d                   	pop    %ebpf0100f2e1746,75560
f0100f2f:	c3                   	ret    f0100f2f1747,75604
f0100f30 <page_alloc>:f0100f301749,75645
f0100f30:	55                   	push   %ebpf0100f301751,75670
f0100f31:	89 e5                	mov    %esp,%ebpf0100f311752,75714
f0100f33:	56                   	push   %esif0100f331753,75763
f0100f34:	53                   	push   %ebxf0100f341754,75807
f0100f35:	e8 15 f2 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0100f351755,75851
f0100f3a:	81 c3 d2 63 01 00    	add    $0x163d2,%ebxf0100f3a1756,75923
f0100f40:	8b b3 90 1f 00 00    	mov    0x1f90(%ebx),%esif0100f401758,76011
f0100f46:	85 f6                	test   %esi,%esif0100f461759,76068
f0100f48:	74 1a                	je     f0100f64 <page_alloc+0x34>f0100f481760,76117
	page_free_list = result->pp_link;page_free_list1761,76183
f0100f4a:	8b 06                	mov    (%esi),%eaxf0100f4a1762,76218
f0100f4c:	89 83 90 1f 00 00    	mov    %eax,0x1f90(%ebx)f0100f4c1763,76269
f0100f52:	c7 06 00 00 00 00    	movl   $0x0,(%esi)f0100f521765,76351
f0100f58:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)f0100f581767,76423
f0100f5e:	f6 45 08 01          	testb  $0x1,0x8(%ebp)f0100f5e1769,76508
f0100f62:	75 09                	jne    f0100f6d <page_alloc+0x3d>f0100f621770,76562
f0100f64:	89 f0                	mov    %esi,%eaxf0100f641772,76630
f0100f66:	8d 65 f8             	lea    -0x8(%ebp),%espf0100f661773,76679
f0100f69:	5b                   	pop    %ebxf0100f691774,76734
f0100f6a:	5e                   	pop    %esif0100f6a1775,76778
f0100f6b:	5d                   	pop    %ebpf0100f6b1776,76822
f0100f6c:	c3                   	ret    f0100f6c1777,76866
f0100f6d:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100f6d1779,76939
f0100f73:	89 f2                	mov    %esi,%edxf0100f731780,76995
f0100f75:	2b 10                	sub    (%eax),%edxf0100f751781,77044
f0100f77:	89 d0                	mov    %edx,%eaxf0100f771782,77095
f0100f79:	c1 f8 03             	sar    $0x3,%eaxf0100f791783,77144
f0100f7c:	c1 e0 0c             	shl    $0xc,%eaxf0100f7c1784,77193
f0100f7f:	89 c1                	mov    %eax,%ecxf0100f7f1786,77268
f0100f81:	c1 e9 0c             	shr    $0xc,%ecxf0100f811787,77317
f0100f84:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf0100f841788,77366
f0100f8a:	3b 0a                	cmp    (%edx),%ecxf0100f8a1789,77422
f0100f8c:	73 1a                	jae    f0100fa8 <page_alloc+0x78>f0100f8c1790,77473
f0100f8e:	83 ec 04             	sub    $0x4,%espf0100f8e1792,77578
f0100f91:	68 00 10 00 00       	push   $0x1000f0100f911793,77627
f0100f96:	6a 00                	push   $0x0f0100f961794,77674
f0100f98:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0100f981796,77751
f0100f9d:	50                   	push   %eaxf0100f9d1797,77807
f0100f9e:	e8 03 2c 00 00       	call   f0103ba6 <memset>f0100f9e1798,77851
f0100fa3:	83 c4 10             	add    $0x10,%espf0100fa31799,77908
f0100fa6:	eb bc                	jmp    f0100f64 <page_alloc+0x34>f0100fa61800,77958
f0100fa8:	50                   	push   %eaxf0100fa81802,78088
f0100fa9:	8d 83 a4 d1 fe ff    	lea    -0x12e5c(%ebx),%eaxf0100fa91803,78132
f0100faf:	50                   	push   %eaxf0100faf1804,78191
f0100fb0:	6a 52                	push   $0x52f0100fb01805,78235
f0100fb2:	8d 83 b4 d9 fe ff    	lea    -0x1264c(%ebx),%eaxf0100fb21806,78280
f0100fb8:	50                   	push   %eaxf0100fb81807,78339
f0100fb9:	e8 db f0 ff ff       	call   f0100099 <_panic>f0100fb91808,78383
f0100fbe <page_free>:f0100fbe1810,78441
f0100fbe:	55                   	push   %ebpf0100fbe1812,78465
f0100fbf:	89 e5                	mov    %esp,%ebpf0100fbf1813,78509
f0100fc1:	53                   	push   %ebxf0100fc11814,78558
f0100fc2:	83 ec 04             	sub    $0x4,%espf0100fc21815,78602
f0100fc5:	e8 85 f1 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0100fc51816,78651
f0100fca:	81 c3 42 63 01 00    	add    $0x16342,%ebxf0100fca1817,78723
f0100fd0:	8b 45 08             	mov    0x8(%ebp),%eaxf0100fd01818,78776
f0100fd3:	0f b7 48 04          	movzwl 0x4(%eax),%ecxf0100fd31820,78846
f0100fd7:	66 85 c9             	test   %cx,%cxf0100fd71821,78900
f0100fda:	75 19                	jne    f0100ff5 <page_free+0x37>f0100fda1822,78947
f0100fdc:	8b 08                	mov    (%eax),%ecxf0100fdc1824,79029
f0100fde:	85 c9                	test   %ecx,%ecxf0100fde1825,79080
f0100fe0:	75 2f                	jne    f0101011 <page_free+0x53>f0100fe01826,79129
f0100fe2:	8b 8b 90 1f 00 00    	mov    0x1f90(%ebx),%ecxf0100fe21828,79225
f0100fe8:	89 08                	mov    %ecx,(%eax)f0100fe81829,79282
	page_free_list = pp;page_free_list1830,79333
f0100fea:	89 83 90 1f 00 00    	mov    %eax,0x1f90(%ebx)f0100fea1831,79355
f0100ff0:	8b 5d fc             	mov    -0x4(%ebp),%ebxf0100ff01833,79414
f0100ff3:	c9                   	leave  f0100ff31834,79469
f0100ff4:	c3                   	ret    f0100ff41835,79509
f0100ff5:	0f b7 c9             	movzwl %cx,%ecxf0100ff51837,79616
f0100ff8:	51                   	push   %ecxf0100ff81838,79664
f0100ff9:	8d 83 b0 d2 fe ff    	lea    -0x12d50(%ebx),%eaxf0100ff91839,79708
f0100fff:	50                   	push   %eaxf0100fff1840,79767
f0101000:	68 43 01 00 00       	push   $0x143f01010001841,79811
f0101005:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01010051842,79857
f010100b:	50                   	push   %eaxf010100b1843,79916
f010100c:	e8 88 f0 ff ff       	call   f0100099 <_panic>f010100c1844,79960
f0101011:	51                   	push   %ecxf01010111846,80081
f0101012:	8d 83 dc d2 fe ff    	lea    -0x12d24(%ebx),%eaxf01010121847,80125
f0101018:	50                   	push   %eaxf01010181848,80184
f0101019:	68 45 01 00 00       	push   $0x145f01010191849,80228
f010101e:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010101e1850,80274
f0101024:	50                   	push   %eaxf01010241851,80333
f0101025:	e8 6f f0 ff ff       	call   f0100099 <_panic>f01010251852,80377
f010102a <page_decref>:f010102a1854,80435
f010102a:	55                   	push   %ebpf010102a1856,80461
f010102b:	89 e5                	mov    %esp,%ebpf010102b1857,80505
f010102d:	83 ec 08             	sub    $0x8,%espf010102d1858,80554
f0101030:	8b 55 08             	mov    0x8(%ebp),%edxf01010301859,80603
f0101033:	0f b7 42 04          	movzwl 0x4(%edx),%eaxf01010331861,80681
f0101037:	83 e8 01             	sub    $0x1,%eaxf01010371862,80735
f010103a:	66 89 42 04          	mov    %ax,0x4(%edx)f010103a1863,80784
f010103e:	66 85 c0             	test   %ax,%axf010103e1864,80837
f0101041:	74 02                	je     f0101045 <page_decref+0x1b>f01010411865,80884
f0101043:	c9                   	leave  f01010431867,80953
f0101044:	c3                   	ret    f01010441868,80993
f0101045:	83 ec 0c             	sub    $0xc,%espf01010451870,81050
f0101048:	52                   	push   %edxf01010481871,81099
f0101049:	e8 70 ff ff ff       	call   f0100fbe <page_free>f01010491872,81143
f010104e:	83 c4 10             	add    $0x10,%espf010104e1873,81203
f0101051:	eb f0                	jmp    f0101043 <page_decref+0x19>f01010511875,81255
f0101053 <pgdir_walk>:f01010531877,81323
f0101053:	55                   	push   %ebpf01010531879,81348
f0101054:	89 e5                	mov    %esp,%ebpf01010541880,81392
f0101056:	57                   	push   %edif01010561881,81441
f0101057:	56                   	push   %esif01010571882,81485
f0101058:	53                   	push   %ebxf01010581883,81529
f0101059:	83 ec 0c             	sub    $0xc,%espf01010591884,81573
f010105c:	e8 ee f0 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f010105c1885,81622
f0101061:	81 c3 ab 62 01 00    	add    $0x162ab,%ebxf01010611886,81694
f0101067:	8b 7d 0c             	mov    0xc(%ebp),%edif01010671887,81747
	pde = pgdir+PDX(va);pde1888,81801
f010106a:	89 fe                	mov    %edi,%esif010106a1889,81823
f010106c:	c1 ee 16             	shr    $0x16,%esif010106c1890,81872
f010106f:	c1 e6 02             	shl    $0x2,%esif010106f1891,81922
f0101072:	03 75 08             	add    0x8(%ebp),%esif01010721892,81971
f0101075:	f6 06 01             	testb  $0x1,(%esi)f01010751894,82048
f0101078:	75 30                	jne    f01010aa <pgdir_walk+0x57>f01010781895,82099
f010107a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)f010107a1897,82192
f010107e:	74 71                	je     f01010f1 <pgdir_walk+0x9e>f010107e1898,82247
		pp = page_alloc(ALLOC_ZERO);pp1899,82313
f0101080:	83 ec 0c             	sub    $0xc,%espf01010801900,82344
f0101083:	6a 01                	push   $0x1f01010831901,82393
f0101085:	e8 a6 fe ff ff       	call   f0100f30 <page_alloc>f01010851902,82437
f010108a:	83 c4 10             	add    $0x10,%espf010108a1904,82521
f010108d:	85 c0                	test   %eax,%eaxf010108d1905,82571
f010108f:	74 67                	je     f01010f8 <pgdir_walk+0xa5>f010108f1906,82620
f0101091:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)f01010911908,82704
f0101097:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf01010971910,82791
f010109d:	2b 02                	sub    (%edx),%eaxf010109d1911,82847
f010109f:	c1 f8 03             	sar    $0x3,%eaxf010109f1912,82898
f01010a2:	c1 e0 0c             	shl    $0xc,%eaxf01010a21913,82947
f01010a5:	83 c8 07             	or     $0x7,%eaxf01010a51915,83042
f01010a8:	89 06                	mov    %eax,(%esi)f01010a81916,83091
f01010aa:	8b 06                	mov    (%esi),%eaxf01010aa1918,83195
f01010ac:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf01010ac1919,83246
f01010b1:	89 c1                	mov    %eax,%ecxf01010b11921,83328
f01010b3:	c1 e9 0c             	shr    $0xc,%ecxf01010b31922,83377
f01010b6:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf01010b61923,83426
f01010bc:	3b 0a                	cmp    (%edx),%ecxf01010bc1924,83482
f01010be:	73 18                	jae    f01010d8 <pgdir_walk+0x85>f01010be1925,83533
f01010c0:	c1 ef 0a             	shr    $0xa,%edif01010c01926,83599
f01010c3:	81 e7 fc 0f 00 00    	and    $0xffc,%edif01010c31927,83648
f01010c9:	8d 84 38 00 00 00 f0 	lea    -0x10000000(%eax,%edi,1),%eaxf01010c91928,83699
f01010d0:	8d 65 f4             	lea    -0xc(%ebp),%espf01010d01930,83770
f01010d3:	5b                   	pop    %ebxf01010d31931,83825
f01010d4:	5e                   	pop    %esif01010d41932,83869
f01010d5:	5f                   	pop    %edif01010d51933,83913
f01010d6:	5d                   	pop    %ebpf01010d61934,83957
f01010d7:	c3                   	ret    f01010d71935,84001
f01010d8:	50                   	push   %eaxf01010d81937,84105
f01010d9:	8d 83 a4 d1 fe ff    	lea    -0x12e5c(%ebx),%eaxf01010d91938,84149
f01010df:	50                   	push   %eaxf01010df1939,84208
f01010e0:	68 7e 01 00 00       	push   $0x17ef01010e01940,84252
f01010e5:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01010e51941,84298
f01010eb:	50                   	push   %eaxf01010eb1942,84357
f01010ec:	e8 a8 ef ff ff       	call   f0100099 <_panic>f01010ec1943,84401
f01010f1:	b8 00 00 00 00       	mov    $0x0,%eaxf01010f11945,84485
f01010f6:	eb d8                	jmp    f01010d0 <pgdir_walk+0x7d>f01010f61946,84534
f01010f8:	b8 00 00 00 00       	mov    $0x0,%eaxf01010f81948,84623
f01010fd:	eb d1                	jmp    f01010d0 <pgdir_walk+0x7d>f01010fd1949,84672
f01010ff <boot_map_region>:f01010ff1951,84739
f01010ff:	55                   	push   %ebpf01010ff1953,84769
f0101100:	89 e5                	mov    %esp,%ebpf01011001954,84813
f0101102:	57                   	push   %edif01011021955,84862
f0101103:	56                   	push   %esif01011031956,84906
f0101104:	53                   	push   %ebxf01011041957,84950
f0101105:	83 ec 2c             	sub    $0x2c,%espf01011051958,84994
f0101108:	e8 ae 1e 00 00       	call   f0102fbb <__x86.get_pc_thunk.si>f01011081959,85044
f010110d:	81 c6 ff 61 01 00    	add    $0x161ff,%esif010110d1960,85116
f0101113:	89 75 d0             	mov    %esi,-0x30(%ebp)f01011131961,85169
f0101116:	89 45 d8             	mov    %eax,-0x28(%ebp)f01011161962,85225
f0101119:	c1 e9 0c             	shr    $0xc,%ecxf01011191964,85321
f010111c:	89 4d e4             	mov    %ecx,-0x1c(%ebp)f010111c1965,85370
f010111f:	89 d6                	mov    %edx,%esif010111f1966,85426
f0101121:	bb 00 00 00 00       	mov    $0x0,%ebxf01011211967,85475
f0101126:	8b 45 08             	mov    0x8(%ebp),%eaxf01011261968,85524
f0101129:	29 d0                	sub    %edx,%eaxf01011291969,85578
f010112b:	89 45 e0             	mov    %eax,-0x20(%ebp)f010112b1970,85627
f010112e:	8b 45 0c             	mov    0xc(%ebp),%eaxf010112e1972,85713
f0101131:	83 c8 01             	or     $0x1,%eaxf01011311973,85767
f0101134:	89 45 d4             	mov    %eax,-0x2c(%ebp)f01011341974,85816
f0101137:	8b 45 e0             	mov    -0x20(%ebp),%eaxf01011371975,85872
f010113a:	8d 3c 30             	lea    (%eax,%esi,1),%edif010113a1976,85928
f010113d:	89 5d dc             	mov    %ebx,-0x24(%ebp)f010113d1978,86026
f0101140:	3b 5d e4             	cmp    -0x1c(%ebp),%ebxf01011401979,86082
f0101143:	74 44                	je     f0101189 <boot_map_region+0x8a>f01011431980,86138
		pte = pgdir_walk(pgdir, (void *) va, 1);pte1981,86209
f0101145:	83 ec 04             	sub    $0x4,%espf01011451982,86252
f0101148:	6a 01                	push   $0x1f01011481983,86301
f010114a:	56                   	push   %esif010114a1984,86345
f010114b:	ff 75 d8             	pushl  -0x28(%ebp)f010114b1985,86389
f010114e:	e8 00 ff ff ff       	call   f0101053 <pgdir_walk>f010114e1986,86440
f0101153:	83 c4 10             	add    $0x10,%espf01011531988,86520
f0101156:	85 c0                	test   %eax,%eaxf01011561989,86570
f0101158:	74 10                	je     f010116a <boot_map_region+0x6b>f01011581990,86619
f010115a:	0b 7d d4             	or     -0x2c(%ebp),%edif010115a1992,86720
f010115d:	89 38                	mov    %edi,(%eax)f010115d1993,86776
f010115f:	81 c6 00 10 00 00    	add    $0x1000,%esif010115f1995,86841
f0101165:	83 c3 01             	add    $0x1,%ebxf01011651997,86933
f0101168:	eb cd                	jmp    f0101137 <boot_map_region+0x38>f01011681998,86982
f010116a:	03 75 dc             	add    -0x24(%ebp),%esif010116a2000,87131
f010116d:	56                   	push   %esif010116d2001,87187
f010116e:	8b 5d d0             	mov    -0x30(%ebp),%ebxf010116e2002,87231
f0101171:	8d 83 04 d3 fe ff    	lea    -0x12cfc(%ebx),%eaxf01011712003,87287
f0101177:	50                   	push   %eaxf01011772004,87346
f0101178:	68 93 01 00 00       	push   $0x193f01011782005,87390
f010117d:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010117d2006,87436
f0101183:	50                   	push   %eaxf01011832007,87495
f0101184:	e8 10 ef ff ff       	call   f0100099 <_panic>f01011842008,87539
f0101189:	8d 65 f4             	lea    -0xc(%ebp),%espf01011892010,87598
f010118c:	5b                   	pop    %ebxf010118c2011,87653
f010118d:	5e                   	pop    %esif010118d2012,87697
f010118e:	5f                   	pop    %edif010118e2013,87741
f010118f:	5d                   	pop    %ebpf010118f2014,87785
f0101190:	c3                   	ret    f01011902015,87829
f0101191 <page_lookup>:f01011912017,87870
f0101191:	55                   	push   %ebpf01011912019,87896
f0101192:	89 e5                	mov    %esp,%ebpf01011922020,87940
f0101194:	56                   	push   %esif01011942021,87989
f0101195:	53                   	push   %ebxf01011952022,88033
f0101196:	e8 b4 ef ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01011962023,88077
f010119b:	81 c3 71 61 01 00    	add    $0x16171,%ebxf010119b2024,88149
f01011a1:	8b 75 10             	mov    0x10(%ebp),%esif01011a12025,88202
f01011a4:	83 ec 04             	sub    $0x4,%espf01011a42027,88297
f01011a7:	6a 00                	push   $0x0f01011a72028,88346
f01011a9:	ff 75 0c             	pushl  0xc(%ebp)f01011a92029,88390
f01011ac:	ff 75 08             	pushl  0x8(%ebp)f01011ac2030,88439
f01011af:	e8 9f fe ff ff       	call   f0101053 <pgdir_walk>f01011af2031,88488
f01011b4:	83 c4 10             	add    $0x10,%espf01011b42033,88583
f01011b7:	85 f6                	test   %esi,%esif01011b72034,88633
f01011b9:	74 02                	je     f01011bd <page_lookup+0x2c>f01011b92035,88682
f01011bb:	89 06                	mov    %eax,(%esi)f01011bb2036,88749
f01011bd:	85 c0                	test   %eax,%eaxf01011bd2038,88852
f01011bf:	74 3d                	je     f01011fe <page_lookup+0x6d>f01011bf2039,88901
f01011c1:	8b 00                	mov    (%eax),%eaxf01011c12040,88968
f01011c3:	a8 01                	test   $0x1,%alf01011c32041,89019
f01011c5:	74 3e                	je     f0101205 <page_lookup+0x74>f01011c52042,89067
static inline struct PageInfo*static2045,89137
f01011c7:	c1 e8 0c             	shr    $0xc,%eaxf01011c72049,89219
f01011ca:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf01011ca2050,89268
f01011d0:	3b 02                	cmp    (%edx),%eaxf01011d02051,89324
f01011d2:	73 12                	jae    f01011e6 <page_lookup+0x55>f01011d22052,89375
f01011d4:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf01011d42055,89512
f01011da:	8b 12                	mov    (%edx),%edxf01011da2056,89568
f01011dc:	8d 04 c2             	lea    (%edx,%eax,8),%eaxf01011dc2057,89619
f01011df:	8d 65 f8             	lea    -0x8(%ebp),%espf01011df2059,89679
f01011e2:	5b                   	pop    %ebxf01011e22060,89734
f01011e3:	5e                   	pop    %esif01011e32061,89778
f01011e4:	5d                   	pop    %ebpf01011e42062,89822
f01011e5:	c3                   	ret    f01011e52063,89866
f01011e6:	83 ec 04             	sub    $0x4,%espf01011e62065,89949
f01011e9:	8d 83 3c d3 fe ff    	lea    -0x12cc4(%ebx),%eaxf01011e92066,89998
f01011ef:	50                   	push   %eaxf01011ef2067,90057
f01011f0:	6a 4b                	push   $0x4bf01011f02068,90101
f01011f2:	8d 83 b4 d9 fe ff    	lea    -0x1264c(%ebx),%eaxf01011f22069,90146
f01011f8:	50                   	push   %eaxf01011f82070,90205
f01011f9:	e8 9b ee ff ff       	call   f0100099 <_panic>f01011f92071,90249
f01011fe:	b8 00 00 00 00       	mov    $0x0,%eaxf01011fe2073,90358
f0101203:	eb da                	jmp    f01011df <page_lookup+0x4e>f01012032074,90407
f0101205:	b8 00 00 00 00       	mov    $0x0,%eaxf01012052075,90474
f010120a:	eb d3                	jmp    f01011df <page_lookup+0x4e>f010120a2076,90523
f010120c <page_remove>:f010120c2078,90591
f010120c:	55                   	push   %ebpf010120c2080,90617
f010120d:	89 e5                	mov    %esp,%ebpf010120d2081,90661
f010120f:	57                   	push   %edif010120f2082,90710
f0101210:	56                   	push   %esif01012102083,90754
f0101211:	53                   	push   %ebxf01012112084,90798
f0101212:	83 ec 10             	sub    $0x10,%espf01012122085,90842
f0101215:	8b 7d 08             	mov    0x8(%ebp),%edif01012152086,90892
f0101218:	8b 75 0c             	mov    0xc(%ebp),%esif01012182087,90946
f010121b:	6a 00                	push   $0x0f010121b2089,91053
f010121d:	56                   	push   %esif010121d2090,91097
f010121e:	57                   	push   %edif010121e2091,91141
f010121f:	e8 6d ff ff ff       	call   f0101191 <page_lookup>f010121f2092,91185
f0101224:	83 c4 10             	add    $0x10,%espf01012242094,91272
f0101227:	85 c0                	test   %eax,%eaxf01012272095,91322
f0101229:	74 27                	je     f0101252 <page_remove+0x46>f01012292096,91371
f010122b:	89 c3                	mov    %eax,%ebxf010122b2097,91438
f010122d:	83 ec 0c             	sub    $0xc,%espf010122d2099,91505
f0101230:	50                   	push   %eaxf01012302100,91554
f0101231:	e8 f4 fd ff ff       	call   f010102a <page_decref>f01012312101,91598
f0101236:	83 c4 0c             	add    $0xc,%espf01012362103,91692
f0101239:	6a 00                	push   $0x0f01012392104,91741
f010123b:	56                   	push   %esif010123b2105,91785
f010123c:	57                   	push   %edif010123c2106,91829
f010123d:	e8 11 fe ff ff       	call   f0101053 <pgdir_walk>f010123d2107,91873
f0101242:	c7 00 00 00 00 00    	movl   $0x0,(%eax)f01012422108,91934
f0101248:	83 c4 10             	add    $0x10,%espf01012482110,92034
f010124b:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)f010124b2111,92084
f0101250:	74 08                	je     f010125a <page_remove+0x4e>f01012502112,92138
f0101252:	8d 65 f4             	lea    -0xc(%ebp),%espf01012522114,92207
f0101255:	5b                   	pop    %ebxf01012552115,92262
f0101256:	5e                   	pop    %esif01012562116,92306
f0101257:	5f                   	pop    %edif01012572117,92350
f0101258:	5d                   	pop    %ebpf01012582118,92394
f0101259:	c3                   	ret    f01012592119,92438
static inline voidstatic2122,92481
f010125a:	0f 01 3e             	invlpg (%esi)f010125a2126,92577
f010125d:	eb f3                	jmp    f0101252 <page_remove+0x46>f010125d2127,92623
f010125f <page_insert>:f010125f2129,92691
f010125f:	55                   	push   %ebpf010125f2131,92717
f0101260:	89 e5                	mov    %esp,%ebpf01012602132,92761
f0101262:	57                   	push   %edif01012622133,92810
f0101263:	56                   	push   %esif01012632134,92854
f0101264:	53                   	push   %ebxf01012642135,92898
f0101265:	83 ec 10             	sub    $0x10,%espf01012652136,92942
f0101268:	e8 52 1d 00 00       	call   f0102fbf <__x86.get_pc_thunk.di>f01012682137,92992
f010126d:	81 c7 9f 60 01 00    	add    $0x1609f,%edif010126d2138,93064
f0101273:	8b 75 0c             	mov    0xc(%ebp),%esif01012732139,93117
f0101276:	6a 01                	push   $0x1f01012762141,93211
f0101278:	ff 75 10             	pushl  0x10(%ebp)f01012782142,93255
f010127b:	ff 75 08             	pushl  0x8(%ebp)f010127b2143,93305
f010127e:	e8 d0 fd ff ff       	call   f0101053 <pgdir_walk>f010127e2144,93354
f0101283:	83 c4 10             	add    $0x10,%espf01012832146,93444
f0101286:	85 c0                	test   %eax,%eaxf01012862147,93494
f0101288:	74 3f                	je     f01012c9 <page_insert+0x6a>f01012882148,93543
f010128a:	89 c3                	mov    %eax,%ebxf010128a2149,93610
f010128c:	66 83 46 04 01       	addw   $0x1,0x4(%esi)f010128c2151,93674
f0101291:	83 ec 08             	sub    $0x8,%espf01012912153,93753
f0101294:	ff 75 10             	pushl  0x10(%ebp)f01012942154,93802
f0101297:	ff 75 08             	pushl  0x8(%ebp)f01012972155,93852
f010129a:	e8 6d ff ff ff       	call   f010120c <page_remove>f010129a2156,93901
f010129f:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf010129f2158,93996
f01012a5:	2b 30                	sub    (%eax),%esif01012a52159,94052
f01012a7:	89 f0                	mov    %esi,%eaxf01012a72160,94103
f01012a9:	c1 f8 03             	sar    $0x3,%eaxf01012a92161,94152
f01012ac:	c1 e0 0c             	shl    $0xc,%eaxf01012ac2162,94201
f01012af:	8b 55 14             	mov    0x14(%ebp),%edxf01012af2164,94286
f01012b2:	83 ca 01             	or     $0x1,%edxf01012b22165,94341
f01012b5:	09 d0                	or     %edx,%eaxf01012b52166,94390
f01012b7:	89 03                	mov    %eax,(%ebx)f01012b72167,94439
f01012b9:	83 c4 10             	add    $0x10,%espf01012b92169,94501
f01012bc:	b8 00 00 00 00       	mov    $0x0,%eaxf01012bc2170,94551
f01012c1:	8d 65 f4             	lea    -0xc(%ebp),%espf01012c12172,94602
f01012c4:	5b                   	pop    %ebxf01012c42173,94657
f01012c5:	5e                   	pop    %esif01012c52174,94701
f01012c6:	5f                   	pop    %edif01012c62175,94745
f01012c7:	5d                   	pop    %ebpf01012c72176,94789
f01012c8:	c3                   	ret    f01012c82177,94833
f01012c9:	b8 fc ff ff ff       	mov    $0xfffffffc,%eaxf01012c92179,94902
f01012ce:	eb f1                	jmp    f01012c1 <page_insert+0x62>f01012ce2180,94958
f01012d0 <mem_init>:f01012d02182,95026
f01012d0:	55                   	push   %ebpf01012d02184,95049
f01012d1:	89 e5                	mov    %esp,%ebpf01012d12185,95093
f01012d3:	57                   	push   %edif01012d32186,95142
f01012d4:	56                   	push   %esif01012d42187,95186
f01012d5:	53                   	push   %ebxf01012d52188,95230
f01012d6:	83 ec 3c             	sub    $0x3c,%espf01012d62189,95274
f01012d9:	e8 13 f4 ff ff       	call   f01006f1 <__x86.get_pc_thunk.ax>f01012d92190,95324
f01012de:	05 2e 60 01 00       	add    $0x1602e,%eaxf01012de2191,95396
f01012e3:	89 45 d4             	mov    %eax,-0x2c(%ebp)f01012e32192,95449
	basemem = nvram_read(NVRAM_BASELO);basemem2193,95505
f01012e6:	b8 15 00 00 00       	mov    $0x15,%eaxf01012e62194,95542
f01012eb:	e8 93 f6 ff ff       	call   f0100983 <nvram_read>f01012eb2195,95592
f01012f0:	89 c3                	mov    %eax,%ebxf01012f02196,95653
	extmem = nvram_read(NVRAM_EXTLO);extmem2197,95702
f01012f2:	b8 17 00 00 00       	mov    $0x17,%eaxf01012f22198,95737
f01012f7:	e8 87 f6 ff ff       	call   f0100983 <nvram_read>f01012f72199,95787
f01012fc:	89 c6                	mov    %eax,%esif01012fc2200,95848
	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;ext16mem2201,95897
f01012fe:	b8 34 00 00 00       	mov    $0x34,%eaxf01012fe2202,95941
f0101303:	e8 7b f6 ff ff       	call   f0100983 <nvram_read>f01013032203,95991
f0101308:	c1 e0 06             	shl    $0x6,%eaxf01013082204,96052
f010130b:	85 c0                	test   %eax,%eaxf010130b2206,96116
f010130d:	0f 85 cd 00 00 00    	jne    f01013e0 <mem_init+0x110>f010130d2207,96165
		totalmem = 1 * 1024 + extmem;totalmem2208,96230
f0101313:	8d 86 00 04 00 00    	lea    0x400(%esi),%eaxf01013132209,96262
f0101319:	85 f6                	test   %esi,%esif01013192210,96318
f010131b:	0f 44 c3             	cmove  %ebx,%eaxf010131b2211,96367
	npages = totalmem / (PGSIZE / 1024);npages2212,96416
f010131e:	89 c1                	mov    %eax,%ecxf010131e2213,96454
f0101320:	c1 e9 02             	shr    $0x2,%ecxf01013202214,96503
f0101323:	8b 7d d4             	mov    -0x2c(%ebp),%edif01013232215,96552
f0101326:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf01013262216,96608
f010132c:	89 0a                	mov    %ecx,(%edx)f010132c2217,96664
	npages_basemem = basemem / (PGSIZE / 1024);npages_basemem2218,96715
f010132e:	89 da                	mov    %ebx,%edxf010132e2219,96760
f0101330:	c1 ea 02             	shr    $0x2,%edxf01013302220,96809
f0101333:	89 97 94 1f 00 00    	mov    %edx,0x1f94(%edi)f01013332221,96858
f0101339:	89 c2                	mov    %eax,%edxf01013392223,96988
f010133b:	29 da                	sub    %ebx,%edxf010133b2224,97037
f010133d:	52                   	push   %edxf010133d2225,97086
f010133e:	53                   	push   %ebxf010133e2226,97130
f010133f:	50                   	push   %eaxf010133f2227,97174
f0101340:	8d 87 5c d3 fe ff    	lea    -0x12ca4(%edi),%eaxf01013402228,97218
f0101346:	50                   	push   %eaxf01013462229,97277
f0101347:	89 fb                	mov    %edi,%ebxf01013472230,97321
f0101349:	e8 fc 1c 00 00       	call   f010304a <cprintf>f01013492231,97370
	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);kern_pgdir2232,97428
f010134e:	b8 00 10 00 00       	mov    $0x1000,%eaxf010134e2233,97472
f0101353:	e8 61 f6 ff ff       	call   f01009b9 <boot_alloc>f01013532234,97524
f0101358:	c7 c6 cc 96 11 f0    	mov    $0xf01196cc,%esif01013582235,97585
f010135e:	89 06                	mov    %eax,(%esi)f010135e2236,97641
f0101360:	83 c4 0c             	add    $0xc,%espf01013602238,97724
f0101363:	68 00 10 00 00       	push   $0x1000f01013632239,97773
f0101368:	6a 00                	push   $0x0f01013682240,97820
f010136a:	50                   	push   %eaxf010136a2241,97864
f010136b:	e8 36 28 00 00       	call   f0103ba6 <memset>f010136b2242,97908
f0101370:	8b 06                	mov    (%esi),%eaxf01013702244,98025
f0101372:	83 c4 10             	add    $0x10,%espf01013722246,98107
f0101375:	3d ff ff ff ef       	cmp    $0xefffffff,%eaxf01013752247,98157
f010137a:	76 6e                	jbe    f01013ea <mem_init+0x11a>f010137a2248,98213
f010137c:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edxf010137c2250,98314
f0101382:	83 ca 05             	or     $0x5,%edxf01013822251,98375
f0101385:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)f01013852252,98424
	pages = (struct PageInfo *) boot_alloc(sizeof(struct PageInfo) * npages);pages2253,98480
f010138b:	8b 7d d4             	mov    -0x2c(%ebp),%edif010138b2254,98555
f010138e:	c7 c3 c8 96 11 f0    	mov    $0xf01196c8,%ebxf010138e2255,98611
f0101394:	8b 03                	mov    (%ebx),%eaxf01013942256,98667
f0101396:	c1 e0 03             	shl    $0x3,%eaxf01013962257,98718
f0101399:	e8 1b f6 ff ff       	call   f01009b9 <boot_alloc>f01013992258,98767
f010139e:	c7 c6 d0 96 11 f0    	mov    $0xf01196d0,%esif010139e2259,98828
f01013a4:	89 06                	mov    %eax,(%esi)f01013a42260,98884
f01013a6:	83 ec 04             	sub    $0x4,%espf01013a62262,98988
f01013a9:	8b 13                	mov    (%ebx),%edxf01013a92263,99037
f01013ab:	c1 e2 03             	shl    $0x3,%edxf01013ab2264,99088
f01013ae:	52                   	push   %edxf01013ae2265,99137
f01013af:	6a 00                	push   $0x0f01013af2266,99181
f01013b1:	50                   	push   %eaxf01013b12267,99225
f01013b2:	89 fb                	mov    %edi,%ebxf01013b22268,99269
f01013b4:	e8 ed 27 00 00       	call   f0103ba6 <memset>f01013b42269,99318
f01013b9:	e8 80 fa ff ff       	call   f0100e3e <page_init>f01013b92271,99389
f01013be:	b8 01 00 00 00       	mov    $0x1,%eaxf01013be2273,99475
f01013c3:	e8 f3 f6 ff ff       	call   f0100abb <check_page_free_list>f01013c32274,99524
f01013c8:	83 c4 10             	add    $0x10,%espf01013c82276,99608
f01013cb:	83 3e 00             	cmpl   $0x0,(%esi)f01013cb2277,99658
f01013ce:	74 36                	je     f0101406 <mem_init+0x136>f01013ce2278,99709
f01013d0:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf01013d02280,99834
f01013d3:	8b 80 90 1f 00 00    	mov    0x1f90(%eax),%eaxf01013d32281,99890
f01013d9:	be 00 00 00 00       	mov    $0x0,%esif01013d92282,99947
f01013de:	eb 49                	jmp    f0101429 <mem_init+0x159>f01013de2283,99996
		totalmem = 16 * 1024 + ext16mem;totalmem2284,100061
f01013e0:	05 00 40 00 00       	add    $0x4000,%eaxf01013e02285,100096
f01013e5:	e9 34 ff ff ff       	jmp    f010131e <mem_init+0x4e>f01013e52286,100148
f01013ea:	50                   	push   %eaxf01013ea2288,100278
f01013eb:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01013eb2289,100322
f01013ee:	8d 83 98 d3 fe ff    	lea    -0x12c68(%ebx),%eaxf01013ee2290,100378
f01013f4:	50                   	push   %eaxf01013f42291,100437
f01013f5:	68 92 00 00 00       	push   $0x92f01013f52292,100481
f01013fa:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01013fa2293,100526
f0101400:	50                   	push   %eaxf01014002294,100585
f0101401:	e8 93 ec ff ff       	call   f0100099 <_panic>f01014012295,100629
f0101406:	83 ec 04             	sub    $0x4,%espf01014062297,100725
f0101409:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01014092298,100774
f010140c:	8d 83 5e da fe ff    	lea    -0x125a2(%ebx),%eaxf010140c2299,100830
f0101412:	50                   	push   %eaxf01014122300,100889
f0101413:	68 47 02 00 00       	push   $0x247f01014132301,100933
f0101418:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01014182302,100979
f010141e:	50                   	push   %eaxf010141e2303,101038
f010141f:	e8 75 ec ff ff       	call   f0100099 <_panic>f010141f2304,101082
f0101424:	83 c6 01             	add    $0x1,%esif01014242306,101150
f0101427:	8b 00                	mov    (%eax),%eaxf01014272308,101259
f0101429:	85 c0                	test   %eax,%eaxf01014292309,101310
f010142b:	75 f7                	jne    f0101424 <mem_init+0x154>f010142b2310,101359
f010142d:	83 ec 0c             	sub    $0xc,%espf010142d2312,101456
f0101430:	6a 00                	push   $0x0f01014302313,101505
f0101432:	e8 f9 fa ff ff       	call   f0100f30 <page_alloc>f01014322314,101549
f0101437:	89 c3                	mov    %eax,%ebxf01014372315,101610
f0101439:	83 c4 10             	add    $0x10,%espf01014392316,101659
f010143c:	85 c0                	test   %eax,%eaxf010143c2317,101709
f010143e:	0f 84 3b 02 00 00    	je     f010167f <mem_init+0x3af>f010143e2318,101758
f0101444:	83 ec 0c             	sub    $0xc,%espf01014442320,101855
f0101447:	6a 00                	push   $0x0f01014472321,101904
f0101449:	e8 e2 fa ff ff       	call   f0100f30 <page_alloc>f01014492322,101948
f010144e:	89 c7                	mov    %eax,%edif010144e2323,102009
f0101450:	83 c4 10             	add    $0x10,%espf01014502324,102058
f0101453:	85 c0                	test   %eax,%eaxf01014532325,102108
f0101455:	0f 84 46 02 00 00    	je     f01016a1 <mem_init+0x3d1>f01014552326,102157
f010145b:	83 ec 0c             	sub    $0xc,%espf010145b2328,102254
f010145e:	6a 00                	push   $0x0f010145e2329,102303
f0101460:	e8 cb fa ff ff       	call   f0100f30 <page_alloc>f01014602330,102347
f0101465:	89 45 d0             	mov    %eax,-0x30(%ebp)f01014652331,102408
f0101468:	83 c4 10             	add    $0x10,%espf01014682332,102464
f010146b:	85 c0                	test   %eax,%eaxf010146b2333,102514
f010146d:	0f 84 50 02 00 00    	je     f01016c3 <mem_init+0x3f3>f010146d2334,102563
f0101473:	39 fb                	cmp    %edi,%ebxf01014732336,102656
f0101475:	0f 84 6a 02 00 00    	je     f01016e5 <mem_init+0x415>f01014752337,102705
f010147b:	8b 45 d0             	mov    -0x30(%ebp),%eaxf010147b2339,102812
f010147e:	39 c7                	cmp    %eax,%edif010147e2340,102868
f0101480:	0f 84 81 02 00 00    	je     f0101707 <mem_init+0x437>f01014802341,102917
f0101486:	39 c3                	cmp    %eax,%ebxf01014862342,102982
f0101488:	0f 84 79 02 00 00    	je     f0101707 <mem_init+0x437>f01014882343,103031
f010148e:	8b 55 d4             	mov    -0x2c(%ebp),%edxf010148e2345,103129
f0101491:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01014912346,103185
f0101497:	8b 08                	mov    (%eax),%ecxf01014972347,103241
f0101499:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf01014992349,103331
f010149f:	8b 10                	mov    (%eax),%edxf010149f2350,103387
f01014a1:	c1 e2 0c             	shl    $0xc,%edxf01014a12351,103438
f01014a4:	89 d8                	mov    %ebx,%eaxf01014a42352,103487
f01014a6:	29 c8                	sub    %ecx,%eaxf01014a62353,103536
f01014a8:	c1 f8 03             	sar    $0x3,%eaxf01014a82354,103585
f01014ab:	c1 e0 0c             	shl    $0xc,%eaxf01014ab2355,103634
f01014ae:	39 d0                	cmp    %edx,%eaxf01014ae2356,103683
f01014b0:	0f 83 73 02 00 00    	jae    f0101729 <mem_init+0x459>f01014b02357,103732
f01014b6:	89 f8                	mov    %edi,%eaxf01014b62358,103797
f01014b8:	29 c8                	sub    %ecx,%eaxf01014b82359,103846
f01014ba:	c1 f8 03             	sar    $0x3,%eaxf01014ba2360,103895
f01014bd:	c1 e0 0c             	shl    $0xc,%eaxf01014bd2361,103944
f01014c0:	39 c2                	cmp    %eax,%edxf01014c02363,104032
f01014c2:	0f 86 83 02 00 00    	jbe    f010174b <mem_init+0x47b>f01014c22364,104081
f01014c8:	8b 45 d0             	mov    -0x30(%ebp),%eaxf01014c82365,104146
f01014cb:	29 c8                	sub    %ecx,%eaxf01014cb2366,104202
f01014cd:	c1 f8 03             	sar    $0x3,%eaxf01014cd2367,104251
f01014d0:	c1 e0 0c             	shl    $0xc,%eaxf01014d02368,104300
f01014d3:	39 c2                	cmp    %eax,%edxf01014d32370,104388
f01014d5:	0f 86 92 02 00 00    	jbe    f010176d <mem_init+0x49d>f01014d52371,104437
	fl = page_free_list;fl2372,104502
f01014db:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf01014db2373,104524
f01014de:	8b 88 90 1f 00 00    	mov    0x1f90(%eax),%ecxf01014de2374,104580
f01014e4:	89 4d c8             	mov    %ecx,-0x38(%ebp)f01014e42375,104637
	page_free_list = 0;page_free_list2376,104693
f01014e7:	c7 80 90 1f 00 00 00 	movl   $0x0,0x1f90(%eax)f01014e72377,104714
f01014ee:	00 00 00 f01014ee2378,104771
f01014f1:	83 ec 0c             	sub    $0xc,%espf01014f12380,104816
f01014f4:	6a 00                	push   $0x0f01014f42381,104865
f01014f6:	e8 35 fa ff ff       	call   f0100f30 <page_alloc>f01014f62382,104909
f01014fb:	83 c4 10             	add    $0x10,%espf01014fb2383,104970
f01014fe:	85 c0                	test   %eax,%eaxf01014fe2384,105020
f0101500:	0f 85 89 02 00 00    	jne    f010178f <mem_init+0x4bf>f01015002385,105069
f0101506:	83 ec 0c             	sub    $0xc,%espf01015062387,105151
f0101509:	53                   	push   %ebxf01015092388,105200
f010150a:	e8 af fa ff ff       	call   f0100fbe <page_free>f010150a2389,105244
f010150f:	89 3c 24             	mov    %edi,(%esp)f010150f2391,105321
f0101512:	e8 a7 fa ff ff       	call   f0100fbe <page_free>f01015122392,105372
f0101517:	83 c4 04             	add    $0x4,%espf01015172394,105449
f010151a:	ff 75 d0             	pushl  -0x30(%ebp)f010151a2395,105498
f010151d:	e8 9c fa ff ff       	call   f0100fbe <page_free>f010151d2396,105549
f0101522:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)f01015222398,105641
f0101529:	e8 02 fa ff ff       	call   f0100f30 <page_alloc>f01015292399,105692
f010152e:	89 c7                	mov    %eax,%edif010152e2400,105753
f0101530:	83 c4 10             	add    $0x10,%espf01015302401,105802
f0101533:	85 c0                	test   %eax,%eaxf01015332402,105852
f0101535:	0f 84 76 02 00 00    	je     f01017b1 <mem_init+0x4e1>f01015352403,105901
f010153b:	83 ec 0c             	sub    $0xc,%espf010153b2405,105998
f010153e:	6a 00                	push   $0x0f010153e2406,106047
f0101540:	e8 eb f9 ff ff       	call   f0100f30 <page_alloc>f01015402407,106091
f0101545:	89 45 d0             	mov    %eax,-0x30(%ebp)f01015452408,106152
f0101548:	83 c4 10             	add    $0x10,%espf01015482409,106208
f010154b:	85 c0                	test   %eax,%eaxf010154b2410,106258
f010154d:	0f 84 80 02 00 00    	je     f01017d3 <mem_init+0x503>f010154d2411,106307
f0101553:	83 ec 0c             	sub    $0xc,%espf01015532413,106404
f0101556:	6a 00                	push   $0x0f01015562414,106453
f0101558:	e8 d3 f9 ff ff       	call   f0100f30 <page_alloc>f01015582415,106497
f010155d:	89 45 cc             	mov    %eax,-0x34(%ebp)f010155d2416,106558
f0101560:	83 c4 10             	add    $0x10,%espf01015602417,106614
f0101563:	85 c0                	test   %eax,%eaxf01015632418,106664
f0101565:	0f 84 8a 02 00 00    	je     f01017f5 <mem_init+0x525>f01015652419,106713
f010156b:	3b 7d d0             	cmp    -0x30(%ebp),%edif010156b2421,106806
f010156e:	0f 84 a3 02 00 00    	je     f0101817 <mem_init+0x547>f010156e2422,106862
f0101574:	8b 45 cc             	mov    -0x34(%ebp),%eaxf01015742424,106969
f0101577:	39 45 d0             	cmp    %eax,-0x30(%ebp)f01015772425,107025
f010157a:	0f 84 b9 02 00 00    	je     f0101839 <mem_init+0x569>f010157a2426,107081
f0101580:	39 c7                	cmp    %eax,%edif01015802427,107146
f0101582:	0f 84 b1 02 00 00    	je     f0101839 <mem_init+0x569>f01015822428,107195
f0101588:	83 ec 0c             	sub    $0xc,%espf01015882430,107285
f010158b:	6a 00                	push   $0x0f010158b2431,107334
f010158d:	e8 9e f9 ff ff       	call   f0100f30 <page_alloc>f010158d2432,107378
f0101592:	83 c4 10             	add    $0x10,%espf01015922433,107439
f0101595:	85 c0                	test   %eax,%eaxf01015952434,107489
f0101597:	0f 85 be 02 00 00    	jne    f010185b <mem_init+0x58b>f01015972435,107538
f010159d:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010159d2436,107603
f01015a0:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01015a02437,107659
f01015a6:	89 f9                	mov    %edi,%ecxf01015a62438,107715
f01015a8:	2b 08                	sub    (%eax),%ecxf01015a82439,107764
f01015aa:	89 c8                	mov    %ecx,%eaxf01015aa2440,107815
f01015ac:	c1 f8 03             	sar    $0x3,%eaxf01015ac2441,107864
f01015af:	c1 e0 0c             	shl    $0xc,%eaxf01015af2442,107913
f01015b2:	89 c1                	mov    %eax,%ecxf01015b22444,107988
f01015b4:	c1 e9 0c             	shr    $0xc,%ecxf01015b42445,108037
f01015b7:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf01015b72446,108086
f01015bd:	3b 0a                	cmp    (%edx),%ecxf01015bd2447,108142
f01015bf:	0f 83 b8 02 00 00    	jae    f010187d <mem_init+0x5ad>f01015bf2448,108193
f01015c5:	83 ec 04             	sub    $0x4,%espf01015c52450,108293
f01015c8:	68 00 10 00 00       	push   $0x1000f01015c82451,108342
f01015cd:	6a 01                	push   $0x1f01015cd2452,108389
f01015cf:	2d 00 00 00 10       	sub    $0x10000000,%eaxf01015cf2454,108466
f01015d4:	50                   	push   %eaxf01015d42455,108522
f01015d5:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01015d52456,108566
f01015d8:	e8 c9 25 00 00       	call   f0103ba6 <memset>f01015d82457,108622
f01015dd:	89 3c 24             	mov    %edi,(%esp)f01015dd2459,108696
f01015e0:	e8 d9 f9 ff ff       	call   f0100fbe <page_free>f01015e02460,108747
f01015e5:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)f01015e52462,108847
f01015ec:	e8 3f f9 ff ff       	call   f0100f30 <page_alloc>f01015ec2463,108898
f01015f1:	83 c4 10             	add    $0x10,%espf01015f12464,108959
f01015f4:	85 c0                	test   %eax,%eaxf01015f42465,109009
f01015f6:	0f 84 97 02 00 00    	je     f0101893 <mem_init+0x5c3>f01015f62466,109058
f01015fc:	39 c7                	cmp    %eax,%edif01015fc2468,109149
f01015fe:	0f 85 b1 02 00 00    	jne    f01018b5 <mem_init+0x5e5>f01015fe2469,109198
f0101604:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01016042471,109296
f0101607:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01016072472,109352
f010160d:	89 fa                	mov    %edi,%edxf010160d2473,109408
f010160f:	2b 10                	sub    (%eax),%edxf010160f2474,109457
f0101611:	c1 fa 03             	sar    $0x3,%edxf01016112475,109508
f0101614:	c1 e2 0c             	shl    $0xc,%edxf01016142476,109557
f0101617:	89 d1                	mov    %edx,%ecxf01016172478,109632
f0101619:	c1 e9 0c             	shr    $0xc,%ecxf01016192479,109681
f010161c:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf010161c2480,109730
f0101622:	3b 08                	cmp    (%eax),%ecxf01016222481,109786
f0101624:	0f 83 ad 02 00 00    	jae    f01018d7 <mem_init+0x607>f01016242482,109837
f010162a:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eaxf010162a2484,109935
f0101630:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edxf01016302485,109997
f0101636:	80 38 00             	cmpb   $0x0,(%eax)f01016362487,110073
f0101639:	0f 85 ae 02 00 00    	jne    f01018ed <mem_init+0x61d>f01016392488,110124
f010163f:	83 c0 01             	add    $0x1,%eaxf010163f2489,110189
f0101642:	39 d0                	cmp    %edx,%eaxf01016422491,110268
f0101644:	75 f0                	jne    f0101636 <mem_init+0x366>f01016442492,110317
	page_free_list = fl;page_free_list2493,110382
f0101646:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01016462494,110404
f0101649:	8b 4d c8             	mov    -0x38(%ebp),%ecxf01016492495,110460
f010164c:	89 8b 90 1f 00 00    	mov    %ecx,0x1f90(%ebx)f010164c2496,110516
f0101652:	83 ec 0c             	sub    $0xc,%espf01016522498,110590
f0101655:	57                   	push   %edif01016552499,110639
f0101656:	e8 63 f9 ff ff       	call   f0100fbe <page_free>f01016562500,110683
f010165b:	83 c4 04             	add    $0x4,%espf010165b2502,110760
f010165e:	ff 75 d0             	pushl  -0x30(%ebp)f010165e2503,110809
f0101661:	e8 58 f9 ff ff       	call   f0100fbe <page_free>f01016612504,110860
f0101666:	83 c4 04             	add    $0x4,%espf01016662506,110937
f0101669:	ff 75 cc             	pushl  -0x34(%ebp)f01016692507,110986
f010166c:	e8 4d f9 ff ff       	call   f0100fbe <page_free>f010166c2508,111037
f0101671:	8b 83 90 1f 00 00    	mov    0x1f90(%ebx),%eaxf01016712510,111146
f0101677:	83 c4 10             	add    $0x10,%espf01016772511,111203
f010167a:	e9 95 02 00 00       	jmp    f0101914 <mem_init+0x644>f010167a2512,111253
f010167f:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010167f2514,111350
f0101682:	8d 83 79 da fe ff    	lea    -0x12587(%ebx),%eaxf01016822515,111406
f0101688:	50                   	push   %eaxf01016882516,111465
f0101689:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01016892517,111509
f010168f:	50                   	push   %eaxf010168f2518,111568
f0101690:	68 4f 02 00 00       	push   $0x24ff01016902519,111612
f0101695:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01016952520,111658
f010169b:	50                   	push   %eaxf010169b2521,111717
f010169c:	e8 f8 e9 ff ff       	call   f0100099 <_panic>f010169c2522,111761
f01016a1:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01016a12524,111850
f01016a4:	8d 83 8f da fe ff    	lea    -0x12571(%ebx),%eaxf01016a42525,111906
f01016aa:	50                   	push   %eaxf01016aa2526,111965
f01016ab:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01016ab2527,112009
f01016b1:	50                   	push   %eaxf01016b12528,112068
f01016b2:	68 50 02 00 00       	push   $0x250f01016b22529,112112
f01016b7:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01016b72530,112158
f01016bd:	50                   	push   %eaxf01016bd2531,112217
f01016be:	e8 d6 e9 ff ff       	call   f0100099 <_panic>f01016be2532,112261
f01016c3:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01016c32534,112350
f01016c6:	8d 83 a5 da fe ff    	lea    -0x1255b(%ebx),%eaxf01016c62535,112406
f01016cc:	50                   	push   %eaxf01016cc2536,112465
f01016cd:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01016cd2537,112509
f01016d3:	50                   	push   %eaxf01016d32538,112568
f01016d4:	68 51 02 00 00       	push   $0x251f01016d42539,112612
f01016d9:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01016d92540,112658
f01016df:	50                   	push   %eaxf01016df2541,112717
f01016e0:	e8 b4 e9 ff ff       	call   f0100099 <_panic>f01016e02542,112761
f01016e5:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01016e52544,112846
f01016e8:	8d 83 bb da fe ff    	lea    -0x12545(%ebx),%eaxf01016e82545,112902
f01016ee:	50                   	push   %eaxf01016ee2546,112961
f01016ef:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01016ef2547,113005
f01016f5:	50                   	push   %eaxf01016f52548,113064
f01016f6:	68 54 02 00 00       	push   $0x254f01016f62549,113108
f01016fb:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01016fb2550,113154
f0101701:	50                   	push   %eaxf01017012551,113213
f0101702:	e8 92 e9 ff ff       	call   f0100099 <_panic>f01017022552,113257
f0101707:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01017072554,113356
f010170a:	8d 83 bc d3 fe ff    	lea    -0x12c44(%ebx),%eaxf010170a2555,113412
f0101710:	50                   	push   %eaxf01017102556,113471
f0101711:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01017112557,113515
f0101717:	50                   	push   %eaxf01017172558,113574
f0101718:	68 55 02 00 00       	push   $0x255f01017182559,113618
f010171d:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010171d2560,113664
f0101723:	50                   	push   %eaxf01017232561,113723
f0101724:	e8 70 e9 ff ff       	call   f0100099 <_panic>f01017242562,113767
f0101729:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01017292564,113863
f010172c:	8d 83 cd da fe ff    	lea    -0x12533(%ebx),%eaxf010172c2565,113919
f0101732:	50                   	push   %eaxf01017322566,113978
f0101733:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01017332567,114022
f0101739:	50                   	push   %eaxf01017392568,114081
f010173a:	68 56 02 00 00       	push   $0x256f010173a2569,114125
f010173f:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010173f2570,114171
f0101745:	50                   	push   %eaxf01017452571,114230
f0101746:	e8 4e e9 ff ff       	call   f0100099 <_panic>f01017462572,114274
f010174b:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010174b2574,114370
f010174e:	8d 83 ea da fe ff    	lea    -0x12516(%ebx),%eaxf010174e2575,114426
f0101754:	50                   	push   %eaxf01017542576,114485
f0101755:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01017552577,114529
f010175b:	50                   	push   %eaxf010175b2578,114588
f010175c:	68 57 02 00 00       	push   $0x257f010175c2579,114632
f0101761:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01017612580,114678
f0101767:	50                   	push   %eaxf01017672581,114737
f0101768:	e8 2c e9 ff ff       	call   f0100099 <_panic>f01017682582,114781
f010176d:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010176d2584,114877
f0101770:	8d 83 07 db fe ff    	lea    -0x124f9(%ebx),%eaxf01017702585,114933
f0101776:	50                   	push   %eaxf01017762586,114992
f0101777:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01017772587,115036
f010177d:	50                   	push   %eaxf010177d2588,115095
f010177e:	68 58 02 00 00       	push   $0x258f010177e2589,115139
f0101783:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01017832590,115185
f0101789:	50                   	push   %eaxf01017892591,115244
f010178a:	e8 0a e9 ff ff       	call   f0100099 <_panic>f010178a2592,115288
f010178f:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010178f2594,115370
f0101792:	8d 83 24 db fe ff    	lea    -0x124dc(%ebx),%eaxf01017922595,115426
f0101798:	50                   	push   %eaxf01017982596,115485
f0101799:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01017992597,115529
f010179f:	50                   	push   %eaxf010179f2598,115588
f01017a0:	68 5f 02 00 00       	push   $0x25ff01017a02599,115632
f01017a5:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01017a52600,115678
f01017ab:	50                   	push   %eaxf01017ab2601,115737
f01017ac:	e8 e8 e8 ff ff       	call   f0100099 <_panic>f01017ac2602,115781
f01017b1:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01017b12604,115870
f01017b4:	8d 83 79 da fe ff    	lea    -0x12587(%ebx),%eaxf01017b42605,115926
f01017ba:	50                   	push   %eaxf01017ba2606,115985
f01017bb:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01017bb2607,116029
f01017c1:	50                   	push   %eaxf01017c12608,116088
f01017c2:	68 66 02 00 00       	push   $0x266f01017c22609,116132
f01017c7:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01017c72610,116178
f01017cd:	50                   	push   %eaxf01017cd2611,116237
f01017ce:	e8 c6 e8 ff ff       	call   f0100099 <_panic>f01017ce2612,116281
f01017d3:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01017d32614,116370
f01017d6:	8d 83 8f da fe ff    	lea    -0x12571(%ebx),%eaxf01017d62615,116426
f01017dc:	50                   	push   %eaxf01017dc2616,116485
f01017dd:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01017dd2617,116529
f01017e3:	50                   	push   %eaxf01017e32618,116588
f01017e4:	68 67 02 00 00       	push   $0x267f01017e42619,116632
f01017e9:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01017e92620,116678
f01017ef:	50                   	push   %eaxf01017ef2621,116737
f01017f0:	e8 a4 e8 ff ff       	call   f0100099 <_panic>f01017f02622,116781
f01017f5:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01017f52624,116870
f01017f8:	8d 83 a5 da fe ff    	lea    -0x1255b(%ebx),%eaxf01017f82625,116926
f01017fe:	50                   	push   %eaxf01017fe2626,116985
f01017ff:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01017ff2627,117029
f0101805:	50                   	push   %eaxf01018052628,117088
f0101806:	68 68 02 00 00       	push   $0x268f01018062629,117132
f010180b:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010180b2630,117178
f0101811:	50                   	push   %eaxf01018112631,117237
f0101812:	e8 82 e8 ff ff       	call   f0100099 <_panic>f01018122632,117281
f0101817:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01018172634,117366
f010181a:	8d 83 bb da fe ff    	lea    -0x12545(%ebx),%eaxf010181a2635,117422
f0101820:	50                   	push   %eaxf01018202636,117481
f0101821:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01018212637,117525
f0101827:	50                   	push   %eaxf01018272638,117584
f0101828:	68 6a 02 00 00       	push   $0x26af01018282639,117628
f010182d:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010182d2640,117674
f0101833:	50                   	push   %eaxf01018332641,117733
f0101834:	e8 60 e8 ff ff       	call   f0100099 <_panic>f01018342642,117777
f0101839:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01018392644,117876
f010183c:	8d 83 bc d3 fe ff    	lea    -0x12c44(%ebx),%eaxf010183c2645,117932
f0101842:	50                   	push   %eaxf01018422646,117991
f0101843:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01018432647,118035
f0101849:	50                   	push   %eaxf01018492648,118094
f010184a:	68 6b 02 00 00       	push   $0x26bf010184a2649,118138
f010184f:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010184f2650,118184
f0101855:	50                   	push   %eaxf01018552651,118243
f0101856:	e8 3e e8 ff ff       	call   f0100099 <_panic>f01018562652,118287
f010185b:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010185b2654,118369
f010185e:	8d 83 24 db fe ff    	lea    -0x124dc(%ebx),%eaxf010185e2655,118425
f0101864:	50                   	push   %eaxf01018642656,118484
f0101865:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01018652657,118528
f010186b:	50                   	push   %eaxf010186b2658,118587
f010186c:	68 6c 02 00 00       	push   $0x26cf010186c2659,118631
f0101871:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01018712660,118677
f0101877:	50                   	push   %eaxf01018772661,118736
f0101878:	e8 1c e8 ff ff       	call   f0100099 <_panic>f01018782662,118780
f010187d:	50                   	push   %eaxf010187d2664,118901
f010187e:	8d 83 a4 d1 fe ff    	lea    -0x12e5c(%ebx),%eaxf010187e2665,118945
f0101884:	50                   	push   %eaxf01018842666,119004
f0101885:	6a 52                	push   $0x52f01018852667,119048
f0101887:	8d 83 b4 d9 fe ff    	lea    -0x1264c(%ebx),%eaxf01018872668,119093
f010188d:	50                   	push   %eaxf010188d2669,119152
f010188e:	e8 06 e8 ff ff       	call   f0100099 <_panic>f010188e2670,119196
f0101893:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01018932672,119293
f0101896:	8d 83 33 db fe ff    	lea    -0x124cd(%ebx),%eaxf01018962673,119349
f010189c:	50                   	push   %eaxf010189c2674,119408
f010189d:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf010189d2675,119452
f01018a3:	50                   	push   %eaxf01018a32676,119511
f01018a4:	68 71 02 00 00       	push   $0x271f01018a42677,119555
f01018a9:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01018a92678,119601
f01018af:	50                   	push   %eaxf01018af2679,119660
f01018b0:	e8 e4 e7 ff ff       	call   f0100099 <_panic>f01018b02680,119704
f01018b5:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01018b52682,119787
f01018b8:	8d 83 51 db fe ff    	lea    -0x124af(%ebx),%eaxf01018b82683,119843
f01018be:	50                   	push   %eaxf01018be2684,119902
f01018bf:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01018bf2685,119946
f01018c5:	50                   	push   %eaxf01018c52686,120005
f01018c6:	68 72 02 00 00       	push   $0x272f01018c62687,120049
f01018cb:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01018cb2688,120095
f01018d1:	50                   	push   %eaxf01018d12689,120154
f01018d2:	e8 c2 e7 ff ff       	call   f0100099 <_panic>f01018d22690,120198
f01018d7:	52                   	push   %edxf01018d72691,120255
f01018d8:	8d 83 a4 d1 fe ff    	lea    -0x12e5c(%ebx),%eaxf01018d82692,120299
f01018de:	50                   	push   %eaxf01018de2693,120358
f01018df:	6a 52                	push   $0x52f01018df2694,120402
f01018e1:	8d 83 b4 d9 fe ff    	lea    -0x1264c(%ebx),%eaxf01018e12695,120447
f01018e7:	50                   	push   %eaxf01018e72696,120506
f01018e8:	e8 ac e7 ff ff       	call   f0100099 <_panic>f01018e82697,120550
f01018ed:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01018ed2699,120628
f01018f0:	8d 83 61 db fe ff    	lea    -0x1249f(%ebx),%eaxf01018f02700,120684
f01018f6:	50                   	push   %eaxf01018f62701,120743
f01018f7:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01018f72702,120787
f01018fd:	50                   	push   %eaxf01018fd2703,120846
f01018fe:	68 75 02 00 00       	push   $0x275f01018fe2704,120890
f0101903:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01019032705,120936
f0101909:	50                   	push   %eaxf01019092706,120995
f010190a:	e8 8a e7 ff ff       	call   f0100099 <_panic>f010190a2707,121039
f010190f:	83 ee 01             	sub    $0x1,%esif010190f2709,121107
f0101912:	8b 00                	mov    (%eax),%eaxf01019122711,121205
f0101914:	85 c0                	test   %eax,%eaxf01019142712,121256
f0101916:	75 f7                	jne    f010190f <mem_init+0x63f>f01019162713,121305
f0101918:	85 f6                	test   %esi,%esif01019182715,121391
f010191a:	0f 85 52 08 00 00    	jne    f0102172 <mem_init+0xea2>f010191a2716,121440
f0101920:	83 ec 0c             	sub    $0xc,%espf01019202718,121550
f0101923:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01019232719,121599
f0101926:	8d 83 dc d3 fe ff    	lea    -0x12c24(%ebx),%eaxf01019262720,121655
f010192c:	50                   	push   %eaxf010192c2721,121714
f010192d:	e8 18 17 00 00       	call   f010304a <cprintf>f010192d2722,121758
	pp0 = pp1 = pp2 = 0;pp02727,121897
f0101932:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)f01019322729,121951
f0101939:	e8 f2 f5 ff ff       	call   f0100f30 <page_alloc>f01019392730,122002
f010193e:	89 c6                	mov    %eax,%esif010193e2731,122063
f0101940:	83 c4 10             	add    $0x10,%espf01019402732,122112
f0101943:	85 c0                	test   %eax,%eaxf01019432733,122162
f0101945:	0f 84 49 08 00 00    	je     f0102194 <mem_init+0xec4>f01019452734,122211
f010194b:	83 ec 0c             	sub    $0xc,%espf010194b2736,122308
f010194e:	6a 00                	push   $0x0f010194e2737,122357
f0101950:	e8 db f5 ff ff       	call   f0100f30 <page_alloc>f01019502738,122401
f0101955:	89 c7                	mov    %eax,%edif01019552739,122462
f0101957:	83 c4 10             	add    $0x10,%espf01019572740,122511
f010195a:	85 c0                	test   %eax,%eaxf010195a2741,122561
f010195c:	0f 84 54 08 00 00    	je     f01021b6 <mem_init+0xee6>f010195c2742,122610
f0101962:	83 ec 0c             	sub    $0xc,%espf01019622744,122707
f0101965:	6a 00                	push   $0x0f01019652745,122756
f0101967:	e8 c4 f5 ff ff       	call   f0100f30 <page_alloc>f01019672746,122800
f010196c:	89 45 d0             	mov    %eax,-0x30(%ebp)f010196c2747,122861
f010196f:	83 c4 10             	add    $0x10,%espf010196f2748,122917
f0101972:	85 c0                	test   %eax,%eaxf01019722749,122967
f0101974:	0f 84 5e 08 00 00    	je     f01021d8 <mem_init+0xf08>f01019742750,123016
f010197a:	39 fe                	cmp    %edi,%esif010197a2754,123124
f010197c:	0f 84 78 08 00 00    	je     f01021fa <mem_init+0xf2a>f010197c2755,123173
f0101982:	8b 45 d0             	mov    -0x30(%ebp),%eaxf01019822757,123280
f0101985:	39 c6                	cmp    %eax,%esif01019852758,123336
f0101987:	0f 84 8f 08 00 00    	je     f010221c <mem_init+0xf4c>f01019872759,123385
f010198d:	39 c7                	cmp    %eax,%edif010198d2760,123450
f010198f:	0f 84 87 08 00 00    	je     f010221c <mem_init+0xf4c>f010198f2761,123499
	fl = page_free_list;fl2764,123614
f0101995:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf01019952765,123636
f0101998:	8b 88 90 1f 00 00    	mov    0x1f90(%eax),%ecxf01019982766,123692
f010199e:	89 4d c8             	mov    %ecx,-0x38(%ebp)f010199e2767,123749
	page_free_list = 0;page_free_list2768,123805
f01019a1:	c7 80 90 1f 00 00 00 	movl   $0x0,0x1f90(%eax)f01019a12769,123826
f01019a8:	00 00 00 f01019a82770,123883
f01019ab:	83 ec 0c             	sub    $0xc,%espf01019ab2774,123958
f01019ae:	6a 00                	push   $0x0f01019ae2775,124007
f01019b0:	e8 7b f5 ff ff       	call   f0100f30 <page_alloc>f01019b02776,124051
f01019b5:	83 c4 10             	add    $0x10,%espf01019b52777,124112
f01019b8:	85 c0                	test   %eax,%eaxf01019b82778,124162
f01019ba:	0f 85 7e 08 00 00    	jne    f010223e <mem_init+0xf6e>f01019ba2779,124211
f01019c0:	83 ec 04             	sub    $0x4,%espf01019c02783,124384
f01019c3:	8d 45 e4             	lea    -0x1c(%ebp),%eaxf01019c32784,124433
f01019c6:	50                   	push   %eaxf01019c62785,124489
f01019c7:	6a 00                	push   $0x0f01019c72786,124533
f01019c9:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf01019c92787,124577
f01019cc:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf01019cc2788,124633
f01019d2:	ff 30                	pushl  (%eax)f01019d22789,124689
f01019d4:	e8 b8 f7 ff ff       	call   f0101191 <page_lookup>f01019d42790,124735
f01019d9:	83 c4 10             	add    $0x10,%espf01019d92791,124797
f01019dc:	85 c0                	test   %eax,%eaxf01019dc2792,124847
f01019de:	0f 85 7c 08 00 00    	jne    f0102260 <mem_init+0xf90>f01019de2793,124896
f01019e4:	6a 02                	push   $0x2f01019e42797,125080
f01019e6:	6a 00                	push   $0x0f01019e62798,125124
f01019e8:	57                   	push   %edif01019e82799,125168
f01019e9:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf01019e92800,125212
f01019ec:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf01019ec2801,125268
f01019f2:	ff 30                	pushl  (%eax)f01019f22802,125324
f01019f4:	e8 66 f8 ff ff       	call   f010125f <page_insert>f01019f42803,125370
f01019f9:	83 c4 10             	add    $0x10,%espf01019f92804,125432
f01019fc:	85 c0                	test   %eax,%eaxf01019fc2805,125482
f01019fe:	0f 89 7e 08 00 00    	jns    f0102282 <mem_init+0xfb2>f01019fe2806,125531
f0101a04:	83 ec 0c             	sub    $0xc,%espf0101a042810,125676
f0101a07:	56                   	push   %esif0101a072811,125725
f0101a08:	e8 b1 f5 ff ff       	call   f0100fbe <page_free>f0101a082812,125769
f0101a0d:	6a 02                	push   $0x2f0101a0d2814,125885
f0101a0f:	6a 00                	push   $0x0f0101a0f2815,125929
f0101a11:	57                   	push   %edif0101a112816,125973
f0101a12:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101a122817,126017
f0101a15:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101a152818,126073
f0101a1b:	ff 30                	pushl  (%eax)f0101a1b2819,126129
f0101a1d:	e8 3d f8 ff ff       	call   f010125f <page_insert>f0101a1d2820,126175
f0101a22:	83 c4 20             	add    $0x20,%espf0101a222821,126237
f0101a25:	85 c0                	test   %eax,%eaxf0101a252822,126287
f0101a27:	0f 85 77 08 00 00    	jne    f01022a4 <mem_init+0xfd4>f0101a272823,126336
f0101a2d:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0101a2d2825,126451
f0101a30:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101a302826,126507
f0101a36:	8b 18                	mov    (%eax),%ebxf0101a362827,126563
f0101a38:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0101a382829,126647
f0101a3e:	8b 08                	mov    (%eax),%ecxf0101a3e2830,126703
f0101a40:	89 4d cc             	mov    %ecx,-0x34(%ebp)f0101a402831,126754
f0101a43:	8b 13                	mov    (%ebx),%edxf0101a432832,126810
f0101a45:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf0101a452833,126861
f0101a4b:	89 f0                	mov    %esi,%eaxf0101a4b2834,126917
f0101a4d:	29 c8                	sub    %ecx,%eaxf0101a4d2835,126966
f0101a4f:	c1 f8 03             	sar    $0x3,%eaxf0101a4f2836,127015
f0101a52:	c1 e0 0c             	shl    $0xc,%eaxf0101a522837,127064
f0101a55:	39 c2                	cmp    %eax,%edxf0101a552838,127113
f0101a57:	0f 85 69 08 00 00    	jne    f01022c6 <mem_init+0xff6>f0101a572839,127162
f0101a5d:	ba 00 00 00 00       	mov    $0x0,%edxf0101a5d2841,127282
f0101a62:	89 d8                	mov    %ebx,%eaxf0101a622842,127331
f0101a64:	e8 d5 ef ff ff       	call   f0100a3e <check_va2pa>f0101a642843,127380
f0101a69:	89 fa                	mov    %edi,%edxf0101a692844,127442
f0101a6b:	2b 55 cc             	sub    -0x34(%ebp),%edxf0101a6b2845,127491
f0101a6e:	c1 fa 03             	sar    $0x3,%edxf0101a6e2846,127547
f0101a71:	c1 e2 0c             	shl    $0xc,%edxf0101a712847,127596
f0101a74:	39 d0                	cmp    %edx,%eaxf0101a742848,127645
f0101a76:	0f 85 6c 08 00 00    	jne    f01022e8 <mem_init+0x1018>f0101a762849,127694
f0101a7c:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)f0101a7c2851,127787
f0101a81:	0f 85 83 08 00 00    	jne    f010230a <mem_init+0x103a>f0101a812852,127841
f0101a87:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)f0101a872854,127934
f0101a8c:	0f 85 9a 08 00 00    	jne    f010232c <mem_init+0x105c>f0101a8c2855,127988
f0101a92:	6a 02                	push   $0x2f0101a922859,128210
f0101a94:	68 00 10 00 00       	push   $0x1000f0101a942860,128254
f0101a99:	ff 75 d0             	pushl  -0x30(%ebp)f0101a992861,128301
f0101a9c:	53                   	push   %ebxf0101a9c2862,128352
f0101a9d:	e8 bd f7 ff ff       	call   f010125f <page_insert>f0101a9d2863,128396
f0101aa2:	83 c4 10             	add    $0x10,%espf0101aa22864,128458
f0101aa5:	85 c0                	test   %eax,%eaxf0101aa52865,128508
f0101aa7:	0f 85 a1 08 00 00    	jne    f010234e <mem_init+0x107e>f0101aa72866,128557
f0101aad:	ba 00 10 00 00       	mov    $0x1000,%edxf0101aad2868,128681
f0101ab2:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0101ab22869,128733
f0101ab5:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101ab52870,128789
f0101abb:	8b 00                	mov    (%eax),%eaxf0101abb2871,128845
f0101abd:	e8 7c ef ff ff       	call   f0100a3e <check_va2pa>f0101abd2872,128896
f0101ac2:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf0101ac22873,128958
f0101ac8:	8b 4d d0             	mov    -0x30(%ebp),%ecxf0101ac82874,129014
f0101acb:	2b 0a                	sub    (%edx),%ecxf0101acb2875,129070
f0101acd:	89 ca                	mov    %ecx,%edxf0101acd2876,129121
f0101acf:	c1 fa 03             	sar    $0x3,%edxf0101acf2877,129170
f0101ad2:	c1 e2 0c             	shl    $0xc,%edxf0101ad22878,129219
f0101ad5:	39 d0                	cmp    %edx,%eaxf0101ad52879,129268
f0101ad7:	0f 85 93 08 00 00    	jne    f0102370 <mem_init+0x10a0>f0101ad72880,129317
f0101add:	83 ec 0c             	sub    $0xc,%espf0101add2884,129438
f0101ae0:	6a 00                	push   $0x0f0101ae02885,129487
f0101ae2:	e8 49 f4 ff ff       	call   f0100f30 <page_alloc>f0101ae22886,129531
f0101ae7:	83 c4 10             	add    $0x10,%espf0101ae72887,129592
f0101aea:	85 c0                	test   %eax,%eaxf0101aea2888,129642
f0101aec:	0f 85 a0 08 00 00    	jne    f0102392 <mem_init+0x10c2>f0101aec2889,129691
f0101af2:	6a 02                	push   $0x2f0101af22893,129892
f0101af4:	68 00 10 00 00       	push   $0x1000f0101af42894,129936
f0101af9:	ff 75 d0             	pushl  -0x30(%ebp)f0101af92895,129983
f0101afc:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101afc2896,130034
f0101aff:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101aff2897,130090
f0101b05:	ff 30                	pushl  (%eax)f0101b052898,130146
f0101b07:	e8 53 f7 ff ff       	call   f010125f <page_insert>f0101b072899,130192
f0101b0c:	83 c4 10             	add    $0x10,%espf0101b0c2900,130254
f0101b0f:	85 c0                	test   %eax,%eaxf0101b0f2901,130304
f0101b11:	0f 85 9d 08 00 00    	jne    f01023b4 <mem_init+0x10e4>f0101b112902,130353
f0101b17:	ba 00 10 00 00       	mov    $0x1000,%edxf0101b172904,130477
f0101b1c:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0101b1c2905,130529
f0101b1f:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101b1f2906,130585
f0101b25:	8b 00                	mov    (%eax),%eaxf0101b252907,130641
f0101b27:	e8 12 ef ff ff       	call   f0100a3e <check_va2pa>f0101b272908,130692
f0101b2c:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf0101b2c2909,130754
f0101b32:	8b 4d d0             	mov    -0x30(%ebp),%ecxf0101b322910,130810
f0101b35:	2b 0a                	sub    (%edx),%ecxf0101b352911,130866
f0101b37:	89 ca                	mov    %ecx,%edxf0101b372912,130917
f0101b39:	c1 fa 03             	sar    $0x3,%edxf0101b392913,130966
f0101b3c:	c1 e2 0c             	shl    $0xc,%edxf0101b3c2914,131015
f0101b3f:	39 d0                	cmp    %edx,%eaxf0101b3f2915,131064
f0101b41:	0f 85 8f 08 00 00    	jne    f01023d6 <mem_init+0x1106>f0101b412916,131113
f0101b47:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0101b472918,131206
f0101b4a:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)f0101b4a2919,131262
f0101b4f:	0f 85 a3 08 00 00    	jne    f01023f8 <mem_init+0x1128>f0101b4f2920,131316
f0101b55:	83 ec 0c             	sub    $0xc,%espf0101b552925,131514
f0101b58:	6a 00                	push   $0x0f0101b582926,131563
f0101b5a:	e8 d1 f3 ff ff       	call   f0100f30 <page_alloc>f0101b5a2927,131607
f0101b5f:	83 c4 10             	add    $0x10,%espf0101b5f2928,131668
f0101b62:	85 c0                	test   %eax,%eaxf0101b622929,131718
f0101b64:	0f 85 b0 08 00 00    	jne    f010241a <mem_init+0x114a>f0101b642930,131767
	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));ptep2933,131889
f0101b6a:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0101b6a2934,131949
f0101b6d:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101b6d2935,132005
f0101b73:	8b 10                	mov    (%eax),%edxf0101b732936,132061
f0101b75:	8b 02                	mov    (%edx),%eaxf0101b752937,132112
f0101b77:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf0101b772938,132163
f0101b7c:	89 c3                	mov    %eax,%ebxf0101b7c2940,132245
f0101b7e:	c1 eb 0c             	shr    $0xc,%ebxf0101b7e2941,132294
f0101b81:	c7 c1 c8 96 11 f0    	mov    $0xf01196c8,%ecxf0101b812942,132343
f0101b87:	3b 19                	cmp    (%ecx),%ebxf0101b872943,132399
f0101b89:	0f 83 ad 08 00 00    	jae    f010243c <mem_init+0x116c>f0101b892944,132450
f0101b8f:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0101b8f2946,132549
f0101b94:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0101b942947,132605
f0101b97:	83 ec 04             	sub    $0x4,%espf0101b972949,132732
f0101b9a:	6a 00                	push   $0x0f0101b9a2950,132781
f0101b9c:	68 00 10 00 00       	push   $0x1000f0101b9c2951,132825
f0101ba1:	52                   	push   %edxf0101ba12952,132872
f0101ba2:	e8 ac f4 ff ff       	call   f0101053 <pgdir_walk>f0101ba22953,132916
f0101ba7:	8b 4d e4             	mov    -0x1c(%ebp),%ecxf0101ba72954,132977
f0101baa:	8d 51 04             	lea    0x4(%ecx),%edxf0101baa2955,133033
f0101bad:	83 c4 10             	add    $0x10,%espf0101bad2956,133087
f0101bb0:	39 d0                	cmp    %edx,%eaxf0101bb02957,133137
f0101bb2:	0f 85 a0 08 00 00    	jne    f0102458 <mem_init+0x1188>f0101bb22958,133186
f0101bb8:	6a 06                	push   $0x6f0101bb82962,133372
f0101bba:	68 00 10 00 00       	push   $0x1000f0101bba2963,133416
f0101bbf:	ff 75 d0             	pushl  -0x30(%ebp)f0101bbf2964,133463
f0101bc2:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101bc22965,133514
f0101bc5:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101bc52966,133570
f0101bcb:	ff 30                	pushl  (%eax)f0101bcb2967,133626
f0101bcd:	e8 8d f6 ff ff       	call   f010125f <page_insert>f0101bcd2968,133672
f0101bd2:	83 c4 10             	add    $0x10,%espf0101bd22969,133734
f0101bd5:	85 c0                	test   %eax,%eaxf0101bd52970,133784
f0101bd7:	0f 85 9d 08 00 00    	jne    f010247a <mem_init+0x11aa>f0101bd72971,133833
f0101bdd:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101bdd2973,133957
f0101be0:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101be02974,134013
f0101be6:	8b 18                	mov    (%eax),%ebxf0101be62975,134069
f0101be8:	ba 00 10 00 00       	mov    $0x1000,%edxf0101be82976,134120
f0101bed:	89 d8                	mov    %ebx,%eaxf0101bed2977,134172
f0101bef:	e8 4a ee ff ff       	call   f0100a3e <check_va2pa>f0101bef2978,134221
f0101bf4:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0101bf42980,134316
f0101bf7:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf0101bf72981,134372
f0101bfd:	8b 4d d0             	mov    -0x30(%ebp),%ecxf0101bfd2982,134428
f0101c00:	2b 0a                	sub    (%edx),%ecxf0101c002983,134484
f0101c02:	89 ca                	mov    %ecx,%edxf0101c022984,134535
f0101c04:	c1 fa 03             	sar    $0x3,%edxf0101c042985,134584
f0101c07:	c1 e2 0c             	shl    $0xc,%edxf0101c072986,134633
f0101c0a:	39 d0                	cmp    %edx,%eaxf0101c0a2987,134682
f0101c0c:	0f 85 8a 08 00 00    	jne    f010249c <mem_init+0x11cc>f0101c0c2988,134731
f0101c12:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0101c122990,134824
f0101c15:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)f0101c152991,134880
f0101c1a:	0f 85 9e 08 00 00    	jne    f01024be <mem_init+0x11ee>f0101c1a2992,134934
f0101c20:	83 ec 04             	sub    $0x4,%espf0101c202994,135061
f0101c23:	6a 00                	push   $0x0f0101c232995,135110
f0101c25:	68 00 10 00 00       	push   $0x1000f0101c252996,135154
f0101c2a:	53                   	push   %ebxf0101c2a2997,135201
f0101c2b:	e8 23 f4 ff ff       	call   f0101053 <pgdir_walk>f0101c2b2998,135245
f0101c30:	83 c4 10             	add    $0x10,%espf0101c302999,135306
f0101c33:	f6 00 04             	testb  $0x4,(%eax)f0101c333000,135356
f0101c36:	0f 84 a4 08 00 00    	je     f01024e0 <mem_init+0x1210>f0101c363001,135407
f0101c3c:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101c3c3003,135505
f0101c3f:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101c3f3004,135561
f0101c45:	8b 00                	mov    (%eax),%eaxf0101c453005,135617
f0101c47:	f6 00 04             	testb  $0x4,(%eax)f0101c473006,135668
f0101c4a:	0f 84 b2 08 00 00    	je     f0102502 <mem_init+0x1232>f0101c4a3007,135719
f0101c50:	6a 02                	push   $0x2f0101c503011,135904
f0101c52:	68 00 10 00 00       	push   $0x1000f0101c523012,135948
f0101c57:	ff 75 d0             	pushl  -0x30(%ebp)f0101c573013,135995
f0101c5a:	50                   	push   %eaxf0101c5a3014,136046
f0101c5b:	e8 ff f5 ff ff       	call   f010125f <page_insert>f0101c5b3015,136090
f0101c60:	83 c4 10             	add    $0x10,%espf0101c603016,136152
f0101c63:	85 c0                	test   %eax,%eaxf0101c633017,136202
f0101c65:	0f 85 b9 08 00 00    	jne    f0102524 <mem_init+0x1254>f0101c653018,136251
f0101c6b:	83 ec 04             	sub    $0x4,%espf0101c6b3020,136378
f0101c6e:	6a 00                	push   $0x0f0101c6e3021,136427
f0101c70:	68 00 10 00 00       	push   $0x1000f0101c703022,136471
f0101c75:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101c753023,136518
f0101c78:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101c783024,136574
f0101c7e:	ff 30                	pushl  (%eax)f0101c7e3025,136630
f0101c80:	e8 ce f3 ff ff       	call   f0101053 <pgdir_walk>f0101c803026,136676
f0101c85:	83 c4 10             	add    $0x10,%espf0101c853027,136737
f0101c88:	f6 00 02             	testb  $0x2,(%eax)f0101c883028,136787
f0101c8b:	0f 84 b5 08 00 00    	je     f0102546 <mem_init+0x1276>f0101c8b3029,136838
f0101c91:	83 ec 04             	sub    $0x4,%espf0101c913031,136968
f0101c94:	6a 00                	push   $0x0f0101c943032,137017
f0101c96:	68 00 10 00 00       	push   $0x1000f0101c963033,137061
f0101c9b:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101c9b3034,137108
f0101c9e:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101c9e3035,137164
f0101ca4:	ff 30                	pushl  (%eax)f0101ca43036,137220
f0101ca6:	e8 a8 f3 ff ff       	call   f0101053 <pgdir_walk>f0101ca63037,137266
f0101cab:	83 c4 10             	add    $0x10,%espf0101cab3038,137327
f0101cae:	f6 00 04             	testb  $0x4,(%eax)f0101cae3039,137377
f0101cb1:	0f 85 b1 08 00 00    	jne    f0102568 <mem_init+0x1298>f0101cb13040,137428
f0101cb7:	6a 02                	push   $0x2f0101cb73044,137639
f0101cb9:	68 00 00 40 00       	push   $0x400000f0101cb93045,137683
f0101cbe:	56                   	push   %esif0101cbe3046,137732
f0101cbf:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101cbf3047,137776
f0101cc2:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101cc23048,137832
f0101cc8:	ff 30                	pushl  (%eax)f0101cc83049,137888
f0101cca:	e8 90 f5 ff ff       	call   f010125f <page_insert>f0101cca3050,137934
f0101ccf:	83 c4 10             	add    $0x10,%espf0101ccf3051,137996
f0101cd2:	85 c0                	test   %eax,%eaxf0101cd23052,138046
f0101cd4:	0f 89 b0 08 00 00    	jns    f010258a <mem_init+0x12ba>f0101cd43053,138095
f0101cda:	6a 02                	push   $0x2f0101cda3057,138270
f0101cdc:	68 00 10 00 00       	push   $0x1000f0101cdc3058,138314
f0101ce1:	57                   	push   %edif0101ce13059,138361
f0101ce2:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101ce23060,138405
f0101ce5:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101ce53061,138461
f0101ceb:	ff 30                	pushl  (%eax)f0101ceb3062,138517
f0101ced:	e8 6d f5 ff ff       	call   f010125f <page_insert>f0101ced3063,138563
f0101cf2:	83 c4 10             	add    $0x10,%espf0101cf23064,138625
f0101cf5:	85 c0                	test   %eax,%eaxf0101cf53065,138675
f0101cf7:	0f 85 af 08 00 00    	jne    f01025ac <mem_init+0x12dc>f0101cf73066,138724
f0101cfd:	83 ec 04             	sub    $0x4,%espf0101cfd3068,138854
f0101d00:	6a 00                	push   $0x0f0101d003069,138903
f0101d02:	68 00 10 00 00       	push   $0x1000f0101d023070,138947
f0101d07:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101d073071,138994
f0101d0a:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101d0a3072,139050
f0101d10:	ff 30                	pushl  (%eax)f0101d103073,139106
f0101d12:	e8 3c f3 ff ff       	call   f0101053 <pgdir_walk>f0101d123074,139152
f0101d17:	83 c4 10             	add    $0x10,%espf0101d173075,139213
f0101d1a:	f6 00 04             	testb  $0x4,(%eax)f0101d1a3076,139263
f0101d1d:	0f 85 ab 08 00 00    	jne    f01025ce <mem_init+0x12fe>f0101d1d3077,139314
f0101d23:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101d233081,139493
f0101d26:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101d263082,139549
f0101d2c:	8b 18                	mov    (%eax),%ebxf0101d2c3083,139605
f0101d2e:	ba 00 00 00 00       	mov    $0x0,%edxf0101d2e3084,139656
f0101d33:	89 d8                	mov    %ebx,%eaxf0101d333085,139705
f0101d35:	e8 04 ed ff ff       	call   f0100a3e <check_va2pa>f0101d353086,139754
f0101d3a:	89 c2                	mov    %eax,%edxf0101d3a3087,139816
f0101d3c:	89 45 cc             	mov    %eax,-0x34(%ebp)f0101d3c3088,139865
f0101d3f:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0101d3f3089,139921
f0101d42:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0101d423090,139977
f0101d48:	89 f9                	mov    %edi,%ecxf0101d483091,140033
f0101d4a:	2b 08                	sub    (%eax),%ecxf0101d4a3092,140082
f0101d4c:	89 c8                	mov    %ecx,%eaxf0101d4c3093,140133
f0101d4e:	c1 f8 03             	sar    $0x3,%eaxf0101d4e3094,140182
f0101d51:	c1 e0 0c             	shl    $0xc,%eaxf0101d513095,140231
f0101d54:	39 c2                	cmp    %eax,%edxf0101d543096,140280
f0101d56:	0f 85 94 08 00 00    	jne    f01025f0 <mem_init+0x1320>f0101d563097,140329
f0101d5c:	ba 00 10 00 00       	mov    $0x1000,%edxf0101d5c3099,140453
f0101d61:	89 d8                	mov    %ebx,%eaxf0101d613100,140505
f0101d63:	e8 d6 ec ff ff       	call   f0100a3e <check_va2pa>f0101d633101,140554
f0101d68:	39 45 cc             	cmp    %eax,-0x34(%ebp)f0101d683102,140616
f0101d6b:	0f 85 a1 08 00 00    	jne    f0102612 <mem_init+0x1342>f0101d6b3103,140672
f0101d71:	66 83 7f 04 02       	cmpw   $0x2,0x4(%edi)f0101d713106,140808
f0101d76:	0f 85 b8 08 00 00    	jne    f0102634 <mem_init+0x1364>f0101d763107,140862
f0101d7c:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0101d7c3109,140955
f0101d7f:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)f0101d7f3110,141011
f0101d84:	0f 85 cc 08 00 00    	jne    f0102656 <mem_init+0x1386>f0101d843111,141065
f0101d8a:	83 ec 0c             	sub    $0xc,%espf0101d8a3115,141217
f0101d8d:	6a 00                	push   $0x0f0101d8d3116,141266
f0101d8f:	e8 9c f1 ff ff       	call   f0100f30 <page_alloc>f0101d8f3117,141310
f0101d94:	83 c4 10             	add    $0x10,%espf0101d943118,141371
f0101d97:	39 45 d0             	cmp    %eax,-0x30(%ebp)f0101d973119,141421
f0101d9a:	0f 85 d8 08 00 00    	jne    f0102678 <mem_init+0x13a8>f0101d9a3120,141477
f0101da0:	85 c0                	test   %eax,%eaxf0101da03121,141543
f0101da2:	0f 84 d0 08 00 00    	je     f0102678 <mem_init+0x13a8>f0101da23122,141592
f0101da8:	83 ec 08             	sub    $0x8,%espf0101da83126,141739
f0101dab:	6a 00                	push   $0x0f0101dab3127,141788
f0101dad:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101dad3128,141832
f0101db0:	c7 c3 cc 96 11 f0    	mov    $0xf01196cc,%ebxf0101db03129,141888
f0101db6:	ff 33                	pushl  (%ebx)f0101db63130,141944
f0101db8:	e8 4f f4 ff ff       	call   f010120c <page_remove>f0101db83131,141990
f0101dbd:	8b 1b                	mov    (%ebx),%ebxf0101dbd3133,142097
f0101dbf:	ba 00 00 00 00       	mov    $0x0,%edxf0101dbf3134,142148
f0101dc4:	89 d8                	mov    %ebx,%eaxf0101dc43135,142197
f0101dc6:	e8 73 ec ff ff       	call   f0100a3e <check_va2pa>f0101dc63136,142246
f0101dcb:	83 c4 10             	add    $0x10,%espf0101dcb3137,142308
f0101dce:	83 f8 ff             	cmp    $0xffffffff,%eaxf0101dce3138,142358
f0101dd1:	0f 85 c3 08 00 00    	jne    f010269a <mem_init+0x13ca>f0101dd13139,142414
f0101dd7:	ba 00 10 00 00       	mov    $0x1000,%edxf0101dd73141,142538
f0101ddc:	89 d8                	mov    %ebx,%eaxf0101ddc3142,142590
f0101dde:	e8 5b ec ff ff       	call   f0100a3e <check_va2pa>f0101dde3143,142639
f0101de3:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0101de33144,142701
f0101de6:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf0101de63145,142757
f0101dec:	89 f9                	mov    %edi,%ecxf0101dec3146,142813
f0101dee:	2b 0a                	sub    (%edx),%ecxf0101dee3147,142862
f0101df0:	89 ca                	mov    %ecx,%edxf0101df03148,142913
f0101df2:	c1 fa 03             	sar    $0x3,%edxf0101df23149,142962
f0101df5:	c1 e2 0c             	shl    $0xc,%edxf0101df53150,143011
f0101df8:	39 d0                	cmp    %edx,%eaxf0101df83151,143060
f0101dfa:	0f 85 bc 08 00 00    	jne    f01026bc <mem_init+0x13ec>f0101dfa3152,143109
f0101e00:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)f0101e003154,143202
f0101e05:	0f 85 d3 08 00 00    	jne    f01026de <mem_init+0x140e>f0101e053155,143256
f0101e0b:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0101e0b3157,143349
f0101e0e:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)f0101e0e3158,143405
f0101e13:	0f 85 e7 08 00 00    	jne    f0102700 <mem_init+0x1430>f0101e133159,143459
f0101e19:	6a 00                	push   $0x0f0101e193163,143625
f0101e1b:	68 00 10 00 00       	push   $0x1000f0101e1b3164,143669
f0101e20:	57                   	push   %edif0101e203165,143716
f0101e21:	53                   	push   %ebxf0101e213166,143760
f0101e22:	e8 38 f4 ff ff       	call   f010125f <page_insert>f0101e223167,143804
f0101e27:	83 c4 10             	add    $0x10,%espf0101e273168,143866
f0101e2a:	85 c0                	test   %eax,%eaxf0101e2a3169,143916
f0101e2c:	0f 85 f0 08 00 00    	jne    f0102722 <mem_init+0x1452>f0101e2c3170,143965
f0101e32:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)f0101e323172,144053
f0101e37:	0f 84 07 09 00 00    	je     f0102744 <mem_init+0x1474>f0101e373173,144107
f0101e3d:	83 3f 00             	cmpl   $0x0,(%edi)f0101e3d3175,144204
f0101e40:	0f 85 20 09 00 00    	jne    f0102766 <mem_init+0x1496>f0101e403176,144255
f0101e46:	83 ec 08             	sub    $0x8,%espf0101e463180,144407
f0101e49:	68 00 10 00 00       	push   $0x1000f0101e493181,144456
f0101e4e:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101e4e3182,144503
f0101e51:	c7 c3 cc 96 11 f0    	mov    $0xf01196cc,%ebxf0101e513183,144559
f0101e57:	ff 33                	pushl  (%ebx)f0101e573184,144615
f0101e59:	e8 ae f3 ff ff       	call   f010120c <page_remove>f0101e593185,144661
f0101e5e:	8b 1b                	mov    (%ebx),%ebxf0101e5e3187,144768
f0101e60:	ba 00 00 00 00       	mov    $0x0,%edxf0101e603188,144819
f0101e65:	89 d8                	mov    %ebx,%eaxf0101e653189,144868
f0101e67:	e8 d2 eb ff ff       	call   f0100a3e <check_va2pa>f0101e673190,144917
f0101e6c:	83 c4 10             	add    $0x10,%espf0101e6c3191,144979
f0101e6f:	83 f8 ff             	cmp    $0xffffffff,%eaxf0101e6f3192,145029
f0101e72:	0f 85 10 09 00 00    	jne    f0102788 <mem_init+0x14b8>f0101e723193,145085
f0101e78:	ba 00 10 00 00       	mov    $0x1000,%edxf0101e783195,145199
f0101e7d:	89 d8                	mov    %ebx,%eaxf0101e7d3196,145251
f0101e7f:	e8 ba eb ff ff       	call   f0100a3e <check_va2pa>f0101e7f3197,145300
f0101e84:	83 f8 ff             	cmp    $0xffffffff,%eaxf0101e843198,145362
f0101e87:	0f 85 1d 09 00 00    	jne    f01027aa <mem_init+0x14da>f0101e873199,145418
f0101e8d:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)f0101e8d3201,145511
f0101e92:	0f 85 34 09 00 00    	jne    f01027cc <mem_init+0x14fc>f0101e923202,145565
f0101e98:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0101e983204,145658
f0101e9b:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)f0101e9b3205,145714
f0101ea0:	0f 85 48 09 00 00    	jne    f01027ee <mem_init+0x151e>f0101ea03206,145768
f0101ea6:	83 ec 0c             	sub    $0xc,%espf0101ea63210,145922
f0101ea9:	6a 00                	push   $0x0f0101ea93211,145971
f0101eab:	e8 80 f0 ff ff       	call   f0100f30 <page_alloc>f0101eab3212,146015
f0101eb0:	83 c4 10             	add    $0x10,%espf0101eb03213,146076
f0101eb3:	85 c0                	test   %eax,%eaxf0101eb33214,146126
f0101eb5:	0f 84 55 09 00 00    	je     f0102810 <mem_init+0x1540>f0101eb53215,146175
f0101ebb:	39 c7                	cmp    %eax,%edif0101ebb3216,146241
f0101ebd:	0f 85 4d 09 00 00    	jne    f0102810 <mem_init+0x1540>f0101ebd3217,146290
f0101ec3:	83 ec 0c             	sub    $0xc,%espf0101ec33221,146411
f0101ec6:	6a 00                	push   $0x0f0101ec63222,146460
f0101ec8:	e8 63 f0 ff ff       	call   f0100f30 <page_alloc>f0101ec83223,146504
f0101ecd:	83 c4 10             	add    $0x10,%espf0101ecd3224,146565
f0101ed0:	85 c0                	test   %eax,%eaxf0101ed03225,146615
f0101ed2:	0f 85 5a 09 00 00    	jne    f0102832 <mem_init+0x1562>f0101ed23226,146664
f0101ed8:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0101ed83230,146808
f0101edb:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101edb3231,146864
f0101ee1:	8b 08                	mov    (%eax),%ecxf0101ee13232,146920
f0101ee3:	8b 11                	mov    (%ecx),%edxf0101ee33233,146971
f0101ee5:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf0101ee53234,147022
f0101eeb:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0101eeb3235,147078
f0101ef1:	89 f3                	mov    %esi,%ebxf0101ef13236,147134
f0101ef3:	2b 18                	sub    (%eax),%ebxf0101ef33237,147183
f0101ef5:	89 d8                	mov    %ebx,%eaxf0101ef53238,147234
f0101ef7:	c1 f8 03             	sar    $0x3,%eaxf0101ef73239,147283
f0101efa:	c1 e0 0c             	shl    $0xc,%eaxf0101efa3240,147332
f0101efd:	39 c2                	cmp    %eax,%edxf0101efd3241,147381
f0101eff:	0f 85 4f 09 00 00    	jne    f0102854 <mem_init+0x1584>f0101eff3242,147430
f0101f05:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)f0101f053244,147516
f0101f0b:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)f0101f0b3246,147594
f0101f10:	0f 85 60 09 00 00    	jne    f0102876 <mem_init+0x15a6>f0101f103247,147648
f0101f16:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)f0101f163249,147732
f0101f1c:	83 ec 0c             	sub    $0xc,%espf0101f1c3253,147847
f0101f1f:	56                   	push   %esif0101f1f3254,147896
f0101f20:	e8 99 f0 ff ff       	call   f0100fbe <page_free>f0101f203255,147940
	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);va3256,148000
	ptep = pgdir_walk(kern_pgdir, va, 1);ptep3257,148045
f0101f25:	83 c4 0c             	add    $0xc,%espf0101f253258,148084
f0101f28:	6a 01                	push   $0x1f0101f283259,148133
f0101f2a:	68 00 10 40 00       	push   $0x401000f0101f2a3260,148177
f0101f2f:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101f2f3261,148226
f0101f32:	c7 c3 cc 96 11 f0    	mov    $0xf01196cc,%ebxf0101f323262,148282
f0101f38:	ff 33                	pushl  (%ebx)f0101f383263,148338
f0101f3a:	e8 14 f1 ff ff       	call   f0101053 <pgdir_walk>f0101f3a3264,148384
f0101f3f:	89 45 cc             	mov    %eax,-0x34(%ebp)f0101f3f3265,148445
f0101f42:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0101f423266,148501
	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));ptep13267,148557
f0101f45:	8b 1b                	mov    (%ebx),%ebxf0101f453268,148614
f0101f47:	8b 53 04             	mov    0x4(%ebx),%edxf0101f473269,148665
f0101f4a:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf0101f4a3270,148719
f0101f50:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0101f503272,148801
f0101f53:	c7 c1 c8 96 11 f0    	mov    $0xf01196c8,%ecxf0101f533273,148857
f0101f59:	8b 09                	mov    (%ecx),%ecxf0101f593274,148913
f0101f5b:	89 d0                	mov    %edx,%eaxf0101f5b3275,148964
f0101f5d:	c1 e8 0c             	shr    $0xc,%eaxf0101f5d3276,149013
f0101f60:	83 c4 10             	add    $0x10,%espf0101f603277,149062
f0101f63:	39 c8                	cmp    %ecx,%eaxf0101f633278,149112
f0101f65:	0f 83 2d 09 00 00    	jae    f0102898 <mem_init+0x15c8>f0101f653279,149161
f0101f6b:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edxf0101f6b3281,149261
f0101f71:	39 55 cc             	cmp    %edx,-0x34(%ebp)f0101f713282,149316
f0101f74:	0f 85 3a 09 00 00    	jne    f01028b4 <mem_init+0x15e4>f0101f743283,149372
f0101f7a:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)f0101f7a3285,149464
f0101f81:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)f0101f813287,149536
f0101f87:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101f873289,149623
f0101f8a:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0101f8a3290,149679
f0101f90:	89 f3                	mov    %esi,%ebxf0101f903291,149735
f0101f92:	2b 18                	sub    (%eax),%ebxf0101f923292,149784
f0101f94:	89 d8                	mov    %ebx,%eaxf0101f943293,149835
f0101f96:	c1 f8 03             	sar    $0x3,%eaxf0101f963294,149884
f0101f99:	c1 e0 0c             	shl    $0xc,%eaxf0101f993295,149933
f0101f9c:	89 c2                	mov    %eax,%edxf0101f9c3297,150008
f0101f9e:	c1 ea 0c             	shr    $0xc,%edxf0101f9e3298,150057
f0101fa1:	39 d1                	cmp    %edx,%ecxf0101fa13299,150106
f0101fa3:	0f 86 2d 09 00 00    	jbe    f01028d6 <mem_init+0x1606>f0101fa33300,150155
f0101fa9:	83 ec 04             	sub    $0x4,%espf0101fa93304,150303
f0101fac:	68 00 10 00 00       	push   $0x1000f0101fac3305,150352
f0101fb1:	68 ff 00 00 00       	push   $0xfff0101fb13306,150399
f0101fb6:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0101fb63308,150477
f0101fbb:	50                   	push   %eaxf0101fbb3309,150533
f0101fbc:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0101fbc3310,150577
f0101fbf:	e8 e2 1b 00 00       	call   f0103ba6 <memset>f0101fbf3311,150633
f0101fc4:	89 34 24             	mov    %esi,(%esp)f0101fc43313,150707
f0101fc7:	e8 f2 ef ff ff       	call   f0100fbe <page_free>f0101fc73314,150758
f0101fcc:	83 c4 0c             	add    $0xc,%espf0101fcc3316,150851
f0101fcf:	6a 01                	push   $0x1f0101fcf3317,150900
f0101fd1:	6a 00                	push   $0x0f0101fd13318,150944
f0101fd3:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0101fd33319,150988
f0101fd6:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101fd63320,151044
f0101fdc:	ff 30                	pushl  (%eax)f0101fdc3321,151100
f0101fde:	e8 70 f0 ff ff       	call   f0101053 <pgdir_walk>f0101fde3322,151146
f0101fe3:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0101fe33324,151240
f0101fe9:	89 f2                	mov    %esi,%edxf0101fe93325,151296
f0101feb:	2b 10                	sub    (%eax),%edxf0101feb3326,151345
f0101fed:	c1 fa 03             	sar    $0x3,%edxf0101fed3327,151396
f0101ff0:	c1 e2 0c             	shl    $0xc,%edxf0101ff03328,151445
f0101ff3:	89 d1                	mov    %edx,%ecxf0101ff33330,151520
f0101ff5:	c1 e9 0c             	shr    $0xc,%ecxf0101ff53331,151569
f0101ff8:	83 c4 10             	add    $0x10,%espf0101ff83332,151618
f0101ffb:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf0101ffb3333,151668
f0102001:	3b 08                	cmp    (%eax),%ecxf01020013334,151724
f0102003:	0f 83 e6 08 00 00    	jae    f01028ef <mem_init+0x161f>f01020033335,151775
f0102009:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eaxf01020093337,151874
	ptep = (pte_t *) page2kva(pp0);ptep3338,151936
f010200f:	89 45 e4             	mov    %eax,-0x1c(%ebp)f010200f3339,151969
f0102012:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edxf01020123340,152025
f0102018:	f6 00 01             	testb  $0x1,(%eax)f01020183343,152143
f010201b:	0f 85 e7 08 00 00    	jne    f0102908 <mem_init+0x1638>f010201b3344,152194
f0102021:	83 c0 04             	add    $0x4,%eaxf01020213345,152260
f0102024:	39 d0                	cmp    %edx,%eaxf01020243347,152338
f0102026:	75 f0                	jne    f0102018 <mem_init+0xd48>f01020263348,152387
f0102028:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01020283350,152472
f010202b:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf010202b3351,152528
f0102031:	8b 00                	mov    (%eax),%eaxf01020313352,152584
f0102033:	c7 00 00 00 00 00    	movl   $0x0,(%eax)f01020333353,152635
f0102039:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)f01020393355,152704
	page_free_list = fl;page_free_list3358,152783
f010203f:	8b 45 c8             	mov    -0x38(%ebp),%eaxf010203f3359,152805
f0102042:	89 83 90 1f 00 00    	mov    %eax,0x1f90(%ebx)f01020423360,152861
f0102048:	83 ec 0c             	sub    $0xc,%espf01020483364,152963
f010204b:	56                   	push   %esif010204b3365,153012
f010204c:	e8 6d ef ff ff       	call   f0100fbe <page_free>f010204c3366,153056
f0102051:	89 3c 24             	mov    %edi,(%esp)f01020513368,153133
f0102054:	e8 65 ef ff ff       	call   f0100fbe <page_free>f01020543369,153184
f0102059:	83 c4 04             	add    $0x4,%espf01020593371,153261
f010205c:	ff 75 d0             	pushl  -0x30(%ebp)f010205c3372,153310
f010205f:	e8 5a ef ff ff       	call   f0100fbe <page_free>f010205f3373,153361
f0102064:	8d 83 42 dc fe ff    	lea    -0x123be(%ebx),%eaxf01020643376,153461
f010206a:	89 04 24             	mov    %eax,(%esp)f010206a3377,153520
f010206d:	e8 d8 0f 00 00       	call   f010304a <cprintf>f010206d3378,153571
f0102072:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01020723380,153696
f0102078:	8b 00                	mov    (%eax),%eaxf01020783381,153752
f010207a:	83 c4 10             	add    $0x10,%espf010207a3383,153834
f010207d:	3d ff ff ff ef       	cmp    $0xefffffff,%eaxf010207d3384,153884
f0102082:	0f 86 a2 08 00 00    	jbe    f010292a <mem_init+0x165a>f01020823385,153940
f0102088:	83 ec 08             	sub    $0x8,%espf01020883386,154006
f010208b:	6a 04                	push   $0x4f010208b3387,154055
f010208d:	05 00 00 00 10       	add    $0x10000000,%eaxf010208d3389,154135
f0102092:	50                   	push   %eaxf01020923390,154191
f0102093:	b9 00 00 40 00       	mov    $0x400000,%ecxf01020933391,154235
f0102098:	ba 00 00 00 ef       	mov    $0xef000000,%edxf01020983392,154289
f010209d:	8b 7d d4             	mov    -0x2c(%ebp),%edif010209d3393,154345
f01020a0:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf01020a03394,154401
f01020a6:	8b 00                	mov    (%eax),%eaxf01020a63395,154457
f01020a8:	e8 52 f0 ff ff       	call   f01010ff <boot_map_region>f01020a83396,154508
f01020ad:	c7 c0 00 e0 10 f0    	mov    $0xf010e000,%eaxf01020ad3398,154605
f01020b3:	89 45 c8             	mov    %eax,-0x38(%ebp)f01020b33399,154661
f01020b6:	83 c4 10             	add    $0x10,%espf01020b63400,154717
f01020b9:	3d ff ff ff ef       	cmp    $0xefffffff,%eaxf01020b93401,154767
f01020be:	0f 86 82 08 00 00    	jbe    f0102946 <mem_init+0x1676>f01020be3402,154823
f01020c4:	8b 7d d4             	mov    -0x2c(%ebp),%edif01020c43404,154976
f01020c7:	c7 c6 cc 96 11 f0    	mov    $0xf01196cc,%esif01020c73405,155032
f01020cd:	83 ec 08             	sub    $0x8,%espf01020cd3406,155088
f01020d0:	6a 02                	push   $0x2f01020d03407,155137
f01020d2:	8b 45 c8             	mov    -0x38(%ebp),%eaxf01020d23409,155217
f01020d5:	05 00 00 00 10       	add    $0x10000000,%eaxf01020d53410,155273
f01020da:	50                   	push   %eaxf01020da3411,155329
f01020db:	b9 00 80 00 00       	mov    $0x8000,%ecxf01020db3412,155373
f01020e0:	ba 00 80 ff ef       	mov    $0xefff8000,%edxf01020e03413,155425
f01020e5:	8b 06                	mov    (%esi),%eaxf01020e53414,155481
f01020e7:	e8 13 f0 ff ff       	call   f01010ff <boot_map_region>f01020e73415,155532
f01020ec:	c7 c3 c8 96 11 f0    	mov    $0xf01196c8,%ebxf01020ec3417,155667
f01020f2:	8b 0b                	mov    (%ebx),%ecxf01020f23418,155723
f01020f4:	c1 e1 0c             	shl    $0xc,%ecxf01020f43419,155774
f01020f7:	83 c4 08             	add    $0x8,%espf01020f73420,155823
f01020fa:	6a 02                	push   $0x2f01020fa3421,155872
f01020fc:	6a 00                	push   $0x0f01020fc3422,155916
f01020fe:	ba 00 00 00 f0       	mov    $0xf0000000,%edxf01020fe3423,155960
f0102103:	8b 06                	mov    (%esi),%eaxf01021033424,156016
f0102105:	e8 f5 ef ff ff       	call   f01010ff <boot_map_region>f01021053425,156067
	pgdir = kern_pgdir;pgdir3426,156133
f010210a:	8b 36                	mov    (%esi),%esif010210a3427,156154
	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);n3428,156205
f010210c:	8b 03                	mov    (%ebx),%eaxf010210c3429,156259
f010210e:	89 45 c4             	mov    %eax,-0x3c(%ebp)f010210e3430,156310
f0102111:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eaxf01021113431,156366
f0102118:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf01021183432,156425
f010211d:	89 45 d0             	mov    %eax,-0x30(%ebp)f010211d3433,156481
f0102120:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01021203435,156599
f0102126:	8b 00                	mov    (%eax),%eaxf01021263436,156655
f0102128:	89 45 c0             	mov    %eax,-0x40(%ebp)f01021283437,156706
f010212b:	89 45 cc             	mov    %eax,-0x34(%ebp)f010212b3439,156793
f010212e:	8d 98 00 00 00 10    	lea    0x10000000(%eax),%ebxf010212e3441,156885
f0102134:	83 c4 10             	add    $0x10,%espf01021343442,156946
f0102137:	bf 00 00 00 00       	mov    $0x0,%edif01021373444,157029
f010213c:	39 7d d0             	cmp    %edi,-0x30(%ebp)f010213c3445,157078
f010213f:	0f 86 62 08 00 00    	jbe    f01029a7 <mem_init+0x16d7>f010213f3446,157134
f0102145:	8d 97 00 00 00 ef    	lea    -0x11000000(%edi),%edxf01021453448,157262
f010214b:	89 f0                	mov    %esi,%eaxf010214b3449,157324
f010214d:	e8 ec e8 ff ff       	call   f0100a3e <check_va2pa>f010214d3450,157373
f0102152:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)f01021523452,157466
f0102159:	0f 86 08 08 00 00    	jbe    f0102967 <mem_init+0x1697>f01021593453,157529
f010215f:	8d 14 1f             	lea    (%edi,%ebx,1),%edxf010215f3454,157595
f0102162:	39 c2                	cmp    %eax,%edxf01021623455,157653
f0102164:	0f 85 1b 08 00 00    	jne    f0102985 <mem_init+0x16b5>f01021643456,157702
f010216a:	81 c7 00 10 00 00    	add    $0x1000,%edif010216a3458,157801
f0102170:	eb ca                	jmp    f010213c <mem_init+0xe6c>f01021703459,157853
f0102172:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01021723461,157939
f0102175:	8d 83 6b db fe ff    	lea    -0x12495(%ebx),%eaxf01021753462,157995
f010217b:	50                   	push   %eaxf010217b3463,158054
f010217c:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf010217c3464,158098
f0102182:	50                   	push   %eaxf01021823465,158157
f0102183:	68 82 02 00 00       	push   $0x282f01021833466,158201
f0102188:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01021883467,158247
f010218e:	50                   	push   %eaxf010218e3468,158306
f010218f:	e8 05 df ff ff       	call   f0100099 <_panic>f010218f3469,158350
f0102194:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01021943471,158439
f0102197:	8d 83 79 da fe ff    	lea    -0x12587(%ebx),%eaxf01021973472,158495
f010219d:	50                   	push   %eaxf010219d3473,158554
f010219e:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf010219e3474,158598
f01021a4:	50                   	push   %eaxf01021a43475,158657
f01021a5:	68 db 02 00 00       	push   $0x2dbf01021a53476,158701
f01021aa:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01021aa3477,158747
f01021b0:	50                   	push   %eaxf01021b03478,158806
f01021b1:	e8 e3 de ff ff       	call   f0100099 <_panic>f01021b13479,158850
f01021b6:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01021b63481,158939
f01021b9:	8d 83 8f da fe ff    	lea    -0x12571(%ebx),%eaxf01021b93482,158995
f01021bf:	50                   	push   %eaxf01021bf3483,159054
f01021c0:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01021c03484,159098
f01021c6:	50                   	push   %eaxf01021c63485,159157
f01021c7:	68 dc 02 00 00       	push   $0x2dcf01021c73486,159201
f01021cc:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01021cc3487,159247
f01021d2:	50                   	push   %eaxf01021d23488,159306
f01021d3:	e8 c1 de ff ff       	call   f0100099 <_panic>f01021d33489,159350
f01021d8:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01021d83491,159439
f01021db:	8d 83 a5 da fe ff    	lea    -0x1255b(%ebx),%eaxf01021db3492,159495
f01021e1:	50                   	push   %eaxf01021e13493,159554
f01021e2:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01021e23494,159598
f01021e8:	50                   	push   %eaxf01021e83495,159657
f01021e9:	68 dd 02 00 00       	push   $0x2ddf01021e93496,159701
f01021ee:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01021ee3497,159747
f01021f4:	50                   	push   %eaxf01021f43498,159806
f01021f5:	e8 9f de ff ff       	call   f0100099 <_panic>f01021f53499,159850
f01021fa:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01021fa3501,159935
f01021fd:	8d 83 bb da fe ff    	lea    -0x12545(%ebx),%eaxf01021fd3502,159991
f0102203:	50                   	push   %eaxf01022033503,160050
f0102204:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01022043504,160094
f010220a:	50                   	push   %eaxf010220a3505,160153
f010220b:	68 e0 02 00 00       	push   $0x2e0f010220b3506,160197
f0102210:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01022103507,160243
f0102216:	50                   	push   %eaxf01022163508,160302
f0102217:	e8 7d de ff ff       	call   f0100099 <_panic>f01022173509,160346
f010221c:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010221c3511,160445
f010221f:	8d 83 bc d3 fe ff    	lea    -0x12c44(%ebx),%eaxf010221f3512,160501
f0102225:	50                   	push   %eaxf01022253513,160560
f0102226:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01022263514,160604
f010222c:	50                   	push   %eaxf010222c3515,160663
f010222d:	68 e1 02 00 00       	push   $0x2e1f010222d3516,160707
f0102232:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01022323517,160753
f0102238:	50                   	push   %eaxf01022383518,160812
f0102239:	e8 5b de ff ff       	call   f0100099 <_panic>f01022393519,160856
f010223e:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010223e3521,160938
f0102241:	8d 83 24 db fe ff    	lea    -0x124dc(%ebx),%eaxf01022413522,160994
f0102247:	50                   	push   %eaxf01022473523,161053
f0102248:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01022483524,161097
f010224e:	50                   	push   %eaxf010224e3525,161156
f010224f:	68 e8 02 00 00       	push   $0x2e8f010224f3526,161200
f0102254:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01022543527,161246
f010225a:	50                   	push   %eaxf010225a3528,161305
f010225b:	e8 39 de ff ff       	call   f0100099 <_panic>f010225b3529,161349
f0102260:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01022603531,161469
f0102263:	8d 83 fc d3 fe ff    	lea    -0x12c04(%ebx),%eaxf01022633532,161525
f0102269:	50                   	push   %eaxf01022693533,161584
f010226a:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf010226a3534,161628
f0102270:	50                   	push   %eaxf01022703535,161687
f0102271:	68 eb 02 00 00       	push   $0x2ebf01022713536,161731
f0102276:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01022763537,161777
f010227c:	50                   	push   %eaxf010227c3538,161836
f010227d:	e8 17 de ff ff       	call   f0100099 <_panic>f010227d3539,161880
f0102282:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01022823541,161992
f0102285:	8d 83 34 d4 fe ff    	lea    -0x12bcc(%ebx),%eaxf01022853542,162048
f010228b:	50                   	push   %eaxf010228b3543,162107
f010228c:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf010228c3544,162151
f0102292:	50                   	push   %eaxf01022923545,162210
f0102293:	68 ee 02 00 00       	push   $0x2eef01022933546,162254
f0102298:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01022983547,162300
f010229e:	50                   	push   %eaxf010229e3548,162359
f010229f:	e8 f5 dd ff ff       	call   f0100099 <_panic>f010229f3549,162403
f01022a4:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01022a43551,162516
f01022a7:	8d 83 64 d4 fe ff    	lea    -0x12b9c(%ebx),%eaxf01022a73552,162572
f01022ad:	50                   	push   %eaxf01022ad3553,162631
f01022ae:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01022ae3554,162675
f01022b4:	50                   	push   %eaxf01022b43555,162734
f01022b5:	68 f2 02 00 00       	push   $0x2f2f01022b53556,162778
f01022ba:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01022ba3557,162824
f01022c0:	50                   	push   %eaxf01022c03558,162883
f01022c1:	e8 d3 dd ff ff       	call   f0100099 <_panic>f01022c13559,162927
f01022c6:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01022c63561,163034
f01022c9:	8d 83 94 d4 fe ff    	lea    -0x12b6c(%ebx),%eaxf01022c93562,163090
f01022cf:	50                   	push   %eaxf01022cf3563,163149
f01022d0:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01022d03564,163193
f01022d6:	50                   	push   %eaxf01022d63565,163252
f01022d7:	68 f3 02 00 00       	push   $0x2f3f01022d73566,163296
f01022dc:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01022dc3567,163342
f01022e2:	50                   	push   %eaxf01022e23568,163401
f01022e3:	e8 b1 dd ff ff       	call   f0100099 <_panic>f01022e33569,163445
f01022e8:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01022e83571,163557
f01022eb:	8d 83 bc d4 fe ff    	lea    -0x12b44(%ebx),%eaxf01022eb3572,163613
f01022f1:	50                   	push   %eaxf01022f13573,163672
f01022f2:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01022f23574,163716
f01022f8:	50                   	push   %eaxf01022f83575,163775
f01022f9:	68 f4 02 00 00       	push   $0x2f4f01022f93576,163819
f01022fe:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01022fe3577,163865
f0102304:	50                   	push   %eaxf01023043578,163924
f0102305:	e8 8f dd ff ff       	call   f0100099 <_panic>f01023053579,163968
f010230a:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010230a3581,164052
f010230d:	8d 83 76 db fe ff    	lea    -0x1248a(%ebx),%eaxf010230d3582,164108
f0102313:	50                   	push   %eaxf01023133583,164167
f0102314:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01023143584,164211
f010231a:	50                   	push   %eaxf010231a3585,164270
f010231b:	68 f5 02 00 00       	push   $0x2f5f010231b3586,164314
f0102320:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01023203587,164360
f0102326:	50                   	push   %eaxf01023263588,164419
f0102327:	e8 6d dd ff ff       	call   f0100099 <_panic>f01023273589,164463
f010232c:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010232c3591,164547
f010232f:	8d 83 87 db fe ff    	lea    -0x12479(%ebx),%eaxf010232f3592,164603
f0102335:	50                   	push   %eaxf01023353593,164662
f0102336:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01023363594,164706
f010233c:	50                   	push   %eaxf010233c3595,164765
f010233d:	68 f6 02 00 00       	push   $0x2f6f010233d3596,164809
f0102342:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01023423597,164855
f0102348:	50                   	push   %eaxf01023483598,164914
f0102349:	e8 4b dd ff ff       	call   f0100099 <_panic>f01023493599,164958
f010234e:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010234e3601,165082
f0102351:	8d 83 ec d4 fe ff    	lea    -0x12b14(%ebx),%eaxf01023513602,165138
f0102357:	50                   	push   %eaxf01023573603,165197
f0102358:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01023583604,165241
f010235e:	50                   	push   %eaxf010235e3605,165300
f010235f:	68 f9 02 00 00       	push   $0x2f9f010235f3606,165344
f0102364:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01023643607,165390
f010236a:	50                   	push   %eaxf010236a3608,165449
f010236b:	e8 29 dd ff ff       	call   f0100099 <_panic>f010236b3609,165493
f0102370:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01023703611,165608
f0102373:	8d 83 28 d5 fe ff    	lea    -0x12ad8(%ebx),%eaxf01023733612,165664
f0102379:	50                   	push   %eaxf01023793613,165723
f010237a:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf010237a3614,165767
f0102380:	50                   	push   %eaxf01023803615,165826
f0102381:	68 fa 02 00 00       	push   $0x2faf01023813616,165870
f0102386:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01023863617,165916
f010238c:	50                   	push   %eaxf010238c3618,165975
f010238d:	e8 07 dd ff ff       	call   f0100099 <_panic>f010238d3619,166019
f0102392:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01023923621,166101
f0102395:	8d 83 24 db fe ff    	lea    -0x124dc(%ebx),%eaxf01023953622,166157
f010239b:	50                   	push   %eaxf010239b3623,166216
f010239c:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf010239c3624,166260
f01023a2:	50                   	push   %eaxf01023a23625,166319
f01023a3:	68 fd 02 00 00       	push   $0x2fdf01023a33626,166363
f01023a8:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01023a83627,166409
f01023ae:	50                   	push   %eaxf01023ae3628,166468
f01023af:	e8 e5 dc ff ff       	call   f0100099 <_panic>f01023af3629,166512
f01023b4:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01023b43631,166636
f01023b7:	8d 83 ec d4 fe ff    	lea    -0x12b14(%ebx),%eaxf01023b73632,166692
f01023bd:	50                   	push   %eaxf01023bd3633,166751
f01023be:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01023be3634,166795
f01023c4:	50                   	push   %eaxf01023c43635,166854
f01023c5:	68 00 03 00 00       	push   $0x300f01023c53636,166898
f01023ca:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01023ca3637,166944
f01023d0:	50                   	push   %eaxf01023d03638,167003
f01023d1:	e8 c3 dc ff ff       	call   f0100099 <_panic>f01023d13639,167047
f01023d6:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01023d63641,167162
f01023d9:	8d 83 28 d5 fe ff    	lea    -0x12ad8(%ebx),%eaxf01023d93642,167218
f01023df:	50                   	push   %eaxf01023df3643,167277
f01023e0:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01023e03644,167321
f01023e6:	50                   	push   %eaxf01023e63645,167380
f01023e7:	68 01 03 00 00       	push   $0x301f01023e73646,167424
f01023ec:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01023ec3647,167470
f01023f2:	50                   	push   %eaxf01023f23648,167529
f01023f3:	e8 a1 dc ff ff       	call   f0100099 <_panic>f01023f33649,167573
f01023f8:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01023f83651,167657
f01023fb:	8d 83 98 db fe ff    	lea    -0x12468(%ebx),%eaxf01023fb3652,167713
f0102401:	50                   	push   %eaxf01024013653,167772
f0102402:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01024023654,167816
f0102408:	50                   	push   %eaxf01024083655,167875
f0102409:	68 02 03 00 00       	push   $0x302f01024093656,167919
f010240e:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010240e3657,167965
f0102414:	50                   	push   %eaxf01024143658,168024
f0102415:	e8 7f dc ff ff       	call   f0100099 <_panic>f01024153659,168068
f010241a:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010241a3661,168150
f010241d:	8d 83 24 db fe ff    	lea    -0x124dc(%ebx),%eaxf010241d3662,168206
f0102423:	50                   	push   %eaxf01024233663,168265
f0102424:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01024243664,168309
f010242a:	50                   	push   %eaxf010242a3665,168368
f010242b:	68 06 03 00 00       	push   $0x306f010242b3666,168412
f0102430:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01024303667,168458
f0102436:	50                   	push   %eaxf01024363668,168517
f0102437:	e8 5d dc ff ff       	call   f0100099 <_panic>f01024373669,168561
f010243c:	50                   	push   %eaxf010243c3671,168682
f010243d:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010243d3672,168726
f0102440:	8d 83 a4 d1 fe ff    	lea    -0x12e5c(%ebx),%eaxf01024403673,168782
f0102446:	50                   	push   %eaxf01024463674,168841
f0102447:	68 09 03 00 00       	push   $0x309f01024473675,168885
f010244c:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010244c3676,168931
f0102452:	50                   	push   %eaxf01024523677,168990
f0102453:	e8 41 dc ff ff       	call   f0100099 <_panic>f01024533678,169034
f0102458:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01024583680,169162
f010245b:	8d 83 58 d5 fe ff    	lea    -0x12aa8(%ebx),%eaxf010245b3681,169218
f0102461:	50                   	push   %eaxf01024613682,169277
f0102462:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01024623683,169321
f0102468:	50                   	push   %eaxf01024683684,169380
f0102469:	68 0a 03 00 00       	push   $0x30af01024693685,169424
f010246e:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010246e3686,169470
f0102474:	50                   	push   %eaxf01024743687,169529
f0102475:	e8 1f dc ff ff       	call   f0100099 <_panic>f01024753688,169573
f010247a:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010247a3690,169703
f010247d:	8d 83 98 d5 fe ff    	lea    -0x12a68(%ebx),%eaxf010247d3691,169759
f0102483:	50                   	push   %eaxf01024833692,169818
f0102484:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01024843693,169862
f010248a:	50                   	push   %eaxf010248a3694,169921
f010248b:	68 0d 03 00 00       	push   $0x30df010248b3695,169965
f0102490:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01024903696,170011
f0102496:	50                   	push   %eaxf01024963697,170070
f0102497:	e8 fd db ff ff       	call   f0100099 <_panic>f01024973698,170114
f010249c:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010249c3700,170229
f010249f:	8d 83 28 d5 fe ff    	lea    -0x12ad8(%ebx),%eaxf010249f3701,170285
f01024a5:	50                   	push   %eaxf01024a53702,170344
f01024a6:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01024a63703,170388
f01024ac:	50                   	push   %eaxf01024ac3704,170447
f01024ad:	68 0e 03 00 00       	push   $0x30ef01024ad3705,170491
f01024b2:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01024b23706,170537
f01024b8:	50                   	push   %eaxf01024b83707,170596
f01024b9:	e8 db db ff ff       	call   f0100099 <_panic>f01024b93708,170640
f01024be:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01024be3710,170724
f01024c1:	8d 83 98 db fe ff    	lea    -0x12468(%ebx),%eaxf01024c13711,170780
f01024c7:	50                   	push   %eaxf01024c73712,170839
f01024c8:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01024c83713,170883
f01024ce:	50                   	push   %eaxf01024ce3714,170942
f01024cf:	68 0f 03 00 00       	push   $0x30ff01024cf3715,170986
f01024d4:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01024d43716,171032
f01024da:	50                   	push   %eaxf01024da3717,171091
f01024db:	e8 b9 db ff ff       	call   f0100099 <_panic>f01024db3718,171135
f01024e0:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01024e03720,171253
f01024e3:	8d 83 d8 d5 fe ff    	lea    -0x12a28(%ebx),%eaxf01024e33721,171309
f01024e9:	50                   	push   %eaxf01024e93722,171368
f01024ea:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01024ea3723,171412
f01024f0:	50                   	push   %eaxf01024f03724,171471
f01024f1:	68 10 03 00 00       	push   $0x310f01024f13725,171515
f01024f6:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01024f63726,171561
f01024fc:	50                   	push   %eaxf01024fc3727,171620
f01024fd:	e8 97 db ff ff       	call   f0100099 <_panic>f01024fd3728,171664
f0102502:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01025023730,171753
f0102505:	8d 83 a9 db fe ff    	lea    -0x12457(%ebx),%eaxf01025053731,171809
f010250b:	50                   	push   %eaxf010250b3732,171868
f010250c:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf010250c3733,171912
f0102512:	50                   	push   %eaxf01025123734,171971
f0102513:	68 11 03 00 00       	push   $0x311f01025133735,172015
f0102518:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01025183736,172061
f010251e:	50                   	push   %eaxf010251e3737,172120
f010251f:	e8 75 db ff ff       	call   f0100099 <_panic>f010251f3738,172164
f0102524:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01025243740,172288
f0102527:	8d 83 ec d4 fe ff    	lea    -0x12b14(%ebx),%eaxf01025273741,172344
f010252d:	50                   	push   %eaxf010252d3742,172403
f010252e:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf010252e3743,172447
f0102534:	50                   	push   %eaxf01025343744,172506
f0102535:	68 14 03 00 00       	push   $0x314f01025353745,172550
f010253a:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010253a3746,172596
f0102540:	50                   	push   %eaxf01025403747,172655
f0102541:	e8 53 db ff ff       	call   f0100099 <_panic>f01025413748,172699
f0102546:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01025463750,172817
f0102549:	8d 83 0c d6 fe ff    	lea    -0x129f4(%ebx),%eaxf01025493751,172873
f010254f:	50                   	push   %eaxf010254f3752,172932
f0102550:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01025503753,172976
f0102556:	50                   	push   %eaxf01025563754,173035
f0102557:	68 15 03 00 00       	push   $0x315f01025573755,173079
f010255c:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010255c3756,173125
f0102562:	50                   	push   %eaxf01025623757,173184
f0102563:	e8 31 db ff ff       	call   f0100099 <_panic>f01025633758,173228
f0102568:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01025683760,173349
f010256b:	8d 83 40 d6 fe ff    	lea    -0x129c0(%ebx),%eaxf010256b3761,173405
f0102571:	50                   	push   %eaxf01025713762,173464
f0102572:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01025723763,173508
f0102578:	50                   	push   %eaxf01025783764,173567
f0102579:	68 16 03 00 00       	push   $0x316f01025793765,173611
f010257e:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010257e3766,173657
f0102584:	50                   	push   %eaxf01025843767,173716
f0102585:	e8 0f db ff ff       	call   f0100099 <_panic>f01025853768,173760
f010258a:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010258a3770,173883
f010258d:	8d 83 78 d6 fe ff    	lea    -0x12988(%ebx),%eaxf010258d3771,173939
f0102593:	50                   	push   %eaxf01025933772,173998
f0102594:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01025943773,174042
f010259a:	50                   	push   %eaxf010259a3774,174101
f010259b:	68 19 03 00 00       	push   $0x319f010259b3775,174145
f01025a0:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01025a03776,174191
f01025a6:	50                   	push   %eaxf01025a63777,174250
f01025a7:	e8 ed da ff ff       	call   f0100099 <_panic>f01025a73778,174294
f01025ac:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01025ac3780,174418
f01025af:	8d 83 b0 d6 fe ff    	lea    -0x12950(%ebx),%eaxf01025af3781,174474
f01025b5:	50                   	push   %eaxf01025b53782,174533
f01025b6:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01025b63783,174577
f01025bc:	50                   	push   %eaxf01025bc3784,174636
f01025bd:	68 1c 03 00 00       	push   $0x31cf01025bd3785,174680
f01025c2:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01025c23786,174726
f01025c8:	50                   	push   %eaxf01025c83787,174785
f01025c9:	e8 cb da ff ff       	call   f0100099 <_panic>f01025c93788,174829
f01025ce:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01025ce3790,174950
f01025d1:	8d 83 40 d6 fe ff    	lea    -0x129c0(%ebx),%eaxf01025d13791,175006
f01025d7:	50                   	push   %eaxf01025d73792,175065
f01025d8:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01025d83793,175109
f01025de:	50                   	push   %eaxf01025de3794,175168
f01025df:	68 1d 03 00 00       	push   $0x31df01025df3795,175212
f01025e4:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01025e43796,175258
f01025ea:	50                   	push   %eaxf01025ea3797,175317
f01025eb:	e8 a9 da ff ff       	call   f0100099 <_panic>f01025eb3798,175361
f01025f0:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01025f03800,175471
f01025f3:	8d 83 ec d6 fe ff    	lea    -0x12914(%ebx),%eaxf01025f33801,175527
f01025f9:	50                   	push   %eaxf01025f93802,175586
f01025fa:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01025fa3803,175630
f0102600:	50                   	push   %eaxf01026003804,175689
f0102601:	68 20 03 00 00       	push   $0x320f01026013805,175733
f0102606:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01026063806,175779
f010260c:	50                   	push   %eaxf010260c3807,175838
f010260d:	e8 87 da ff ff       	call   f0100099 <_panic>f010260d3808,175882
f0102612:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01026123810,175997
f0102615:	8d 83 18 d7 fe ff    	lea    -0x128e8(%ebx),%eaxf01026153811,176053
f010261b:	50                   	push   %eaxf010261b3812,176112
f010261c:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf010261c3813,176156
f0102622:	50                   	push   %eaxf01026223814,176215
f0102623:	68 21 03 00 00       	push   $0x321f01026233815,176259
f0102628:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01026283816,176305
f010262e:	50                   	push   %eaxf010262e3817,176364
f010262f:	e8 65 da ff ff       	call   f0100099 <_panic>f010262f3818,176408
f0102634:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01026343820,176492
f0102637:	8d 83 bf db fe ff    	lea    -0x12441(%ebx),%eaxf01026373821,176548
f010263d:	50                   	push   %eaxf010263d3822,176607
f010263e:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf010263e3823,176651
f0102644:	50                   	push   %eaxf01026443824,176710
f0102645:	68 23 03 00 00       	push   $0x323f01026453825,176754
f010264a:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010264a3826,176800
f0102650:	50                   	push   %eaxf01026503827,176859
f0102651:	e8 43 da ff ff       	call   f0100099 <_panic>f01026513828,176903
f0102656:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01026563830,176987
f0102659:	8d 83 d0 db fe ff    	lea    -0x12430(%ebx),%eaxf01026593831,177043
f010265f:	50                   	push   %eaxf010265f3832,177102
f0102660:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01026603833,177146
f0102666:	50                   	push   %eaxf01026663834,177205
f0102667:	68 24 03 00 00       	push   $0x324f01026673835,177249
f010266c:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010266c3836,177295
f0102672:	50                   	push   %eaxf01026723837,177354
f0102673:	e8 21 da ff ff       	call   f0100099 <_panic>f01026733838,177398
f0102678:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01026783840,177499
f010267b:	8d 83 48 d7 fe ff    	lea    -0x128b8(%ebx),%eaxf010267b3841,177555
f0102681:	50                   	push   %eaxf01026813842,177614
f0102682:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01026823843,177658
f0102688:	50                   	push   %eaxf01026883844,177717
f0102689:	68 27 03 00 00       	push   $0x327f01026893845,177761
f010268e:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010268e3846,177807
f0102694:	50                   	push   %eaxf01026943847,177866
f0102695:	e8 ff d9 ff ff       	call   f0100099 <_panic>f01026953848,177910
f010269a:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010269a3850,178012
f010269d:	8d 83 6c d7 fe ff    	lea    -0x12894(%ebx),%eaxf010269d3851,178068
f01026a3:	50                   	push   %eaxf01026a33852,178127
f01026a4:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01026a43853,178171
f01026aa:	50                   	push   %eaxf01026aa3854,178230
f01026ab:	68 2b 03 00 00       	push   $0x32bf01026ab3855,178274
f01026b0:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01026b03856,178320
f01026b6:	50                   	push   %eaxf01026b63857,178379
f01026b7:	e8 dd d9 ff ff       	call   f0100099 <_panic>f01026b73858,178423
f01026bc:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01026bc3860,178538
f01026bf:	8d 83 18 d7 fe ff    	lea    -0x128e8(%ebx),%eaxf01026bf3861,178594
f01026c5:	50                   	push   %eaxf01026c53862,178653
f01026c6:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01026c63863,178697
f01026cc:	50                   	push   %eaxf01026cc3864,178756
f01026cd:	68 2c 03 00 00       	push   $0x32cf01026cd3865,178800
f01026d2:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01026d23866,178846
f01026d8:	50                   	push   %eaxf01026d83867,178905
f01026d9:	e8 bb d9 ff ff       	call   f0100099 <_panic>f01026d93868,178949
f01026de:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01026de3870,179033
f01026e1:	8d 83 76 db fe ff    	lea    -0x1248a(%ebx),%eaxf01026e13871,179089
f01026e7:	50                   	push   %eaxf01026e73872,179148
f01026e8:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01026e83873,179192
f01026ee:	50                   	push   %eaxf01026ee3874,179251
f01026ef:	68 2d 03 00 00       	push   $0x32df01026ef3875,179295
f01026f4:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01026f43876,179341
f01026fa:	50                   	push   %eaxf01026fa3877,179400
f01026fb:	e8 99 d9 ff ff       	call   f0100099 <_panic>f01026fb3878,179444
f0102700:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01027003880,179528
f0102703:	8d 83 d0 db fe ff    	lea    -0x12430(%ebx),%eaxf01027033881,179584
f0102709:	50                   	push   %eaxf01027093882,179643
f010270a:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf010270a3883,179687
f0102710:	50                   	push   %eaxf01027103884,179746
f0102711:	68 2e 03 00 00       	push   $0x32ef01027113885,179790
f0102716:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01027163886,179836
f010271c:	50                   	push   %eaxf010271c3887,179895
f010271d:	e8 77 d9 ff ff       	call   f0100099 <_panic>f010271d3888,179939
f0102722:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01027223890,180059
f0102725:	8d 83 90 d7 fe ff    	lea    -0x12870(%ebx),%eaxf01027253891,180115
f010272b:	50                   	push   %eaxf010272b3892,180174
f010272c:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf010272c3893,180218
f0102732:	50                   	push   %eaxf01027323894,180277
f0102733:	68 31 03 00 00       	push   $0x331f01027333895,180321
f0102738:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01027383896,180367
f010273e:	50                   	push   %eaxf010273e3897,180426
f010273f:	e8 55 d9 ff ff       	call   f0100099 <_panic>f010273f3898,180470
f0102744:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01027443900,180549
f0102747:	8d 83 e1 db fe ff    	lea    -0x1241f(%ebx),%eaxf01027473901,180605
f010274d:	50                   	push   %eaxf010274d3902,180664
f010274e:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf010274e3903,180708
f0102754:	50                   	push   %eaxf01027543904,180767
f0102755:	68 32 03 00 00       	push   $0x332f01027553905,180811
f010275a:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010275a3906,180857
f0102760:	50                   	push   %eaxf01027603907,180916
f0102761:	e8 33 d9 ff ff       	call   f0100099 <_panic>f01027613908,180960
f0102766:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01027663910,181048
f0102769:	8d 83 ed db fe ff    	lea    -0x12413(%ebx),%eaxf01027693911,181104
f010276f:	50                   	push   %eaxf010276f3912,181163
f0102770:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01027703913,181207
f0102776:	50                   	push   %eaxf01027763914,181266
f0102777:	68 33 03 00 00       	push   $0x333f01027773915,181310
f010277c:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010277c3916,181356
f0102782:	50                   	push   %eaxf01027823917,181415
f0102783:	e8 11 d9 ff ff       	call   f0100099 <_panic>f01027833918,181459
f0102788:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01027883920,181561
f010278b:	8d 83 6c d7 fe ff    	lea    -0x12894(%ebx),%eaxf010278b3921,181617
f0102791:	50                   	push   %eaxf01027913922,181676
f0102792:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01027923923,181720
f0102798:	50                   	push   %eaxf01027983924,181779
f0102799:	68 37 03 00 00       	push   $0x337f01027993925,181823
f010279e:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010279e3926,181869
f01027a4:	50                   	push   %eaxf01027a43927,181928
f01027a5:	e8 ef d8 ff ff       	call   f0100099 <_panic>f01027a53928,181972
f01027aa:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01027aa3930,182077
f01027ad:	8d 83 c8 d7 fe ff    	lea    -0x12838(%ebx),%eaxf01027ad3931,182133
f01027b3:	50                   	push   %eaxf01027b33932,182192
f01027b4:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01027b43933,182236
f01027ba:	50                   	push   %eaxf01027ba3934,182295
f01027bb:	68 38 03 00 00       	push   $0x338f01027bb3935,182339
f01027c0:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01027c03936,182385
f01027c6:	50                   	push   %eaxf01027c63937,182444
f01027c7:	e8 cd d8 ff ff       	call   f0100099 <_panic>f01027c73938,182488
f01027cc:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01027cc3940,182572
f01027cf:	8d 83 02 dc fe ff    	lea    -0x123fe(%ebx),%eaxf01027cf3941,182628
f01027d5:	50                   	push   %eaxf01027d53942,182687
f01027d6:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01027d63943,182731
f01027dc:	50                   	push   %eaxf01027dc3944,182790
f01027dd:	68 39 03 00 00       	push   $0x339f01027dd3945,182834
f01027e2:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01027e23946,182880
f01027e8:	50                   	push   %eaxf01027e83947,182939
f01027e9:	e8 ab d8 ff ff       	call   f0100099 <_panic>f01027e93948,182983
f01027ee:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01027ee3950,183067
f01027f1:	8d 83 d0 db fe ff    	lea    -0x12430(%ebx),%eaxf01027f13951,183123
f01027f7:	50                   	push   %eaxf01027f73952,183182
f01027f8:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01027f83953,183226
f01027fe:	50                   	push   %eaxf01027fe3954,183285
f01027ff:	68 3a 03 00 00       	push   $0x33af01027ff3955,183329
f0102804:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01028043956,183375
f010280a:	50                   	push   %eaxf010280a3957,183434
f010280b:	e8 89 d8 ff ff       	call   f0100099 <_panic>f010280b3958,183478
f0102810:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01028103960,183579
f0102813:	8d 83 f0 d7 fe ff    	lea    -0x12810(%ebx),%eaxf01028133961,183635
f0102819:	50                   	push   %eaxf01028193962,183694
f010281a:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf010281a3963,183738
f0102820:	50                   	push   %eaxf01028203964,183797
f0102821:	68 3d 03 00 00       	push   $0x33df01028213965,183841
f0102826:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01028263966,183887
f010282c:	50                   	push   %eaxf010282c3967,183946
f010282d:	e8 67 d8 ff ff       	call   f0100099 <_panic>f010282d3968,183990
f0102832:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01028323970,184072
f0102835:	8d 83 24 db fe ff    	lea    -0x124dc(%ebx),%eaxf01028353971,184128
f010283b:	50                   	push   %eaxf010283b3972,184187
f010283c:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf010283c3973,184231
f0102842:	50                   	push   %eaxf01028423974,184290
f0102843:	68 40 03 00 00       	push   $0x340f01028433975,184334
f0102848:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01028483976,184380
f010284e:	50                   	push   %eaxf010284e3977,184439
f010284f:	e8 45 d8 ff ff       	call   f0100099 <_panic>f010284f3978,184483
f0102854:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01028543980,184590
f0102857:	8d 83 94 d4 fe ff    	lea    -0x12b6c(%ebx),%eaxf01028573981,184646
f010285d:	50                   	push   %eaxf010285d3982,184705
f010285e:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf010285e3983,184749
f0102864:	50                   	push   %eaxf01028643984,184808
f0102865:	68 43 03 00 00       	push   $0x343f01028653985,184852
f010286a:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010286a3986,184898
f0102870:	50                   	push   %eaxf01028703987,184957
f0102871:	e8 23 d8 ff ff       	call   f0100099 <_panic>f01028713988,185001
f0102876:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01028763990,185085
f0102879:	8d 83 87 db fe ff    	lea    -0x12479(%ebx),%eaxf01028793991,185141
f010287f:	50                   	push   %eaxf010287f3992,185200
f0102880:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01028803993,185244
f0102886:	50                   	push   %eaxf01028863994,185303
f0102887:	68 45 03 00 00       	push   $0x345f01028873995,185347
f010288c:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010288c3996,185393
f0102892:	50                   	push   %eaxf01028923997,185452
f0102893:	e8 01 d8 ff ff       	call   f0100099 <_panic>f01028933998,185496
f0102898:	52                   	push   %edxf01028983999,185553
f0102899:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01028994000,185597
f010289c:	8d 83 a4 d1 fe ff    	lea    -0x12e5c(%ebx),%eaxf010289c4001,185653
f01028a2:	50                   	push   %eaxf01028a24002,185712
f01028a3:	68 4c 03 00 00       	push   $0x34cf01028a34003,185756
f01028a8:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01028a84004,185802
f01028ae:	50                   	push   %eaxf01028ae4005,185861
f01028af:	e8 e5 d7 ff ff       	call   f0100099 <_panic>f01028af4006,185905
f01028b4:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01028b44008,185996
f01028b7:	8d 83 13 dc fe ff    	lea    -0x123ed(%ebx),%eaxf01028b74009,186052
f01028bd:	50                   	push   %eaxf01028bd4010,186111
f01028be:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01028be4011,186155
f01028c4:	50                   	push   %eaxf01028c44012,186214
f01028c5:	68 4d 03 00 00       	push   $0x34df01028c54013,186258
f01028ca:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01028ca4014,186304
f01028d0:	50                   	push   %eaxf01028d04015,186363
f01028d1:	e8 c3 d7 ff ff       	call   f0100099 <_panic>f01028d14016,186407
f01028d6:	50                   	push   %eaxf01028d64017,186464
f01028d7:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01028d74018,186508
f01028da:	8d 83 a4 d1 fe ff    	lea    -0x12e5c(%ebx),%eaxf01028da4019,186564
f01028e0:	50                   	push   %eaxf01028e04020,186623
f01028e1:	6a 52                	push   $0x52f01028e14021,186667
f01028e3:	8d 83 b4 d9 fe ff    	lea    -0x1264c(%ebx),%eaxf01028e34022,186712
f01028e9:	50                   	push   %eaxf01028e94023,186771
f01028ea:	e8 aa d7 ff ff       	call   f0100099 <_panic>f01028ea4024,186815
f01028ef:	52                   	push   %edxf01028ef4025,186872
f01028f0:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01028f04026,186916
f01028f3:	8d 83 a4 d1 fe ff    	lea    -0x12e5c(%ebx),%eaxf01028f34027,186972
f01028f9:	50                   	push   %eaxf01028f94028,187031
f01028fa:	6a 52                	push   $0x52f01028fa4029,187075
f01028fc:	8d 83 b4 d9 fe ff    	lea    -0x1264c(%ebx),%eaxf01028fc4030,187120
f0102902:	50                   	push   %eaxf01029024031,187179
f0102903:	e8 91 d7 ff ff       	call   f0100099 <_panic>f01029034032,187223
f0102908:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01029084034,187314
f010290b:	8d 83 2b dc fe ff    	lea    -0x123d5(%ebx),%eaxf010290b4035,187370
f0102911:	50                   	push   %eaxf01029114036,187429
f0102912:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01029124037,187473
f0102918:	50                   	push   %eaxf01029184038,187532
f0102919:	68 57 03 00 00       	push   $0x357f01029194039,187576
f010291e:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010291e4040,187622
f0102924:	50                   	push   %eaxf01029244041,187681
f0102925:	e8 6f d7 ff ff       	call   f0100099 <_panic>f01029254042,187725
f010292a:	50                   	push   %eaxf010292a4044,187848
f010292b:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010292b4045,187892
f010292e:	8d 83 98 d3 fe ff    	lea    -0x12c68(%ebx),%eaxf010292e4046,187948
f0102934:	50                   	push   %eaxf01029344047,188007
f0102935:	68 b4 00 00 00       	push   $0xb4f01029354048,188051
f010293a:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010293a4049,188096
f0102940:	50                   	push   %eaxf01029404050,188155
f0102941:	e8 53 d7 ff ff       	call   f0100099 <_panic>f01029414051,188199
f0102946:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01029464052,188256
f0102949:	ff b3 fc ff ff ff    	pushl  -0x4(%ebx)f01029494053,188312
f010294f:	8d 83 98 d3 fe ff    	lea    -0x12c68(%ebx),%eaxf010294f4054,188362
f0102955:	50                   	push   %eaxf01029554055,188421
f0102956:	68 c1 00 00 00       	push   $0xc1f01029564056,188465
f010295b:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010295b4057,188510
f0102961:	50                   	push   %eaxf01029614058,188569
f0102962:	e8 32 d7 ff ff       	call   f0100099 <_panic>f01029624059,188613
f0102967:	ff 75 c0             	pushl  -0x40(%ebp)f01029674060,188670
f010296a:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010296a4061,188721
f010296d:	8d 83 98 d3 fe ff    	lea    -0x12c68(%ebx),%eaxf010296d4062,188777
f0102973:	50                   	push   %eaxf01029734063,188836
f0102974:	68 9a 02 00 00       	push   $0x29af01029744064,188880
f0102979:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01029794065,188926
f010297f:	50                   	push   %eaxf010297f4066,188985
f0102980:	e8 14 d7 ff ff       	call   f0100099 <_panic>f01029804067,189029
f0102985:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01029854069,189148
f0102988:	8d 83 14 d8 fe ff    	lea    -0x127ec(%ebx),%eaxf01029884070,189204
f010298e:	50                   	push   %eaxf010298e4071,189263
f010298f:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf010298f4072,189307
f0102995:	50                   	push   %eaxf01029954073,189366
f0102996:	68 9a 02 00 00       	push   $0x29af01029964074,189410
f010299b:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf010299b4075,189456
f01029a1:	50                   	push   %eaxf01029a14076,189515
f01029a2:	e8 f2 d6 ff ff       	call   f0100099 <_panic>f01029a24077,189559
f01029a7:	8b 7d c4             	mov    -0x3c(%ebp),%edif01029a74079,189663
f01029aa:	c1 e7 0c             	shl    $0xc,%edif01029aa4080,189719
f01029ad:	bb 00 00 00 00       	mov    $0x0,%ebxf01029ad4081,189768
f01029b2:	39 fb                	cmp    %edi,%ebxf01029b24082,189817
f01029b4:	73 3b                	jae    f01029f1 <mem_init+0x1721>f01029b44083,189866
f01029b6:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edxf01029b64085,189981
f01029bc:	89 f0                	mov    %esi,%eaxf01029bc4086,190043
f01029be:	e8 7b e0 ff ff       	call   f0100a3e <check_va2pa>f01029be4087,190092
f01029c3:	39 c3                	cmp    %eax,%ebxf01029c34088,190154
f01029c5:	75 08                	jne    f01029cf <mem_init+0x16ff>f01029c54089,190203
f01029c7:	81 c3 00 10 00 00    	add    $0x1000,%ebxf01029c74091,190316
f01029cd:	eb e3                	jmp    f01029b2 <mem_init+0x16e2>f01029cd4092,190368
f01029cf:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01029cf4094,190483
f01029d2:	8d 83 48 d8 fe ff    	lea    -0x127b8(%ebx),%eaxf01029d24095,190539
f01029d8:	50                   	push   %eaxf01029d84096,190598
f01029d9:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf01029d94097,190642
f01029df:	50                   	push   %eaxf01029df4098,190701
f01029e0:	68 9f 02 00 00       	push   $0x29ff01029e04099,190745
f01029e5:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf01029e54100,190791
f01029eb:	50                   	push   %eaxf01029eb4101,190850
f01029ec:	e8 a8 d6 ff ff       	call   f0100099 <_panic>f01029ec4102,190894
f01029f1:	bb 00 80 ff ef       	mov    $0xefff8000,%ebxf01029f14104,190998
f01029f6:	8b 7d c8             	mov    -0x38(%ebp),%edif01029f64106,191134
f01029f9:	81 c7 00 80 00 20    	add    $0x20008000,%edif01029f94107,191190
f01029ff:	89 da                	mov    %ebx,%edxf01029ff4108,191246
f0102a01:	89 f0                	mov    %esi,%eaxf0102a014109,191295
f0102a03:	e8 36 e0 ff ff       	call   f0100a3e <check_va2pa>f0102a034110,191344
f0102a08:	8d 14 1f             	lea    (%edi,%ebx,1),%edxf0102a084111,191406
f0102a0b:	39 c2                	cmp    %eax,%edxf0102a0b4112,191464
f0102a0d:	75 26                	jne    f0102a35 <mem_init+0x1765>f0102a0d4113,191513
f0102a0f:	81 c3 00 10 00 00    	add    $0x1000,%ebxf0102a0f4114,191579
f0102a15:	81 fb 00 00 00 f0    	cmp    $0xf0000000,%ebxf0102a154116,191671
f0102a1b:	75 e2                	jne    f01029ff <mem_init+0x172f>f0102a1b4117,191727
f0102a1d:	ba 00 00 c0 ef       	mov    $0xefc00000,%edxf0102a1d4119,191848
f0102a22:	89 f0                	mov    %esi,%eaxf0102a224120,191904
f0102a24:	e8 15 e0 ff ff       	call   f0100a3e <check_va2pa>f0102a244121,191953
f0102a29:	83 f8 ff             	cmp    $0xffffffff,%eaxf0102a294122,192015
f0102a2c:	75 29                	jne    f0102a57 <mem_init+0x1787>f0102a2c4123,192071
f0102a2e:	b8 00 00 00 00       	mov    $0x0,%eaxf0102a2e4125,192173
f0102a33:	eb 6d                	jmp    f0102aa2 <mem_init+0x17d2>f0102a334126,192222
f0102a35:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102a354128,192368
f0102a38:	8d 83 70 d8 fe ff    	lea    -0x12790(%ebx),%eaxf0102a384129,192424
f0102a3e:	50                   	push   %eaxf0102a3e4130,192483
f0102a3f:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0102a3f4131,192527
f0102a45:	50                   	push   %eaxf0102a454132,192586
f0102a46:	68 a3 02 00 00       	push   $0x2a3f0102a464133,192630
f0102a4b:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102a4b4134,192676
f0102a51:	50                   	push   %eaxf0102a514135,192735
f0102a52:	e8 42 d6 ff ff       	call   f0100099 <_panic>f0102a524136,192779
f0102a57:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102a574138,192891
f0102a5a:	8d 83 b8 d8 fe ff    	lea    -0x12748(%ebx),%eaxf0102a5a4139,192947
f0102a60:	50                   	push   %eaxf0102a604140,193006
f0102a61:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0102a614141,193050
f0102a67:	50                   	push   %eaxf0102a674142,193109
f0102a68:	68 a4 02 00 00       	push   $0x2a4f0102a684143,193153
f0102a6d:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102a6d4144,193199
f0102a73:	50                   	push   %eaxf0102a734145,193258
f0102a74:	e8 20 d6 ff ff       	call   f0100099 <_panic>f0102a744146,193302
f0102a79:	f6 04 86 01          	testb  $0x1,(%esi,%eax,4)f0102a794148,193388
f0102a7d:	74 52                	je     f0102ad1 <mem_init+0x1801>f0102a7d4149,193446
f0102a7f:	83 c0 01             	add    $0x1,%eaxf0102a7f4151,193548
f0102a82:	3d ff 03 00 00       	cmp    $0x3ff,%eaxf0102a824152,193597
f0102a87:	0f 87 bb 00 00 00    	ja     f0102b48 <mem_init+0x1878>f0102a874153,193648
f0102a8d:	3d bc 03 00 00       	cmp    $0x3bc,%eaxf0102a8d4155,193729
f0102a92:	72 0e                	jb     f0102aa2 <mem_init+0x17d2>f0102a924156,193780
f0102a94:	3d bd 03 00 00       	cmp    $0x3bd,%eaxf0102a944157,193846
f0102a99:	76 de                	jbe    f0102a79 <mem_init+0x17a9>f0102a994158,193897
f0102a9b:	3d bf 03 00 00       	cmp    $0x3bf,%eaxf0102a9b4159,193963
f0102aa0:	74 d7                	je     f0102a79 <mem_init+0x17a9>f0102aa04160,194014
f0102aa2:	3d bf 03 00 00       	cmp    $0x3bf,%eaxf0102aa24162,194109
f0102aa7:	77 4a                	ja     f0102af3 <mem_init+0x1823>f0102aa74163,194160
f0102aa9:	83 3c 86 00          	cmpl   $0x0,(%esi,%eax,4)f0102aa94165,194253
f0102aad:	74 d0                	je     f0102a7f <mem_init+0x17af>f0102aad4166,194311
f0102aaf:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102aaf4167,194377
f0102ab2:	8d 83 7d dc fe ff    	lea    -0x12383(%ebx),%eaxf0102ab24168,194433
f0102ab8:	50                   	push   %eaxf0102ab84169,194492
f0102ab9:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0102ab94170,194536
f0102abf:	50                   	push   %eaxf0102abf4171,194595
f0102ac0:	68 b3 02 00 00       	push   $0x2b3f0102ac04172,194639
f0102ac5:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102ac54173,194685
f0102acb:	50                   	push   %eaxf0102acb4174,194744
f0102acc:	e8 c8 d5 ff ff       	call   f0100099 <_panic>f0102acc4175,194788
f0102ad1:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102ad14177,194874
f0102ad4:	8d 83 5b dc fe ff    	lea    -0x123a5(%ebx),%eaxf0102ad44178,194930
f0102ada:	50                   	push   %eaxf0102ada4179,194989
f0102adb:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0102adb4180,195033
f0102ae1:	50                   	push   %eaxf0102ae14181,195092
f0102ae2:	68 ac 02 00 00       	push   $0x2acf0102ae24182,195136
f0102ae7:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102ae74183,195182
f0102aed:	50                   	push   %eaxf0102aed4184,195241
f0102aee:	e8 a6 d5 ff ff       	call   f0100099 <_panic>f0102aee4185,195285
f0102af3:	8b 14 86             	mov    (%esi,%eax,4),%edxf0102af34187,195372
f0102af6:	f6 c2 01             	test   $0x1,%dlf0102af64188,195430
f0102af9:	74 2b                	je     f0102b26 <mem_init+0x1856>f0102af94189,195478
f0102afb:	f6 c2 02             	test   $0x2,%dlf0102afb4191,195574
f0102afe:	0f 85 7b ff ff ff    	jne    f0102a7f <mem_init+0x17af>f0102afe4192,195622
f0102b04:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102b044193,195688
f0102b07:	8d 83 6c dc fe ff    	lea    -0x12394(%ebx),%eaxf0102b074194,195744
f0102b0d:	50                   	push   %eaxf0102b0d4195,195803
f0102b0e:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0102b0e4196,195847
f0102b14:	50                   	push   %eaxf0102b144197,195906
f0102b15:	68 b1 02 00 00       	push   $0x2b1f0102b154198,195950
f0102b1a:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102b1a4199,195996
f0102b20:	50                   	push   %eaxf0102b204200,196055
f0102b21:	e8 73 d5 ff ff       	call   f0100099 <_panic>f0102b214201,196099
f0102b26:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102b264203,196186
f0102b29:	8d 83 5b dc fe ff    	lea    -0x123a5(%ebx),%eaxf0102b294204,196242
f0102b2f:	50                   	push   %eaxf0102b2f4205,196301
f0102b30:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0102b304206,196345
f0102b36:	50                   	push   %eaxf0102b364207,196404
f0102b37:	68 b0 02 00 00       	push   $0x2b0f0102b374208,196448
f0102b3c:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102b3c4209,196494
f0102b42:	50                   	push   %eaxf0102b424210,196553
f0102b43:	e8 51 d5 ff ff       	call   f0100099 <_panic>f0102b434211,196597
f0102b48:	83 ec 0c             	sub    $0xc,%espf0102b484213,196699
f0102b4b:	8b 7d d4             	mov    -0x2c(%ebp),%edif0102b4b4214,196748
f0102b4e:	8d 87 e8 d8 fe ff    	lea    -0x12718(%edi),%eaxf0102b4e4215,196804
f0102b54:	50                   	push   %eaxf0102b544216,196863
f0102b55:	89 fb                	mov    %edi,%ebxf0102b554217,196907
f0102b57:	e8 ee 04 00 00       	call   f010304a <cprintf>f0102b574218,196956
f0102b5c:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0102b5c4220,197040
f0102b62:	8b 00                	mov    (%eax),%eaxf0102b624221,197096
f0102b64:	83 c4 10             	add    $0x10,%espf0102b644223,197178
f0102b67:	3d ff ff ff ef       	cmp    $0xefffffff,%eaxf0102b674224,197228
f0102b6c:	0f 86 44 02 00 00    	jbe    f0102db6 <mem_init+0x1ae6>f0102b6c4225,197284
f0102b72:	05 00 00 00 10       	add    $0x10000000,%eaxf0102b724227,197386
static inline voidstatic4230,197445
f0102b77:	0f 22 d8             	mov    %eax,%cr3f0102b774234,197531
f0102b7a:	b8 00 00 00 00       	mov    $0x0,%eaxf0102b7a4236,197606
f0102b7f:	e8 37 df ff ff       	call   f0100abb <check_page_free_list>f0102b7f4237,197655
f0102b84:	0f 20 c0             	mov    %cr0,%eaxf0102b844239,197771
f0102b87:	83 e0 f3             	and    $0xfffffff3,%eaxf0102b874241,197846
f0102b8a:	0d 23 00 05 80       	or     $0x80050023,%eaxf0102b8a4242,197902
f0102b8f:	0f 22 c0             	mov    %eax,%cr0f0102b8f4244,198004
	pp1 = pp2 = 0;pp14249,198130
f0102b92:	83 ec 0c             	sub    $0xc,%espf0102b924251,198178
f0102b95:	6a 00                	push   $0x0f0102b954252,198227
f0102b97:	e8 94 e3 ff ff       	call   f0100f30 <page_alloc>f0102b974253,198271
f0102b9c:	89 c6                	mov    %eax,%esif0102b9c4254,198332
f0102b9e:	83 c4 10             	add    $0x10,%espf0102b9e4255,198381
f0102ba1:	85 c0                	test   %eax,%eaxf0102ba14256,198431
f0102ba3:	0f 84 29 02 00 00    	je     f0102dd2 <mem_init+0x1b02>f0102ba34257,198480
f0102ba9:	83 ec 0c             	sub    $0xc,%espf0102ba94259,198578
f0102bac:	6a 00                	push   $0x0f0102bac4260,198627
f0102bae:	e8 7d e3 ff ff       	call   f0100f30 <page_alloc>f0102bae4261,198671
f0102bb3:	89 45 d0             	mov    %eax,-0x30(%ebp)f0102bb34262,198732
f0102bb6:	83 c4 10             	add    $0x10,%espf0102bb64263,198788
f0102bb9:	85 c0                	test   %eax,%eaxf0102bb94264,198838
f0102bbb:	0f 84 33 02 00 00    	je     f0102df4 <mem_init+0x1b24>f0102bbb4265,198887
f0102bc1:	83 ec 0c             	sub    $0xc,%espf0102bc14267,198985
f0102bc4:	6a 00                	push   $0x0f0102bc44268,199034
f0102bc6:	e8 65 e3 ff ff       	call   f0100f30 <page_alloc>f0102bc64269,199078
f0102bcb:	89 c7                	mov    %eax,%edif0102bcb4270,199139
f0102bcd:	83 c4 10             	add    $0x10,%espf0102bcd4271,199188
f0102bd0:	85 c0                	test   %eax,%eaxf0102bd04272,199238
f0102bd2:	0f 84 3e 02 00 00    	je     f0102e16 <mem_init+0x1b46>f0102bd24273,199287
f0102bd8:	83 ec 0c             	sub    $0xc,%espf0102bd84275,199370
f0102bdb:	56                   	push   %esif0102bdb4276,199419
f0102bdc:	e8 dd e3 ff ff       	call   f0100fbe <page_free>f0102bdc4277,199463
f0102be1:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102be14279,199556
f0102be4:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0102be44280,199612
f0102bea:	8b 4d d0             	mov    -0x30(%ebp),%ecxf0102bea4281,199668
f0102bed:	2b 08                	sub    (%eax),%ecxf0102bed4282,199724
f0102bef:	89 c8                	mov    %ecx,%eaxf0102bef4283,199775
f0102bf1:	c1 f8 03             	sar    $0x3,%eaxf0102bf14284,199824
f0102bf4:	c1 e0 0c             	shl    $0xc,%eaxf0102bf44285,199873
f0102bf7:	89 c1                	mov    %eax,%ecxf0102bf74287,199948
f0102bf9:	c1 e9 0c             	shr    $0xc,%ecxf0102bf94288,199997
f0102bfc:	83 c4 10             	add    $0x10,%espf0102bfc4289,200046
f0102bff:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf0102bff4290,200096
f0102c05:	3b 0a                	cmp    (%edx),%ecxf0102c054291,200152
f0102c07:	0f 83 2b 02 00 00    	jae    f0102e38 <mem_init+0x1b68>f0102c074292,200203
f0102c0d:	83 ec 04             	sub    $0x4,%espf0102c0d4294,200304
f0102c10:	68 00 10 00 00       	push   $0x1000f0102c104295,200353
f0102c15:	6a 01                	push   $0x1f0102c154296,200400
f0102c17:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0102c174298,200477
f0102c1c:	50                   	push   %eaxf0102c1c4299,200533
f0102c1d:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102c1d4300,200577
f0102c20:	e8 81 0f 00 00       	call   f0103ba6 <memset>f0102c204301,200633
f0102c25:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102c254303,200723
f0102c28:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0102c284304,200779
f0102c2e:	89 f9                	mov    %edi,%ecxf0102c2e4305,200835
f0102c30:	2b 08                	sub    (%eax),%ecxf0102c304306,200884
f0102c32:	89 c8                	mov    %ecx,%eaxf0102c324307,200935
f0102c34:	c1 f8 03             	sar    $0x3,%eaxf0102c344308,200984
f0102c37:	c1 e0 0c             	shl    $0xc,%eaxf0102c374309,201033
f0102c3a:	89 c1                	mov    %eax,%ecxf0102c3a4311,201108
f0102c3c:	c1 e9 0c             	shr    $0xc,%ecxf0102c3c4312,201157
f0102c3f:	83 c4 10             	add    $0x10,%espf0102c3f4313,201206
f0102c42:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf0102c424314,201256
f0102c48:	3b 0a                	cmp    (%edx),%ecxf0102c484315,201312
f0102c4a:	0f 83 fe 01 00 00    	jae    f0102e4e <mem_init+0x1b7e>f0102c4a4316,201363
f0102c50:	83 ec 04             	sub    $0x4,%espf0102c504318,201464
f0102c53:	68 00 10 00 00       	push   $0x1000f0102c534319,201513
f0102c58:	6a 02                	push   $0x2f0102c584320,201560
f0102c5a:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0102c5a4322,201637
f0102c5f:	50                   	push   %eaxf0102c5f4323,201693
f0102c60:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102c604324,201737
f0102c63:	e8 3e 0f 00 00       	call   f0103ba6 <memset>f0102c634325,201793
f0102c68:	6a 02                	push   $0x2f0102c684327,201904
f0102c6a:	68 00 10 00 00       	push   $0x1000f0102c6a4328,201948
f0102c6f:	8b 5d d0             	mov    -0x30(%ebp),%ebxf0102c6f4329,201995
f0102c72:	53                   	push   %ebxf0102c724330,202051
f0102c73:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0102c734331,202095
f0102c76:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0102c764332,202151
f0102c7c:	ff 30                	pushl  (%eax)f0102c7c4333,202207
f0102c7e:	e8 dc e5 ff ff       	call   f010125f <page_insert>f0102c7e4334,202253
f0102c83:	83 c4 20             	add    $0x20,%espf0102c834336,202342
f0102c86:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)f0102c864337,202392
f0102c8b:	0f 85 d3 01 00 00    	jne    f0102e64 <mem_init+0x1b94>f0102c8b4338,202446
f0102c91:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000f0102c914340,202557
f0102c98:	01 01 01 f0102c984341,202614
f0102c9b:	0f 85 e5 01 00 00    	jne    f0102e86 <mem_init+0x1bb6>f0102c9b4342,202634
f0102ca1:	6a 02                	push   $0x2f0102ca14344,202754
f0102ca3:	68 00 10 00 00       	push   $0x1000f0102ca34345,202798
f0102ca8:	57                   	push   %edif0102ca84346,202845
f0102ca9:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0102ca94347,202889
f0102cac:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0102cac4348,202945
f0102cb2:	ff 30                	pushl  (%eax)f0102cb24349,203001
f0102cb4:	e8 a6 e5 ff ff       	call   f010125f <page_insert>f0102cb44350,203047
f0102cb9:	83 c4 10             	add    $0x10,%espf0102cb94352,203154
f0102cbc:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000f0102cbc4353,203204
f0102cc3:	02 02 02 f0102cc34354,203261
f0102cc6:	0f 85 dc 01 00 00    	jne    f0102ea8 <mem_init+0x1bd8>f0102cc64355,203281
f0102ccc:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)f0102ccc4357,203374
f0102cd1:	0f 85 f3 01 00 00    	jne    f0102eca <mem_init+0x1bfa>f0102cd14358,203428
f0102cd7:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0102cd74360,203521
f0102cda:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)f0102cda4361,203577
f0102cdf:	0f 85 07 02 00 00    	jne    f0102eec <mem_init+0x1c1c>f0102cdf4362,203631
f0102ce5:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000f0102ce54364,203733
f0102cec:	03 03 03 f0102cec4365,203790
f0102cef:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102cef4367,203843
f0102cf2:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0102cf24368,203899
f0102cf8:	89 f9                	mov    %edi,%ecxf0102cf84369,203955
f0102cfa:	2b 08                	sub    (%eax),%ecxf0102cfa4370,204004
f0102cfc:	89 c8                	mov    %ecx,%eaxf0102cfc4371,204055
f0102cfe:	c1 f8 03             	sar    $0x3,%eaxf0102cfe4372,204104
f0102d01:	c1 e0 0c             	shl    $0xc,%eaxf0102d014373,204153
f0102d04:	89 c1                	mov    %eax,%ecxf0102d044375,204228
f0102d06:	c1 e9 0c             	shr    $0xc,%ecxf0102d064376,204277
f0102d09:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf0102d094377,204326
f0102d0f:	3b 0a                	cmp    (%edx),%ecxf0102d0f4378,204382
f0102d11:	0f 83 f7 01 00 00    	jae    f0102f0e <mem_init+0x1c3e>f0102d114379,204433
f0102d17:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)f0102d174381,204551
f0102d1e:	03 03 03 f0102d1e4382,204619
f0102d21:	0f 85 fd 01 00 00    	jne    f0102f24 <mem_init+0x1c54>f0102d214383,204639
f0102d27:	83 ec 08             	sub    $0x8,%espf0102d274385,204747
f0102d2a:	68 00 10 00 00       	push   $0x1000f0102d2a4386,204796
f0102d2f:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0102d2f4387,204843
f0102d32:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0102d324388,204899
f0102d38:	ff 30                	pushl  (%eax)f0102d384389,204955
f0102d3a:	e8 cd e4 ff ff       	call   f010120c <page_remove>f0102d3a4390,205001
f0102d3f:	83 c4 10             	add    $0x10,%espf0102d3f4392,205090
f0102d42:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)f0102d424393,205140
f0102d47:	0f 85 f9 01 00 00    	jne    f0102f46 <mem_init+0x1c76>f0102d474394,205194
f0102d4d:	8b 7d d4             	mov    -0x2c(%ebp),%edif0102d4d4398,205338
f0102d50:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0102d504399,205394
f0102d56:	8b 08                	mov    (%eax),%ecxf0102d564400,205450
f0102d58:	8b 11                	mov    (%ecx),%edxf0102d584401,205501
f0102d5a:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf0102d5a4402,205552
f0102d60:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0102d604404,205641
f0102d66:	89 f7                	mov    %esi,%edif0102d664405,205697
f0102d68:	2b 38                	sub    (%eax),%edif0102d684406,205746
f0102d6a:	89 f8                	mov    %edi,%eaxf0102d6a4407,205797
f0102d6c:	c1 f8 03             	sar    $0x3,%eaxf0102d6c4408,205846
f0102d6f:	c1 e0 0c             	shl    $0xc,%eaxf0102d6f4409,205895
f0102d72:	39 c2                	cmp    %eax,%edxf0102d724410,205944
f0102d74:	0f 85 ee 01 00 00    	jne    f0102f68 <mem_init+0x1c98>f0102d744411,205993
f0102d7a:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)f0102d7a4413,206079
f0102d80:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)f0102d804415,206157
f0102d85:	0f 85 ff 01 00 00    	jne    f0102f8a <mem_init+0x1cba>f0102d854416,206211
f0102d8b:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)f0102d8b4418,206295
f0102d91:	83 ec 0c             	sub    $0xc,%espf0102d914422,206394
f0102d94:	56                   	push   %esif0102d944423,206443
f0102d95:	e8 24 e2 ff ff       	call   f0100fbe <page_free>f0102d954424,206487
f0102d9a:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102d9a4427,206603
f0102d9d:	8d 83 7c d9 fe ff    	lea    -0x12684(%ebx),%eaxf0102d9d4428,206659
f0102da3:	89 04 24             	mov    %eax,(%esp)f0102da34429,206718
f0102da6:	e8 9f 02 00 00       	call   f010304a <cprintf>f0102da64430,206769
f0102dab:	83 c4 10             	add    $0x10,%espf0102dab4432,206829
f0102dae:	8d 65 f4             	lea    -0xc(%ebp),%espf0102dae4433,206879
f0102db1:	5b                   	pop    %ebxf0102db14434,206934
f0102db2:	5e                   	pop    %esif0102db24435,206978
f0102db3:	5f                   	pop    %edif0102db34436,207022
f0102db4:	5d                   	pop    %ebpf0102db44437,207066
f0102db5:	c3                   	ret    f0102db54438,207110
f0102db6:	50                   	push   %eaxf0102db64440,207216
f0102db7:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102db74441,207260
f0102dba:	8d 83 98 d3 fe ff    	lea    -0x12c68(%ebx),%eaxf0102dba4442,207316
f0102dc0:	50                   	push   %eaxf0102dc04443,207375
f0102dc1:	68 d8 00 00 00       	push   $0xd8f0102dc14444,207419
f0102dc6:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102dc64445,207464
f0102dcc:	50                   	push   %eaxf0102dcc4446,207523
f0102dcd:	e8 c7 d2 ff ff       	call   f0100099 <_panic>f0102dcd4447,207567
f0102dd2:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102dd24449,207656
f0102dd5:	8d 83 79 da fe ff    	lea    -0x12587(%ebx),%eaxf0102dd54450,207712
f0102ddb:	50                   	push   %eaxf0102ddb4451,207771
f0102ddc:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0102ddc4452,207815
f0102de2:	50                   	push   %eaxf0102de24453,207874
f0102de3:	68 72 03 00 00       	push   $0x372f0102de34454,207918
f0102de8:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102de84455,207964
f0102dee:	50                   	push   %eaxf0102dee4456,208023
f0102def:	e8 a5 d2 ff ff       	call   f0100099 <_panic>f0102def4457,208067
f0102df4:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102df44459,208156
f0102df7:	8d 83 8f da fe ff    	lea    -0x12571(%ebx),%eaxf0102df74460,208212
f0102dfd:	50                   	push   %eaxf0102dfd4461,208271
f0102dfe:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0102dfe4462,208315
f0102e04:	50                   	push   %eaxf0102e044463,208374
f0102e05:	68 73 03 00 00       	push   $0x373f0102e054464,208418
f0102e0a:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102e0a4465,208464
f0102e10:	50                   	push   %eaxf0102e104466,208523
f0102e11:	e8 83 d2 ff ff       	call   f0100099 <_panic>f0102e114467,208567
f0102e16:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102e164469,208656
f0102e19:	8d 83 a5 da fe ff    	lea    -0x1255b(%ebx),%eaxf0102e194470,208712
f0102e1f:	50                   	push   %eaxf0102e1f4471,208771
f0102e20:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0102e204472,208815
f0102e26:	50                   	push   %eaxf0102e264473,208874
f0102e27:	68 74 03 00 00       	push   $0x374f0102e274474,208918
f0102e2c:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102e2c4475,208964
f0102e32:	50                   	push   %eaxf0102e324476,209023
f0102e33:	e8 61 d2 ff ff       	call   f0100099 <_panic>f0102e334477,209067
f0102e38:	50                   	push   %eaxf0102e384479,209188
f0102e39:	8d 83 a4 d1 fe ff    	lea    -0x12e5c(%ebx),%eaxf0102e394480,209232
f0102e3f:	50                   	push   %eaxf0102e3f4481,209291
f0102e40:	6a 52                	push   $0x52f0102e404482,209335
f0102e42:	8d 83 b4 d9 fe ff    	lea    -0x1264c(%ebx),%eaxf0102e424483,209380
f0102e48:	50                   	push   %eaxf0102e484484,209439
f0102e49:	e8 4b d2 ff ff       	call   f0100099 <_panic>f0102e494485,209483
f0102e4e:	50                   	push   %eaxf0102e4e4486,209540
f0102e4f:	8d 83 a4 d1 fe ff    	lea    -0x12e5c(%ebx),%eaxf0102e4f4487,209584
f0102e55:	50                   	push   %eaxf0102e554488,209643
f0102e56:	6a 52                	push   $0x52f0102e564489,209687
f0102e58:	8d 83 b4 d9 fe ff    	lea    -0x1264c(%ebx),%eaxf0102e584490,209732
f0102e5e:	50                   	push   %eaxf0102e5e4491,209791
f0102e5f:	e8 35 d2 ff ff       	call   f0100099 <_panic>f0102e5f4492,209835
f0102e64:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102e644494,209919
f0102e67:	8d 83 76 db fe ff    	lea    -0x1248a(%ebx),%eaxf0102e674495,209975
f0102e6d:	50                   	push   %eaxf0102e6d4496,210034
f0102e6e:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0102e6e4497,210078
f0102e74:	50                   	push   %eaxf0102e744498,210137
f0102e75:	68 79 03 00 00       	push   $0x379f0102e754499,210181
f0102e7a:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102e7a4500,210227
f0102e80:	50                   	push   %eaxf0102e804501,210286
f0102e81:	e8 13 d2 ff ff       	call   f0100099 <_panic>f0102e814502,210330
f0102e86:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102e864504,210432
f0102e89:	8d 83 08 d9 fe ff    	lea    -0x126f8(%ebx),%eaxf0102e894505,210488
f0102e8f:	50                   	push   %eaxf0102e8f4506,210547
f0102e90:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0102e904507,210591
f0102e96:	50                   	push   %eaxf0102e964508,210650
f0102e97:	68 7a 03 00 00       	push   $0x37af0102e974509,210694
f0102e9c:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102e9c4510,210740
f0102ea2:	50                   	push   %eaxf0102ea24511,210799
f0102ea3:	e8 f1 d1 ff ff       	call   f0100099 <_panic>f0102ea34512,210843
f0102ea8:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102ea84514,210945
f0102eab:	8d 83 2c d9 fe ff    	lea    -0x126d4(%ebx),%eaxf0102eab4515,211001
f0102eb1:	50                   	push   %eaxf0102eb14516,211060
f0102eb2:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0102eb24517,211104
f0102eb8:	50                   	push   %eaxf0102eb84518,211163
f0102eb9:	68 7c 03 00 00       	push   $0x37cf0102eb94519,211207
f0102ebe:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102ebe4520,211253
f0102ec4:	50                   	push   %eaxf0102ec44521,211312
f0102ec5:	e8 cf d1 ff ff       	call   f0100099 <_panic>f0102ec54522,211356
f0102eca:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102eca4524,211440
f0102ecd:	8d 83 98 db fe ff    	lea    -0x12468(%ebx),%eaxf0102ecd4525,211496
f0102ed3:	50                   	push   %eaxf0102ed34526,211555
f0102ed4:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0102ed44527,211599
f0102eda:	50                   	push   %eaxf0102eda4528,211658
f0102edb:	68 7d 03 00 00       	push   $0x37df0102edb4529,211702
f0102ee0:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102ee04530,211748
f0102ee6:	50                   	push   %eaxf0102ee64531,211807
f0102ee7:	e8 ad d1 ff ff       	call   f0100099 <_panic>f0102ee74532,211851
f0102eec:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102eec4534,211935
f0102eef:	8d 83 02 dc fe ff    	lea    -0x123fe(%ebx),%eaxf0102eef4535,211991
f0102ef5:	50                   	push   %eaxf0102ef54536,212050
f0102ef6:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0102ef64537,212094
f0102efc:	50                   	push   %eaxf0102efc4538,212153
f0102efd:	68 7e 03 00 00       	push   $0x37ef0102efd4539,212197
f0102f02:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102f024540,212243
f0102f08:	50                   	push   %eaxf0102f084541,212302
f0102f09:	e8 8b d1 ff ff       	call   f0100099 <_panic>f0102f094542,212346
f0102f0e:	50                   	push   %eaxf0102f0e4543,212403
f0102f0f:	8d 83 a4 d1 fe ff    	lea    -0x12e5c(%ebx),%eaxf0102f0f4544,212447
f0102f15:	50                   	push   %eaxf0102f154545,212506
f0102f16:	6a 52                	push   $0x52f0102f164546,212550
f0102f18:	8d 83 b4 d9 fe ff    	lea    -0x1264c(%ebx),%eaxf0102f184547,212595
f0102f1e:	50                   	push   %eaxf0102f1e4548,212654
f0102f1f:	e8 75 d1 ff ff       	call   f0100099 <_panic>f0102f1f4549,212698
f0102f24:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102f244551,212807
f0102f27:	8d 83 50 d9 fe ff    	lea    -0x126b0(%ebx),%eaxf0102f274552,212863
f0102f2d:	50                   	push   %eaxf0102f2d4553,212922
f0102f2e:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0102f2e4554,212966
f0102f34:	50                   	push   %eaxf0102f344555,213025
f0102f35:	68 80 03 00 00       	push   $0x380f0102f354556,213069
f0102f3a:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102f3a4557,213115
f0102f40:	50                   	push   %eaxf0102f404558,213174
f0102f41:	e8 53 d1 ff ff       	call   f0100099 <_panic>f0102f414559,213218
f0102f46:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102f464561,213302
f0102f49:	8d 83 d0 db fe ff    	lea    -0x12430(%ebx),%eaxf0102f494562,213358
f0102f4f:	50                   	push   %eaxf0102f4f4563,213417
f0102f50:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0102f504564,213461
f0102f56:	50                   	push   %eaxf0102f564565,213520
f0102f57:	68 82 03 00 00       	push   $0x382f0102f574566,213564
f0102f5c:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102f5c4567,213610
f0102f62:	50                   	push   %eaxf0102f624568,213669
f0102f63:	e8 31 d1 ff ff       	call   f0100099 <_panic>f0102f634569,213713
f0102f68:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102f684571,213820
f0102f6b:	8d 83 94 d4 fe ff    	lea    -0x12b6c(%ebx),%eaxf0102f6b4572,213876
f0102f71:	50                   	push   %eaxf0102f714573,213935
f0102f72:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0102f724574,213979
f0102f78:	50                   	push   %eaxf0102f784575,214038
f0102f79:	68 85 03 00 00       	push   $0x385f0102f794576,214082
f0102f7e:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102f7e4577,214128
f0102f84:	50                   	push   %eaxf0102f844578,214187
f0102f85:	e8 0f d1 ff ff       	call   f0100099 <_panic>f0102f854579,214231
f0102f8a:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf0102f8a4581,214315
f0102f8d:	8d 83 87 db fe ff    	lea    -0x12479(%ebx),%eaxf0102f8d4582,214371
f0102f93:	50                   	push   %eaxf0102f934583,214430
f0102f94:	8d 83 ce d9 fe ff    	lea    -0x12632(%ebx),%eaxf0102f944584,214474
f0102f9a:	50                   	push   %eaxf0102f9a4585,214533
f0102f9b:	68 87 03 00 00       	push   $0x387f0102f9b4586,214577
f0102fa0:	8d 83 a8 d9 fe ff    	lea    -0x12658(%ebx),%eaxf0102fa04587,214623
f0102fa6:	50                   	push   %eaxf0102fa64588,214682
f0102fa7:	e8 ed d0 ff ff       	call   f0100099 <_panic>f0102fa74589,214726
f0102fac <tlb_invalidate>:f0102fac4591,214784
f0102fac:	55                   	push   %ebpf0102fac4593,214813
f0102fad:	89 e5                	mov    %esp,%ebpf0102fad4594,214857
f0102faf:	8b 45 0c             	mov    0xc(%ebp),%eaxf0102faf4596,214962
f0102fb2:	0f 01 38             	invlpg (%eax)f0102fb24597,215016
f0102fb5:	5d                   	pop    %ebpf0102fb54599,215064
f0102fb6:	c3                   	ret    f0102fb64600,215108
f0102fb7 <__x86.get_pc_thunk.cx>:f0102fb74602,215149
f0102fb7:	8b 0c 24             	mov    (%esp),%ecxf0102fb74603,215183
f0102fba:	c3                   	ret    f0102fba4604,215234
f0102fbb <__x86.get_pc_thunk.si>:f0102fbb4606,215275
f0102fbb:	8b 34 24             	mov    (%esp),%esif0102fbb4607,215309
f0102fbe:	c3                   	ret    f0102fbe4608,215360
f0102fbf <__x86.get_pc_thunk.di>:f0102fbf4610,215401
f0102fbf:	8b 3c 24             	mov    (%esp),%edif0102fbf4611,215435
f0102fc2:	c3                   	ret    f0102fc24612,215486
f0102fc3 <mc146818_read>:f0102fc34614,215527
unsignedunsigned4618,215580
f0102fc3:	55                   	push   %ebpf0102fc34621,215619
f0102fc4:	89 e5                	mov    %esp,%ebpf0102fc44622,215663
f0102fc6:	8b 45 08             	mov    0x8(%ebp),%eaxf0102fc64624,215769
f0102fc9:	ba 70 00 00 00       	mov    $0x70,%edxf0102fc94625,215823
f0102fce:	ee                   	out    %al,(%dx)f0102fce4626,215873
f0102fcf:	ba 71 00 00 00       	mov    $0x71,%edxf0102fcf4628,215978
f0102fd4:	ec                   	in     (%dx),%alf0102fd44629,216028
f0102fd5:	0f b6 c0             	movzbl %al,%eaxf0102fd54632,216120
f0102fd8:	5d                   	pop    %ebpf0102fd84634,216170
f0102fd9:	c3                   	ret    f0102fd94635,216214
f0102fda <mc146818_write>:f0102fda4637,216255
voidvoid4639,216283
f0102fda:	55                   	push   %ebpf0102fda4642,216335
f0102fdb:	89 e5                	mov    %esp,%ebpf0102fdb4643,216379
f0102fdd:	8b 45 08             	mov    0x8(%ebp),%eaxf0102fdd4645,216485
f0102fe0:	ba 70 00 00 00       	mov    $0x70,%edxf0102fe04646,216539
f0102fe5:	ee                   	out    %al,(%dx)f0102fe54647,216589
f0102fe6:	8b 45 0c             	mov    0xc(%ebp),%eaxf0102fe64648,216638
f0102fe9:	ba 71 00 00 00       	mov    $0x71,%edxf0102fe94649,216692
f0102fee:	ee                   	out    %al,(%dx)f0102fee4650,216742
f0102fef:	5d                   	pop    %ebpf0102fef4654,216837
f0102ff0:	c3                   	ret    f0102ff04655,216881
f0102ff1 <putch>:f0102ff14657,216922
static voidstatic4661,216966
f0102ff1:	55                   	push   %ebpf0102ff14664,217004
f0102ff2:	89 e5                	mov    %esp,%ebpf0102ff24665,217048
f0102ff4:	53                   	push   %ebxf0102ff44666,217097
f0102ff5:	83 ec 10             	sub    $0x10,%espf0102ff54667,217141
f0102ff8:	e8 52 d1 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0102ff84668,217191
f0102ffd:	81 c3 0f 43 01 00    	add    $0x1430f,%ebxf0102ffd4669,217263
f0103003:	ff 75 08             	pushl  0x8(%ebp)f01030034671,217331
f0103006:	e8 bb d6 ff ff       	call   f01006c6 <cputchar>f01030064672,217380
f010300b:	83 c4 10             	add    $0x10,%espf010300b4675,217450
f010300e:	8b 5d fc             	mov    -0x4(%ebp),%ebxf010300e4676,217500
f0103011:	c9                   	leave  f01030114677,217555
f0103012:	c3                   	ret    f01030124678,217595
f0103013 <vcprintf>:f01030134680,217636
intint4682,217658
f0103013:	55                   	push   %ebpf01030134685,217702
f0103014:	89 e5                	mov    %esp,%ebpf01030144686,217746
f0103016:	53                   	push   %ebxf01030164687,217795
f0103017:	83 ec 14             	sub    $0x14,%espf01030174688,217839
f010301a:	e8 30 d1 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f010301a4689,217889
f010301f:	81 c3 ed 42 01 00    	add    $0x142ed,%ebxf010301f4690,217961
f0103025:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)f01030254692,218028
f010302c:	ff 75 0c             	pushl  0xc(%ebp)f010302c4695,218125
f010302f:	ff 75 08             	pushl  0x8(%ebp)f010302f4696,218174
f0103032:	8d 45 f4             	lea    -0xc(%ebp),%eaxf01030324697,218223
f0103035:	50                   	push   %eaxf01030354698,218278
f0103036:	8d 83 e5 bc fe ff    	lea    -0x1431b(%ebx),%eaxf01030364699,218322
f010303c:	50                   	push   %eaxf010303c4700,218381
f010303d:	e8 18 04 00 00       	call   f010345a <vprintfmt>f010303d4701,218425
f0103042:	8b 45 f4             	mov    -0xc(%ebp),%eaxf01030424704,218500
f0103045:	8b 5d fc             	mov    -0x4(%ebp),%ebxf01030454705,218555
f0103048:	c9                   	leave  f01030484706,218610
f0103049:	c3                   	ret    f01030494707,218650
f010304a <cprintf>:f010304a4709,218691
intint4711,218712
f010304a:	55                   	push   %ebpf010304a4714,218748
f010304b:	89 e5                	mov    %esp,%ebpf010304b4715,218792
f010304d:	83 ec 10             	sub    $0x10,%espf010304d4716,218841
f0103050:	8d 45 0c             	lea    0xc(%ebp),%eaxf01030504721,218935
	cnt = vcprintf(fmt, ap);cnt4722,218989
f0103053:	50                   	push   %eaxf01030534723,219015
f0103054:	ff 75 08             	pushl  0x8(%ebp)f01030544724,219059
f0103057:	e8 b7 ff ff ff       	call   f0103013 <vcprintf>f01030574725,219108
f010305c:	c9                   	leave  f010305c4730,219196
f010305d:	c3                   	ret    f010305d4731,219236
f010305e <stab_binsearch>:f010305e4733,219277
static voidstatic4736,219353
f010305e:	55                   	push   %ebpf010305e4740,219479
f010305f:	89 e5                	mov    %esp,%ebpf010305f4741,219523
f0103061:	57                   	push   %edif01030614742,219572
f0103062:	56                   	push   %esif01030624743,219616
f0103063:	53                   	push   %ebxf01030634744,219660
f0103064:	83 ec 14             	sub    $0x14,%espf01030644745,219704
f0103067:	89 45 ec             	mov    %eax,-0x14(%ebp)f01030674746,219754
f010306a:	89 55 e4             	mov    %edx,-0x1c(%ebp)f010306a4747,219810
f010306d:	89 4d e0             	mov    %ecx,-0x20(%ebp)f010306d4748,219866
f0103070:	8b 7d 08             	mov    0x8(%ebp),%edif01030704749,219922
f0103073:	8b 32                	mov    (%edx),%esif01030734751,220035
f0103075:	8b 01                	mov    (%ecx),%eaxf01030754752,220086
f0103077:	89 45 f0             	mov    %eax,-0x10(%ebp)f01030774753,220137
f010307a:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)f010307a4754,220193
f0103081:	eb 2f                	jmp    f01030b2 <stab_binsearch+0x54>f01030814757,220268
f0103083:	83 e8 01             	sub    $0x1,%eaxf01030834763,220477
f0103086:	39 c6                	cmp    %eax,%esif01030864765,220570
f0103088:	7f 49                	jg     f01030d3 <stab_binsearch+0x75>f01030884766,220619
f010308a:	0f b6 0a             	movzbl (%edx),%ecxf010308a4767,220689
f010308d:	83 ea 0c             	sub    $0xc,%edxf010308d4768,220740
f0103090:	39 f9                	cmp    %edi,%ecxf01030904769,220789
f0103092:	75 ef                	jne    f0103083 <stab_binsearch+0x25>f01030924770,220838
		any_matches = 1;any_matches4775,220952
f0103094:	8d 14 40             	lea    (%eax,%eax,2),%edxf01030944777,221004
f0103097:	8b 4d ec             	mov    -0x14(%ebp),%ecxf01030974778,221062
f010309a:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edxf010309a4779,221118
f010309e:	3b 55 0c             	cmp    0xc(%ebp),%edxf010309e4780,221179
f01030a1:	73 35                	jae    f01030d8 <stab_binsearch+0x7a>f01030a14781,221233
f01030a3:	8b 75 e4             	mov    -0x1c(%ebp),%esif01030a34783,221324
f01030a6:	89 06                	mov    %eax,(%esi)f01030a64784,221380
			l = true_m + 1;l4785,221431
f01030a8:	8d 73 01             	lea    0x1(%ebx),%esif01030a84786,221450
		any_matches = 1;any_matches4787,221504
f01030ab:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)f01030ab4788,221523
f01030b2:	3b 75 f0             	cmp    -0x10(%ebp),%esif01030b24790,221597
f01030b5:	7f 4e                	jg     f0103105 <stab_binsearch+0xa7>f01030b54791,221653
f01030b7:	8b 45 f0             	mov    -0x10(%ebp),%eaxf01030b74793,221763
f01030ba:	01 f0                	add    %esi,%eaxf01030ba4794,221819
f01030bc:	89 c3                	mov    %eax,%ebxf01030bc4795,221868
f01030be:	c1 eb 1f             	shr    $0x1f,%ebxf01030be4796,221917
f01030c1:	01 c3                	add    %eax,%ebxf01030c14797,221967
f01030c3:	d1 fb                	sar    %ebxf01030c34798,222016
f01030c5:	8d 04 5b             	lea    (%ebx,%ebx,2),%eaxf01030c54799,222060
f01030c8:	8b 4d ec             	mov    -0x14(%ebp),%ecxf01030c84800,222118
f01030cb:	8d 54 81 04          	lea    0x4(%ecx,%eax,4),%edxf01030cb4801,222174
f01030cf:	89 d8                	mov    %ebx,%eaxf01030cf4802,222235
f01030d1:	eb b3                	jmp    f0103086 <stab_binsearch+0x28>f01030d14804,222328
			l = true_m + 1;l4805,222398
f01030d3:	8d 73 01             	lea    0x1(%ebx),%esif01030d34806,222417
f01030d6:	eb da                	jmp    f01030b2 <stab_binsearch+0x54>f01030d64808,222484
f01030d8:	3b 55 0c             	cmp    0xc(%ebp),%edxf01030d84810,222594
f01030db:	76 14                	jbe    f01030f1 <stab_binsearch+0x93>f01030db4811,222648
f01030dd:	83 e8 01             	sub    $0x1,%eaxf01030dd4813,222744
f01030e0:	89 45 f0             	mov    %eax,-0x10(%ebp)f01030e04814,222793
f01030e3:	8b 5d e0             	mov    -0x20(%ebp),%ebxf01030e34815,222849
f01030e6:	89 03                	mov    %eax,(%ebx)f01030e64816,222905
		any_matches = 1;any_matches4817,222956
f01030e8:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)f01030e84818,222975
f01030ef:	eb c1                	jmp    f01030b2 <stab_binsearch+0x54>f01030ef4819,223031
			r = m - 1;r4820,223101
f01030f1:	8b 75 e4             	mov    -0x1c(%ebp),%esif01030f14825,223223
f01030f4:	89 06                	mov    %eax,(%esi)f01030f44826,223279
			l = m;l4827,223330
f01030f6:	83 45 0c 01          	addl   $0x1,0xc(%ebp)f01030f64829,223351
f01030fa:	89 c6                	mov    %eax,%esif01030fa4830,223405
		any_matches = 1;any_matches4831,223454
f01030fc:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)f01030fc4832,223473
f0103103:	eb ad                	jmp    f01030b2 <stab_binsearch+0x54>f01031034833,223529
f0103105:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)f01031054838,223626
f0103109:	74 16                	je     f0103121 <stab_binsearch+0xc3>f01031094839,223682
f010310b:	8b 45 e0             	mov    -0x20(%ebp),%eaxf010310b4844,223867
f010310e:	8b 00                	mov    (%eax),%eaxf010310e4845,223923
f0103110:	8b 75 e4             	mov    -0x1c(%ebp),%esif01031104847,224026
f0103113:	8b 0e                	mov    (%esi),%ecxf01031134848,224082
f0103115:	8d 14 40             	lea    (%eax,%eax,2),%edxf01031154849,224133
f0103118:	8b 75 ec             	mov    -0x14(%ebp),%esif01031184850,224191
f010311b:	8d 54 96 04          	lea    0x4(%esi,%edx,4),%edxf010311b4851,224247
f010311f:	eb 12                	jmp    f0103133 <stab_binsearch+0xd5>f010311f4853,224334
f0103121:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf01031214855,224440
f0103124:	8b 00                	mov    (%eax),%eaxf01031244856,224496
f0103126:	83 e8 01             	sub    $0x1,%eaxf01031264857,224547
f0103129:	8b 7d e0             	mov    -0x20(%ebp),%edif01031294858,224596
f010312c:	89 07                	mov    %eax,(%edi)f010312c4859,224652
f010312e:	eb 16                	jmp    f0103146 <stab_binsearch+0xe8>f010312e4860,224703
f0103130:	83 e8 01             	sub    $0x1,%eaxf01031304862,224785
f0103133:	39 c1                	cmp    %eax,%ecxf01031334864,224860
f0103135:	7d 0a                	jge    f0103141 <stab_binsearch+0xe3>f01031354865,224909
f0103137:	0f b6 1a             	movzbl (%edx),%ebxf01031374867,225031
f010313a:	83 ea 0c             	sub    $0xc,%edxf010313a4868,225082
f010313d:	39 fb                	cmp    %edi,%ebxf010313d4869,225131
f010313f:	75 ef                	jne    f0103130 <stab_binsearch+0xd2>f010313f4870,225180
f0103141:	8b 7d e4             	mov    -0x1c(%ebp),%edif01031414873,225291
f0103144:	89 07                	mov    %eax,(%edi)f01031444874,225347
f0103146:	83 c4 14             	add    $0x14,%espf01031464877,225403
f0103149:	5b                   	pop    %ebxf01031494878,225453
f010314a:	5e                   	pop    %esif010314a4879,225497
f010314b:	5f                   	pop    %edif010314b4880,225541
f010314c:	5d                   	pop    %ebpf010314c4881,225585
f010314d:	c3                   	ret    f010314d4882,225629
f010314e <debuginfo_eip>:f010314e4884,225670
intint4888,225800
f010314e:	55                   	push   %ebpf010314e4891,225863
f010314f:	89 e5                	mov    %esp,%ebpf010314f4892,225907
f0103151:	57                   	push   %edif01031514893,225956
f0103152:	56                   	push   %esif01031524894,226000
f0103153:	53                   	push   %ebxf01031534895,226044
f0103154:	83 ec 2c             	sub    $0x2c,%espf01031544896,226088
f0103157:	e8 5b fe ff ff       	call   f0102fb7 <__x86.get_pc_thunk.cx>f01031574897,226138
f010315c:	81 c1 b0 41 01 00    	add    $0x141b0,%ecxf010315c4898,226210
f0103162:	89 4d d4             	mov    %ecx,-0x2c(%ebp)f01031624899,226263
f0103165:	8b 5d 08             	mov    0x8(%ebp),%ebxf01031654900,226319
f0103168:	8b 7d 0c             	mov    0xc(%ebp),%edif01031684901,226373
	const struct Stab *stabs, *stab_end;const4902,226427
f010316b:	8d 81 8b dc fe ff    	lea    -0x12375(%ecx),%eaxf010316b4908,226599
f0103171:	89 07                	mov    %eax,(%edi)f01031714909,226658
f0103173:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)f01031734911,226730
f010317a:	89 47 08             	mov    %eax,0x8(%edi)f010317a4913,226818
f010317d:	c7 47 0c 09 00 00 00 	movl   $0x9,0xc(%edi)f010317d4915,226899
f0103184:	89 5f 10             	mov    %ebx,0x10(%edi)f01031844917,226980
f0103187:	c7 47 14 00 00 00 00 	movl   $0x0,0x14(%edi)f01031874919,227059
f010318e:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebxf010318e4923,227171
f0103194:	0f 86 f4 00 00 00    	jbe    f010328e <debuginfo_eip+0x140>f01031944924,227227
f010319a:	c7 c0 ed b7 10 f0    	mov    $0xf010b7ed,%eaxf010319a4931,227469
f01031a0:	39 81 f8 ff ff ff    	cmp    %eax,-0x8(%ecx)f01031a04932,227525
f01031a6:	0f 86 88 01 00 00    	jbe    f0103334 <debuginfo_eip+0x1e6>f01031a64933,227580
f01031ac:	8b 75 d4             	mov    -0x2c(%ebp),%esif01031ac4934,227650
f01031af:	c7 c0 d5 d5 10 f0    	mov    $0xf010d5d5,%eaxf01031af4935,227706
f01031b5:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)f01031b54936,227762
f01031b9:	0f 85 7c 01 00 00    	jne    f010333b <debuginfo_eip+0x1ed>f01031b94937,227817
	lfile = 0;lfile4943,228118
f01031bf:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)f01031bf4944,228130
	rfile = (stab_end - stabs) - 1;rfile4945,228186
f01031c6:	c7 c0 b0 51 10 f0    	mov    $0xf01051b0,%eaxf01031c64946,228219
f01031cc:	c7 c2 ec b7 10 f0    	mov    $0xf010b7ec,%edxf01031cc4947,228275
f01031d2:	29 c2                	sub    %eax,%edxf01031d24948,228331
f01031d4:	c1 fa 02             	sar    $0x2,%edxf01031d44949,228380
f01031d7:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edxf01031d74950,228429
f01031dd:	83 ea 01             	sub    $0x1,%edxf01031dd4951,228490
f01031e0:	89 55 e0             	mov    %edx,-0x20(%ebp)f01031e04952,228539
f01031e3:	8d 4d e0             	lea    -0x20(%ebp),%ecxf01031e34954,228647
f01031e6:	8d 55 e4             	lea    -0x1c(%ebp),%edxf01031e64955,228703
f01031e9:	83 ec 08             	sub    $0x8,%espf01031e94956,228759
f01031ec:	53                   	push   %ebxf01031ec4957,228808
f01031ed:	6a 64                	push   $0x64f01031ed4958,228852
f01031ef:	e8 6a fe ff ff       	call   f010305e <stab_binsearch>f01031ef4959,228897
f01031f4:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf01031f44961,228979
f01031f7:	83 c4 10             	add    $0x10,%espf01031f74962,229035
f01031fa:	85 c0                	test   %eax,%eaxf01031fa4963,229085
f01031fc:	0f 84 40 01 00 00    	je     f0103342 <debuginfo_eip+0x1f4>f01031fc4964,229134
	lfun = lfile;lfun4969,229295
f0103202:	89 45 dc             	mov    %eax,-0x24(%ebp)f01032024970,229310
	rfun = rfile;rfun4971,229366
f0103205:	8b 45 e0             	mov    -0x20(%ebp),%eaxf01032054972,229381
f0103208:	89 45 d8             	mov    %eax,-0x28(%ebp)f01032084973,229437
f010320b:	8d 4d d8             	lea    -0x28(%ebp),%ecxf010320b4975,229544
f010320e:	8d 55 dc             	lea    -0x24(%ebp),%edxf010320e4976,229600
f0103211:	83 ec 08             	sub    $0x8,%espf01032114977,229656
f0103214:	53                   	push   %ebxf01032144978,229705
f0103215:	6a 24                	push   $0x24f01032154979,229749
f0103217:	89 75 d4             	mov    %esi,-0x2c(%ebp)f01032174980,229794
f010321a:	c7 c0 b0 51 10 f0    	mov    $0xf01051b0,%eaxf010321a4981,229850
f0103220:	e8 39 fe ff ff       	call   f010305e <stab_binsearch>f01032204982,229906
f0103225:	8b 75 dc             	mov    -0x24(%ebp),%esif01032254985,229993
f0103228:	83 c4 10             	add    $0x10,%espf01032284986,230049
f010322b:	3b 75 d8             	cmp    -0x28(%ebp),%esif010322b4987,230099
f010322e:	7f 79                	jg     f01032a9 <debuginfo_eip+0x15b>f010322e4988,230155
f0103230:	8d 04 76             	lea    (%esi,%esi,2),%eaxf01032304992,230377
f0103233:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01032334993,230435
f0103236:	c7 c2 b0 51 10 f0    	mov    $0xf01051b0,%edxf01032364994,230491
f010323c:	8d 0c 82             	lea    (%edx,%eax,4),%ecxf010323c4995,230547
f010323f:	8b 11                	mov    (%ecx),%edxf010323f4996,230605
f0103241:	c7 c0 d5 d5 10 f0    	mov    $0xf010d5d5,%eaxf01032414997,230656
f0103247:	81 e8 ed b7 10 f0    	sub    $0xf010b7ed,%eaxf01032474998,230712
f010324d:	39 c2                	cmp    %eax,%edxf010324d4999,230768
f010324f:	73 09                	jae    f010325a <debuginfo_eip+0x10c>f010324f5000,230817
f0103251:	81 c2 ed b7 10 f0    	add    $0xf010b7ed,%edxf01032515002,230940
f0103257:	89 57 08             	mov    %edx,0x8(%edi)f01032575003,230996
f010325a:	8b 41 08             	mov    0x8(%ecx),%eaxf010325a5005,231093
f010325d:	89 47 10             	mov    %eax,0x10(%edi)f010325d5006,231147
		lline = lfile;lline5008,231230
		rline = rfile;rline5009,231247
f0103260:	83 ec 08             	sub    $0x8,%espf01032605013,231378
f0103263:	6a 3a                	push   $0x3af01032635014,231427
f0103265:	ff 77 08             	pushl  0x8(%edi)f01032655015,231472
f0103268:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01032685016,231521
f010326b:	e8 1a 09 00 00       	call   f0103b8a <strfind>f010326b5017,231577
f0103270:	2b 47 08             	sub    0x8(%edi),%eaxf01032705018,231635
f0103273:	89 47 0c             	mov    %eax,0xc(%edi)f01032735019,231689
f0103276:	8b 5d e4             	mov    -0x1c(%ebp),%ebxf01032765026,232013
f0103279:	8d 04 76             	lea    (%esi,%esi,2),%eaxf01032795027,232069
f010327c:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf010327c5028,232127
f010327f:	c7 c2 b0 51 10 f0    	mov    $0xf01051b0,%edxf010327f5029,232183
f0103285:	8d 44 82 04          	lea    0x4(%edx,%eax,4),%eaxf01032855030,232239
f0103289:	83 c4 10             	add    $0x10,%espf01032895031,232300
f010328c:	eb 29                	jmp    f01032b7 <debuginfo_eip+0x169>f010328c5032,232350
f010328e:	83 ec 04             	sub    $0x4,%espf010328e5034,232454
f0103291:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01032915035,232503
f0103294:	8d 83 95 dc fe ff    	lea    -0x1236b(%ebx),%eaxf01032945036,232559
f010329a:	50                   	push   %eaxf010329a5037,232618
f010329b:	6a 7f                	push   $0x7ff010329b5038,232662
f010329d:	8d 83 a2 dc fe ff    	lea    -0x1235e(%ebx),%eaxf010329d5039,232707
f01032a3:	50                   	push   %eaxf01032a35040,232766
f01032a4:	e8 f0 cd ff ff       	call   f0100099 <_panic>f01032a45041,232810
f01032a9:	89 5f 10             	mov    %ebx,0x10(%edi)f01032a95043,232895
		lline = lfile;lline5044,232950
f01032ac:	8b 75 e4             	mov    -0x1c(%ebp),%esif01032ac5045,232967
f01032af:	eb af                	jmp    f0103260 <debuginfo_eip+0x112>f01032af5046,233023
f01032b1:	83 ee 01             	sub    $0x1,%esif01032b15050,233211
f01032b4:	83 e8 0c             	sub    $0xc,%eaxf01032b45051,233260
f01032b7:	39 f3                	cmp    %esi,%ebxf01032b75053,233332
f01032b9:	7f 3a                	jg     f01032f5 <debuginfo_eip+0x1a7>f01032b95054,233381
f01032bb:	0f b6 10             	movzbl (%eax),%edxf01032bb5056,233491
f01032be:	80 fa 84             	cmp    $0x84,%dlf01032be5057,233542
f01032c1:	74 0b                	je     f01032ce <debuginfo_eip+0x180>f01032c15058,233591
f01032c3:	80 fa 64             	cmp    $0x64,%dlf01032c35060,233728
f01032c6:	75 e9                	jne    f01032b1 <debuginfo_eip+0x163>f01032c65061,233777
f01032c8:	83 78 04 00          	cmpl   $0x0,0x4(%eax)f01032c85062,233847
f01032cc:	74 e3                	je     f01032b1 <debuginfo_eip+0x163>f01032cc5063,233901
f01032ce:	8d 14 76             	lea    (%esi,%esi,2),%edxf01032ce5065,234039
f01032d1:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01032d15066,234097
f01032d4:	c7 c0 b0 51 10 f0    	mov    $0xf01051b0,%eaxf01032d45067,234153
f01032da:	8b 14 90             	mov    (%eax,%edx,4),%edxf01032da5068,234209
f01032dd:	c7 c0 d5 d5 10 f0    	mov    $0xf010d5d5,%eaxf01032dd5069,234267
f01032e3:	81 e8 ed b7 10 f0    	sub    $0xf010b7ed,%eaxf01032e35070,234323
f01032e9:	39 c2                	cmp    %eax,%edxf01032e95071,234379
f01032eb:	73 08                	jae    f01032f5 <debuginfo_eip+0x1a7>f01032eb5072,234428
f01032ed:	81 c2 ed b7 10 f0    	add    $0xf010b7ed,%edxf01032ed5074,234548
f01032f3:	89 17                	mov    %edx,(%edi)f01032f35075,234604
f01032f5:	8b 5d dc             	mov    -0x24(%ebp),%ebxf01032f55081,234791
f01032f8:	8b 4d d8             	mov    -0x28(%ebp),%ecxf01032f85082,234847
f01032fb:	b8 00 00 00 00       	mov    $0x0,%eaxf01032fb5089,235034
f0103300:	39 cb                	cmp    %ecx,%ebxf01033005091,235101
f0103302:	7d 4a                	jge    f010334e <debuginfo_eip+0x200>f01033025092,235150
f0103304:	8d 53 01             	lea    0x1(%ebx),%edxf01033045094,235245
f0103307:	8d 1c 5b             	lea    (%ebx,%ebx,2),%ebxf01033075095,235299
f010330a:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf010330a5096,235357
f010330d:	c7 c0 b0 51 10 f0    	mov    $0xf01051b0,%eaxf010330d5097,235413
f0103313:	8d 44 98 10          	lea    0x10(%eax,%ebx,4),%eaxf01033135098,235469
f0103317:	eb 07                	jmp    f0103320 <debuginfo_eip+0x1d2>f01033175099,235531
f0103319:	83 47 14 01          	addl   $0x1,0x14(%edi)f01033195101,235625
f010331d:	83 c2 01             	add    $0x1,%edxf010331d5103,235696
f0103320:	39 d1                	cmp    %edx,%ecxf01033205105,235770
f0103322:	74 25                	je     f0103349 <debuginfo_eip+0x1fb>f01033225106,235819
f0103324:	83 c0 0c             	add    $0xc,%eaxf01033245107,235889
f0103327:	80 78 f4 a0          	cmpb   $0xa0,-0xc(%eax)f01033275109,235992
f010332b:	74 ec                	je     f0103319 <debuginfo_eip+0x1cb>f010332b5110,236048
f010332d:	b8 00 00 00 00       	mov    $0x0,%eaxf010332d5112,236129
f0103332:	eb 1a                	jmp    f010334e <debuginfo_eip+0x200>f01033325113,236178
f0103334:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf01033345115,236261
f0103339:	eb 13                	jmp    f010334e <debuginfo_eip+0x200>f01033395116,236317
f010333b:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf010333b5117,236387
f0103340:	eb 0c                	jmp    f010334e <debuginfo_eip+0x200>f01033405118,236443
f0103342:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf01033425120,236526
f0103347:	eb 05                	jmp    f010334e <debuginfo_eip+0x200>f01033475121,236582
f0103349:	b8 00 00 00 00       	mov    $0x0,%eaxf01033495123,236663
f010334e:	8d 65 f4             	lea    -0xc(%ebp),%espf010334e5125,236714
f0103351:	5b                   	pop    %ebxf01033515126,236769
f0103352:	5e                   	pop    %esif01033525127,236813
f0103353:	5f                   	pop    %edif01033535128,236857
f0103354:	5d                   	pop    %ebpf01033545129,236901
f0103355:	c3                   	ret    f01033555130,236945
f0103356 <printnum>:f01033565132,236986
static voidstatic5135,237076
f0103356:	55                   	push   %ebpf01033565139,237202
f0103357:	89 e5                	mov    %esp,%ebpf01033575140,237246
f0103359:	57                   	push   %edif01033595141,237295
f010335a:	56                   	push   %esif010335a5142,237339
f010335b:	53                   	push   %ebxf010335b5143,237383
f010335c:	83 ec 2c             	sub    $0x2c,%espf010335c5144,237427
f010335f:	e8 53 fc ff ff       	call   f0102fb7 <__x86.get_pc_thunk.cx>f010335f5145,237477
f0103364:	81 c1 a8 3f 01 00    	add    $0x13fa8,%ecxf01033645146,237549
f010336a:	89 4d e4             	mov    %ecx,-0x1c(%ebp)f010336a5147,237602
f010336d:	89 c7                	mov    %eax,%edif010336d5148,237658
f010336f:	89 d6                	mov    %edx,%esif010336f5149,237707
f0103371:	8b 45 08             	mov    0x8(%ebp),%eaxf01033715150,237756
f0103374:	8b 55 0c             	mov    0xc(%ebp),%edxf01033745151,237810
f0103377:	89 45 d0             	mov    %eax,-0x30(%ebp)f01033775152,237864
f010337a:	89 55 d4             	mov    %edx,-0x2c(%ebp)f010337a5153,237920
f010337d:	8b 4d 10             	mov    0x10(%ebp),%ecxf010337d5156,238064
f0103380:	bb 00 00 00 00       	mov    $0x0,%ebxf01033805157,238119
f0103385:	89 4d d8             	mov    %ecx,-0x28(%ebp)f01033855158,238168
f0103388:	89 5d dc             	mov    %ebx,-0x24(%ebp)f01033885159,238224
f010338b:	39 d3                	cmp    %edx,%ebxf010338b5160,238280
f010338d:	72 09                	jb     f0103398 <printnum+0x42>f010338d5161,238329
f010338f:	39 45 10             	cmp    %eax,0x10(%ebp)f010338f5162,238393
f0103392:	0f 87 83 00 00 00    	ja     f010341b <printnum+0xc5>f01033925163,238448
f0103398:	83 ec 0c             	sub    $0xc,%espf01033985165,238574
f010339b:	ff 75 18             	pushl  0x18(%ebp)f010339b5166,238623
f010339e:	8b 45 14             	mov    0x14(%ebp),%eaxf010339e5167,238673
f01033a1:	8d 58 ff             	lea    -0x1(%eax),%ebxf01033a15168,238728
f01033a4:	53                   	push   %ebxf01033a45169,238783
f01033a5:	ff 75 10             	pushl  0x10(%ebp)f01033a55170,238827
f01033a8:	83 ec 08             	sub    $0x8,%espf01033a85171,238877
f01033ab:	ff 75 dc             	pushl  -0x24(%ebp)f01033ab5172,238926
f01033ae:	ff 75 d8             	pushl  -0x28(%ebp)f01033ae5173,238977
f01033b1:	ff 75 d4             	pushl  -0x2c(%ebp)f01033b15174,239028
f01033b4:	ff 75 d0             	pushl  -0x30(%ebp)f01033b45175,239079
f01033b7:	8b 5d e4             	mov    -0x1c(%ebp),%ebxf01033b75176,239130
f01033ba:	e8 f1 09 00 00       	call   f0103db0 <__udivdi3>f01033ba5177,239186
f01033bf:	83 c4 18             	add    $0x18,%espf01033bf5178,239246
f01033c2:	52                   	push   %edxf01033c25179,239296
f01033c3:	50                   	push   %eaxf01033c35180,239340
f01033c4:	89 f2                	mov    %esi,%edxf01033c45181,239384
f01033c6:	89 f8                	mov    %edi,%eaxf01033c65182,239433
f01033c8:	e8 89 ff ff ff       	call   f0103356 <printnum>f01033c85183,239482
f01033cd:	83 c4 20             	add    $0x20,%espf01033cd5184,239541
f01033d0:	eb 13                	jmp    f01033e5 <printnum+0x8f>f01033d05185,239591
f01033d2:	83 ec 08             	sub    $0x8,%espf01033d25190,239767
f01033d5:	56                   	push   %esif01033d55191,239816
f01033d6:	ff 75 18             	pushl  0x18(%ebp)f01033d65192,239860
f01033d9:	ff d7                	call   *%edif01033d95193,239910
f01033db:	83 c4 10             	add    $0x10,%espf01033db5194,239955
f01033de:	83 eb 01             	sub    $0x1,%ebxf01033de5196,240027
f01033e1:	85 db                	test   %ebx,%ebxf01033e15197,240076
f01033e3:	7f ed                	jg     f01033d2 <printnum+0x7c>f01033e35198,240125
f01033e5:	83 ec 08             	sub    $0x8,%espf01033e55203,240291
f01033e8:	56                   	push   %esif01033e85204,240340
f01033e9:	83 ec 04             	sub    $0x4,%espf01033e95205,240384
f01033ec:	ff 75 dc             	pushl  -0x24(%ebp)f01033ec5206,240433
f01033ef:	ff 75 d8             	pushl  -0x28(%ebp)f01033ef5207,240484
f01033f2:	ff 75 d4             	pushl  -0x2c(%ebp)f01033f25208,240535
f01033f5:	ff 75 d0             	pushl  -0x30(%ebp)f01033f55209,240586
f01033f8:	8b 75 e4             	mov    -0x1c(%ebp),%esif01033f85210,240637
f01033fb:	89 f3                	mov    %esi,%ebxf01033fb5211,240693
f01033fd:	e8 ce 0a 00 00       	call   f0103ed0 <__umoddi3>f01033fd5212,240742
f0103402:	83 c4 14             	add    $0x14,%espf01034025213,240802
f0103405:	0f be 84 06 b0 dc fe 	movsbl -0x12350(%esi,%eax,1),%eaxf01034055214,240852
f010340c:	ff f010340c5215,240918
f010340d:	50                   	push   %eaxf010340d5216,240932
f010340e:	ff d7                	call   *%edif010340e5217,240976
f0103410:	83 c4 10             	add    $0x10,%espf01034105219,241023
f0103413:	8d 65 f4             	lea    -0xc(%ebp),%espf01034135220,241073
f0103416:	5b                   	pop    %ebxf01034165221,241128
f0103417:	5e                   	pop    %esif01034175222,241172
f0103418:	5f                   	pop    %edif01034185223,241216
f0103419:	5d                   	pop    %ebpf01034195224,241260
f010341a:	c3                   	ret    f010341a5225,241304
f010341b:	8b 5d 14             	mov    0x14(%ebp),%ebxf010341b5226,241344
f010341e:	eb be                	jmp    f01033de <printnum+0x88>f010341e5227,241399
f0103420 <sprintputch>:f01034205229,241464
static voidstatic5233,241502
f0103420:	55                   	push   %ebpf01034205236,241557
f0103421:	89 e5                	mov    %esp,%ebpf01034215237,241601
f0103423:	8b 45 0c             	mov    0xc(%ebp),%eaxf01034235238,241650
f0103426:	83 40 08 01          	addl   $0x1,0x8(%eax)f01034265240,241715
f010342a:	8b 10                	mov    (%eax),%edxf010342a5242,241792
f010342c:	3b 50 04             	cmp    0x4(%eax),%edxf010342c5243,241843
f010342f:	73 0a                	jae    f010343b <sprintputch+0x1b>f010342f5244,241897
f0103431:	8d 4a 01             	lea    0x1(%edx),%ecxf01034315246,241982
f0103434:	89 08                	mov    %ecx,(%eax)f01034345247,242036
f0103436:	8b 45 08             	mov    0x8(%ebp),%eaxf01034365248,242087
f0103439:	88 02                	mov    %al,(%edx)f01034395249,242141
f010343b:	5d                   	pop    %ebpf010343b5251,242193
f010343c:	c3                   	ret    f010343c5252,242237
f010343d <printfmt>:f010343d5254,242278
f010343d:	55                   	push   %ebpf010343d5256,242301
f010343e:	89 e5                	mov    %esp,%ebpf010343e5257,242345
f0103440:	83 ec 08             	sub    $0x8,%espf01034405258,242394
f0103443:	8d 45 14             	lea    0x14(%ebp),%eaxf01034435260,242463
f0103446:	50                   	push   %eaxf01034465262,242554
f0103447:	ff 75 10             	pushl  0x10(%ebp)f01034475263,242598
f010344a:	ff 75 0c             	pushl  0xc(%ebp)f010344a5264,242648
f010344d:	ff 75 08             	pushl  0x8(%ebp)f010344d5265,242697
f0103450:	e8 05 00 00 00       	call   f010345a <vprintfmt>f01034505266,242746
f0103455:	83 c4 10             	add    $0x10,%espf01034555268,242808
f0103458:	c9                   	leave  f01034585269,242858
f0103459:	c3                   	ret    f01034595270,242898
f010345a <vprintfmt>:f010345a5272,242939
f010345a:	55                   	push   %ebpf010345a5274,242963
f010345b:	89 e5                	mov    %esp,%ebpf010345b5275,243007
f010345d:	57                   	push   %edif010345d5276,243056
f010345e:	56                   	push   %esif010345e5277,243100
f010345f:	53                   	push   %ebxf010345f5278,243144
f0103460:	83 ec 2c             	sub    $0x2c,%espf01034605279,243188
f0103463:	e8 e7 cc ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01034635280,243238
f0103468:	81 c3 a4 3e 01 00    	add    $0x13ea4,%ebxf01034685281,243310
f010346e:	8b 75 0c             	mov    0xc(%ebp),%esif010346e5282,243363
f0103471:	8b 7d 10             	mov    0x10(%ebp),%edif01034715283,243417
f0103474:	e9 8e 03 00 00       	jmp    f0103807 <.L35+0x48>f01034745284,243472
		padc = ' ';padc5285,243532
f0103479:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)f01034795286,243546
		altflag = 0;altflag5287,243603
f010347d:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)f010347d5288,243618
		precision = -1;precision5289,243674
f0103484:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)f01034845290,243692
		width = -1;width5291,243755
f010348b:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)f010348b5292,243769
		lflag = 0;lflag5293,243832
f0103492:	b9 00 00 00 00       	mov    $0x0,%ecxf01034925294,243845
f0103497:	89 4d cc             	mov    %ecx,-0x34(%ebp)f01034975295,243894
f010349a:	8d 47 01             	lea    0x1(%edi),%eaxf010349a5297,243993
f010349d:	89 45 e4             	mov    %eax,-0x1c(%ebp)f010349d5298,244047
f01034a0:	0f b6 17             	movzbl (%edi),%edxf01034a05299,244103
f01034a3:	8d 42 dd             	lea    -0x23(%edx),%eaxf01034a35300,244154
f01034a6:	3c 55                	cmp    $0x55,%alf01034a65301,244210
f01034a8:	0f 87 e1 03 00 00    	ja     f010388f <.L22>f01034a85302,244259
f01034ae:	0f b6 c0             	movzbl %al,%eaxf01034ae5303,244314
f01034b1:	89 d9                	mov    %ebx,%ecxf01034b15304,244362
f01034b3:	03 8c 83 3c dd fe ff 	add    -0x122c4(%ebx,%eax,4),%ecxf01034b35305,244411
f01034ba:	ff e1                	jmp    *%ecxf01034ba5306,244477
f01034bc <.L67>:f01034bc5308,244523
f01034bc:	8b 7d e4             	mov    -0x1c(%ebp),%edif01034bc5309,244540
			padc = '-';padc5310,244596
f01034bf:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)f01034bf5311,244611
f01034c3:	eb d5                	jmp    f010349a <vprintfmt+0x40>f01034c35312,244668
f01034c5 <.L28>:f01034c55314,244734
f01034c5:	8b 7d e4             	mov    -0x1c(%ebp),%edif01034c55316,244794
			padc = '0';padc5317,244850
f01034c8:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)f01034c85318,244865
f01034cc:	eb cc                	jmp    f010349a <vprintfmt+0x40>f01034cc5319,244922
f01034ce <.L29>:f01034ce5321,244988
f01034ce:	0f b6 d2             	movzbl %dl,%edxf01034ce5323,245048
f01034d1:	8b 7d e4             	mov    -0x1c(%ebp),%edif01034d15324,245096
f01034d4:	b8 00 00 00 00       	mov    $0x0,%eaxf01034d45326,245186
				precision = precision * 10 + ch - '0';precision5327,245235
f01034d9:	8d 04 80             	lea    (%eax,%eax,4),%eaxf01034d95328,245278
f01034dc:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eaxf01034dc5329,245336
				ch = *fmt;ch5330,245399
f01034e0:	0f be 17             	movsbl (%edi),%edxf01034e05331,245414
f01034e3:	8d 4a d0             	lea    -0x30(%edx),%ecxf01034e35333,245495
f01034e6:	83 f9 09             	cmp    $0x9,%ecxf01034e65334,245551
f01034e9:	77 55                	ja     f0103540 <.L23+0xf>f01034e95335,245600
f01034eb:	83 c7 01             	add    $0x1,%edif01034eb5337,245693
				precision = precision * 10 + ch - '0';precision5338,245742
f01034ee:	eb e9                	jmp    f01034d9 <.L29+0xb>f01034ee5339,245785
f01034f0 <.L26>:f01034f05341,245845
			precision = va_arg(ap, int);precision5342,245862
f01034f0:	8b 45 14             	mov    0x14(%ebp),%eaxf01034f05343,245894
f01034f3:	8b 00                	mov    (%eax),%eaxf01034f35344,245949
f01034f5:	89 45 d0             	mov    %eax,-0x30(%ebp)f01034f55345,246000
f01034f8:	8b 45 14             	mov    0x14(%ebp),%eaxf01034f85346,246056
f01034fb:	8d 40 04             	lea    0x4(%eax),%eaxf01034fb5347,246111
f01034fe:	89 45 14             	mov    %eax,0x14(%ebp)f01034fe5348,246165
f0103501:	8b 7d e4             	mov    -0x1c(%ebp),%edif01035015350,246263
f0103504:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)f01035045352,246337
f0103508:	79 90                	jns    f010349a <vprintfmt+0x40>f01035085353,246393
				width = precision, precision = -1;width5354,246458
f010350a:	8b 45 d0             	mov    -0x30(%ebp),%eaxf010350a5355,246497
f010350d:	89 45 e0             	mov    %eax,-0x20(%ebp)f010350d5356,246553
f0103510:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)f01035105357,246609
f0103517:	eb 81                	jmp    f010349a <vprintfmt+0x40>f01035175358,246672
f0103519 <.L27>:f01035195360,246738
f0103519:	8b 45 e0             	mov    -0x20(%ebp),%eaxf01035195361,246755
f010351c:	85 c0                	test   %eax,%eaxf010351c5362,246811
f010351e:	ba 00 00 00 00       	mov    $0x0,%edxf010351e5363,246860
f0103523:	0f 49 d0             	cmovns %eax,%edxf01035235364,246909
f0103526:	89 55 e0             	mov    %edx,-0x20(%ebp)f01035265365,246958
f0103529:	8b 7d e4             	mov    -0x1c(%ebp),%edif01035295367,247057
f010352c:	e9 69 ff ff ff       	jmp    f010349a <vprintfmt+0x40>f010352c5368,247113
f0103531 <.L23>:f01035315370,247179
f0103531:	8b 7d e4             	mov    -0x1c(%ebp),%edif01035315371,247196
			altflag = 1;altflag5372,247252
f0103534:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)f01035345373,247268
f010353b:	e9 5a ff ff ff       	jmp    f010349a <vprintfmt+0x40>f010353b5375,247342
f0103540:	89 45 d0             	mov    %eax,-0x30(%ebp)f01035405376,247407
f0103543:	eb bf                	jmp    f0103504 <.L26+0x14>f01035435377,247463
f0103545 <.L33>:f01035455379,247524
f0103545:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)f01035455381,247553
f0103549:	8b 7d e4             	mov    -0x1c(%ebp),%edif01035495383,247652
f010354c:	e9 49 ff ff ff       	jmp    f010349a <vprintfmt+0x40>f010354c5385,247726
f0103551 <.L30>:f01035515387,247792
f0103551:	8b 45 14             	mov    0x14(%ebp),%eaxf01035515389,247844
f0103554:	8d 78 04             	lea    0x4(%eax),%edif01035545390,247899
f0103557:	83 ec 08             	sub    $0x8,%espf01035575391,247953
f010355a:	56                   	push   %esif010355a5392,248002
f010355b:	ff 30                	pushl  (%eax)f010355b5393,248046
f010355d:	ff 55 08             	call   *0x8(%ebp)f010355d5394,248092
f0103560:	83 c4 10             	add    $0x10,%espf01035605396,248152
f0103563:	89 7d 14             	mov    %edi,0x14(%ebp)f01035635398,248237
f0103566:	e9 99 02 00 00       	jmp    f0103804 <.L35+0x45>f01035665400,248302
f010356b <.L32>:f010356b5402,248363
			err = va_arg(ap, int);err5403,248380
f010356b:	8b 45 14             	mov    0x14(%ebp),%eaxf010356b5404,248406
f010356e:	8d 78 04             	lea    0x4(%eax),%edif010356e5405,248461
f0103571:	8b 00                	mov    (%eax),%eaxf01035715406,248515
f0103573:	99                   	cltd   f01035735407,248566
f0103574:	31 d0                	xor    %edx,%eaxf01035745408,248606
f0103576:	29 d0                	sub    %edx,%eaxf01035765409,248655
f0103578:	83 f8 06             	cmp    $0x6,%eaxf01035785411,248763
f010357b:	7f 27                	jg     f01035a4 <.L32+0x39>f010357b5412,248812
f010357d:	8b 94 83 1c 1d 00 00 	mov    0x1d1c(%ebx,%eax,4),%edxf010357d5413,248872
f0103584:	85 d2                	test   %edx,%edxf01035845414,248936
f0103586:	74 1c                	je     f01035a4 <.L32+0x39>f01035865415,248985
f0103588:	52                   	push   %edxf01035885417,249083
f0103589:	8d 83 e0 d9 fe ff    	lea    -0x12620(%ebx),%eaxf01035895418,249127
f010358f:	50                   	push   %eaxf010358f5419,249186
f0103590:	56                   	push   %esif01035905420,249230
f0103591:	ff 75 08             	pushl  0x8(%ebp)f01035915421,249274
f0103594:	e8 a4 fe ff ff       	call   f010343d <printfmt>f01035945422,249323
f0103599:	83 c4 10             	add    $0x10,%espf01035995423,249382
			err = va_arg(ap, int);err5424,249432
f010359c:	89 7d 14             	mov    %edi,0x14(%ebp)f010359c5425,249458
f010359f:	e9 60 02 00 00       	jmp    f0103804 <.L35+0x45>f010359f5426,249513
f01035a4:	50                   	push   %eaxf01035a45428,249619
f01035a5:	8d 83 c8 dc fe ff    	lea    -0x12338(%ebx),%eaxf01035a55429,249663
f01035ab:	50                   	push   %eaxf01035ab5430,249722
f01035ac:	56                   	push   %esif01035ac5431,249766
f01035ad:	ff 75 08             	pushl  0x8(%ebp)f01035ad5432,249810
f01035b0:	e8 88 fe ff ff       	call   f010343d <printfmt>f01035b05433,249859
f01035b5:	83 c4 10             	add    $0x10,%espf01035b55434,249918
			err = va_arg(ap, int);err5435,249968
f01035b8:	89 7d 14             	mov    %edi,0x14(%ebp)f01035b85436,249994
f01035bb:	e9 44 02 00 00       	jmp    f0103804 <.L35+0x45>f01035bb5438,250095
f01035c0 <.L36>:f01035c05440,250156
f01035c0:	8b 45 14             	mov    0x14(%ebp),%eaxf01035c05442,250214
f01035c3:	83 c0 04             	add    $0x4,%eaxf01035c35443,250269
f01035c6:	89 45 cc             	mov    %eax,-0x34(%ebp)f01035c65444,250318
f01035c9:	8b 45 14             	mov    0x14(%ebp),%eaxf01035c95445,250374
f01035cc:	8b 38                	mov    (%eax),%edif01035cc5446,250429
				p = "(null)";p5447,250480
f01035ce:	85 ff                	test   %edi,%edif01035ce5448,250498
f01035d0:	8d 83 c1 dc fe ff    	lea    -0x1233f(%ebx),%eaxf01035d05449,250547
f01035d6:	0f 44 f8             	cmove  %eax,%edif01035d65450,250606
f01035d9:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)f01035d95452,250688
f01035dd:	0f 8e b5 00 00 00    	jle    f0103698 <.L36+0xd8>f01035dd5453,250744
f01035e3:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)f01035e35454,250804
f01035e7:	75 08                	jne    f01035f1 <.L36+0x31>f01035e75455,250861
f01035e9:	89 75 0c             	mov    %esi,0xc(%ebp)f01035e95456,250921
f01035ec:	8b 75 d0             	mov    -0x30(%ebp),%esif01035ec5457,250975
f01035ef:	eb 6d                	jmp    f010365e <.L36+0x9e>f01035ef5458,251031
f01035f1:	83 ec 08             	sub    $0x8,%espf01035f15460,251152
f01035f4:	ff 75 d0             	pushl  -0x30(%ebp)f01035f45461,251201
f01035f7:	57                   	push   %edif01035f75462,251252
f01035f8:	e8 49 04 00 00       	call   f0103a46 <strnlen>f01035f85463,251296
f01035fd:	8b 55 e0             	mov    -0x20(%ebp),%edxf01035fd5464,251354
f0103600:	29 c2                	sub    %eax,%edxf01036005465,251410
f0103602:	89 55 c8             	mov    %edx,-0x38(%ebp)f01036025466,251459
f0103605:	83 c4 10             	add    $0x10,%espf01036055467,251515
f0103608:	0f be 45 d4          	movsbl -0x2c(%ebp),%eaxf01036085469,251591
f010360c:	89 45 e0             	mov    %eax,-0x20(%ebp)f010360c5470,251647
f010360f:	89 7d d4             	mov    %edi,-0x2c(%ebp)f010360f5471,251703
f0103612:	89 d7                	mov    %edx,%edif01036125472,251759
f0103614:	eb 10                	jmp    f0103626 <.L36+0x66>f01036145474,251869
f0103616:	83 ec 08             	sub    $0x8,%espf01036165476,251955
f0103619:	56                   	push   %esif01036195477,252004
f010361a:	ff 75 e0             	pushl  -0x20(%ebp)f010361a5478,252048
f010361d:	ff 55 08             	call   *0x8(%ebp)f010361d5479,252099
f0103620:	83 ef 01             	sub    $0x1,%edif01036205481,252210
f0103623:	83 c4 10             	add    $0x10,%espf01036235482,252259
f0103626:	85 ff                	test   %edi,%edif01036265483,252309
f0103628:	7f ec                	jg     f0103616 <.L36+0x56>f01036285484,252358
f010362a:	8b 7d d4             	mov    -0x2c(%ebp),%edif010362a5485,252418
f010362d:	8b 55 c8             	mov    -0x38(%ebp),%edxf010362d5486,252474
f0103630:	85 d2                	test   %edx,%edxf01036305487,252530
f0103632:	b8 00 00 00 00       	mov    $0x0,%eaxf01036325488,252579
f0103637:	0f 49 c2             	cmovns %edx,%eaxf01036375489,252628
f010363a:	29 c2                	sub    %eax,%edxf010363a5490,252677
f010363c:	89 55 e0             	mov    %edx,-0x20(%ebp)f010363c5491,252726
f010363f:	89 75 0c             	mov    %esi,0xc(%ebp)f010363f5492,252782
f0103642:	8b 75 d0             	mov    -0x30(%ebp),%esif01036425493,252836
f0103645:	eb 17                	jmp    f010365e <.L36+0x9e>f01036455494,252892
f0103647:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)f01036475496,252995
f010364b:	75 30                	jne    f010367d <.L36+0xbd>f010364b5497,253051
f010364d:	83 ec 08             	sub    $0x8,%espf010364d5499,253135
f0103650:	ff 75 0c             	pushl  0xc(%ebp)f01036505500,253184
f0103653:	50                   	push   %eaxf01036535501,253233
f0103654:	ff 55 08             	call   *0x8(%ebp)f01036545502,253277
f0103657:	83 c4 10             	add    $0x10,%espf01036575503,253327
f010365a:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)f010365a5505,253456
f010365e:	83 c7 01             	add    $0x1,%edif010365e5506,253512
f0103661:	0f b6 57 ff          	movzbl -0x1(%edi),%edxf01036615507,253561
f0103665:	0f be c2             	movsbl %dl,%eaxf01036655508,253616
f0103668:	85 c0                	test   %eax,%eaxf01036685509,253664
f010366a:	74 52                	je     f01036be <.L36+0xfe>f010366a5510,253713
f010366c:	85 f6                	test   %esi,%esif010366c5511,253773
f010366e:	78 d7                	js     f0103647 <.L36+0x87>f010366e5512,253822
f0103670:	83 ee 01             	sub    $0x1,%esif01036705513,253882
f0103673:	79 d2                	jns    f0103647 <.L36+0x87>f01036735514,253931
f0103675:	8b 75 0c             	mov    0xc(%ebp),%esif01036755515,253991
f0103678:	8b 7d e0             	mov    -0x20(%ebp),%edif01036785516,254045
f010367b:	eb 32                	jmp    f01036af <.L36+0xef>f010367b5517,254101
f010367d:	0f be d2             	movsbl %dl,%edxf010367d5519,254204
f0103680:	83 ea 20             	sub    $0x20,%edxf01036805520,254252
f0103683:	83 fa 5e             	cmp    $0x5e,%edxf01036835521,254302
f0103686:	76 c5                	jbe    f010364d <.L36+0x8d>f01036865522,254352
f0103688:	83 ec 08             	sub    $0x8,%espf01036885524,254437
f010368b:	ff 75 0c             	pushl  0xc(%ebp)f010368b5525,254486
f010368e:	6a 3f                	push   $0x3ff010368e5526,254535
f0103690:	ff 55 08             	call   *0x8(%ebp)f01036905527,254580
f0103693:	83 c4 10             	add    $0x10,%espf01036935528,254630
f0103696:	eb c2                	jmp    f010365a <.L36+0x9a>f01036965529,254680
f0103698:	89 75 0c             	mov    %esi,0xc(%ebp)f01036985530,254740
f010369b:	8b 75 d0             	mov    -0x30(%ebp),%esif010369b5531,254794
f010369e:	eb be                	jmp    f010365e <.L36+0x9e>f010369e5532,254850
f01036a0:	83 ec 08             	sub    $0x8,%espf01036a05534,254934
f01036a3:	56                   	push   %esif01036a35535,254983
f01036a4:	6a 20                	push   $0x20f01036a45536,255027
f01036a6:	ff 55 08             	call   *0x8(%ebp)f01036a65537,255072
f01036a9:	83 ef 01             	sub    $0x1,%edif01036a95539,255152
f01036ac:	83 c4 10             	add    $0x10,%espf01036ac5540,255201
f01036af:	85 ff                	test   %edi,%edif01036af5541,255251
f01036b1:	7f ed                	jg     f01036a0 <.L36+0xe0>f01036b15542,255300
f01036b3:	8b 45 cc             	mov    -0x34(%ebp),%eaxf01036b35544,255401
f01036b6:	89 45 14             	mov    %eax,0x14(%ebp)f01036b65545,255457
f01036b9:	e9 46 01 00 00       	jmp    f0103804 <.L35+0x45>f01036b95546,255512
f01036be:	8b 7d e0             	mov    -0x20(%ebp),%edif01036be5547,255572
f01036c1:	8b 75 0c             	mov    0xc(%ebp),%esif01036c15548,255628
f01036c4:	eb e9                	jmp    f01036af <.L36+0xef>f01036c45549,255682
f01036c6 <.L31>:f01036c65551,255743
f01036c6:	8b 4d cc             	mov    -0x34(%ebp),%ecxf01036c65552,255760
f01036c9:	83 f9 01             	cmp    $0x1,%ecxf01036c95554,255833
f01036cc:	7e 40                	jle    f010370e <.L31+0x48>f01036cc5555,255882
f01036ce:	8b 45 14             	mov    0x14(%ebp),%eaxf01036ce5557,255975
f01036d1:	8b 50 04             	mov    0x4(%eax),%edxf01036d15558,256030
f01036d4:	8b 00                	mov    (%eax),%eaxf01036d45559,256084
f01036d6:	89 45 d8             	mov    %eax,-0x28(%ebp)f01036d65560,256135
f01036d9:	89 55 dc             	mov    %edx,-0x24(%ebp)f01036d95561,256191
f01036dc:	8b 45 14             	mov    0x14(%ebp),%eaxf01036dc5562,256247
f01036df:	8d 40 08             	lea    0x8(%eax),%eaxf01036df5563,256302
f01036e2:	89 45 14             	mov    %eax,0x14(%ebp)f01036e25564,256356
f01036e5:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)f01036e55566,256441
f01036e9:	79 55                	jns    f0103740 <.L31+0x7a>f01036e95567,256497
f01036eb:	83 ec 08             	sub    $0x8,%espf01036eb5569,256581
f01036ee:	56                   	push   %esif01036ee5570,256630
f01036ef:	6a 2d                	push   $0x2df01036ef5571,256674
f01036f1:	ff 55 08             	call   *0x8(%ebp)f01036f15572,256719
				num = -(long long) num;num5573,256769
f01036f4:	8b 55 d8             	mov    -0x28(%ebp),%edxf01036f45574,256797
f01036f7:	8b 4d dc             	mov    -0x24(%ebp),%ecxf01036f75575,256853
f01036fa:	f7 da                	neg    %edxf01036fa5576,256909
f01036fc:	83 d1 00             	adc    $0x0,%ecxf01036fc5577,256953
f01036ff:	f7 d9                	neg    %ecxf01036ff5578,257002
f0103701:	83 c4 10             	add    $0x10,%espf01037015579,257046
			base = 10;base5580,257096
f0103704:	b8 0a 00 00 00       	mov    $0xa,%eaxf01037045581,257110
f0103709:	e9 db 00 00 00       	jmp    f01037e9 <.L35+0x2a>f01037095582,257159
f010370e:	85 c9                	test   %ecx,%ecxf010370e5584,257236
f0103710:	75 17                	jne    f0103729 <.L31+0x63>f01037105585,257285
f0103712:	8b 45 14             	mov    0x14(%ebp),%eaxf01037125587,257372
f0103715:	8b 00                	mov    (%eax),%eaxf01037155588,257427
f0103717:	89 45 d8             	mov    %eax,-0x28(%ebp)f01037175589,257478
f010371a:	99                   	cltd   f010371a5590,257534
f010371b:	89 55 dc             	mov    %edx,-0x24(%ebp)f010371b5591,257574
f010371e:	8b 45 14             	mov    0x14(%ebp),%eaxf010371e5592,257630
f0103721:	8d 40 04             	lea    0x4(%eax),%eaxf01037215593,257685
f0103724:	89 45 14             	mov    %eax,0x14(%ebp)f01037245594,257739
f0103727:	eb bc                	jmp    f01036e5 <.L31+0x1f>f01037275595,257794
f0103729:	8b 45 14             	mov    0x14(%ebp),%eaxf01037295597,257882
f010372c:	8b 00                	mov    (%eax),%eaxf010372c5598,257937
f010372e:	89 45 d8             	mov    %eax,-0x28(%ebp)f010372e5599,257988
f0103731:	99                   	cltd   f01037315600,258044
f0103732:	89 55 dc             	mov    %edx,-0x24(%ebp)f01037325601,258084
f0103735:	8b 45 14             	mov    0x14(%ebp),%eaxf01037355602,258140
f0103738:	8d 40 04             	lea    0x4(%eax),%eaxf01037385603,258195
f010373b:	89 45 14             	mov    %eax,0x14(%ebp)f010373b5604,258249
f010373e:	eb a5                	jmp    f01036e5 <.L31+0x1f>f010373e5605,258304
			num = getint(&ap, lflag);num5606,258364
f0103740:	8b 55 d8             	mov    -0x28(%ebp),%edxf01037405607,258393
f0103743:	8b 4d dc             	mov    -0x24(%ebp),%ecxf01037435608,258449
			base = 10;base5609,258505
f0103746:	b8 0a 00 00 00       	mov    $0xa,%eaxf01037465610,258519
f010374b:	e9 99 00 00 00       	jmp    f01037e9 <.L35+0x2a>f010374b5611,258568
f0103750 <.L37>:f01037505613,258629
f0103750:	8b 4d cc             	mov    -0x34(%ebp),%ecxf01037505614,258646
f0103753:	83 f9 01             	cmp    $0x1,%ecxf01037535616,258719
f0103756:	7e 15                	jle    f010376d <.L37+0x1d>f01037565617,258768
f0103758:	8b 45 14             	mov    0x14(%ebp),%eaxf01037585619,258870
f010375b:	8b 10                	mov    (%eax),%edxf010375b5620,258925
f010375d:	8b 48 04             	mov    0x4(%eax),%ecxf010375d5621,258976
f0103760:	8d 40 08             	lea    0x8(%eax),%eaxf01037605622,259030
f0103763:	89 45 14             	mov    %eax,0x14(%ebp)f01037635623,259084
			base = 10;base5624,259139
f0103766:	b8 0a 00 00 00       	mov    $0xa,%eaxf01037665625,259153
f010376b:	eb 7c                	jmp    f01037e9 <.L35+0x2a>f010376b5626,259202
f010376d:	85 c9                	test   %ecx,%ecxf010376d5628,259279
f010376f:	75 17                	jne    f0103788 <.L37+0x38>f010376f5629,259328
f0103771:	8b 45 14             	mov    0x14(%ebp),%eaxf01037715631,259424
f0103774:	8b 10                	mov    (%eax),%edxf01037745632,259479
f0103776:	b9 00 00 00 00       	mov    $0x0,%ecxf01037765633,259530
f010377b:	8d 40 04             	lea    0x4(%eax),%eaxf010377b5634,259579
f010377e:	89 45 14             	mov    %eax,0x14(%ebp)f010377e5635,259633
			base = 10;base5636,259688
f0103781:	b8 0a 00 00 00       	mov    $0xa,%eaxf01037815637,259702
f0103786:	eb 61                	jmp    f01037e9 <.L35+0x2a>f01037865638,259751
f0103788:	8b 45 14             	mov    0x14(%ebp),%eaxf01037885640,259848
f010378b:	8b 10                	mov    (%eax),%edxf010378b5641,259903
f010378d:	b9 00 00 00 00       	mov    $0x0,%ecxf010378d5642,259954
f0103792:	8d 40 04             	lea    0x4(%eax),%eaxf01037925643,260003
f0103795:	89 45 14             	mov    %eax,0x14(%ebp)f01037955644,260057
			base = 10;base5645,260112
f0103798:	b8 0a 00 00 00       	mov    $0xa,%eaxf01037985646,260126
f010379d:	eb 4a                	jmp    f01037e9 <.L35+0x2a>f010379d5647,260175
f010379f <.L34>:f010379f5649,260236
f010379f:	83 ec 08             	sub    $0x8,%espf010379f5651,260276
f01037a2:	56                   	push   %esif01037a25652,260325
f01037a3:	6a 58                	push   $0x58f01037a35653,260369
f01037a5:	ff 55 08             	call   *0x8(%ebp)f01037a55654,260414
f01037a8:	83 c4 08             	add    $0x8,%espf01037a85656,260487
f01037ab:	56                   	push   %esif01037ab5657,260536
f01037ac:	6a 58                	push   $0x58f01037ac5658,260580
f01037ae:	ff 55 08             	call   *0x8(%ebp)f01037ae5659,260625
f01037b1:	83 c4 08             	add    $0x8,%espf01037b15661,260698
f01037b4:	56                   	push   %esif01037b45662,260747
f01037b5:	6a 58                	push   $0x58f01037b55663,260791
f01037b7:	ff 55 08             	call   *0x8(%ebp)f01037b75664,260836
f01037ba:	83 c4 10             	add    $0x10,%espf01037ba5666,260896
f01037bd:	eb 45                	jmp    f0103804 <.L35+0x45>f01037bd5667,260946
f01037bf <.L35>:f01037bf5669,261007
f01037bf:	83 ec 08             	sub    $0x8,%espf01037bf5671,261047
f01037c2:	56                   	push   %esif01037c25672,261096
f01037c3:	6a 30                	push   $0x30f01037c35673,261140
f01037c5:	ff 55 08             	call   *0x8(%ebp)f01037c55674,261185
f01037c8:	83 c4 08             	add    $0x8,%espf01037c85676,261258
f01037cb:	56                   	push   %esif01037cb5677,261307
f01037cc:	6a 78                	push   $0x78f01037cc5678,261351
f01037ce:	ff 55 08             	call   *0x8(%ebp)f01037ce5679,261396
			num = (unsigned long long)num5680,261446
f01037d1:	8b 45 14             	mov    0x14(%ebp),%eaxf01037d15681,261476
f01037d4:	8b 10                	mov    (%eax),%edxf01037d45682,261531
f01037d6:	b9 00 00 00 00       	mov    $0x0,%ecxf01037d65683,261582
f01037db:	83 c4 10             	add    $0x10,%espf01037db5685,261647
f01037de:	8d 40 04             	lea    0x4(%eax),%eaxf01037de5687,261733
f01037e1:	89 45 14             	mov    %eax,0x14(%ebp)f01037e15688,261787
			base = 16;base5689,261842
f01037e4:	b8 10 00 00 00       	mov    $0x10,%eaxf01037e45690,261856
f01037e9:	83 ec 0c             	sub    $0xc,%espf01037e95692,261958
f01037ec:	0f be 7d d4          	movsbl -0x2c(%ebp),%edif01037ec5693,262007
f01037f0:	57                   	push   %edif01037f05694,262063
f01037f1:	ff 75 e0             	pushl  -0x20(%ebp)f01037f15695,262107
f01037f4:	50                   	push   %eaxf01037f45696,262158
f01037f5:	51                   	push   %ecxf01037f55697,262202
f01037f6:	52                   	push   %edxf01037f65698,262246
f01037f7:	89 f2                	mov    %esi,%edxf01037f75699,262290
f01037f9:	8b 45 08             	mov    0x8(%ebp),%eaxf01037f95700,262339
f01037fc:	e8 55 fb ff ff       	call   f0103356 <printnum>f01037fc5701,262393
f0103801:	83 c4 20             	add    $0x20,%espf01038015703,262462
			err = va_arg(ap, int);err5704,262512
f0103804:	8b 7d e4             	mov    -0x1c(%ebp),%edif01038045705,262538
f0103807:	83 c7 01             	add    $0x1,%edif01038075707,262645
f010380a:	0f b6 47 ff          	movzbl -0x1(%edi),%eaxf010380a5708,262694
f010380e:	83 f8 25             	cmp    $0x25,%eaxf010380e5709,262749
f0103811:	0f 84 62 fc ff ff    	je     f0103479 <vprintfmt+0x1f>f01038115710,262799
f0103817:	85 c0                	test   %eax,%eaxf01038175712,262883
f0103819:	0f 84 91 00 00 00    	je     f01038b0 <.L22+0x21>f01038195713,262932
f010381f:	83 ec 08             	sub    $0x8,%espf010381f5715,263014
f0103822:	56                   	push   %esif01038225716,263063
f0103823:	50                   	push   %eaxf01038235717,263107
f0103824:	ff 55 08             	call   *0x8(%ebp)f01038245718,263151
f0103827:	83 c4 10             	add    $0x10,%espf01038275719,263201
f010382a:	eb db                	jmp    f0103807 <.L35+0x48>f010382a5720,263251
f010382c <.L38>:f010382c5722,263312
f010382c:	8b 4d cc             	mov    -0x34(%ebp),%ecxf010382c5723,263329
f010382f:	83 f9 01             	cmp    $0x1,%ecxf010382f5725,263402
f0103832:	7e 15                	jle    f0103849 <.L38+0x1d>f01038325726,263451
f0103834:	8b 45 14             	mov    0x14(%ebp),%eaxf01038345728,263553
f0103837:	8b 10                	mov    (%eax),%edxf01038375729,263608
f0103839:	8b 48 04             	mov    0x4(%eax),%ecxf01038395730,263659
f010383c:	8d 40 08             	lea    0x8(%eax),%eaxf010383c5731,263713
f010383f:	89 45 14             	mov    %eax,0x14(%ebp)f010383f5732,263767
			base = 16;base5733,263822
f0103842:	b8 10 00 00 00       	mov    $0x10,%eaxf01038425734,263836
f0103847:	eb a0                	jmp    f01037e9 <.L35+0x2a>f01038475735,263886
f0103849:	85 c9                	test   %ecx,%ecxf01038495737,263963
f010384b:	75 17                	jne    f0103864 <.L38+0x38>f010384b5738,264012
f010384d:	8b 45 14             	mov    0x14(%ebp),%eaxf010384d5740,264108
f0103850:	8b 10                	mov    (%eax),%edxf01038505741,264163
f0103852:	b9 00 00 00 00       	mov    $0x0,%ecxf01038525742,264214
f0103857:	8d 40 04             	lea    0x4(%eax),%eaxf01038575743,264263
f010385a:	89 45 14             	mov    %eax,0x14(%ebp)f010385a5744,264317
			base = 16;base5745,264372
f010385d:	b8 10 00 00 00       	mov    $0x10,%eaxf010385d5746,264386
f0103862:	eb 85                	jmp    f01037e9 <.L35+0x2a>f01038625747,264436
f0103864:	8b 45 14             	mov    0x14(%ebp),%eaxf01038645749,264533
f0103867:	8b 10                	mov    (%eax),%edxf01038675750,264588
f0103869:	b9 00 00 00 00       	mov    $0x0,%ecxf01038695751,264639
f010386e:	8d 40 04             	lea    0x4(%eax),%eaxf010386e5752,264688
f0103871:	89 45 14             	mov    %eax,0x14(%ebp)f01038715753,264742
			base = 16;base5754,264797
f0103874:	b8 10 00 00 00       	mov    $0x10,%eaxf01038745755,264811
f0103879:	e9 6b ff ff ff       	jmp    f01037e9 <.L35+0x2a>f01038795756,264861
f010387e <.L25>:f010387e5758,264922
f010387e:	83 ec 08             	sub    $0x8,%espf010387e5760,264961
f0103881:	56                   	push   %esif01038815761,265010
f0103882:	6a 25                	push   $0x25f01038825762,265054
f0103884:	ff 55 08             	call   *0x8(%ebp)f01038845763,265099
f0103887:	83 c4 10             	add    $0x10,%espf01038875765,265159
f010388a:	e9 75 ff ff ff       	jmp    f0103804 <.L35+0x45>f010388a5766,265209
f010388f <.L22>:f010388f5768,265270
f010388f:	83 ec 08             	sub    $0x8,%espf010388f5770,265310
f0103892:	56                   	push   %esif01038925771,265359
f0103893:	6a 25                	push   $0x25f01038935772,265403
f0103895:	ff 55 08             	call   *0x8(%ebp)f01038955773,265448
f0103898:	83 c4 10             	add    $0x10,%espf01038985775,265536
f010389b:	89 f8                	mov    %edi,%eaxf010389b5776,265586
f010389d:	eb 03                	jmp    f01038a2 <.L22+0x13>f010389d5777,265635
f010389f:	83 e8 01             	sub    $0x1,%eaxf010389f5778,265695
f01038a2:	80 78 ff 25          	cmpb   $0x25,-0x1(%eax)f01038a25779,265744
f01038a6:	75 f7                	jne    f010389f <.L22+0x10>f01038a65780,265800
f01038a8:	89 45 e4             	mov    %eax,-0x1c(%ebp)f01038a85781,265860
f01038ab:	e9 54 ff ff ff       	jmp    f0103804 <.L35+0x45>f01038ab5782,265916
f01038b0:	8d 65 f4             	lea    -0xc(%ebp),%espf01038b05784,265978
f01038b3:	5b                   	pop    %ebxf01038b35785,266033
f01038b4:	5e                   	pop    %esif01038b45786,266077
f01038b5:	5f                   	pop    %edif01038b55787,266121
f01038b6:	5d                   	pop    %ebpf01038b65788,266165
f01038b7:	c3                   	ret    f01038b75789,266209
f01038b8 <vsnprintf>:f01038b85791,266250
intint5793,266273
f01038b8:	55                   	push   %ebpf01038b85796,266336
f01038b9:	89 e5                	mov    %esp,%ebpf01038b95797,266380
f01038bb:	53                   	push   %ebxf01038bb5798,266429
f01038bc:	83 ec 14             	sub    $0x14,%espf01038bc5799,266473
f01038bf:	e8 8b c8 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01038bf5800,266523
f01038c4:	81 c3 48 3a 01 00    	add    $0x13a48,%ebxf01038c45801,266595
f01038ca:	8b 45 08             	mov    0x8(%ebp),%eaxf01038ca5802,266648
f01038cd:	8b 55 0c             	mov    0xc(%ebp),%edxf01038cd5803,266702
f01038d0:	89 45 ec             	mov    %eax,-0x14(%ebp)f01038d05805,266797
f01038d3:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecxf01038d35806,266853
f01038d7:	89 4d f0             	mov    %ecx,-0x10(%ebp)f01038d75807,266915
f01038da:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)f01038da5808,266971
f01038e1:	85 c0                	test   %eax,%eaxf01038e15811,267054
f01038e3:	74 2b                	je     f0103910 <vsnprintf+0x58>f01038e35812,267103
f01038e5:	85 d2                	test   %edx,%edxf01038e55813,267168
f01038e7:	7e 27                	jle    f0103910 <vsnprintf+0x58>f01038e75814,267217
f01038e9:	ff 75 14             	pushl  0x14(%ebp)f01038e95819,267382
f01038ec:	ff 75 10             	pushl  0x10(%ebp)f01038ec5820,267432
f01038ef:	8d 45 ec             	lea    -0x14(%ebp),%eaxf01038ef5821,267482
f01038f2:	50                   	push   %eaxf01038f25822,267538
f01038f3:	8d 83 14 c1 fe ff    	lea    -0x13eec(%ebx),%eaxf01038f35823,267582
f01038f9:	50                   	push   %eaxf01038f95824,267641
f01038fa:	e8 5b fb ff ff       	call   f010345a <vprintfmt>f01038fa5825,267685
f01038ff:	8b 45 ec             	mov    -0x14(%ebp),%eaxf01038ff5829,267792
f0103902:	c6 00 00             	movb   $0x0,(%eax)f01039025830,267848
f0103905:	8b 45 f4             	mov    -0xc(%ebp),%eaxf01039055833,267915
f0103908:	83 c4 10             	add    $0x10,%espf01039085834,267970
f010390b:	8b 5d fc             	mov    -0x4(%ebp),%ebxf010390b5836,268022
f010390e:	c9                   	leave  f010390e5837,268077
f010390f:	c3                   	ret    f010390f5838,268117
f0103910:	b8 fd ff ff ff       	mov    $0xfffffffd,%eaxf01039105840,268176
f0103915:	eb f4                	jmp    f010390b <vsnprintf+0x53>f01039155841,268232
f0103917 <snprintf>:f01039175843,268298
intint5845,268320
f0103917:	55                   	push   %ebpf01039175848,268375
f0103918:	89 e5                	mov    %esp,%ebpf01039185849,268419
f010391a:	83 ec 08             	sub    $0x8,%espf010391a5850,268468
f010391d:	8d 45 14             	lea    0x14(%ebp),%eaxf010391d5855,268560
	rc = vsnprintf(buf, n, fmt, ap);rc5856,268615
f0103920:	50                   	push   %eaxf01039205857,268649
f0103921:	ff 75 10             	pushl  0x10(%ebp)f01039215858,268693
f0103924:	ff 75 0c             	pushl  0xc(%ebp)f01039245859,268743
f0103927:	ff 75 08             	pushl  0x8(%ebp)f01039275860,268792
f010392a:	e8 89 ff ff ff       	call   f01038b8 <vsnprintf>f010392a5861,268841
f010392f:	c9                   	leave  f010392f5866,268929
f0103930:	c3                   	ret    f01039305867,268969
f0103931 <readline>:f01039315869,269010
#define BUFLEN 1024BUFLEN5870,269031
static char buf[BUFLEN];static5871,269051
char *char5873,269077
f0103931:	55                   	push   %ebpf01039315876,269115
f0103932:	89 e5                	mov    %esp,%ebpf01039325877,269159
f0103934:	57                   	push   %edif01039345878,269208
f0103935:	56                   	push   %esif01039355879,269252
f0103936:	53                   	push   %ebxf01039365880,269296
f0103937:	83 ec 1c             	sub    $0x1c,%espf01039375881,269340
f010393a:	e8 10 c8 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f010393a5882,269390
f010393f:	81 c3 cd 39 01 00    	add    $0x139cd,%ebxf010393f5883,269462
f0103945:	8b 45 08             	mov    0x8(%ebp),%eaxf01039455884,269515
f0103948:	85 c0                	test   %eax,%eaxf01039485888,269611
f010394a:	74 13                	je     f010395f <readline+0x2e>f010394a5889,269660
f010394c:	83 ec 08             	sub    $0x8,%espf010394c5891,269749
f010394f:	50                   	push   %eaxf010394f5892,269798
f0103950:	8d 83 e0 d9 fe ff    	lea    -0x12620(%ebx),%eaxf01039505893,269842
f0103956:	50                   	push   %eaxf01039565894,269901
f0103957:	e8 ee f6 ff ff       	call   f010304a <cprintf>f01039575895,269945
f010395c:	83 c4 10             	add    $0x10,%espf010395c5896,270003
	i = 0;i5898,270054
	echoing = iscons(0);echoing5899,270062
f010395f:	83 ec 0c             	sub    $0xc,%espf010395f5900,270084
f0103962:	6a 00                	push   $0x0f01039625901,270133
f0103964:	e8 7e cd ff ff       	call   f01006e7 <iscons>f01039645902,270177
f0103969:	89 45 e4             	mov    %eax,-0x1c(%ebp)f01039695903,270234
f010396c:	83 c4 10             	add    $0x10,%espf010396c5904,270290
	i = 0;i5905,270340
f010396f:	bf 00 00 00 00       	mov    $0x0,%edif010396f5906,270348
f0103974:	eb 46                	jmp    f01039bc <readline+0x8b>f01039745907,270397
		c = getchar();c5909,270474
f0103976:	83 ec 08             	sub    $0x8,%espf01039765912,270541
f0103979:	50                   	push   %eaxf01039795913,270590
f010397a:	8d 83 94 de fe ff    	lea    -0x1216c(%ebx),%eaxf010397a5914,270634
f0103980:	50                   	push   %eaxf01039805915,270693
f0103981:	e8 c4 f6 ff ff       	call   f010304a <cprintf>f01039815916,270737
f0103986:	83 c4 10             	add    $0x10,%espf01039865918,270811
f0103989:	b8 00 00 00 00       	mov    $0x0,%eaxf01039895919,270861
f010398e:	8d 65 f4             	lea    -0xc(%ebp),%espf010398e5926,270969
f0103991:	5b                   	pop    %ebxf01039915927,271024
f0103992:	5e                   	pop    %esif01039925928,271068
f0103993:	5f                   	pop    %edif01039935929,271112
f0103994:	5d                   	pop    %ebpf01039945930,271156
f0103995:	c3                   	ret    f01039955931,271200
f0103996:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)f01039965933,271256
f010399a:	75 05                	jne    f01039a1 <readline+0x70>f010399a5934,271312
f010399c:	83 ef 01             	sub    $0x1,%edif010399c5936,271384
f010399f:	eb 1b                	jmp    f01039bc <readline+0x8b>f010399f5937,271433
f01039a1:	83 ec 0c             	sub    $0xc,%espf01039a15939,271517
f01039a4:	6a 08                	push   $0x8f01039a45940,271566
f01039a6:	e8 1b cd ff ff       	call   f01006c6 <cputchar>f01039a65941,271610
f01039ab:	83 c4 10             	add    $0x10,%espf01039ab5942,271669
f01039ae:	eb ec                	jmp    f010399c <readline+0x6b>f01039ae5943,271719
f01039b0:	89 f0                	mov    %esi,%eaxf01039b05945,271800
f01039b2:	88 84 3b b4 1f 00 00 	mov    %al,0x1fb4(%ebx,%edi,1)f01039b25946,271849
f01039b9:	8d 7f 01             	lea    0x1(%edi),%edif01039b95947,271912
		c = getchar();c5948,271966
f01039bc:	e8 15 cd ff ff       	call   f01006d6 <getchar>f01039bc5949,271983
f01039c1:	89 c6                	mov    %eax,%esif01039c15950,272041
f01039c3:	85 c0                	test   %eax,%eaxf01039c35952,272105
f01039c5:	78 af                	js     f0103976 <readline+0x45>f01039c55953,272154
f01039c7:	83 f8 08             	cmp    $0x8,%eaxf01039c75955,272270
f01039ca:	0f 94 c2             	sete   %dlf01039ca5956,272319
f01039cd:	83 f8 7f             	cmp    $0x7f,%eaxf01039cd5957,272362
f01039d0:	0f 94 c0             	sete   %alf01039d05958,272412
f01039d3:	08 c2                	or     %al,%dlf01039d35959,272455
f01039d5:	74 04                	je     f01039db <readline+0xaa>f01039d55960,272502
f01039d7:	85 ff                	test   %edi,%edif01039d75961,272566
f01039d9:	7f bb                	jg     f0103996 <readline+0x65>f01039d95962,272615
f01039db:	83 fe 1f             	cmp    $0x1f,%esif01039db5964,272720
f01039de:	7e 1c                	jle    f01039fc <readline+0xcb>f01039de5965,272770
f01039e0:	81 ff fe 03 00 00    	cmp    $0x3fe,%edif01039e05966,272834
f01039e6:	7f 14                	jg     f01039fc <readline+0xcb>f01039e65967,272885
f01039e8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)f01039e85969,272965
f01039ec:	74 c2                	je     f01039b0 <readline+0x7f>f01039ec5970,273021
f01039ee:	83 ec 0c             	sub    $0xc,%espf01039ee5972,273102
f01039f1:	56                   	push   %esif01039f15973,273151
f01039f2:	e8 cf cc ff ff       	call   f01006c6 <cputchar>f01039f25974,273195
f01039f7:	83 c4 10             	add    $0x10,%espf01039f75975,273254
f01039fa:	eb b4                	jmp    f01039b0 <readline+0x7f>f01039fa5976,273304
f01039fc:	83 fe 0a             	cmp    $0xa,%esif01039fc5978,273407
f01039ff:	74 05                	je     f0103a06 <readline+0xd5>f01039ff5979,273456
f0103a01:	83 fe 0d             	cmp    $0xd,%esif0103a015980,273520
f0103a04:	75 b6                	jne    f01039bc <readline+0x8b>f0103a045981,273569
f0103a06:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)f0103a065983,273649
f0103a0a:	75 13                	jne    f0103a1f <readline+0xee>f0103a0a5984,273705
f0103a0c:	c6 84 3b b4 1f 00 00 	movb   $0x0,0x1fb4(%ebx,%edi,1)f0103a0c5986,273784
f0103a13:	00 f0103a135987,273848
f0103a14:	8d 83 b4 1f 00 00    	lea    0x1fb4(%ebx),%eaxf0103a145989,273877
f0103a1a:	e9 6f ff ff ff       	jmp    f010398e <readline+0x5d>f0103a1a5990,273934
f0103a1f:	83 ec 0c             	sub    $0xc,%espf0103a1f5992,274018
f0103a22:	6a 0a                	push   $0xaf0103a225993,274067
f0103a24:	e8 9d cc ff ff       	call   f01006c6 <cputchar>f0103a245994,274111
f0103a29:	83 c4 10             	add    $0x10,%espf0103a295995,274170
f0103a2c:	eb de                	jmp    f0103a0c <readline+0xdb>f0103a2c5996,274220
f0103a2e <strlen>:f0103a2e5998,274285
#define ASM 1ASM6000,274343
intint6002,274358
f0103a2e:	55                   	push   %ebpf0103a2e6005,274386
f0103a2f:	89 e5                	mov    %esp,%ebpf0103a2f6006,274430
f0103a31:	8b 55 08             	mov    0x8(%ebp),%edxf0103a316007,274479
f0103a34:	b8 00 00 00 00       	mov    $0x0,%eaxf0103a346011,274572
f0103a39:	eb 03                	jmp    f0103a3e <strlen+0x10>f0103a396012,274621
f0103a3b:	83 c0 01             	add    $0x1,%eaxf0103a3b6014,274690
f0103a3e:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)f0103a3e6016,274769
f0103a42:	75 f7                	jne    f0103a3b <strlen+0xd>f0103a426017,274827
f0103a44:	5d                   	pop    %ebpf0103a446020,274901
f0103a45:	c3                   	ret    f0103a456021,274945
f0103a46 <strnlen>:f0103a466023,274986
intint6025,275007
f0103a46:	55                   	push   %ebpf0103a466028,275049
f0103a47:	89 e5                	mov    %esp,%ebpf0103a476029,275093
f0103a49:	8b 4d 08             	mov    0x8(%ebp),%ecxf0103a496030,275142
f0103a4c:	8b 55 0c             	mov    0xc(%ebp),%edxf0103a4c6031,275196
f0103a4f:	b8 00 00 00 00       	mov    $0x0,%eaxf0103a4f6035,275309
f0103a54:	eb 03                	jmp    f0103a59 <strnlen+0x13>f0103a546036,275358
f0103a56:	83 c0 01             	add    $0x1,%eaxf0103a566038,275428
f0103a59:	39 d0                	cmp    %edx,%eaxf0103a596040,275527
f0103a5b:	74 06                	je     f0103a63 <strnlen+0x1d>f0103a5b6041,275576
f0103a5d:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)f0103a5d6042,275639
f0103a61:	75 f3                	jne    f0103a56 <strnlen+0x10>f0103a616043,275697
f0103a63:	5d                   	pop    %ebpf0103a636046,275773
f0103a64:	c3                   	ret    f0103a646047,275817
f0103a65 <strcpy>:f0103a656049,275858
char *char6051,275878
f0103a65:	55                   	push   %ebpf0103a656054,275922
f0103a66:	89 e5                	mov    %esp,%ebpf0103a666055,275966
f0103a68:	53                   	push   %ebxf0103a686056,276015
f0103a69:	8b 45 08             	mov    0x8(%ebp),%eaxf0103a696057,276059
f0103a6c:	8b 4d 0c             	mov    0xc(%ebp),%ecxf0103a6c6058,276113
	ret = dst;ret6061,276180
f0103a6f:	89 c2                	mov    %eax,%edxf0103a6f6063,276227
f0103a71:	83 c1 01             	add    $0x1,%ecxf0103a716064,276276
f0103a74:	83 c2 01             	add    $0x1,%edxf0103a746065,276325
f0103a77:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebxf0103a776066,276374
f0103a7b:	88 5a ff             	mov    %bl,-0x1(%edx)f0103a7b6067,276429
f0103a7e:	84 db                	test   %bl,%blf0103a7e6068,276483
f0103a80:	75 ef                	jne    f0103a71 <strcpy+0xc>f0103a806069,276530
f0103a82:	5b                   	pop    %ebxf0103a826073,276626
f0103a83:	5d                   	pop    %ebpf0103a836074,276670
f0103a84:	c3                   	ret    f0103a846075,276714
f0103a85 <strcat>:f0103a856077,276755
char *char6079,276775
f0103a85:	55                   	push   %ebpf0103a856082,276819
f0103a86:	89 e5                	mov    %esp,%ebpf0103a866083,276863
f0103a88:	53                   	push   %ebxf0103a886084,276912
f0103a89:	8b 5d 08             	mov    0x8(%ebp),%ebxf0103a896085,276956
f0103a8c:	53                   	push   %ebxf0103a8c6087,277034
f0103a8d:	e8 9c ff ff ff       	call   f0103a2e <strlen>f0103a8d6088,277078
f0103a92:	83 c4 04             	add    $0x4,%espf0103a926089,277135
f0103a95:	ff 75 0c             	pushl  0xc(%ebp)f0103a956091,277209
f0103a98:	01 d8                	add    %ebx,%eaxf0103a986092,277258
f0103a9a:	50                   	push   %eaxf0103a9a6093,277307
f0103a9b:	e8 c5 ff ff ff       	call   f0103a65 <strcpy>f0103a9b6094,277351
f0103aa0:	89 d8                	mov    %ebx,%eaxf0103aa06097,277423
f0103aa2:	8b 5d fc             	mov    -0x4(%ebp),%ebxf0103aa26098,277472
f0103aa5:	c9                   	leave  f0103aa56099,277527
f0103aa6:	c3                   	ret    f0103aa66100,277567
f0103aa7 <strncpy>:f0103aa76102,277608
char *char6104,277629
f0103aa7:	55                   	push   %ebpf0103aa76106,277687
f0103aa8:	89 e5                	mov    %esp,%ebpf0103aa86107,277731
f0103aaa:	56                   	push   %esif0103aaa6108,277780
f0103aab:	53                   	push   %ebxf0103aab6109,277824
f0103aac:	8b 75 08             	mov    0x8(%ebp),%esif0103aac6110,277868
f0103aaf:	8b 4d 0c             	mov    0xc(%ebp),%ecxf0103aaf6111,277922
f0103ab2:	89 f3                	mov    %esi,%ebxf0103ab26112,277976
f0103ab4:	03 5d 10             	add    0x10(%ebp),%ebxf0103ab46113,278025
	ret = dst;ret6117,278104
f0103ab7:	89 f2                	mov    %esi,%edxf0103ab76119,278146
f0103ab9:	eb 0f                	jmp    f0103aca <strncpy+0x23>f0103ab96120,278195
f0103abb:	83 c2 01             	add    $0x1,%edxf0103abb6122,278275
f0103abe:	0f b6 01             	movzbl (%ecx),%eaxf0103abe6123,278324
f0103ac1:	88 42 ff             	mov    %al,-0x1(%edx)f0103ac16124,278375
f0103ac4:	80 39 01             	cmpb   $0x1,(%ecx)f0103ac46128,278522
f0103ac7:	83 d9 ff             	sbb    $0xffffffff,%ecxf0103ac76129,278573
f0103aca:	39 da                	cmp    %ebx,%edxf0103aca6131,278659
f0103acc:	75 ed                	jne    f0103abb <strncpy+0x14>f0103acc6132,278708
f0103ace:	89 f0                	mov    %esi,%eaxf0103ace6136,278789
f0103ad0:	5b                   	pop    %ebxf0103ad06137,278838
f0103ad1:	5e                   	pop    %esif0103ad16138,278882
f0103ad2:	5d                   	pop    %ebpf0103ad26139,278926
f0103ad3:	c3                   	ret    f0103ad36140,278970
f0103ad4 <strlcpy>:f0103ad46142,279011
size_tsize_t6144,279032
f0103ad4:	55                   	push   %ebpf0103ad46147,279090
f0103ad5:	89 e5                	mov    %esp,%ebpf0103ad56148,279134
f0103ad7:	56                   	push   %esif0103ad76149,279183
f0103ad8:	53                   	push   %ebxf0103ad86150,279227
f0103ad9:	8b 75 08             	mov    0x8(%ebp),%esif0103ad96151,279271
f0103adc:	8b 55 0c             	mov    0xc(%ebp),%edxf0103adc6152,279325
f0103adf:	8b 4d 10             	mov    0x10(%ebp),%ecxf0103adf6153,279379
f0103ae2:	89 f0                	mov    %esi,%eaxf0103ae26154,279434
f0103ae4:	8d 5c 0e ff          	lea    -0x1(%esi,%ecx,1),%ebxf0103ae46155,279483
	dst_in = dst;dst_in6158,279561
f0103ae8:	85 c9                	test   %ecx,%ecxf0103ae86160,279593
f0103aea:	75 0b                	jne    f0103af7 <strlcpy+0x23>f0103aea6161,279642
f0103aec:	eb 17                	jmp    f0103b05 <strlcpy+0x31>f0103aec6162,279705
f0103aee:	83 c2 01             	add    $0x1,%edxf0103aee6165,279825
f0103af1:	83 c0 01             	add    $0x1,%eaxf0103af16166,279874
f0103af4:	88 48 ff             	mov    %cl,-0x1(%eax)f0103af46167,279923
f0103af7:	39 d8                	cmp    %ebx,%eaxf0103af76169,280014
f0103af9:	74 07                	je     f0103b02 <strlcpy+0x2e>f0103af96170,280063
f0103afb:	0f b6 0a             	movzbl (%edx),%ecxf0103afb6171,280126
f0103afe:	84 c9                	test   %cl,%clf0103afe6172,280177
f0103b00:	75 ec                	jne    f0103aee <strlcpy+0x1a>f0103b006173,280224
f0103b02:	c6 00 00             	movb   $0x0,(%eax)f0103b026175,280302
f0103b05:	29 f0                	sub    %esi,%eaxf0103b056178,280378
f0103b07:	5b                   	pop    %ebxf0103b076180,280429
f0103b08:	5e                   	pop    %esif0103b086181,280473
f0103b09:	5d                   	pop    %ebpf0103b096182,280517
f0103b0a:	c3                   	ret    f0103b0a6183,280561
f0103b0b <strcmp>:f0103b0b6185,280602
intint6187,280622
f0103b0b:	55                   	push   %ebpf0103b0b6190,280665
f0103b0c:	89 e5                	mov    %esp,%ebpf0103b0c6191,280709
f0103b0e:	8b 4d 08             	mov    0x8(%ebp),%ecxf0103b0e6192,280758
f0103b11:	8b 55 0c             	mov    0xc(%ebp),%edxf0103b116193,280812
f0103b14:	eb 06                	jmp    f0103b1c <strcmp+0x11>f0103b146195,280890
f0103b16:	83 c1 01             	add    $0x1,%ecxf0103b166197,280964
f0103b19:	83 c2 01             	add    $0x1,%edxf0103b196198,281013
f0103b1c:	0f b6 01             	movzbl (%ecx),%eaxf0103b1c6200,281086
f0103b1f:	84 c0                	test   %al,%alf0103b1f6201,281137
f0103b21:	74 04                	je     f0103b27 <strcmp+0x1c>f0103b216202,281184
f0103b23:	3a 02                	cmp    (%edx),%alf0103b236203,281246
f0103b25:	74 ef                	je     f0103b16 <strcmp+0xb>f0103b256204,281296
f0103b27:	0f b6 c0             	movzbl %al,%eaxf0103b276206,281414
f0103b2a:	0f b6 12             	movzbl (%edx),%edxf0103b2a6207,281462
f0103b2d:	29 d0                	sub    %edx,%eaxf0103b2d6208,281513
f0103b2f:	5d                   	pop    %ebpf0103b2f6210,281564
f0103b30:	c3                   	ret    f0103b306211,281608
f0103b31 <strncmp>:f0103b316213,281649
intint6215,281670
f0103b31:	55                   	push   %ebpf0103b316218,281724
f0103b32:	89 e5                	mov    %esp,%ebpf0103b326219,281768
f0103b34:	53                   	push   %ebxf0103b346220,281817
f0103b35:	8b 45 08             	mov    0x8(%ebp),%eaxf0103b356221,281861
f0103b38:	8b 55 0c             	mov    0xc(%ebp),%edxf0103b386222,281915
f0103b3b:	89 c3                	mov    %eax,%ebxf0103b3b6223,281969
f0103b3d:	03 5d 10             	add    0x10(%ebp),%ebxf0103b3d6224,282018
f0103b40:	eb 06                	jmp    f0103b48 <strncmp+0x17>f0103b406226,282106
f0103b42:	83 c0 01             	add    $0x1,%eaxf0103b426228,282186
f0103b45:	83 c2 01             	add    $0x1,%edxf0103b456229,282235
f0103b48:	39 d8                	cmp    %ebx,%eaxf0103b486231,282317
f0103b4a:	74 16                	je     f0103b62 <strncmp+0x31>f0103b4a6232,282366
f0103b4c:	0f b6 08             	movzbl (%eax),%ecxf0103b4c6233,282429
f0103b4f:	84 c9                	test   %cl,%clf0103b4f6234,282480
f0103b51:	74 04                	je     f0103b57 <strncmp+0x26>f0103b516235,282527
f0103b53:	3a 0a                	cmp    (%edx),%clf0103b536236,282590
f0103b55:	74 eb                	je     f0103b42 <strncmp+0x11>f0103b556237,282640
f0103b57:	0f b6 00             	movzbl (%eax),%eaxf0103b576242,282792
f0103b5a:	0f b6 12             	movzbl (%edx),%edxf0103b5a6243,282843
f0103b5d:	29 d0                	sub    %edx,%eaxf0103b5d6244,282894
f0103b5f:	5b                   	pop    %ebxf0103b5f6246,282945
f0103b60:	5d                   	pop    %ebpf0103b606247,282989
f0103b61:	c3                   	ret    f0103b616248,283033
f0103b62:	b8 00 00 00 00       	mov    $0x0,%eaxf0103b626250,283085
f0103b67:	eb f6                	jmp    f0103b5f <strncmp+0x2e>f0103b676251,283134
f0103b69 <strchr>:f0103b696253,283198
char *char6257,283324
f0103b69:	55                   	push   %ebpf0103b696260,283363
f0103b6a:	89 e5                	mov    %esp,%ebpf0103b6a6261,283407
f0103b6c:	8b 45 08             	mov    0x8(%ebp),%eaxf0103b6c6262,283456
f0103b6f:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecxf0103b6f6263,283510
f0103b73:	0f b6 10             	movzbl (%eax),%edxf0103b736265,283581
f0103b76:	84 d2                	test   %dl,%dlf0103b766266,283632
f0103b78:	74 09                	je     f0103b83 <strchr+0x1a>f0103b786267,283679
f0103b7a:	38 ca                	cmp    %cl,%dlf0103b7a6269,283756
f0103b7c:	74 0a                	je     f0103b88 <strchr+0x1f>f0103b7c6270,283803
f0103b7e:	83 c0 01             	add    $0x1,%eaxf0103b7e6272,283882
f0103b81:	eb f0                	jmp    f0103b73 <strchr+0xa>f0103b816273,283931
f0103b83:	b8 00 00 00 00       	mov    $0x0,%eaxf0103b836276,284025
f0103b88:	5d                   	pop    %ebpf0103b886278,284076
f0103b89:	c3                   	ret    f0103b896279,284120
f0103b8a <strfind>:f0103b8a6281,284161
char *char6285,284319
f0103b8a:	55                   	push   %ebpf0103b8a6288,284359
f0103b8b:	89 e5                	mov    %esp,%ebpf0103b8b6289,284403
f0103b8d:	8b 45 08             	mov    0x8(%ebp),%eaxf0103b8d6290,284452
f0103b90:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecxf0103b906291,284506
f0103b94:	eb 03                	jmp    f0103b99 <strfind+0xf>f0103b946293,284577
f0103b96:	83 c0 01             	add    $0x1,%eaxf0103b966294,284639
f0103b99:	0f b6 10             	movzbl (%eax),%edxf0103b996295,284688
f0103b9c:	38 ca                	cmp    %cl,%dlf0103b9c6297,284754
f0103b9e:	74 04                	je     f0103ba4 <strfind+0x1a>f0103b9e6298,284801
f0103ba0:	84 d2                	test   %dl,%dlf0103ba06299,284864
f0103ba2:	75 f2                	jne    f0103b96 <strfind+0xc>f0103ba26300,284911
f0103ba4:	5d                   	pop    %ebpf0103ba46304,285005
f0103ba5:	c3                   	ret    f0103ba56305,285049
f0103ba6 <memset>:f0103ba66307,285090
void *void6310,285118
f0103ba6:	55                   	push   %ebpf0103ba66313,285160
f0103ba7:	89 e5                	mov    %esp,%ebpf0103ba76314,285204
f0103ba9:	57                   	push   %edif0103ba96315,285253
f0103baa:	56                   	push   %esif0103baa6316,285297
f0103bab:	53                   	push   %ebxf0103bab6317,285341
f0103bac:	8b 7d 08             	mov    0x8(%ebp),%edif0103bac6318,285385
f0103baf:	8b 4d 10             	mov    0x10(%ebp),%ecxf0103baf6319,285439
f0103bb2:	85 c9                	test   %ecx,%ecxf0103bb26323,285518
f0103bb4:	74 13                	je     f0103bc9 <memset+0x23>f0103bb46324,285567
f0103bb6:	f7 c7 03 00 00 00    	test   $0x3,%edif0103bb66327,285675
f0103bbc:	75 05                	jne    f0103bc3 <memset+0x1d>f0103bbc6328,285724
f0103bbe:	f6 c1 03             	test   $0x3,%clf0103bbe6329,285786
f0103bc1:	74 0d                	je     f0103bd0 <memset+0x2a>f0103bc16330,285834
		c = (c<<24)|(c<<16)|(c<<8)|c;c6331,285896
f0103bc3:	8b 45 0c             	mov    0xc(%ebp),%eaxf0103bc36337,286060
f0103bc6:	fc                   	cld    f0103bc66338,286114
f0103bc7:	f3 aa                	rep stos %al,%es:(%edi)f0103bc76339,286154
f0103bc9:	89 f8                	mov    %edi,%eaxf0103bc96344,286277
f0103bcb:	5b                   	pop    %ebxf0103bcb6345,286326
f0103bcc:	5e                   	pop    %esif0103bcc6346,286370
f0103bcd:	5f                   	pop    %edif0103bcd6347,286414
f0103bce:	5d                   	pop    %ebpf0103bce6348,286458
f0103bcf:	c3                   	ret    f0103bcf6349,286502
f0103bd0:	0f b6 55 0c          	movzbl 0xc(%ebp),%edxf0103bd06351,286555
		c = (c<<24)|(c<<16)|(c<<8)|c;c6352,286609
f0103bd4:	89 d3                	mov    %edx,%ebxf0103bd46353,286641
f0103bd6:	c1 e3 08             	shl    $0x8,%ebxf0103bd66354,286690
f0103bd9:	89 d0                	mov    %edx,%eaxf0103bd96355,286739
f0103bdb:	c1 e0 18             	shl    $0x18,%eaxf0103bdb6356,286788
f0103bde:	89 d6                	mov    %edx,%esif0103bde6357,286838
f0103be0:	c1 e6 10             	shl    $0x10,%esif0103be06358,286887
f0103be3:	09 f0                	or     %esi,%eaxf0103be36359,286937
f0103be5:	09 c2                	or     %eax,%edxf0103be56360,286986
f0103be7:	09 da                	or     %ebx,%edxf0103be76361,287035
f0103be9:	c1 e9 02             	shr    $0x2,%ecxf0103be96363,287118
f0103bec:	89 d0                	mov    %edx,%eaxf0103bec6365,287201
f0103bee:	fc                   	cld    f0103bee6366,287250
f0103bef:	f3 ab                	rep stos %eax,%es:(%edi)f0103bef6367,287290
f0103bf1:	eb d6                	jmp    f0103bc9 <memset+0x23>f0103bf16368,287347
f0103bf3 <memmove>:f0103bf36370,287410
void *void6372,287431
f0103bf3:	55                   	push   %ebpf0103bf36375,287486
f0103bf4:	89 e5                	mov    %esp,%ebpf0103bf46376,287530
f0103bf6:	57                   	push   %edif0103bf66377,287579
f0103bf7:	56                   	push   %esif0103bf76378,287623
f0103bf8:	8b 45 08             	mov    0x8(%ebp),%eaxf0103bf86379,287667
f0103bfb:	8b 75 0c             	mov    0xc(%ebp),%esif0103bfb6380,287721
f0103bfe:	8b 4d 10             	mov    0x10(%ebp),%ecxf0103bfe6381,287775
	s = src;s6385,287857
	d = dst;d6386,287867
f0103c01:	39 c6                	cmp    %eax,%esif0103c016388,287904
f0103c03:	73 35                	jae    f0103c3a <memmove+0x47>f0103c036389,287953
f0103c05:	8d 14 0e             	lea    (%esi,%ecx,1),%edxf0103c056390,288016
f0103c08:	39 c2                	cmp    %eax,%edxf0103c086391,288074
f0103c0a:	76 2e                	jbe    f0103c3a <memmove+0x47>f0103c0a6392,288123
f0103c0c:	8d 3c 08             	lea    (%eax,%ecx,1),%edif0103c0c6395,288206
f0103c0f:	89 d6                	mov    %edx,%esif0103c0f6397,288314
f0103c11:	09 fe                	or     %edi,%esif0103c116398,288363
f0103c13:	f7 c6 03 00 00 00    	test   $0x3,%esif0103c136399,288412
f0103c19:	74 0c                	je     f0103c27 <memmove+0x34>f0103c196400,288461
f0103c1b:	83 ef 01             	sub    $0x1,%edif0103c1b6406,288715
f0103c1e:	8d 72 ff             	lea    -0x1(%edx),%esif0103c1e6407,288764
f0103c21:	fd                   	std    f0103c216409,288854
f0103c22:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)f0103c226410,288894
f0103c24:	fc                   	cld    f0103c246413,289039
f0103c25:	eb 21                	jmp    f0103c48 <memmove+0x55>f0103c256414,289079
f0103c27:	f6 c1 03             	test   $0x3,%clf0103c276416,289192
f0103c2a:	75 ef                	jne    f0103c1b <memmove+0x28>f0103c2a6417,289240
f0103c2c:	83 ef 04             	sub    $0x4,%edif0103c2c6419,289361
f0103c2f:	8d 72 fc             	lea    -0x4(%edx),%esif0103c2f6420,289410
f0103c32:	c1 e9 02             	shr    $0x2,%ecxf0103c326421,289465
f0103c35:	fd                   	std    f0103c356423,289549
f0103c36:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)f0103c366424,289589
f0103c38:	eb ea                	jmp    f0103c24 <memmove+0x31>f0103c386425,289653
f0103c3a:	89 f2                	mov    %esi,%edxf0103c3a6428,289776
f0103c3c:	09 c2                	or     %eax,%edxf0103c3c6429,289825
f0103c3e:	f6 c2 03             	test   $0x3,%dlf0103c3e6430,289874
f0103c41:	74 09                	je     f0103c4c <memmove+0x59>f0103c416431,289922
f0103c43:	89 c7                	mov    %eax,%edif0103c436436,290116
f0103c45:	fc                   	cld    f0103c456437,290165
f0103c46:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)f0103c466438,290205
f0103c48:	5e                   	pop    %esif0103c486443,290339
f0103c49:	5f                   	pop    %edif0103c496444,290383
f0103c4a:	5d                   	pop    %ebpf0103c4a6445,290427
f0103c4b:	c3                   	ret    f0103c4b6446,290471
f0103c4c:	f6 c1 03             	test   $0x3,%clf0103c4c6448,290561
f0103c4f:	75 f2                	jne    f0103c43 <memmove+0x50>f0103c4f6449,290609
f0103c51:	c1 e9 02             	shr    $0x2,%ecxf0103c516451,290726
f0103c54:	89 c7                	mov    %eax,%edif0103c546453,290810
f0103c56:	fc                   	cld    f0103c566454,290859
f0103c57:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)f0103c576455,290899
f0103c59:	eb ed                	jmp    f0103c48 <memmove+0x55>f0103c596456,290963
f0103c5b <memcpy>:f0103c5b6458,291027
void *void6462,291056
f0103c5b:	55                   	push   %ebpf0103c5b6465,291110
f0103c5c:	89 e5                	mov    %esp,%ebpf0103c5c6466,291154
f0103c5e:	ff 75 10             	pushl  0x10(%ebp)f0103c5e6468,291233
f0103c61:	ff 75 0c             	pushl  0xc(%ebp)f0103c616469,291283
f0103c64:	ff 75 08             	pushl  0x8(%ebp)f0103c646470,291332
f0103c67:	e8 87 ff ff ff       	call   f0103bf3 <memmove>f0103c676471,291381
f0103c6c:	c9                   	leave  f0103c6c6473,291441
f0103c6d:	c3                   	ret    f0103c6d6474,291481
f0103c6e <memcmp>:f0103c6e6476,291522
intint6478,291542
f0103c6e:	55                   	push   %ebpf0103c6e6481,291597
f0103c6f:	89 e5                	mov    %esp,%ebpf0103c6f6482,291641
f0103c71:	56                   	push   %esif0103c716483,291690
f0103c72:	53                   	push   %ebxf0103c726484,291734
f0103c73:	8b 45 08             	mov    0x8(%ebp),%eaxf0103c736485,291778
f0103c76:	8b 55 0c             	mov    0xc(%ebp),%edxf0103c766486,291832
f0103c79:	89 c6                	mov    %eax,%esif0103c796487,291886
f0103c7b:	03 75 10             	add    0x10(%ebp),%esif0103c7b6488,291935
f0103c7e:	39 f0                	cmp    %esi,%eaxf0103c7e6493,292096
f0103c80:	74 1c                	je     f0103c9e <memcmp+0x30>f0103c806494,292145
f0103c82:	0f b6 08             	movzbl (%eax),%ecxf0103c826496,292225
f0103c85:	0f b6 1a             	movzbl (%edx),%ebxf0103c856497,292276
f0103c88:	38 d9                	cmp    %bl,%clf0103c886498,292327
f0103c8a:	75 08                	jne    f0103c94 <memcmp+0x26>f0103c8a6499,292374
f0103c8c:	83 c0 01             	add    $0x1,%eaxf0103c8c6502,292483
f0103c8f:	83 c2 01             	add    $0x1,%edxf0103c8f6503,292532
f0103c92:	eb ea                	jmp    f0103c7e <memcmp+0x10>f0103c926504,292581
f0103c94:	0f b6 c1             	movzbl %cl,%eaxf0103c946506,292676
f0103c97:	0f b6 db             	movzbl %bl,%ebxf0103c976507,292724
f0103c9a:	29 d8                	sub    %ebx,%eaxf0103c9a6508,292772
f0103c9c:	eb 05                	jmp    f0103ca3 <memcmp+0x35>f0103c9c6509,292821
f0103c9e:	b8 00 00 00 00       	mov    $0x0,%eaxf0103c9e6513,292898
f0103ca3:	5b                   	pop    %ebxf0103ca36515,292949
f0103ca4:	5e                   	pop    %esif0103ca46516,292993
f0103ca5:	5d                   	pop    %ebpf0103ca56517,293037
f0103ca6:	c3                   	ret    f0103ca66518,293081
f0103ca7 <memfind>:f0103ca76520,293122
void *void6522,293143
f0103ca7:	55                   	push   %ebpf0103ca76525,293192
f0103ca8:	89 e5                	mov    %esp,%ebpf0103ca86526,293236
f0103caa:	8b 45 08             	mov    0x8(%ebp),%eaxf0103caa6527,293285
f0103cad:	8b 4d 0c             	mov    0xc(%ebp),%ecxf0103cad6528,293339
f0103cb0:	89 c2                	mov    %eax,%edxf0103cb06530,293435
f0103cb2:	03 55 10             	add    0x10(%ebp),%edxf0103cb26531,293484
f0103cb5:	39 d0                	cmp    %edx,%eaxf0103cb56533,293562
f0103cb7:	73 09                	jae    f0103cc2 <memfind+0x1b>f0103cb76534,293611
f0103cb9:	38 08                	cmp    %cl,(%eax)f0103cb96536,293729
f0103cbb:	74 05                	je     f0103cc2 <memfind+0x1b>f0103cbb6537,293779
f0103cbd:	83 c0 01             	add    $0x1,%eaxf0103cbd6539,293865
f0103cc0:	eb f3                	jmp    f0103cb5 <memfind+0xe>f0103cc06540,293914
f0103cc2:	5d                   	pop    %ebpf0103cc26544,294008
f0103cc3:	c3                   	ret    f0103cc36545,294052
f0103cc4 <strtol>:f0103cc46547,294093
longlong6549,294113
f0103cc4:	55                   	push   %ebpf0103cc46552,294167
f0103cc5:	89 e5                	mov    %esp,%ebpf0103cc56553,294211
f0103cc7:	57                   	push   %edif0103cc76554,294260
f0103cc8:	56                   	push   %esif0103cc86555,294304
f0103cc9:	53                   	push   %ebxf0103cc96556,294348
f0103cca:	8b 4d 08             	mov    0x8(%ebp),%ecxf0103cca6557,294392
f0103ccd:	8b 5d 10             	mov    0x10(%ebp),%ebxf0103ccd6558,294446
f0103cd0:	eb 03                	jmp    f0103cd5 <strtol+0x11>f0103cd06564,294594
f0103cd2:	83 c1 01             	add    $0x1,%ecxf0103cd26566,294663
f0103cd5:	0f b6 01             	movzbl (%ecx),%eaxf0103cd56568,294745
f0103cd8:	3c 20                	cmp    $0x20,%alf0103cd86569,294796
f0103cda:	74 f6                	je     f0103cd2 <strtol+0xe>f0103cda6570,294845
f0103cdc:	3c 09                	cmp    $0x9,%alf0103cdc6571,294906
f0103cde:	74 f2                	je     f0103cd2 <strtol+0xe>f0103cde6572,294954
f0103ce0:	3c 2b                	cmp    $0x2b,%alf0103ce06576,295052
f0103ce2:	74 2e                	je     f0103d12 <strtol+0x4e>f0103ce26577,295101
f0103ce4:	bf 00 00 00 00       	mov    $0x0,%edif0103ce46579,295177
f0103ce9:	3c 2d                	cmp    $0x2d,%alf0103ce96582,295254
f0103ceb:	74 2f                	je     f0103d1c <strtol+0x58>f0103ceb6583,295303
f0103ced:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebxf0103ced6588,295475
f0103cf3:	75 05                	jne    f0103cfa <strtol+0x36>f0103cf36589,295531
f0103cf5:	80 39 30             	cmpb   $0x30,(%ecx)f0103cf56590,295593
f0103cf8:	74 2c                	je     f0103d26 <strtol+0x62>f0103cf86591,295645
f0103cfa:	85 db                	test   %ebx,%ebxf0103cfa6594,295764
f0103cfc:	75 0a                	jne    f0103d08 <strtol+0x44>f0103cfc6595,295813
		base = 10;base6598,295913
f0103cfe:	bb 0a 00 00 00       	mov    $0xa,%ebxf0103cfe6599,295926
f0103d03:	80 39 30             	cmpb   $0x30,(%ecx)f0103d036601,296011
f0103d06:	74 28                	je     f0103d30 <strtol+0x6c>f0103d066602,296063
		base = 10;base6603,296125
f0103d08:	b8 00 00 00 00       	mov    $0x0,%eaxf0103d086604,296138
f0103d0d:	89 5d 10             	mov    %ebx,0x10(%ebp)f0103d0d6605,296187
f0103d10:	eb 50                	jmp    f0103d62 <strtol+0x9e>f0103d106606,296242
f0103d12:	83 c1 01             	add    $0x1,%ecxf0103d126608,296311
f0103d15:	bf 00 00 00 00       	mov    $0x0,%edif0103d156610,296374
f0103d1a:	eb d1                	jmp    f0103ced <strtol+0x29>f0103d1a6611,296423
f0103d1c:	83 c1 01             	add    $0x1,%ecxf0103d1c6613,296501
f0103d1f:	bf 01 00 00 00       	mov    $0x1,%edif0103d1f6614,296550
f0103d24:	eb c7                	jmp    f0103ced <strtol+0x29>f0103d246615,296599
f0103d26:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)f0103d266617,296725
f0103d2a:	74 0e                	je     f0103d3a <strtol+0x76>f0103d2a6618,296780
f0103d2c:	85 db                	test   %ebx,%ebxf0103d2c6620,296878
f0103d2e:	75 d8                	jne    f0103d08 <strtol+0x44>f0103d2e6621,296927
f0103d30:	83 c1 01             	add    $0x1,%ecxf0103d306623,297006
f0103d33:	bb 08 00 00 00       	mov    $0x8,%ebxf0103d336624,297055
f0103d38:	eb ce                	jmp    f0103d08 <strtol+0x44>f0103d386625,297104
f0103d3a:	83 c1 02             	add    $0x2,%ecxf0103d3a6627,297187
f0103d3d:	bb 10 00 00 00       	mov    $0x10,%ebxf0103d3d6628,297236
f0103d42:	eb c4                	jmp    f0103d08 <strtol+0x44>f0103d426629,297286
			dig = *s - '0';dig6634,297403
f0103d44:	8d 72 9f             	lea    -0x61(%edx),%esif0103d446636,297457
f0103d47:	89 f3                	mov    %esi,%ebxf0103d476637,297513
f0103d49:	80 fb 19             	cmp    $0x19,%blf0103d496638,297562
f0103d4c:	77 29                	ja     f0103d77 <strtol+0xb3>f0103d4c6639,297611
			dig = *s - 'a' + 10;dig6640,297673
f0103d4e:	0f be d2             	movsbl %dl,%edxf0103d4e6641,297697
f0103d51:	83 ea 57             	sub    $0x57,%edxf0103d516642,297745
			dig = *s - 'A' + 10;dig6644,297830
f0103d54:	3b 55 10             	cmp    0x10(%ebp),%edxf0103d546648,297890
f0103d57:	7d 30                	jge    f0103d89 <strtol+0xc5>f0103d576649,297945
f0103d59:	83 c1 01             	add    $0x1,%ecxf0103d596652,298050
f0103d5c:	0f af 45 10          	imul   0x10(%ebp),%eaxf0103d5c6653,298099
f0103d60:	01 d0                	add    %edx,%eaxf0103d606654,298154
f0103d62:	0f b6 11             	movzbl (%ecx),%edxf0103d626656,298233
f0103d65:	8d 72 d0             	lea    -0x30(%edx),%esif0103d656657,298284
f0103d68:	89 f3                	mov    %esi,%ebxf0103d686658,298340
f0103d6a:	80 fb 09             	cmp    $0x9,%blf0103d6a6659,298389
f0103d6d:	77 d5                	ja     f0103d44 <strtol+0x80>f0103d6d6660,298437
			dig = *s - '0';dig6661,298499
f0103d6f:	0f be d2             	movsbl %dl,%edxf0103d6f6662,298518
f0103d72:	83 ea 30             	sub    $0x30,%edxf0103d726663,298566
f0103d75:	eb dd                	jmp    f0103d54 <strtol+0x90>f0103d756664,298616
f0103d77:	8d 72 bf             	lea    -0x41(%edx),%esif0103d776666,298713
f0103d7a:	89 f3                	mov    %esi,%ebxf0103d7a6667,298769
f0103d7c:	80 fb 19             	cmp    $0x19,%blf0103d7c6668,298818
f0103d7f:	77 08                	ja     f0103d89 <strtol+0xc5>f0103d7f6669,298867
			dig = *s - 'A' + 10;dig6670,298929
f0103d81:	0f be d2             	movsbl %dl,%edxf0103d816671,298953
f0103d84:	83 ea 37             	sub    $0x37,%edxf0103d846672,299001
f0103d87:	eb cb                	jmp    f0103d54 <strtol+0x90>f0103d876673,299051
f0103d89:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)f0103d896678,299170
f0103d8d:	74 05                	je     f0103d94 <strtol+0xd0>f0103d8d6679,299224
f0103d8f:	8b 75 0c             	mov    0xc(%ebp),%esif0103d8f6681,299310
f0103d92:	89 0e                	mov    %ecx,(%esi)f0103d926682,299364
f0103d94:	89 c2                	mov    %eax,%edxf0103d946684,299443
f0103d96:	f7 da                	neg    %edxf0103d966685,299492
f0103d98:	85 ff                	test   %edi,%edif0103d986686,299536
f0103d9a:	0f 45 c2             	cmovne %edx,%eaxf0103d9a6687,299585
f0103d9d:	5b                   	pop    %ebxf0103d9d6689,299636
f0103d9e:	5e                   	pop    %esif0103d9e6690,299680
f0103d9f:	5f                   	pop    %edif0103d9f6691,299724
f0103da0:	5d                   	pop    %ebpf0103da06692,299768
f0103da1:	c3                   	ret    f0103da16693,299812
f0103da2:	66 90                	xchg   %ax,%axf0103da26694,299852
f0103da4:	66 90                	xchg   %ax,%axf0103da46695,299899
f0103da6:	66 90                	xchg   %ax,%axf0103da66696,299946
f0103da8:	66 90                	xchg   %ax,%axf0103da86697,299993
f0103daa:	66 90                	xchg   %ax,%axf0103daa6698,300040
f0103dac:	66 90                	xchg   %ax,%axf0103dac6699,300087
f0103dae:	66 90                	xchg   %ax,%axf0103dae6700,300134
f0103db0 <__udivdi3>:f0103db06702,300182
f0103db0:	55                   	push   %ebpf0103db06703,300204
f0103db1:	57                   	push   %edif0103db16704,300248
f0103db2:	56                   	push   %esif0103db26705,300292
f0103db3:	53                   	push   %ebxf0103db36706,300336
f0103db4:	83 ec 1c             	sub    $0x1c,%espf0103db46707,300380
f0103db7:	8b 54 24 3c          	mov    0x3c(%esp),%edxf0103db76708,300430
f0103dbb:	8b 6c 24 30          	mov    0x30(%esp),%ebpf0103dbb6709,300485
f0103dbf:	8b 74 24 34          	mov    0x34(%esp),%esif0103dbf6710,300540
f0103dc3:	8b 5c 24 38          	mov    0x38(%esp),%ebxf0103dc36711,300595
f0103dc7:	85 d2                	test   %edx,%edxf0103dc76712,300650
f0103dc9:	75 35                	jne    f0103e00 <__udivdi3+0x50>f0103dc96713,300699
f0103dcb:	39 f3                	cmp    %esi,%ebxf0103dcb6714,300764
f0103dcd:	0f 87 bd 00 00 00    	ja     f0103e90 <__udivdi3+0xe0>f0103dcd6715,300813
f0103dd3:	85 db                	test   %ebx,%ebxf0103dd36716,300878
f0103dd5:	89 d9                	mov    %ebx,%ecxf0103dd56717,300927
f0103dd7:	75 0b                	jne    f0103de4 <__udivdi3+0x34>f0103dd76718,300976
f0103dd9:	b8 01 00 00 00       	mov    $0x1,%eaxf0103dd96719,301041
f0103dde:	31 d2                	xor    %edx,%edxf0103dde6720,301090
f0103de0:	f7 f3                	div    %ebxf0103de06721,301139
f0103de2:	89 c1                	mov    %eax,%ecxf0103de26722,301183
f0103de4:	31 d2                	xor    %edx,%edxf0103de46723,301232
f0103de6:	89 f0                	mov    %esi,%eaxf0103de66724,301281
f0103de8:	f7 f1                	div    %ecxf0103de86725,301330
f0103dea:	89 c6                	mov    %eax,%esif0103dea6726,301374
f0103dec:	89 e8                	mov    %ebp,%eaxf0103dec6727,301423
f0103dee:	89 f7                	mov    %esi,%edif0103dee6728,301472
f0103df0:	f7 f1                	div    %ecxf0103df06729,301521
f0103df2:	89 fa                	mov    %edi,%edxf0103df26730,301565
f0103df4:	83 c4 1c             	add    $0x1c,%espf0103df46731,301614
f0103df7:	5b                   	pop    %ebxf0103df76732,301664
f0103df8:	5e                   	pop    %esif0103df86733,301708
f0103df9:	5f                   	pop    %edif0103df96734,301752
f0103dfa:	5d                   	pop    %ebpf0103dfa6735,301796
f0103dfb:	c3                   	ret    f0103dfb6736,301840
f0103dfc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esif0103dfc6737,301880
f0103e00:	39 f2                	cmp    %esi,%edxf0103e006738,301941
f0103e02:	77 7c                	ja     f0103e80 <__udivdi3+0xd0>f0103e026739,301990
f0103e04:	0f bd fa             	bsr    %edx,%edif0103e046740,302055
f0103e07:	83 f7 1f             	xor    $0x1f,%edif0103e076741,302104
f0103e0a:	0f 84 98 00 00 00    	je     f0103ea8 <__udivdi3+0xf8>f0103e0a6742,302154
f0103e10:	89 f9                	mov    %edi,%ecxf0103e106743,302219
f0103e12:	b8 20 00 00 00       	mov    $0x20,%eaxf0103e126744,302268
f0103e17:	29 f8                	sub    %edi,%eaxf0103e176745,302318
f0103e19:	d3 e2                	shl    %cl,%edxf0103e196746,302367
f0103e1b:	89 54 24 08          	mov    %edx,0x8(%esp)f0103e1b6747,302415
f0103e1f:	89 c1                	mov    %eax,%ecxf0103e1f6748,302469
f0103e21:	89 da                	mov    %ebx,%edxf0103e216749,302518
f0103e23:	d3 ea                	shr    %cl,%edxf0103e236750,302567
f0103e25:	8b 4c 24 08          	mov    0x8(%esp),%ecxf0103e256751,302615
f0103e29:	09 d1                	or     %edx,%ecxf0103e296752,302669
f0103e2b:	89 f2                	mov    %esi,%edxf0103e2b6753,302718
f0103e2d:	89 4c 24 08          	mov    %ecx,0x8(%esp)f0103e2d6754,302767
f0103e31:	89 f9                	mov    %edi,%ecxf0103e316755,302821
f0103e33:	d3 e3                	shl    %cl,%ebxf0103e336756,302870
f0103e35:	89 c1                	mov    %eax,%ecxf0103e356757,302918
f0103e37:	d3 ea                	shr    %cl,%edxf0103e376758,302967
f0103e39:	89 f9                	mov    %edi,%ecxf0103e396759,303015
f0103e3b:	89 5c 24 0c          	mov    %ebx,0xc(%esp)f0103e3b6760,303064
f0103e3f:	d3 e6                	shl    %cl,%esif0103e3f6761,303118
f0103e41:	89 eb                	mov    %ebp,%ebxf0103e416762,303166
f0103e43:	89 c1                	mov    %eax,%ecxf0103e436763,303215
f0103e45:	d3 eb                	shr    %cl,%ebxf0103e456764,303264
f0103e47:	09 de                	or     %ebx,%esif0103e476765,303312
f0103e49:	89 f0                	mov    %esi,%eaxf0103e496766,303361
f0103e4b:	f7 74 24 08          	divl   0x8(%esp)f0103e4b6767,303410
f0103e4f:	89 d6                	mov    %edx,%esif0103e4f6768,303459
f0103e51:	89 c3                	mov    %eax,%ebxf0103e516769,303508
f0103e53:	f7 64 24 0c          	mull   0xc(%esp)f0103e536770,303557
f0103e57:	39 d6                	cmp    %edx,%esif0103e576771,303606
f0103e59:	72 0c                	jb     f0103e67 <__udivdi3+0xb7>f0103e596772,303655
f0103e5b:	89 f9                	mov    %edi,%ecxf0103e5b6773,303720
f0103e5d:	d3 e5                	shl    %cl,%ebpf0103e5d6774,303769
f0103e5f:	39 c5                	cmp    %eax,%ebpf0103e5f6775,303817
f0103e61:	73 5d                	jae    f0103ec0 <__udivdi3+0x110>f0103e616776,303866
f0103e63:	39 d6                	cmp    %edx,%esif0103e636777,303932
f0103e65:	75 59                	jne    f0103ec0 <__udivdi3+0x110>f0103e656778,303981
f0103e67:	8d 43 ff             	lea    -0x1(%ebx),%eaxf0103e676779,304047
f0103e6a:	31 ff                	xor    %edi,%edif0103e6a6780,304102
f0103e6c:	89 fa                	mov    %edi,%edxf0103e6c6781,304151
f0103e6e:	83 c4 1c             	add    $0x1c,%espf0103e6e6782,304200
f0103e71:	5b                   	pop    %ebxf0103e716783,304250
f0103e72:	5e                   	pop    %esif0103e726784,304294
f0103e73:	5f                   	pop    %edif0103e736785,304338
f0103e74:	5d                   	pop    %ebpf0103e746786,304382
f0103e75:	c3                   	ret    f0103e756787,304426
f0103e76:	8d 76 00             	lea    0x0(%esi),%esif0103e766788,304466
f0103e79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edif0103e796789,304520
f0103e80:	31 ff                	xor    %edi,%edif0103e806790,304581
f0103e82:	31 c0                	xor    %eax,%eaxf0103e826791,304630
f0103e84:	89 fa                	mov    %edi,%edxf0103e846792,304679
f0103e86:	83 c4 1c             	add    $0x1c,%espf0103e866793,304728
f0103e89:	5b                   	pop    %ebxf0103e896794,304778
f0103e8a:	5e                   	pop    %esif0103e8a6795,304822
f0103e8b:	5f                   	pop    %edif0103e8b6796,304866
f0103e8c:	5d                   	pop    %ebpf0103e8c6797,304910
f0103e8d:	c3                   	ret    f0103e8d6798,304954
f0103e8e:	66 90                	xchg   %ax,%axf0103e8e6799,304994
f0103e90:	31 ff                	xor    %edi,%edif0103e906800,305041
f0103e92:	89 e8                	mov    %ebp,%eaxf0103e926801,305090
f0103e94:	89 f2                	mov    %esi,%edxf0103e946802,305139
f0103e96:	f7 f3                	div    %ebxf0103e966803,305188
f0103e98:	89 fa                	mov    %edi,%edxf0103e986804,305232
f0103e9a:	83 c4 1c             	add    $0x1c,%espf0103e9a6805,305281
f0103e9d:	5b                   	pop    %ebxf0103e9d6806,305331
f0103e9e:	5e                   	pop    %esif0103e9e6807,305375
f0103e9f:	5f                   	pop    %edif0103e9f6808,305419
f0103ea0:	5d                   	pop    %ebpf0103ea06809,305463
f0103ea1:	c3                   	ret    f0103ea16810,305507
f0103ea2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esif0103ea26811,305547
f0103ea8:	39 f2                	cmp    %esi,%edxf0103ea86812,305601
f0103eaa:	72 06                	jb     f0103eb2 <__udivdi3+0x102>f0103eaa6813,305650
f0103eac:	31 c0                	xor    %eax,%eaxf0103eac6814,305716
f0103eae:	39 eb                	cmp    %ebp,%ebxf0103eae6815,305765
f0103eb0:	77 d2                	ja     f0103e84 <__udivdi3+0xd4>f0103eb06816,305814
f0103eb2:	b8 01 00 00 00       	mov    $0x1,%eaxf0103eb26817,305879
f0103eb7:	eb cb                	jmp    f0103e84 <__udivdi3+0xd4>f0103eb76818,305928
f0103eb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esif0103eb96819,305993
f0103ec0:	89 d8                	mov    %ebx,%eaxf0103ec06820,306054
f0103ec2:	31 ff                	xor    %edi,%edif0103ec26821,306103
f0103ec4:	eb be                	jmp    f0103e84 <__udivdi3+0xd4>f0103ec46822,306152
f0103ec6:	66 90                	xchg   %ax,%axf0103ec66823,306217
f0103ec8:	66 90                	xchg   %ax,%axf0103ec86824,306264
f0103eca:	66 90                	xchg   %ax,%axf0103eca6825,306311
f0103ecc:	66 90                	xchg   %ax,%axf0103ecc6826,306358
f0103ece:	66 90                	xchg   %ax,%axf0103ece6827,306405
f0103ed0 <__umoddi3>:f0103ed06829,306453
f0103ed0:	55                   	push   %ebpf0103ed06830,306475
f0103ed1:	57                   	push   %edif0103ed16831,306519
f0103ed2:	56                   	push   %esif0103ed26832,306563
f0103ed3:	53                   	push   %ebxf0103ed36833,306607
f0103ed4:	83 ec 1c             	sub    $0x1c,%espf0103ed46834,306651
f0103ed7:	8b 6c 24 3c          	mov    0x3c(%esp),%ebpf0103ed76835,306701
f0103edb:	8b 74 24 30          	mov    0x30(%esp),%esif0103edb6836,306756
f0103edf:	8b 5c 24 34          	mov    0x34(%esp),%ebxf0103edf6837,306811
f0103ee3:	8b 7c 24 38          	mov    0x38(%esp),%edif0103ee36838,306866
f0103ee7:	85 ed                	test   %ebp,%ebpf0103ee76839,306921
f0103ee9:	89 f0                	mov    %esi,%eaxf0103ee96840,306970
f0103eeb:	89 da                	mov    %ebx,%edxf0103eeb6841,307019
f0103eed:	75 19                	jne    f0103f08 <__umoddi3+0x38>f0103eed6842,307068
f0103eef:	39 df                	cmp    %ebx,%edif0103eef6843,307133
f0103ef1:	0f 86 b1 00 00 00    	jbe    f0103fa8 <__umoddi3+0xd8>f0103ef16844,307182
f0103ef7:	f7 f7                	div    %edif0103ef76845,307247
f0103ef9:	89 d0                	mov    %edx,%eaxf0103ef96846,307291
f0103efb:	31 d2                	xor    %edx,%edxf0103efb6847,307340
f0103efd:	83 c4 1c             	add    $0x1c,%espf0103efd6848,307389
f0103f00:	5b                   	pop    %ebxf0103f006849,307439
f0103f01:	5e                   	pop    %esif0103f016850,307483
f0103f02:	5f                   	pop    %edif0103f026851,307527
f0103f03:	5d                   	pop    %ebpf0103f036852,307571
f0103f04:	c3                   	ret    f0103f046853,307615
f0103f05:	8d 76 00             	lea    0x0(%esi),%esif0103f056854,307655
f0103f08:	39 dd                	cmp    %ebx,%ebpf0103f086855,307709
f0103f0a:	77 f1                	ja     f0103efd <__umoddi3+0x2d>f0103f0a6856,307758
f0103f0c:	0f bd cd             	bsr    %ebp,%ecxf0103f0c6857,307823
f0103f0f:	83 f1 1f             	xor    $0x1f,%ecxf0103f0f6858,307872
f0103f12:	89 4c 24 04          	mov    %ecx,0x4(%esp)f0103f126859,307922
f0103f16:	0f 84 b4 00 00 00    	je     f0103fd0 <__umoddi3+0x100>f0103f166860,307976
f0103f1c:	b8 20 00 00 00       	mov    $0x20,%eaxf0103f1c6861,308042
f0103f21:	89 c2                	mov    %eax,%edxf0103f216862,308092
f0103f23:	8b 44 24 04          	mov    0x4(%esp),%eaxf0103f236863,308141
f0103f27:	29 c2                	sub    %eax,%edxf0103f276864,308195
f0103f29:	89 c1                	mov    %eax,%ecxf0103f296865,308244
f0103f2b:	89 f8                	mov    %edi,%eaxf0103f2b6866,308293
f0103f2d:	d3 e5                	shl    %cl,%ebpf0103f2d6867,308342
f0103f2f:	89 d1                	mov    %edx,%ecxf0103f2f6868,308390
f0103f31:	89 54 24 0c          	mov    %edx,0xc(%esp)f0103f316869,308439
f0103f35:	d3 e8                	shr    %cl,%eaxf0103f356870,308493
f0103f37:	09 c5                	or     %eax,%ebpf0103f376871,308541
f0103f39:	8b 44 24 04          	mov    0x4(%esp),%eaxf0103f396872,308590
f0103f3d:	89 c1                	mov    %eax,%ecxf0103f3d6873,308644
f0103f3f:	d3 e7                	shl    %cl,%edif0103f3f6874,308693
f0103f41:	89 d1                	mov    %edx,%ecxf0103f416875,308741
f0103f43:	89 7c 24 08          	mov    %edi,0x8(%esp)f0103f436876,308790
f0103f47:	89 df                	mov    %ebx,%edif0103f476877,308844
f0103f49:	d3 ef                	shr    %cl,%edif0103f496878,308893
f0103f4b:	89 c1                	mov    %eax,%ecxf0103f4b6879,308941
f0103f4d:	89 f0                	mov    %esi,%eaxf0103f4d6880,308990
f0103f4f:	d3 e3                	shl    %cl,%ebxf0103f4f6881,309039
f0103f51:	89 d1                	mov    %edx,%ecxf0103f516882,309087
f0103f53:	89 fa                	mov    %edi,%edxf0103f536883,309136
f0103f55:	d3 e8                	shr    %cl,%eaxf0103f556884,309185
f0103f57:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecxf0103f576885,309233
f0103f5c:	09 d8                	or     %ebx,%eaxf0103f5c6886,309287
f0103f5e:	f7 f5                	div    %ebpf0103f5e6887,309336
f0103f60:	d3 e6                	shl    %cl,%esif0103f606888,309380
f0103f62:	89 d1                	mov    %edx,%ecxf0103f626889,309428
f0103f64:	f7 64 24 08          	mull   0x8(%esp)f0103f646890,309477
f0103f68:	39 d1                	cmp    %edx,%ecxf0103f686891,309526
f0103f6a:	89 c3                	mov    %eax,%ebxf0103f6a6892,309575
f0103f6c:	89 d7                	mov    %edx,%edif0103f6c6893,309624
f0103f6e:	72 06                	jb     f0103f76 <__umoddi3+0xa6>f0103f6e6894,309673
f0103f70:	75 0e                	jne    f0103f80 <__umoddi3+0xb0>f0103f706895,309738
f0103f72:	39 c6                	cmp    %eax,%esif0103f726896,309803
f0103f74:	73 0a                	jae    f0103f80 <__umoddi3+0xb0>f0103f746897,309852
f0103f76:	2b 44 24 08          	sub    0x8(%esp),%eaxf0103f766898,309917
f0103f7a:	19 ea                	sbb    %ebp,%edxf0103f7a6899,309971
f0103f7c:	89 d7                	mov    %edx,%edif0103f7c6900,310020
f0103f7e:	89 c3                	mov    %eax,%ebxf0103f7e6901,310069
f0103f80:	89 ca                	mov    %ecx,%edxf0103f806902,310118
f0103f82:	0f b6 4c 24 0c       	movzbl 0xc(%esp),%ecxf0103f826903,310167
f0103f87:	29 de                	sub    %ebx,%esif0103f876904,310221
f0103f89:	19 fa                	sbb    %edi,%edxf0103f896905,310270
f0103f8b:	8b 5c 24 04          	mov    0x4(%esp),%ebxf0103f8b6906,310319
f0103f8f:	89 d0                	mov    %edx,%eaxf0103f8f6907,310373
f0103f91:	d3 e0                	shl    %cl,%eaxf0103f916908,310422
f0103f93:	89 d9                	mov    %ebx,%ecxf0103f936909,310470
f0103f95:	d3 ee                	shr    %cl,%esif0103f956910,310519
f0103f97:	d3 ea                	shr    %cl,%edxf0103f976911,310567
f0103f99:	09 f0                	or     %esi,%eaxf0103f996912,310615
f0103f9b:	83 c4 1c             	add    $0x1c,%espf0103f9b6913,310664
f0103f9e:	5b                   	pop    %ebxf0103f9e6914,310714
f0103f9f:	5e                   	pop    %esif0103f9f6915,310758
f0103fa0:	5f                   	pop    %edif0103fa06916,310802
f0103fa1:	5d                   	pop    %ebpf0103fa16917,310846
f0103fa2:	c3                   	ret    f0103fa26918,310890
f0103fa3:	90                   	nopf0103fa36919,310930
f0103fa4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esif0103fa46920,310966
f0103fa8:	85 ff                	test   %edi,%edif0103fa86921,311027
f0103faa:	89 f9                	mov    %edi,%ecxf0103faa6922,311076
f0103fac:	75 0b                	jne    f0103fb9 <__umoddi3+0xe9>f0103fac6923,311125
f0103fae:	b8 01 00 00 00       	mov    $0x1,%eaxf0103fae6924,311190
f0103fb3:	31 d2                	xor    %edx,%edxf0103fb36925,311239
f0103fb5:	f7 f7                	div    %edif0103fb56926,311288
f0103fb7:	89 c1                	mov    %eax,%ecxf0103fb76927,311332
f0103fb9:	89 d8                	mov    %ebx,%eaxf0103fb96928,311381
f0103fbb:	31 d2                	xor    %edx,%edxf0103fbb6929,311430
f0103fbd:	f7 f1                	div    %ecxf0103fbd6930,311479
f0103fbf:	89 f0                	mov    %esi,%eaxf0103fbf6931,311523
f0103fc1:	f7 f1                	div    %ecxf0103fc16932,311572
f0103fc3:	e9 31 ff ff ff       	jmp    f0103ef9 <__umoddi3+0x29>f0103fc36933,311616
f0103fc8:	90                   	nopf0103fc86934,311681
f0103fc9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esif0103fc96935,311717
f0103fd0:	39 dd                	cmp    %ebx,%ebpf0103fd06936,311778
f0103fd2:	72 08                	jb     f0103fdc <__umoddi3+0x10c>f0103fd26937,311827
f0103fd4:	39 f7                	cmp    %esi,%edif0103fd46938,311893
f0103fd6:	0f 87 21 ff ff ff    	ja     f0103efd <__umoddi3+0x2d>f0103fd66939,311942
f0103fdc:	89 da                	mov    %ebx,%edxf0103fdc6940,312007
f0103fde:	89 f0                	mov    %esi,%eaxf0103fde6941,312056
f0103fe0:	29 f8                	sub    %edi,%eaxf0103fe06942,312105
f0103fe2:	19 ea                	sbb    %ebp,%edxf0103fe26943,312154
f0103fe4:	e9 14 ff ff ff       	jmp    f0103efd <__umoddi3+0x2d>f0103fe46944,312203

fs/test.c,99
static char *msg = "This is the NEW message of the day!\n\n";msg6,63
fs_test(void)fs_test9,131

user/sendpage.c,265
const char *str1 = "hello child environment! how are you?";str16,128
const char *str2 = "hello parent environment! I'm good.";str27,188
#define TEMP_ADDR	TEMP_ADDR9,247
#define TEMP_ADDR_CHILD	TEMP_ADDR_CHILD10,283
umain(int argc, char **argv)umain13,331

conf/env.mk,14
V = @V9,359

conf/lab.mk,71
LAB=2LAB1,0
PACKAGEDATE=Wed Sep 12 14:51:29 EDT 2018PACKAGEDATE2,6

kern/console.h,275
#define _CONSOLE_H__CONSOLE_H_4,68
#define MONO_BASE	MONO_BASE11,215
#define MONO_BUF	MONO_BUF12,239
#define CGA_BASE	CGA_BASE13,264
#define CGA_BUF	CGA_BUF14,287
#define CRT_ROWS	CRT_ROWS16,313
#define CRT_COLS	CRT_COLS17,333
#define CRT_SIZE	CRT_SIZE18,353

kern/kclock.c,116
mc146818_read(unsigned reg)mc146818_read11,169
mc146818_write(unsigned reg, unsigned datum)mc146818_write18,250

kern/monitor.c,821
#define CMDBUF_SIZE	CMDBUF_SIZE14,314
struct Command {Command17,371
	const char *name;name18,388
	const char *name;Command::name18,388
	const char *desc;desc19,407
	const char *desc;Command::desc19,407
	int (*func)(int argc, char** argv, struct Trapframe* tf);func21,465
	int (*func)(int argc, char** argv, struct Trapframe* tf);Command::func21,465
static struct Command commands[] = {commands24,528
mon_help(int argc, char **argv, struct Trapframe *tf)mon_help32,764
mon_kerninfo(int argc, char **argv, struct Trapframe *tf)mon_kerninfo42,951
mon_backtrace(int argc, char **argv, struct Trapframe *tf)mon_backtrace58,1572
#define WHITESPACE WHITESPACE68,1719
#define MAXARGS MAXARGS69,1748
runcmd(char *buf, struct Trapframe *tf)runcmd72,1779
monitor(struct Trapframe *tf)monitor111,2571

kern/kdebug.h,1042
#define JOS_KERN_KDEBUG_HJOS_KERN_KDEBUG_H2,26
struct Eipdebuginfo {Eipdebuginfo7,137
	const char *eip_file;		// Source code filename for EIPeip_file8,159
	const char *eip_file;		// Source code filename for EIPEipdebuginfo::eip_file8,159
	int eip_line;			// Source code linenumber for EIPeip_line9,215
	int eip_line;			// Source code linenumber for EIPEipdebuginfo::eip_line9,215
	const char *eip_fn_name;	// Name of function containing EIPeip_fn_name11,267
	const char *eip_fn_name;	// Name of function containing EIPEipdebuginfo::eip_fn_name11,267
	int eip_fn_namelen;		// Length of function nameeip_fn_namelen13,366
	int eip_fn_namelen;		// Length of function nameEipdebuginfo::eip_fn_namelen13,366
	uintptr_t eip_fn_addr;		// Address of start of functioneip_fn_addr14,415
	uintptr_t eip_fn_addr;		// Address of start of functionEipdebuginfo::eip_fn_addr14,415
	int eip_fn_narg;		// Number of function argumentseip_fn_narg15,472
	int eip_fn_narg;		// Number of function argumentsEipdebuginfo::eip_fn_narg15,472

kern/console.c,2436
delay(void)delay16,352
#define COM1	COM126,448
#define COM_RX	COM_RX28,469
#define COM_TX	COM_TX29,518
#define COM_DLL	COM_DLL30,569
#define COM_DLM	COM_DLM31,623
#define COM_IER	COM_IER32,678
#define   COM_IER_RDI	COM_IER_RDI33,731
#define COM_IIR	COM_IIR34,794
#define COM_FCR	COM_FCR35,842
#define COM_LCR	COM_LCR36,891
#define	  COM_LCR_DLAB	COM_LCR_DLAB37,940
#define	  COM_LCR_WLEN8	COM_LCR_WLEN838,998
#define COM_MCR	COM_MCR39,1051
#define	  COM_MCR_RTS	COM_MCR_RTS40,1101
#define	  COM_MCR_DTR	COM_MCR_DTR41,1146
#define	  COM_MCR_OUT2	COM_MCR_OUT242,1191
#define COM_LSR	COM_LSR43,1238
#define   COM_LSR_DATA	COM_LSR_DATA44,1285
#define   COM_LSR_TXRDY	COM_LSR_TXRDY45,1333
#define   COM_LSR_TSRE	COM_LSR_TSRE46,1389
static bool serial_exists;serial_exists48,1439
serial_proc_data(void)serial_proc_data51,1478
serial_intr(void)serial_intr59,1592
serial_putc(int c)serial_putc66,1678
serial_init(void)serial_init79,1843
lpt_putc(int c)lpt_putc112,2633
static unsigned addr_6845;addr_6845128,2853
static uint16_t *crt_buf;crt_buf129,2880
static uint16_t crt_pos;crt_pos130,2906
cga_init(void)cga_init133,2944
cga_putc(int c)cga_putc163,3430
#define NO	NO214,4399
#define SHIFT	SHIFT216,4414
#define CTL	CTL217,4436
#define ALT	ALT218,4456
#define CAPSLOCK	CAPSLOCK220,4477
#define NUMLOCK	NUMLOCK221,4501
#define SCROLLLOCK	SCROLLLOCK222,4525
#define E0ESC	E0ESC224,4552
static uint8_t shiftcode[256] =shiftcode226,4575
static uint8_t togglecode[256] =togglecode236,4706
static uint8_t normalmap[256] =normalmap243,4805
static uint8_t shiftmap[256] =shiftmap264,5690
#define C(C285,6574
static uint8_t ctlmap[256] =ctlmap287,6598
static uint8_t *charcode[4] = {charcode304,7327
kbd_proc_data(void)kbd_proc_data316,7524
kbd_intr(void)kbd_intr368,8510
kbd_init(void)kbd_init374,8569
#define CONSBUFSIZE CONSBUFSIZE385,8809
	uint8_t buf[CONSBUFSIZE];buf388,8850
	uint8_t buf[CONSBUFSIZE];__anon3::buf388,8850
	uint32_t rpos;rpos389,8877
	uint32_t rpos;__anon3::rpos389,8877
	uint32_t wpos;wpos390,8893
	uint32_t wpos;__anon3::wpos390,8893
} cons;cons391,8909
cons_intr(int (*proc)(void))cons_intr396,9037
cons_getc(void)cons_getc411,9300
cons_putc(int c)cons_putc433,9754
cons_init(void)cons_init442,9860
cputchar(int c)cputchar456,10056
getchar(void)getchar462,10096
iscons(int fdnum)iscons472,10191

kern/entrypgdir.c,163
pte_t entry_pgtable[NPTENTRIES];entry_pgtable4,49
pde_t entry_pgdir[NPDENTRIES] = {entry_pgdir21,934
pte_t entry_pgtable[NPTENTRIES] = {entry_pgtable33,1329

kern/monitor.h,51
#define JOS_KERN_MONITOR_HJOS_KERN_MONITOR_H2,27

kern/pmap.h,397
#define JOS_KERN_PMAP_HJOS_KERN_PMAP_H4,72
#define PADDR(PADDR25,645
_paddr(const char *file, int line, void *kva)_paddr28,722
#define KADDR(KADDR37,1057
_kaddr(const char *file, int line, physaddr_t pa)_kaddr40,1127
	ALLOC_ZERO = 1<<0,ALLOC_ZERO50,1366
page2pa(struct PageInfo *pp)page2pa66,1815
pa2page(physaddr_t pa)pa2page72,1913
page2kva(struct PageInfo *pp)page2kva80,2057

kern/pmap.c,1558
size_t npages;			// Amount of physical memory (in pages)npages13,262
static size_t npages_basemem;	// Amount of base memory (in pages)npages_basemem14,319
pde_t *kern_pgdir;		// Kernel's initial page directorykern_pgdir17,427
struct PageInfo *pages;		// Physical page state arraypages18,482
static struct PageInfo *page_free_list;	// Free list of physical pagespage_free_list19,536
nvram_read(int r)nvram_read27,796
i386_detect_memory(void)i386_detect_memory33,887
boot_alloc(uint32_t n)boot_alloc85,2707
mem_init(void)mem_init126,4082
page_init(void)page_init244,8868
page_alloc(int alloc_flags)page_alloc296,10677
page_free(struct PageInfo *pp)page_free317,11073
page_decref(struct PageInfo* pp)page_decref336,11538
pgdir_walk(pde_t *pgdir, const void *va, int create)pgdir_walk365,12674
boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)boot_map_region397,13480
page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)page_insert437,14810
page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)page_lookup459,15453
page_remove(pde_t *pgdir, void *va)page_remove482,16201
tlb_invalidate(pde_t *pgdir, void *va)tlb_invalidate496,16549
check_page_free_list(bool only_low_memory)check_page_free_list512,16982
check_page_alloc(void)check_page_alloc574,18743
check_kern_pgdir(void)check_kern_pgdir656,20560
check_va2pa(pde_t *pgdir, uintptr_t va)check_va2pa705,21835
check_page(void)check_page721,22116
check_page_installed_pgdir(void)check_page_installed_pgdir873,26911

kern/entry.S,533
#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))SRL7,120
#define	RELOC(x) ((x) - KERNBASE)RELOC18,566
#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)MULTIBOOT_HEADER_MAGIC20,601
#define MULTIBOOT_HEADER_FLAGS (0)MULTIBOOT_HEADER_FLAGS21,645
#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))CHECKSUM22,680
_start = RELOC(entry)_start40,1231
entry:entry43,1267
relocated:relocated69,2169
spin:	jmp	spinspin83,2501
bootstack:bootstack92,2734
bootstacktop:bootstacktop95,2788

kern/init.c,211
i386_init(void)i386_init14,227
const char *panicstr;panicstr42,921
_panic(const char *file, int line, const char *fmt,...)_panic49,1069
_warn(const char *file, int line, const char *fmt,...)_warn74,1502

kern/kdebug.c,181
stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,stab_binsearch51,1753
debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)debuginfo_eip105,3021

kern/kclock.h,420
#define JOS_KERN_KCLOCK_HJOS_KERN_KCLOCK_H4,74
#define	IO_RTC	IO_RTC9,203
#define	MC_NVRAM_START	MC_NVRAM_START11,242
#define	MC_NVRAM_SIZE	MC_NVRAM_SIZE12,301
#define NVRAM_BASELO	NVRAM_BASELO15,393
#define NVRAM_BASEHI	NVRAM_BASEHI16,465
#define NVRAM_EXTLO	NVRAM_EXTLO19,609
#define NVRAM_EXTHI	NVRAM_EXTHI20,680
#define NVRAM_EXT16LO	NVRAM_EXT16LO23,826
#define NVRAM_EXT16HI	NVRAM_EXT16HI24,900

kern/printf.c,136
putch(int ch, int *cnt)putch10,212
vcprintf(const char *fmt, va_list ap)vcprintf17,269
cprintf(const char *fmt, ...)cprintf26,385

grade-lab2,306
r = Runner(save("jos.out"),r5,47
def test_jos():test_jos9,140
def test_check_page_alloc():test_check_page_alloc13,228
def test_check_page():test_check_page17,352
def test_check_kern_pgdir():test_check_kern_pgdir21,470
def test_check_page_installed_pgdir():test_check_page_installed_pgdir25,596

gradelib.py,2816
__all__ = []__all__7,194
TESTS = []TESTS15,361
CURRENT_TEST = NoneCURRENT_TEST18,424
def test(points, title=None, parent=None):test20,445
    def register_test(fn, title=title):register_test26,703
        def run_test():run_test33,923
def end_part(name):end_part79,2398
    def show_part():show_part80,2418
def run_tests():run_tests89,2709
def get_current_test():get_current_test120,3671
def assert_equal(got, expect, msg=""):assert_equal131,3928
def assert_lines_match(text, *regexps, **kw):assert_lines_match140,4221
    def assert_lines_match_kw(no=[]):assert_lines_match_kw145,4445
MAKE_TIMESTAMP = 0MAKE_TIMESTAMP196,6022
def pre_make():pre_make198,6042
def post_make():post_make203,6197
def make(*target):make209,6385
def show_command(cmd):show_command215,6497
def maybe_unlink(*paths):maybe_unlink219,6593
COLORS = {"default": "\033[0m", "red": "\033[31m", "green": "\033[32m"}COLORS227,6784
def color(name, text):color229,6857
def reset_fs():reset_fs234,7032
class QEMU(object):QEMU244,7277
    _GDBPORT = None_GDBPORT245,7297
    def __init__(self, *make_args):__init__247,7318
    def get_gdb_port():get_gdb_port273,8258
    def fileno(self):fileno285,8713
    def handle_read(self):handle_read289,8803
    def wait(self):wait299,9115
    def kill(self):kill304,9216
class GDBClient(object):GDBClient308,9293
    def __init__(self, port, timeout=15):__init__309,9318
    def fileno(self):fileno322,9717
    def handle_read(self):handle_read326,9800
    def __send(self, cmd):__send348,10398
    def __send_break(self):__send_break352,10538
    def close(self):close355,10602
    def cont(self):cont360,10705
    def breakpoint(self, addr):breakpoint363,10751
class TerminateTest(Exception):TerminateTest373,10952
class Runner():Runner376,10994
    def __init__(self, *default_monitors):__init__377,11010
    def run_qemu(self, *monitors, **kw):run_qemu380,11105
        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):run_qemu_kw389,11629
    def __monitor_start(self, output):__monitor_start436,13129
    def __react(self, reactors, timeout):__react446,13439
    def user_test(self, binary, *monitors, **kw):user_test466,14081
    def match(self, *args, **kwargs):match476,14579
def save(path):save488,14924
    def setup_save(runner):setup_save492,15062
    def save_on_finish(fail):save_on_finish498,15236
def stop_breakpoint(addr):stop_breakpoint511,15660
    def setup_breakpoint(runner):setup_breakpoint515,15800
def call_on_line(regexp, callback):call_on_line525,16182
    def setup_call_on_line(runner):setup_call_on_line529,16316
        def handle_output(output):handle_output531,16378
def stop_on_line(regexp):stop_on_line541,16743
    def stop(line):stop545,16856

.dir-locals.el,0

GNUmakefile,1598
OBJDIR := objOBJDIR8,197
LABSETUP ?= ./LABSETUP22,403
TOP = .TOP24,419
GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >/dev/null 2>&1; \GCCPREFIX36,874
QEMU := $(shell if which qemu >/dev/null 2>&1; \QEMU52,1637
GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)GDBPORT67,2275
CC	:= $(GCCPREFIX)gcc -pipeCC69,2324
GDB	:= $(GCCPREFIX)gdbGDB70,2352
AS	:= $(GCCPREFIX)asAS71,2375
AR	:= $(GCCPREFIX)arAR72,2396
LD	:= $(GCCPREFIX)ldLD73,2417
OBJCOPY	:= $(GCCPREFIX)objcopyOBJCOPY74,2438
OBJDUMP	:= $(GCCPREFIX)objdumpOBJDUMP75,2469
NM	:= $(GCCPREFIX)nmNM76,2500
NCC	:= gcc $(CC_VER) -pipeNCC79,2540
NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -WallNATIVE_CFLAGS80,2567
TAR	:= gtarTAR81,2632
PERL	:= perlPERL82,2644
CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MDCFLAGS87,2831
LDFLAGS := -m elf_i386LDFLAGS100,3389
ULDFLAGS := -T user/user.ldULDFLAGS103,3450
GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)GCC_LIB105,3479
OBJDIRS :=OBJDIRS108,3599
KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabsKERN_CFLAGS124,3990
USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabsUSER_CFLAGS125,4036
QEMUOPTS = -drive file=$(OBJDIR)/kern/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)QEMUOPTS143,4546
IMAGES = $(OBJDIR)/kern/kernel.imgIMAGES145,4759
WEBSUB := https://6828.scripts.mit.edu/2018/handin.pyWEBSUB223,6476
UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu/6.828/2018/jos.git (fetch)" | awk '{split($$0,a," "); print a[1]}')UPSTREAM256,7498
