
grade-lab1,445
r = Runner(save("jos.out"),r6,57
def test_jos():test_jos10,150
def test_printf():test_printf14,211
BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"BACKTRACE_RE17,275
def test_backtrace_count():test_backtrace_count20,386
def test_backtrace_arguments():test_backtrace_arguments25,544
def test_backtrace_symbols():test_backtrace_symbols31,777
def test_backtrace_lines():test_backtrace_lines37,1018

mergedep.pl,31
sub readdeps {readdeps27,909

lib/readline.c,106
#define BUFLEN BUFLEN4,47
static char buf[BUFLEN];buf5,67
readline(const char *prompt)readline8,100

lib/string.c,1018
#define ASM ASM9,264
strlen(const char *s)strlen12,283
strnlen(const char *s, size_t size)strnlen22,371
strcpy(char *dst, const char *src)strcpy32,496
strcat(char *dst, const char *src)strcat43,636
strncpy(char *dst, const char *src, size_t size) {strncpy51,745
strlcpy(char *dst, const char *src, size_t size)strlcpy66,998
strcmp(const char *p, const char *q)strcmp80,1201
strncmp(const char *p, const char *q, size_t n)strncmp88,1340
strchr(const char *s, char c)strchr101,1645
strfind(const char *s, char c)strfind112,1889
memset(void *v, int c, size_t n)memset122,2002
memmove(void *dst, const void *src, size_t n)memmove142,2359
memset(void *v, int c, size_t n)memset174,3099
memmove(void *dst, const void *src, size_t n)memmove188,3221
memcpy(void *dst, const void *src, size_t n)memcpy209,3470
memcmp(const void *v1, const void *v2, size_t n)memcmp215,3554
memfind(const void *s, int c, size_t n)memfind230,3801
strtol(const char *s, char **endptr, int base)strtol240,4001

lib/printfmt.c,845
static const char * const error_string[MAXERROR] =error_string21,589
printnum(void (*putch)(int, void*), void *putdat,printnum36,995
getuint(va_list *ap, int lflag)getuint55,1609
getint(va_list *ap, int lflag)getint68,1897
vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)vprintfmt83,2193
printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)printfmt247,5283
struct sprintbuf {sprintbuf256,5443
	char *buf;buf257,5462
	char *buf;sprintbuf::buf257,5462
	char *ebuf;ebuf258,5474
	char *ebuf;sprintbuf::ebuf258,5474
	int cnt;cnt259,5487
	int cnt;sprintbuf::cnt259,5487
sprintputch(int ch, struct sprintbuf *b)sprintputch263,5513
vsnprintf(char *buf, int n, const char *fmt, va_list ap)vsnprintf271,5615
snprintf(char *buf, int n, const char *fmt, ...)snprintf288,5913

inc/memlayout.h,1127
#define JOS_INC_MEMLAYOUT_HJOS_INC_MEMLAYOUT_H2,28
#define GD_KT GD_KT15,324
#define GD_KD GD_KD16,366
#define GD_UT GD_UT17,408
#define GD_UD GD_UD18,448
#define GD_TSS0 GD_TSS019,488
#define	KERNBASE	KERNBASE87,4609
#define IOPHYSMEM	IOPHYSMEM92,4814
#define EXTPHYSMEM	EXTPHYSMEM93,4841
#define KSTACKTOP	KSTACKTOP96,4887
#define KSTKSIZE	KSTKSIZE97,4914
#define KSTKGAP	KSTKGAP98,4972
#define MMIOLIM	MMIOLIM101,5058
#define MMIOBASE	MMIOBASE102,5096
#define ULIM	ULIM104,5133
#define UVPT	UVPT112,5361
#define UPAGES	UPAGES114,5434
#define UENVS	UENVS116,5515
#define UTOP	UTOP123,5650
#define UXSTACKTOP	UXSTACKTOP125,5710
#define USTACKTOP	USTACKTOP128,5837
#define UTEXT	UTEXT131,5913
#define UTEMP	UTEMP134,6008
#define PFTEMP	PFTEMP137,6168
#define USTABDATA	USTABDATA139,6265
typedef uint32_t pte_t;pte_t143,6320
typedef uint32_t pde_t;pde_t144,6344
struct PageInfo {PageInfo175,7643
	struct PageInfo *pp_link;pp_link177,7693
	struct PageInfo *pp_link;PageInfo::pp_link177,7693
	uint16_t pp_ref;pp_ref184,7951
	uint16_t pp_ref;PageInfo::pp_ref184,7951

inc/stab.h,1529
#define JOS_STAB_HJOS_STAB_H2,19
#define	N_GSYM	N_GSYM15,436
#define	N_FNAME	N_FNAME16,474
#define	N_FUN	N_FUN17,517
#define	N_STSYM	N_STSYM18,555
#define	N_LCSYM	N_LCSYM19,602
#define	N_MAIN	N_MAIN20,648
#define	N_PC	N_PC21,691
#define	N_RSYM	N_RSYM22,734
#define	N_SLINE	N_SLINE23,776
#define	N_DSLINE	N_DSLINE24,826
#define	N_BSLINE	N_BSLINE25,876
#define	N_SSYM	N_SSYM26,925
#define	N_SO	N_SO27,973
#define	N_LSYM	N_LSYM28,1017
#define	N_BINCL	N_BINCL29,1056
#define	N_SOL	N_SOL30,1104
#define	N_PSYM	N_PSYM31,1153
#define	N_EINCL	N_EINCL32,1196
#define	N_ENTRY	N_ENTRY33,1238
#define	N_LBRAC	N_LBRAC34,1285
#define	N_EXCL	N_EXCL35,1323
#define	N_RBRAC	N_RBRAC36,1368
#define	N_BCOMM	N_BCOMM37,1407
#define	N_ECOMM	N_ECOMM38,1445
#define	N_ECOML	N_ECOML39,1481
#define	N_LENG	N_LENG40,1530
struct Stab {Stab43,1637
	uint32_t n_strx;	// index into string table of namen_strx44,1651
	uint32_t n_strx;	// index into string table of nameStab::n_strx44,1651
	uint8_t n_type;         // type of symboln_type45,1704
	uint8_t n_type;         // type of symbolStab::n_type45,1704
	uint8_t n_other;        // misc info (usually empty)n_other46,1747
	uint8_t n_other;        // misc info (usually empty)Stab::n_other46,1747
	uint16_t n_desc;        // description fieldn_desc47,1801
	uint16_t n_desc;        // description fieldStab::n_desc47,1801
	uintptr_t n_value;	// value of symboln_value48,1847
	uintptr_t n_value;	// value of symbolStab::n_value48,1847

inc/string.h,47
#define JOS_INC_STRING_HJOS_INC_STRING_H2,25

inc/stdio.h,69
#define JOS_INC_STDIO_HJOS_INC_STDIO_H2,24
#define NULL	NULL7,87

inc/x86.h,1331
#define JOS_INC_X86_HJOS_INC_X86_H2,22
breakpoint(void)breakpoint7,88
inb(int port)inb13,155
insb(int port, void *addr, int cnt)insb21,278
inw(int port)inw30,481
insw(int port, void *addr, int cnt)insw38,605
inl(int port)inl47,808
insl(int port, void *addr, int cnt)insl55,932
outb(int port, uint8_t data)outb64,1131
outsb(int port, const void *addr, int cnt)outsb70,1241
outw(int port, uint16_t data)outw79,1438
outsw(int port, const void *addr, int cnt)outsw85,1549
outsl(int port, const void *addr, int cnt)outsl94,1746
outl(int port, uint32_t data)outl103,1943
invlpg(void *addr)invlpg109,2054
lidt(void *p)lidt115,2153
lgdt(void *p)lgdt121,2231
lldt(uint16_t sel)lldt127,2309
ltr(uint16_t sel)ltr133,2392
lcr0(uint32_t val)lcr0139,2473
rcr0(void)rcr0145,2566
rcr2(void)rcr2153,2678
lcr3(uint32_t val)lcr3161,2786
rcr3(void)rcr3167,2879
lcr4(uint32_t val)lcr4175,2987
rcr4(void)rcr4181,3080
tlbflush(void)tlbflush189,3188
read_eflags(void)read_eflags197,3337
write_eflags(uint32_t eflags)write_eflags205,3463
read_ebp(void)read_ebp211,3572
read_esp(void)read_esp219,3688
cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)cpuid227,3800
read_tsc(void)read_tsc244,4147
xchg(volatile uint32_t *addr, uint32_t newval)xchg252,4255

inc/elf.h,3208
#define JOS_INC_ELF_HJOS_INC_ELF_H2,22
#define ELF_MAGIC ELF_MAGIC4,45
struct Elf {Elf6,109
	uint32_t e_magic;	// must equal ELF_MAGICe_magic7,122
	uint32_t e_magic;	// must equal ELF_MAGICElf::e_magic7,122
	uint8_t e_elf[12];e_elf8,165
	uint8_t e_elf[12];Elf::e_elf8,165
	uint16_t e_type;e_type9,185
	uint16_t e_type;Elf::e_type9,185
	uint16_t e_machine;e_machine10,203
	uint16_t e_machine;Elf::e_machine10,203
	uint32_t e_version;e_version11,224
	uint32_t e_version;Elf::e_version11,224
	uint32_t e_entry;e_entry12,245
	uint32_t e_entry;Elf::e_entry12,245
	uint32_t e_phoff;e_phoff13,264
	uint32_t e_phoff;Elf::e_phoff13,264
	uint32_t e_shoff;e_shoff14,283
	uint32_t e_shoff;Elf::e_shoff14,283
	uint32_t e_flags;e_flags15,302
	uint32_t e_flags;Elf::e_flags15,302
	uint16_t e_ehsize;e_ehsize16,321
	uint16_t e_ehsize;Elf::e_ehsize16,321
	uint16_t e_phentsize;e_phentsize17,341
	uint16_t e_phentsize;Elf::e_phentsize17,341
	uint16_t e_phnum;e_phnum18,364
	uint16_t e_phnum;Elf::e_phnum18,364
	uint16_t e_shentsize;e_shentsize19,383
	uint16_t e_shentsize;Elf::e_shentsize19,383
	uint16_t e_shnum;e_shnum20,406
	uint16_t e_shnum;Elf::e_shnum20,406
	uint16_t e_shstrndx;e_shstrndx21,425
	uint16_t e_shstrndx;Elf::e_shstrndx21,425
struct Proghdr {Proghdr24,451
	uint32_t p_type;p_type25,468
	uint32_t p_type;Proghdr::p_type25,468
	uint32_t p_offset;p_offset26,486
	uint32_t p_offset;Proghdr::p_offset26,486
	uint32_t p_va;p_va27,506
	uint32_t p_va;Proghdr::p_va27,506
	uint32_t p_pa;p_pa28,522
	uint32_t p_pa;Proghdr::p_pa28,522
	uint32_t p_filesz;p_filesz29,538
	uint32_t p_filesz;Proghdr::p_filesz29,538
	uint32_t p_memsz;p_memsz30,558
	uint32_t p_memsz;Proghdr::p_memsz30,558
	uint32_t p_flags;p_flags31,577
	uint32_t p_flags;Proghdr::p_flags31,577
	uint32_t p_align;p_align32,596
	uint32_t p_align;Proghdr::p_align32,596
struct Secthdr {Secthdr35,619
	uint32_t sh_name;sh_name36,636
	uint32_t sh_name;Secthdr::sh_name36,636
	uint32_t sh_type;sh_type37,655
	uint32_t sh_type;Secthdr::sh_type37,655
	uint32_t sh_flags;sh_flags38,674
	uint32_t sh_flags;Secthdr::sh_flags38,674
	uint32_t sh_addr;sh_addr39,694
	uint32_t sh_addr;Secthdr::sh_addr39,694
	uint32_t sh_offset;sh_offset40,713
	uint32_t sh_offset;Secthdr::sh_offset40,713
	uint32_t sh_size;sh_size41,734
	uint32_t sh_size;Secthdr::sh_size41,734
	uint32_t sh_link;sh_link42,753
	uint32_t sh_link;Secthdr::sh_link42,753
	uint32_t sh_info;sh_info43,772
	uint32_t sh_info;Secthdr::sh_info43,772
	uint32_t sh_addralign;sh_addralign44,791
	uint32_t sh_addralign;Secthdr::sh_addralign44,791
	uint32_t sh_entsize;sh_entsize45,815
	uint32_t sh_entsize;Secthdr::sh_entsize45,815
#define ELF_PROG_LOAD	ELF_PROG_LOAD49,871
#define ELF_PROG_FLAG_EXEC	ELF_PROG_FLAG_EXEC52,931
#define ELF_PROG_FLAG_WRITE	ELF_PROG_FLAG_WRITE53,960
#define ELF_PROG_FLAG_READ	ELF_PROG_FLAG_READ54,990
#define ELF_SHT_NULL	ELF_SHT_NULL57,1051
#define ELF_SHT_PROGBITS	ELF_SHT_PROGBITS58,1075
#define ELF_SHT_SYMTAB	ELF_SHT_SYMTAB59,1102
#define ELF_SHT_STRTAB	ELF_SHT_STRTAB60,1128
#define ELF_SHN_UNDEF	ELF_SHN_UNDEF63,1186

inc/mmu.h,10794
#define JOS_INC_MMU_HJOS_INC_MMU_H2,22
#define PGNUM(PGNUM30,964
#define PDX(PDX33,1040
#define PTX(PTX36,1121
#define PGOFF(PGOFF39,1200
#define PGADDR(PGADDR42,1300
#define NPDENTRIES	NPDENTRIES45,1421
#define NPTENTRIES	NPTENTRIES46,1491
#define PGSIZE	PGSIZE48,1554
#define PGSHIFT	PGSHIFT49,1602
#define PTSIZE	PTSIZE51,1640
#define PTSHIFT	PTSHIFT52,1718
#define PTXSHIFT	PTXSHIFT54,1756
#define PDXSHIFT	PDXSHIFT55,1814
#define PTE_P	PTE_P58,1910
#define PTE_W	PTE_W59,1942
#define PTE_U	PTE_U60,1976
#define PTE_PWT	PTE_PWT61,2005
#define PTE_PCD	PTE_PCD62,2045
#define PTE_A	PTE_A63,2085
#define PTE_D	PTE_D64,2118
#define PTE_PS	PTE_PS65,2148
#define PTE_G	PTE_G66,2183
#define PTE_AVAIL	PTE_AVAIL70,2353
#define PTE_SYSCALL	PTE_SYSCALL73,2480
#define PTE_ADDR(PTE_ADDR76,2586
#define CR0_PE	CR0_PE79,2665
#define CR0_MP	CR0_MP80,2713
#define CR0_EM	CR0_EM81,2763
#define CR0_TS	CR0_TS82,2803
#define CR0_ET	CR0_ET83,2847
#define CR0_NE	CR0_NE84,2892
#define CR0_WP	CR0_WP85,2937
#define CR0_AM	CR0_AM86,2981
#define CR0_NW	CR0_NW87,3026
#define CR0_CD	CR0_CD88,3073
#define CR0_PG	CR0_PG89,3117
#define CR4_PCE	CR4_PCE91,3155
#define CR4_MCE	CR4_MCE92,3213
#define CR4_PSE	CR4_PSE93,3265
#define CR4_DE	CR4_DE94,3317
#define CR4_TSD	CR4_TSD95,3368
#define CR4_PVI	CR4_PVI96,3418
#define CR4_VME	CR4_VME97,3483
#define FL_CF	FL_CF100,3554
#define FL_PF	FL_PF101,3594
#define FL_AF	FL_AF102,3635
#define FL_ZF	FL_ZF103,3685
#define FL_SF	FL_SF104,3724
#define FL_TF	FL_TF105,3763
#define FL_IF	FL_IF106,3802
#define FL_DF	FL_DF107,3846
#define FL_OF	FL_OF108,3890
#define FL_IOPL_MASK	FL_IOPL_MASK109,3933
#define FL_IOPL_0	FL_IOPL_0110,3996
#define FL_IOPL_1	FL_IOPL_1111,4040
#define FL_IOPL_2	FL_IOPL_2112,4084
#define FL_IOPL_3	FL_IOPL_3113,4128
#define FL_NT	FL_NT114,4172
#define FL_RF	FL_RF115,4213
#define FL_VM	FL_VM116,4254
#define FL_AC	FL_AC117,4301
#define FL_VIF	FL_VIF118,4346
#define FL_VIP	FL_VIP119,4399
#define FL_ID	FL_ID120,4455
#define FEC_PR	FEC_PR123,4519
#define FEC_WR	FEC_WR124,4584
#define FEC_U	FEC_U125,4636
#define SEG_NULL	SEG_NULL139,4841
#define SEG(SEG142,4903
struct Segdesc {Segdesc152,5176
	unsigned sd_lim_15_0 : 16;  // Low bits of segment limitsd_lim_15_0153,5193
	unsigned sd_lim_15_0 : 16;  // Low bits of segment limitSegdesc::sd_lim_15_0153,5193
	unsigned sd_base_15_0 : 16; // Low bits of segment base addresssd_base_15_0154,5251
	unsigned sd_base_15_0 : 16; // Low bits of segment base addressSegdesc::sd_base_15_0154,5251
	unsigned sd_base_23_16 : 8; // Middle bits of segment base addresssd_base_23_16155,5316
	unsigned sd_base_23_16 : 8; // Middle bits of segment base addressSegdesc::sd_base_23_16155,5316
	unsigned sd_type : 4;       // Segment type (see STS_ constants)sd_type156,5384
	unsigned sd_type : 4;       // Segment type (see STS_ constants)Segdesc::sd_type156,5384
	unsigned sd_s : 1;          // 0 = system, 1 = applicationsd_s157,5450
	unsigned sd_s : 1;          // 0 = system, 1 = applicationSegdesc::sd_s157,5450
	unsigned sd_dpl : 2;        // Descriptor Privilege Levelsd_dpl158,5510
	unsigned sd_dpl : 2;        // Descriptor Privilege LevelSegdesc::sd_dpl158,5510
	unsigned sd_p : 1;          // Presentsd_p159,5569
	unsigned sd_p : 1;          // PresentSegdesc::sd_p159,5569
	unsigned sd_lim_19_16 : 4;  // High bits of segment limitsd_lim_19_16160,5609
	unsigned sd_lim_19_16 : 4;  // High bits of segment limitSegdesc::sd_lim_19_16160,5609
	unsigned sd_avl : 1;        // Unused (available for software use)sd_avl161,5668
	unsigned sd_avl : 1;        // Unused (available for software use)Segdesc::sd_avl161,5668
	unsigned sd_rsv1 : 1;       // Reservedsd_rsv1162,5736
	unsigned sd_rsv1 : 1;       // ReservedSegdesc::sd_rsv1162,5736
	unsigned sd_db : 1;         // 0 = 16-bit segment, 1 = 32-bit segmentsd_db163,5777
	unsigned sd_db : 1;         // 0 = 16-bit segment, 1 = 32-bit segmentSegdesc::sd_db163,5777
	unsigned sd_g : 1;          // Granularity: limit scaled by 4K when setsd_g164,5848
	unsigned sd_g : 1;          // Granularity: limit scaled by 4K when setSegdesc::sd_g164,5848
	unsigned sd_base_31_24 : 8; // High bits of segment base addresssd_base_31_24165,5921
	unsigned sd_base_31_24 : 8; // High bits of segment base addressSegdesc::sd_base_31_24165,5921
#define SEG_NULL	SEG_NULL168,6006
#define SEG_FAULT	SEG_FAULT170,6114
#define SEG(SEG172,6192
#define SEG16(SEG16176,6391
#define STA_X	STA_X184,6662
#define STA_E	STA_E185,6707
#define STA_C	STA_C186,6771
#define STA_W	STA_W187,6839
#define STA_R	STA_R188,6901
#define STA_A	STA_A189,6958
#define STS_T16A	STS_T16A192,7022
#define STS_LDT	STS_LDT193,7071
#define STS_T16B	STS_T16B194,7122
#define STS_CG16	STS_CG16195,7166
#define STS_TG	STS_TG196,7211
#define STS_IG16	STS_IG16197,7268
#define STS_TG16	STS_TG16198,7318
#define STS_T32A	STS_T32A199,7363
#define STS_T32B	STS_T32B200,7412
#define STS_CG32	STS_CG32201,7456
#define STS_IG32	STS_IG32202,7501
#define STS_TG32	STS_TG32203,7551
struct Taskstate {Taskstate215,7731
	uint32_t ts_link;	// Old ts selectorts_link216,7750
	uint32_t ts_link;	// Old ts selectorTaskstate::ts_link216,7750
	uintptr_t ts_esp0;	// Stack pointers and segment selectorsts_esp0217,7788
	uintptr_t ts_esp0;	// Stack pointers and segment selectorsTaskstate::ts_esp0217,7788
	uint16_t ts_ss0;	//   after an increase in privilege levelts_ss0218,7848
	uint16_t ts_ss0;	//   after an increase in privilege levelTaskstate::ts_ss0218,7848
	uint16_t ts_padding1;ts_padding1219,7908
	uint16_t ts_padding1;Taskstate::ts_padding1219,7908
	uintptr_t ts_esp1;ts_esp1220,7931
	uintptr_t ts_esp1;Taskstate::ts_esp1220,7931
	uint16_t ts_ss1;ts_ss1221,7951
	uint16_t ts_ss1;Taskstate::ts_ss1221,7951
	uint16_t ts_padding2;ts_padding2222,7969
	uint16_t ts_padding2;Taskstate::ts_padding2222,7969
	uintptr_t ts_esp2;ts_esp2223,7992
	uintptr_t ts_esp2;Taskstate::ts_esp2223,7992
	uint16_t ts_ss2;ts_ss2224,8012
	uint16_t ts_ss2;Taskstate::ts_ss2224,8012
	uint16_t ts_padding3;ts_padding3225,8030
	uint16_t ts_padding3;Taskstate::ts_padding3225,8030
	physaddr_t ts_cr3;	// Page directory basets_cr3226,8053
	physaddr_t ts_cr3;	// Page directory baseTaskstate::ts_cr3226,8053
	uintptr_t ts_eip;	// Saved state from last task switchts_eip227,8096
	uintptr_t ts_eip;	// Saved state from last task switchTaskstate::ts_eip227,8096
	uint32_t ts_eflags;ts_eflags228,8152
	uint32_t ts_eflags;Taskstate::ts_eflags228,8152
	uint32_t ts_eax;	// More saved state (registers)ts_eax229,8173
	uint32_t ts_eax;	// More saved state (registers)Taskstate::ts_eax229,8173
	uint32_t ts_ecx;ts_ecx230,8223
	uint32_t ts_ecx;Taskstate::ts_ecx230,8223
	uint32_t ts_edx;ts_edx231,8241
	uint32_t ts_edx;Taskstate::ts_edx231,8241
	uint32_t ts_ebx;ts_ebx232,8259
	uint32_t ts_ebx;Taskstate::ts_ebx232,8259
	uintptr_t ts_esp;ts_esp233,8277
	uintptr_t ts_esp;Taskstate::ts_esp233,8277
	uintptr_t ts_ebp;ts_ebp234,8296
	uintptr_t ts_ebp;Taskstate::ts_ebp234,8296
	uint32_t ts_esi;ts_esi235,8315
	uint32_t ts_esi;Taskstate::ts_esi235,8315
	uint32_t ts_edi;ts_edi236,8333
	uint32_t ts_edi;Taskstate::ts_edi236,8333
	uint16_t ts_es;		// Even more saved state (segment selectors)ts_es237,8351
	uint16_t ts_es;		// Even more saved state (segment selectors)Taskstate::ts_es237,8351
	uint16_t ts_padding4;ts_padding4238,8414
	uint16_t ts_padding4;Taskstate::ts_padding4238,8414
	uint16_t ts_cs;ts_cs239,8437
	uint16_t ts_cs;Taskstate::ts_cs239,8437
	uint16_t ts_padding5;ts_padding5240,8454
	uint16_t ts_padding5;Taskstate::ts_padding5240,8454
	uint16_t ts_ss;ts_ss241,8477
	uint16_t ts_ss;Taskstate::ts_ss241,8477
	uint16_t ts_padding6;ts_padding6242,8494
	uint16_t ts_padding6;Taskstate::ts_padding6242,8494
	uint16_t ts_ds;ts_ds243,8517
	uint16_t ts_ds;Taskstate::ts_ds243,8517
	uint16_t ts_padding7;ts_padding7244,8534
	uint16_t ts_padding7;Taskstate::ts_padding7244,8534
	uint16_t ts_fs;ts_fs245,8557
	uint16_t ts_fs;Taskstate::ts_fs245,8557
	uint16_t ts_padding8;ts_padding8246,8574
	uint16_t ts_padding8;Taskstate::ts_padding8246,8574
	uint16_t ts_gs;ts_gs247,8597
	uint16_t ts_gs;Taskstate::ts_gs247,8597
	uint16_t ts_padding9;ts_padding9248,8614
	uint16_t ts_padding9;Taskstate::ts_padding9248,8614
	uint16_t ts_ldt;ts_ldt249,8637
	uint16_t ts_ldt;Taskstate::ts_ldt249,8637
	uint16_t ts_padding10;ts_padding10250,8655
	uint16_t ts_padding10;Taskstate::ts_padding10250,8655
	uint16_t ts_t;		// Trap on task switchts_t251,8679
	uint16_t ts_t;		// Trap on task switchTaskstate::ts_t251,8679
	uint16_t ts_iomb;	// I/O map base addressts_iomb252,8719
	uint16_t ts_iomb;	// I/O map base addressTaskstate::ts_iomb252,8719
struct Gatedesc {Gatedesc256,8811
	unsigned gd_off_15_0 : 16;   // low 16 bits of offset in segmentgd_off_15_0257,8829
	unsigned gd_off_15_0 : 16;   // low 16 bits of offset in segmentGatedesc::gd_off_15_0257,8829
	unsigned gd_sel : 16;        // segment selectorgd_sel258,8895
	unsigned gd_sel : 16;        // segment selectorGatedesc::gd_sel258,8895
	unsigned gd_args : 5;        // # args, 0 for interrupt/trap gatesgd_args259,8945
	unsigned gd_args : 5;        // # args, 0 for interrupt/trap gatesGatedesc::gd_args259,8945
	unsigned gd_rsv1 : 3;        // reserved(should be zero I guess)gd_rsv1260,9013
	unsigned gd_rsv1 : 3;        // reserved(should be zero I guess)Gatedesc::gd_rsv1260,9013
	unsigned gd_type : 4;        // type(STS_{TG,IG32,TG32})gd_type261,9079
	unsigned gd_type : 4;        // type(STS_{TG,IG32,TG32})Gatedesc::gd_type261,9079
	unsigned gd_s : 1;           // must be 0 (system)gd_s262,9137
	unsigned gd_s : 1;           // must be 0 (system)Gatedesc::gd_s262,9137
	unsigned gd_dpl : 2;         // descriptor(meaning new) privilege levelgd_dpl263,9189
	unsigned gd_dpl : 2;         // descriptor(meaning new) privilege levelGatedesc::gd_dpl263,9189
	unsigned gd_p : 1;           // Presentgd_p264,9262
	unsigned gd_p : 1;           // PresentGatedesc::gd_p264,9262
	unsigned gd_off_31_16 : 16;  // high bits of offset in segmentgd_off_31_16265,9303
	unsigned gd_off_31_16 : 16;  // high bits of offset in segmentGatedesc::gd_off_31_16265,9303
#define SETGATE(SETGATE282,10286
#define SETCALLGATE(SETCALLGATE296,10699
struct Pseudodesc {Pseudodesc310,11137
	uint16_t pd_lim;		// Limitpd_lim311,11157
	uint16_t pd_lim;		// LimitPseudodesc::pd_lim311,11157
	uint32_t pd_base;		// Base addresspd_base312,11185
	uint32_t pd_base;		// Base addressPseudodesc::pd_base312,11185

inc/stdarg.h,189
#define	JOS_INC_STDARG_HJOS_INC_STDARG_H4,91
typedef __builtin_va_list va_list;va_list6,117
#define va_start(va_start8,153
#define va_arg(va_arg10,210
#define va_end(va_end12,263

inc/error.h,460
#define JOS_INC_ERROR_HJOS_INC_ERROR_H4,72
	E_UNSPECIFIED	= 1,	// Unspecified or unknown problemE_UNSPECIFIED8,172
	E_BAD_ENV	,	// Environment doesn't exist or otherwiseE_BAD_ENV9,226
	E_INVAL		,	// Invalid parameterE_INVAL11,323
	E_NO_MEM	,	// Request failed due to memory shortageE_NO_MEM12,356
	E_NO_FREE_ENV	,	// Attempt to create a new environment beyondE_NO_FREE_ENV13,409
	E_FAULT		,	// Memory faultE_FAULT15,499
	MAXERRORMAXERROR17,528

inc/kbdreg.h,2510
#define JOS_KBDREG_HJOS_KBDREG_H2,21
#define KEY_HOME	KEY_HOME5,63
#define KEY_END	KEY_END6,85
#define KEY_UP	KEY_UP7,107
#define KEY_DN	KEY_DN8,128
#define KEY_LF	KEY_LF9,149
#define KEY_RT	KEY_RT10,170
#define KEY_PGUP	KEY_PGUP11,191
#define KEY_PGDN	KEY_PGDN12,213
#define KEY_INS	KEY_INS13,235
#define KEY_DEL	KEY_DEL14,257
#define	KBSTATP	KBSTATP19,331
#define	 KBS_DIB	KBS_DIB20,389
#define	 KBS_IBF	KBS_IBF21,436
#define	 KBS_WARM	KBS_WARM22,485
#define	 KBS_OCMD	KBS_OCMD23,535
#define	 KBS_NOSEC	KBS_NOSEC24,594
#define	 KBS_TERR	KBS_TERR25,654
#define	 KBS_RERR	KBS_RERR26,720
#define	 KBS_PERR	KBS_PERR27,767
#define	KBCMDP	KBCMDP29,814
#define	 KBC_RAMREAD	KBC_RAMREAD30,864
#define	 KBC_RAMWRITE	KBC_RAMWRITE31,910
#define	 KBC_AUXDISABLE	KBC_AUXDISABLE32,956
#define	 KBC_AUXENABLE	KBC_AUXENABLE33,1014
#define	 KBC_AUXTEST	KBC_AUXTEST34,1070
#define	 KBC_KBDECHO	KBC_KBDECHO35,1122
#define	 KBC_AUXECHO	KBC_AUXECHO36,1176
#define	 KBC_AUXWRITE	KBC_AUXWRITE37,1231
#define	 KBC_SELFTEST	KBC_SELFTEST38,1288
#define	 KBC_KBDTEST	KBC_KBDTEST39,1337
#define	 KBC_KBDDISABLE	KBC_KBDDISABLE40,1388
#define	 KBC_KBDENABLE	KBC_KBDENABLE41,1445
#define	 KBC_PULSE0	KBC_PULSE042,1500
#define	 KBC_PULSE1	KBC_PULSE143,1550
#define	 KBC_PULSE2	KBC_PULSE244,1600
#define	 KBC_PULSE3	KBC_PULSE345,1650
#define	KBDATAP	KBDATAP47,1701
#define	KBOUTP	KBOUTP48,1746
#define	K_RDCMDBYTE	K_RDCMDBYTE50,1791
#define	K_LDCMDBYTE	K_LDCMDBYTE51,1816
#define	KC8_TRANS	KC8_TRANS53,1842
#define	KC8_MDISABLE	KC8_MDISABLE54,1897
#define	KC8_KDISABLE	KC8_KDISABLE55,1943
#define	KC8_IGNSEC	KC8_IGNSEC56,1992
#define	KC8_CPU	KC8_CPU57,2043
#define	KC8_MENABLE	KC8_MENABLE58,2102
#define	KC8_KENABLE	KC8_KENABLE59,2156
#define	CMDBYTE	CMDBYTE60,2213
#define	KBC_RESET	KBC_RESET63,2299
#define	KBC_RESEND	KBC_RESEND64,2347
#define	KBC_SETDEFAULT	KBC_SETDEFAULT65,2419
#define	KBC_DISABLE	KBC_DISABLE66,2494
#define	KBC_ENABLE	KBC_ENABLE67,2578
#define	KBC_TYPEMATIC	KBC_TYPEMATIC68,2628
#define	KBC_SETTABLE	KBC_SETTABLE69,2690
#define	KBC_MODEIND	KBC_MODEIND70,2753
#define	KBC_ECHO	KBC_ECHO71,2815
#define	KBR_EXTENDED	KBR_EXTENDED74,2903
#define	KBR_RESEND	KBR_RESEND75,2957
#define	KBR_ACK	KBR_ACK76,3011
#define	KBR_OVERRUN	KBR_OVERRUN77,3064
#define	KBR_FAILURE	KBR_FAILURE78,3103
#define	KBR_BREAK	KBR_BREAK79,3152
#define	KBR_RSTDONE	KBR_RSTDONE80,3221
#define	KBR_ECHO	KBR_ECHO81,3267

inc/types.h,1005
#define JOS_INC_TYPES_HJOS_INC_TYPES_H2,24
#define NULL NULL5,62
typedef _Bool bool;bool9,130
enum { false, true };false10,150
enum { false, true };true10,150
typedef __signed char int8_t;int8_t13,219
typedef unsigned char uint8_t;uint8_t14,249
typedef short int16_t;int16_t15,280
typedef unsigned short uint16_t;uint16_t16,303
typedef int int32_t;int32_t17,336
typedef unsigned int uint32_t;uint32_t18,357
typedef long long int64_t;int64_t19,388
typedef unsigned long long uint64_t;uint64_t20,415
typedef int32_t intptr_t;intptr_t26,673
typedef uint32_t uintptr_t;uintptr_t27,699
typedef uint32_t physaddr_t;physaddr_t28,727
typedef uint32_t ppn_t;ppn_t31,791
typedef uint32_t size_t;size_t34,859
typedef int32_t ssize_t;ssize_t37,975
typedef int32_t off_t;off_t40,1048
#define MIN(MIN43,1108
#define MAX(MAX49,1241
#define ROUNDDOWN(ROUNDDOWN58,1476
#define ROUNDUP(ROUNDUP64,1637
#define ARRAY_SIZE(ARRAY_SIZE70,1778
#define offsetof(offsetof73,1904

inc/assert.h,175
#define JOS_INC_ASSERT_HJOS_INC_ASSERT_H4,73
#define warn(warn11,247
#define panic(panic12,304
#define assert(assert14,364
#define static_assert(static_assert18,521

boot/sign.pl,0

boot/main.c,255
#define SECTSIZE	SECTSIZE32,1131
#define ELFHDR	ELFHDR33,1152
bootmain(void)bootmain39,1293
readseg(uint32_t pa, uint32_t count, uint32_t offset)readseg72,2092
waitdisk(void)waitdisk99,2821
readsect(void *dst, uint32_t offset)readsect107,2928

boot/boot.S,108
start:start13,454
protcseg:protcseg58,1983
spin:spin72,2497
gdt:gdt77,2598
gdtdesc:gdtdesc82,2757

obj/boot/boot.asm,729
Disassembly of section .text:Disassembly5,49
start:start11,174
protcseg:protcseg84,2893
spin:spin108,3821
voidvoid132,4396
static inline uint8_tstatic137,4463
voidvoid157,5076
static inline voidstatic169,5412
	offset = (offset / SECTSIZE) + 1;offset226,7583
	end_pa = pa + count;end_pa230,7719
	offset = (offset / SECTSIZE) + 1;offset234,7851
	end_pa = pa + count;end_pa236,7935
	offset = (offset / SECTSIZE) + 1;offset238,8006
	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);ph282,9731
	eph = ph + ELFHDR->e_phnum;eph284,9848
	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);ph286,9929
	eph = ph + ELFHDR->e_phnum;eph288,10052
static inline voidstatic309,10911

obj/kern/kernel.asm,369291
Disassembly of section .text:Disassembly5,47
f0100000 <_start+0xeffffff4>:f01000007,78
_start = RELOC(entry)_start9,123
entry:entry12,159
f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dhf010000014,200
f0100006:	00 00                	add    %al,(%eax)f010000615,256
f0100008:	fe 4f 52             	decb   0x52(%edi)f010000816,306
f010000b:	e4                   	.byte 0xe4f010000b17,356
f010000c <entry>:f010000c19,400
f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472f010000c20,418
f0100013:	34 12 f010001321,471
f0100015:	b8 00 80 11 00       	mov    $0x118000,%eaxf010001528,696
f010001a:	0f 22 d8             	mov    %eax,%cr3f010001a30,767
f010001d:	0f 20 c0             	mov    %cr0,%eaxf010001d33,852
f0100020:	0d 01 00 01 80       	or     $0x80010001,%eaxf010002035,936
f0100025:	0f 22 c0             	mov    %eax,%cr0f010002537,1009
f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eaxf010002843,1219
f010002d:	ff e0                	jmp    *%eaxf010002d45,1286
f010002f <relocated>:f010002f47,1332
relocated:relocated48,1354
f010002f:	bd 00 00 00 00       	mov    $0x0,%ebpf010002f54,1542
f0100034:	bc 00 60 11 f0       	mov    $0xf0116000,%espf010003458,1644
f0100039:	e8 02 00 00 00       	call   f0100040 <i386_init>f010003962,1734
f010003e <spin>:f010003e64,1795
spin:	jmp	spinspin67,1869
f010003e:	eb fe                	jmp    f010003e <spin>f010003e68,1884
f0100040 <i386_init>:f010004070,1940
voidvoid74,1989
f0100040:	55                   	push   %ebpf010004077,2012
f0100041:	89 e5                	mov    %esp,%ebpf010004178,2056
f0100043:	53                   	push   %ebxf010004379,2105
f0100044:	83 ec 08             	sub    $0x8,%espf010004480,2149
f0100047:	e8 03 01 00 00       	call   f010014f <__x86.get_pc_thunk.bx>f010004781,2198
f010004c:	81 c3 c0 72 01 00    	add    $0x172c0,%ebxf010004c82,2270
f0100052:	c7 c2 60 90 11 f0    	mov    $0xf0119060,%edxf010005289,2587
f0100058:	c7 c0 c0 96 11 f0    	mov    $0xf01196c0,%eaxf010005890,2643
f010005e:	29 d0                	sub    %edx,%eaxf010005e91,2699
f0100060:	50                   	push   %eaxf010006092,2748
f0100061:	6a 00                	push   $0x0f010006193,2792
f0100063:	52                   	push   %edxf010006394,2836
f0100064:	e8 4b 39 00 00       	call   f01039b4 <memset>f010006495,2880
f0100069:	e8 36 05 00 00       	call   f01005a4 <cons_init>f0100069100,3027
f010006e:	83 c4 08             	add    $0x8,%espf010006e103,3135
f0100071:	68 ac 1a 00 00       	push   $0x1aacf0100071104,3184
f0100076:	8d 83 f4 ca fe ff    	lea    -0x1350c(%ebx),%eaxf0100076105,3231
f010007c:	50                   	push   %eaxf010007c106,3290
f010007d:	e8 d6 2d 00 00       	call   f0102e58 <cprintf>f010007d107,3334
f0100082:	e8 a2 11 00 00       	call   f0101229 <mem_init>f0100082111,3459
f0100087:	83 c4 10             	add    $0x10,%espf0100087112,3518
f010008a:	83 ec 0c             	sub    $0xc,%espf010008a117,3631
f010008d:	6a 00                	push   $0x0f010008d118,3680
f010008f:	e8 8c 07 00 00       	call   f0100820 <monitor>f010008f119,3724
f0100094:	83 c4 10             	add    $0x10,%espf0100094120,3782
f0100097:	eb f1                	jmp    f010008a <i386_init+0x4a>f0100097121,3832
f0100099 <_panic>:f0100099123,3898
voidvoid127,4034
f0100099:	55                   	push   %ebpf0100099130,4097
f010009a:	89 e5                	mov    %esp,%ebpf010009a131,4141
f010009c:	57                   	push   %edif010009c132,4190
f010009d:	56                   	push   %esif010009d133,4234
f010009e:	53                   	push   %ebxf010009e134,4278
f010009f:	83 ec 0c             	sub    $0xc,%espf010009f135,4322
f01000a2:	e8 a8 00 00 00       	call   f010014f <__x86.get_pc_thunk.bx>f01000a2136,4371
f01000a7:	81 c3 65 72 01 00    	add    $0x17265,%ebxf01000a7137,4443
f01000ad:	8b 7d 10             	mov    0x10(%ebp),%edif01000ad138,4496
f01000b0:	c7 c0 c4 96 11 f0    	mov    $0xf01196c4,%eaxf01000b0142,4580
f01000b6:	83 38 00             	cmpl   $0x0,(%eax)f01000b6143,4636
f01000b9:	74 0f                	je     f01000ca <_panic+0x31>f01000b9144,4687
dead:dead147,4763
f01000bb:	83 ec 0c             	sub    $0xc,%espf01000bb151,4834
f01000be:	6a 00                	push   $0x0f01000be152,4883
f01000c0:	e8 5b 07 00 00       	call   f0100820 <monitor>f01000c0153,4927
f01000c5:	83 c4 10             	add    $0x10,%espf01000c5154,4985
f01000c8:	eb f1                	jmp    f01000bb <_panic+0x22>f01000c8155,5035
	panicstr = fmt;panicstr156,5097
f01000ca:	89 38                	mov    %edi,(%eax)f01000ca157,5114
f01000cc:	fa                   	cli    f01000cc159,5192
f01000cd:	fc                   	cld    f01000cd160,5232
f01000ce:	8d 75 14             	lea    0x14(%ebp),%esif01000ce162,5292
f01000d1:	83 ec 04             	sub    $0x4,%espf01000d1164,5396
f01000d4:	ff 75 0c             	pushl  0xc(%ebp)f01000d4165,5445
f01000d7:	ff 75 08             	pushl  0x8(%ebp)f01000d7166,5494
f01000da:	8d 83 0f cb fe ff    	lea    -0x134f1(%ebx),%eaxf01000da167,5543
f01000e0:	50                   	push   %eaxf01000e0168,5602
f01000e1:	e8 72 2d 00 00       	call   f0102e58 <cprintf>f01000e1169,5646
f01000e6:	83 c4 08             	add    $0x8,%espf01000e6171,5724
f01000e9:	56                   	push   %esif01000e9172,5773
f01000ea:	57                   	push   %edif01000ea173,5817
f01000eb:	e8 31 2d 00 00       	call   f0102e21 <vcprintf>f01000eb174,5861
f01000f0:	8d 83 25 da fe ff    	lea    -0x125db(%ebx),%eaxf01000f0176,5936
f01000f6:	89 04 24             	mov    %eax,(%esp)f01000f6177,5995
f01000f9:	e8 5a 2d 00 00       	call   f0102e58 <cprintf>f01000f9178,6046
f01000fe:	83 c4 10             	add    $0x10,%espf01000fe179,6104
f0100101:	eb b8                	jmp    f01000bb <_panic+0x22>f0100101180,6154
f0100103 <_warn>:f0100103182,6217
voidvoid186,6266
f0100103:	55                   	push   %ebpf0100103189,6328
f0100104:	89 e5                	mov    %esp,%ebpf0100104190,6372
f0100106:	56                   	push   %esif0100106191,6421
f0100107:	53                   	push   %ebxf0100107192,6465
f0100108:	e8 42 00 00 00       	call   f010014f <__x86.get_pc_thunk.bx>f0100108193,6509
f010010d:	81 c3 ff 71 01 00    	add    $0x171ff,%ebxf010010d194,6581
f0100113:	8d 75 14             	lea    0x14(%ebp),%esif0100113198,6668
f0100116:	83 ec 04             	sub    $0x4,%espf0100116200,6774
f0100119:	ff 75 0c             	pushl  0xc(%ebp)f0100119201,6823
f010011c:	ff 75 08             	pushl  0x8(%ebp)f010011c202,6872
f010011f:	8d 83 27 cb fe ff    	lea    -0x134d9(%ebx),%eaxf010011f203,6921
f0100125:	50                   	push   %eaxf0100125204,6980
f0100126:	e8 2d 2d 00 00       	call   f0102e58 <cprintf>f0100126205,7024
f010012b:	83 c4 08             	add    $0x8,%espf010012b207,7102
f010012e:	56                   	push   %esif010012e208,7151
f010012f:	ff 75 10             	pushl  0x10(%ebp)f010012f209,7195
f0100132:	e8 ea 2c 00 00       	call   f0102e21 <vcprintf>f0100132210,7245
f0100137:	8d 83 25 da fe ff    	lea    -0x125db(%ebx),%eaxf0100137212,7320
f010013d:	89 04 24             	mov    %eax,(%esp)f010013d213,7379
f0100140:	e8 13 2d 00 00       	call   f0102e58 <cprintf>f0100140214,7430
f0100145:	83 c4 10             	add    $0x10,%espf0100145217,7503
f0100148:	8d 65 f8             	lea    -0x8(%ebp),%espf0100148218,7553
f010014b:	5b                   	pop    %ebxf010014b219,7608
f010014c:	5e                   	pop    %esif010014c220,7652
f010014d:	5d                   	pop    %ebpf010014d221,7696
f010014e:	c3                   	ret    f010014e222,7740
f010014f <__x86.get_pc_thunk.bx>:f010014f224,7781
f010014f:	8b 1c 24             	mov    (%esp),%ebxf010014f225,7815
f0100152:	c3                   	ret    f0100152226,7866
f0100153 <serial_proc_data>:f0100153228,7907
static bool serial_exists;static230,7937
static intstatic232,7965
f0100153:	55                   	push   %ebpf0100153235,8001
f0100154:	89 e5                	mov    %esp,%ebpf0100154236,8045
static inline uint8_tstatic238,8095
f0100156:	ba fd 03 00 00       	mov    $0x3fd,%edxf0100156243,8204
f010015b:	ec                   	in     (%dx),%alf010015b244,8255
f010015c:	a8 01                	test   $0x1,%alf010015c246,8346
f010015e:	74 0b                	je     f010016b <serial_proc_data+0x18>f010015e247,8394
f0100160:	ba f8 03 00 00       	mov    $0x3f8,%edxf0100160248,8466
f0100165:	ec                   	in     (%dx),%alf0100165249,8517
f0100166:	0f b6 c0             	movzbl %al,%eaxf0100166252,8605
f0100169:	5d                   	pop    %ebpf0100169254,8655
f010016a:	c3                   	ret    f010016a255,8699
f010016b:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf010016b257,8752
f0100170:	eb f7                	jmp    f0100169 <serial_proc_data+0x16>f0100170258,8808
f0100172 <cons_intr>:f0100172260,8881
static voidstatic264,9011
f0100172:	55                   	push   %ebpf0100172267,9054
f0100173:	89 e5                	mov    %esp,%ebpf0100173268,9098
f0100175:	56                   	push   %esif0100175269,9147
f0100176:	53                   	push   %ebxf0100176270,9191
f0100177:	e8 d3 ff ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0100177271,9235
f010017c:	81 c3 90 71 01 00    	add    $0x17190,%ebxf010017c272,9307
f0100182:	89 c6                	mov    %eax,%esif0100182273,9360
f0100184:	ff d6                	call   *%esif0100184277,9451
f0100186:	83 f8 ff             	cmp    $0xffffffff,%eaxf0100186278,9496
f0100189:	74 2e                	je     f01001b9 <cons_intr+0x47>f0100189279,9552
f010018b:	85 c0                	test   %eax,%eaxf010018b281,9631
f010018d:	74 f5                	je     f0100184 <cons_intr+0x12>f010018d282,9680
f010018f:	8b 8b 78 1f 00 00    	mov    0x1f78(%ebx),%ecxf010018f285,9787
f0100195:	8d 51 01             	lea    0x1(%ecx),%edxf0100195286,9844
f0100198:	89 93 78 1f 00 00    	mov    %edx,0x1f78(%ebx)f0100198287,9898
f010019e:	88 84 0b 74 1d 00 00 	mov    %al,0x1d74(%ebx,%ecx,1)f010019e288,9955
f01001a5:	81 fa 00 02 00 00    	cmp    $0x200,%edxf01001a5290,10050
f01001ab:	75 d7                	jne    f0100184 <cons_intr+0x12>f01001ab291,10101
f01001ad:	c7 83 78 1f 00 00 00 	movl   $0x0,0x1f78(%ebx)f01001ad293,10184
f01001b4:	00 00 00 f01001b4294,10241
f01001b7:	eb cb                	jmp    f0100184 <cons_intr+0x12>f01001b7295,10261
f01001b9:	5b                   	pop    %ebxf01001b9298,10331
f01001ba:	5e                   	pop    %esif01001ba299,10375
f01001bb:	5d                   	pop    %ebpf01001bb300,10419
f01001bc:	c3                   	ret    f01001bc301,10463
f01001bd <kbd_proc_data>:f01001bd303,10504
f01001bd:	55                   	push   %ebpf01001bd305,10532
f01001be:	89 e5                	mov    %esp,%ebpf01001be306,10576
f01001c0:	56                   	push   %esif01001c0307,10625
f01001c1:	53                   	push   %ebxf01001c1308,10669
f01001c2:	e8 88 ff ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01001c2309,10713
f01001c7:	81 c3 45 71 01 00    	add    $0x17145,%ebxf01001c7310,10785
f01001cd:	ba 64 00 00 00       	mov    $0x64,%edxf01001cd311,10838
f01001d2:	ec                   	in     (%dx),%alf01001d2312,10888
f01001d3:	a8 01                	test   $0x1,%alf01001d3314,10965
f01001d5:	0f 84 06 01 00 00    	je     f01002e1 <kbd_proc_data+0x124>f01001d5315,11013
f01001db:	a8 20                	test   $0x20,%alf01001db317,11105
f01001dd:	0f 85 05 01 00 00    	jne    f01002e8 <kbd_proc_data+0x12b>f01001dd318,11154
f01001e3:	ba 60 00 00 00       	mov    $0x60,%edxf01001e3319,11224
f01001e8:	ec                   	in     (%dx),%alf01001e8320,11274
f01001e9:	89 c2                	mov    %eax,%edxf01001e9321,11323
f01001eb:	3c e0                	cmp    $0xe0,%alf01001eb323,11393
f01001ed:	0f 84 93 00 00 00    	je     f0100286 <kbd_proc_data+0xc9>f01001ed324,11442
f01001f3:	84 c0                	test   %al,%alf01001f3326,11538
f01001f5:	0f 88 a0 00 00 00    	js     f010029b <kbd_proc_data+0xde>f01001f5327,11585
f01001fb:	8b 8b 54 1d 00 00    	mov    0x1d54(%ebx),%ecxf01001fb329,11683
f0100201:	f6 c1 40             	test   $0x40,%clf0100201330,11740
f0100204:	74 0e                	je     f0100214 <kbd_proc_data+0x57>f0100204331,11789
f0100206:	83 c8 80             	or     $0xffffff80,%eaxf0100206333,11874
f0100209:	89 c2                	mov    %eax,%edxf0100209334,11930
f010020b:	83 e1 bf             	and    $0xffffffbf,%ecxf010020b336,11998
f010020e:	89 8b 54 1d 00 00    	mov    %ecx,0x1d54(%ebx)f010020e337,12054
f0100214:	0f b6 d2             	movzbl %dl,%edxf0100214339,12138
f0100217:	0f b6 84 13 74 cc fe 	movzbl -0x1338c(%ebx,%edx,1),%eaxf0100217340,12186
f010021e:	ff f010021e341,12252
f010021f:	0b 83 54 1d 00 00    	or     0x1d54(%ebx),%eaxf010021f342,12266
f0100225:	0f b6 8c 13 74 cb fe 	movzbl -0x1348c(%ebx,%edx,1),%ecxf0100225344,12351
f010022c:	ff f010022c345,12417
f010022d:	31 c8                	xor    %ecx,%eaxf010022d346,12431
f010022f:	89 83 54 1d 00 00    	mov    %eax,0x1d54(%ebx)f010022f347,12480
	c = charcode[shift & (CTL | SHIFT)][data];c348,12537
f0100235:	89 c1                	mov    %eax,%ecxf0100235349,12581
f0100237:	83 e1 03             	and    $0x3,%ecxf0100237350,12630
f010023a:	8b 8c 8b f4 1c 00 00 	mov    0x1cf4(%ebx,%ecx,4),%ecxf010023a351,12679
f0100241:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edxf0100241352,12743
f0100245:	0f b6 f2             	movzbl %dl,%esif0100245353,12801
f0100248:	a8 08                	test   $0x8,%alf0100248355,12874
f010024a:	74 0d                	je     f0100259 <kbd_proc_data+0x9c>f010024a356,12922
f010024c:	89 f2                	mov    %esi,%edxf010024c358,13019
f010024e:	8d 4e 9f             	lea    -0x61(%esi),%ecxf010024e359,13068
f0100251:	83 f9 19             	cmp    $0x19,%ecxf0100251360,13124
f0100254:	77 7a                	ja     f01002d0 <kbd_proc_data+0x113>f0100254361,13174
f0100256:	83 ee 20             	sub    $0x20,%esif0100256363,13263
f0100259:	f7 d0                	not    %eaxf0100259365,13361
f010025b:	a8 06                	test   $0x6,%alf010025b366,13405
f010025d:	75 33                	jne    f0100292 <kbd_proc_data+0xd5>f010025d367,13453
f010025f:	81 fe e9 00 00 00    	cmp    $0xe9,%esif010025f368,13522
f0100265:	75 2b                	jne    f0100292 <kbd_proc_data+0xd5>f0100265369,13572
f0100267:	83 ec 0c             	sub    $0xc,%espf0100267371,13668
f010026a:	8d 83 41 cb fe ff    	lea    -0x134bf(%ebx),%eaxf010026a372,13717
f0100270:	50                   	push   %eaxf0100270373,13776
f0100271:	e8 e2 2b 00 00       	call   f0102e58 <cprintf>f0100271374,13820
static inline voidstatic377,13881
f0100276:	b8 03 00 00 00       	mov    $0x3,%eaxf0100276381,13988
f010027b:	ba 92 00 00 00       	mov    $0x92,%edxf010027b382,14037
f0100280:	ee                   	out    %al,(%dx)f0100280383,14087
f0100281:	83 c4 10             	add    $0x10,%espf0100281384,14136
f0100284:	eb 0c                	jmp    f0100292 <kbd_proc_data+0xd5>f0100284385,14186
f0100286:	83 8b 54 1d 00 00 40 	orl    $0x40,0x1d54(%ebx)f0100286387,14273
f010028d:	be 00 00 00 00       	mov    $0x0,%esif010028d389,14343
f0100292:	89 f0                	mov    %esi,%eaxf0100292391,14394
f0100294:	8d 65 f8             	lea    -0x8(%ebp),%espf0100294392,14443
f0100297:	5b                   	pop    %ebxf0100297393,14498
f0100298:	5e                   	pop    %esif0100298394,14542
f0100299:	5d                   	pop    %ebpf0100299395,14586
f010029a:	c3                   	ret    f010029a396,14630
		data = (shift & E0ESC ? data : data & 0x7F);data397,14670
f010029b:	8b 8b 54 1d 00 00    	mov    0x1d54(%ebx),%ecxf010029b398,14717
f01002a1:	89 ce                	mov    %ecx,%esif01002a1399,14774
f01002a3:	83 e6 40             	and    $0x40,%esif01002a3400,14823
f01002a6:	83 e0 7f             	and    $0x7f,%eaxf01002a6401,14873
f01002a9:	85 f6                	test   %esi,%esif01002a9402,14923
f01002ab:	0f 44 d0             	cmove  %eax,%edxf01002ab403,14972
f01002ae:	0f b6 d2             	movzbl %dl,%edxf01002ae405,15060
f01002b1:	0f b6 84 13 74 cc fe 	movzbl -0x1338c(%ebx,%edx,1),%eaxf01002b1406,15108
f01002b8:	ff f01002b8407,15174
f01002b9:	83 c8 40             	or     $0x40,%eaxf01002b9408,15188
f01002bc:	0f b6 c0             	movzbl %al,%eaxf01002bc409,15238
f01002bf:	f7 d0                	not    %eaxf01002bf410,15286
f01002c1:	21 c8                	and    %ecx,%eaxf01002c1411,15330
f01002c3:	89 83 54 1d 00 00    	mov    %eax,0x1d54(%ebx)f01002c3412,15379
f01002c9:	be 00 00 00 00       	mov    $0x0,%esif01002c9414,15448
f01002ce:	eb c2                	jmp    f0100292 <kbd_proc_data+0xd5>f01002ce415,15497
f01002d0:	83 ea 41             	sub    $0x41,%edxf01002d0417,15599
f01002d3:	8d 4e 20             	lea    0x20(%esi),%ecxf01002d3419,15668
f01002d6:	83 fa 1a             	cmp    $0x1a,%edxf01002d6420,15723
f01002d9:	0f 42 f1             	cmovb  %ecx,%esif01002d9421,15773
f01002dc:	e9 78 ff ff ff       	jmp    f0100259 <kbd_proc_data+0x9c>f01002dc422,15822
f01002e1:	be ff ff ff ff       	mov    $0xffffffff,%esif01002e1424,15904
f01002e6:	eb aa                	jmp    f0100292 <kbd_proc_data+0xd5>f01002e6425,15960
f01002e8:	be ff ff ff ff       	mov    $0xffffffff,%esif01002e8427,16042
f01002ed:	eb a3                	jmp    f0100292 <kbd_proc_data+0xd5>f01002ed428,16098
f01002ef <cons_putc>:f01002ef430,16168
static voidstatic434,16230
f01002ef:	55                   	push   %ebpf01002ef437,16261
f01002f0:	89 e5                	mov    %esp,%ebpf01002f0438,16305
f01002f2:	57                   	push   %edif01002f2439,16354
f01002f3:	56                   	push   %esif01002f3440,16398
f01002f4:	53                   	push   %ebxf01002f4441,16442
f01002f5:	83 ec 1c             	sub    $0x1c,%espf01002f5442,16486
f01002f8:	e8 52 fe ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01002f8443,16536
f01002fd:	81 c3 0f 70 01 00    	add    $0x1700f,%ebxf01002fd444,16608
f0100303:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0100303445,16661
f0100306:	be 00 00 00 00       	mov    $0x0,%esif0100306447,16730
f010030b:	bf fd 03 00 00       	mov    $0x3fd,%edif010030b449,16835
f0100310:	b9 84 00 00 00       	mov    $0x84,%ecxf0100310450,16886
f0100315:	eb 09                	jmp    f0100320 <cons_putc+0x31>f0100315451,16936
f0100317:	89 ca                	mov    %ecx,%edxf0100317452,17001
f0100319:	ec                   	in     (%dx),%alf0100319453,17050
f010031a:	ec                   	in     (%dx),%alf010031a454,17099
f010031b:	ec                   	in     (%dx),%alf010031b455,17148
f010031c:	ec                   	in     (%dx),%alf010031c456,17197
f010031d:	83 c6 01             	add    $0x1,%esif010031d458,17257
f0100320:	89 fa                	mov    %edi,%edxf0100320459,17306
f0100322:	ec                   	in     (%dx),%alf0100322460,17355
f0100323:	a8 20                	test   $0x20,%alf0100323462,17463
f0100325:	75 08                	jne    f010032f <cons_putc+0x40>f0100325463,17512
f0100327:	81 fe ff 31 00 00    	cmp    $0x31ff,%esif0100327464,17577
f010032d:	7e e8                	jle    f0100317 <cons_putc+0x28>f010032d465,17629
f010032f:	8b 7d e4             	mov    -0x1c(%ebp),%edif010032f467,17719
f0100332:	89 f8                	mov    %edi,%eaxf0100332468,17775
f0100334:	88 45 e3             	mov    %al,-0x1d(%ebp)f0100334469,17824
f0100337:	ba f8 03 00 00       	mov    $0x3f8,%edxf0100337471,17936
f010033c:	ee                   	out    %al,(%dx)f010033c472,17987
f010033d:	be 00 00 00 00       	mov    $0x0,%esif010033d474,18091
f0100342:	bf 79 03 00 00       	mov    $0x379,%edif0100342476,18196
f0100347:	b9 84 00 00 00       	mov    $0x84,%ecxf0100347477,18247
f010034c:	eb 09                	jmp    f0100357 <cons_putc+0x68>f010034c478,18297
f010034e:	89 ca                	mov    %ecx,%edxf010034e479,18362
f0100350:	ec                   	in     (%dx),%alf0100350480,18411
f0100351:	ec                   	in     (%dx),%alf0100351481,18460
f0100352:	ec                   	in     (%dx),%alf0100352482,18509
f0100353:	ec                   	in     (%dx),%alf0100353483,18558
f0100354:	83 c6 01             	add    $0x1,%esif0100354484,18607
f0100357:	89 fa                	mov    %edi,%edxf0100357485,18656
f0100359:	ec                   	in     (%dx),%alf0100359486,18705
f010035a:	81 fe ff 31 00 00    	cmp    $0x31ff,%esif010035a487,18754
f0100360:	7f 04                	jg     f0100366 <cons_putc+0x77>f0100360488,18806
f0100362:	84 c0                	test   %al,%alf0100362489,18871
f0100364:	79 e8                	jns    f010034e <cons_putc+0x5f>f0100364490,18918
f0100366:	ba 78 03 00 00       	mov    $0x378,%edxf0100366492,19040
f010036b:	0f b6 45 e3          	movzbl -0x1d(%ebp),%eaxf010036b493,19091
f010036f:	ee                   	out    %al,(%dx)f010036f494,19147
f0100370:	ba 7a 03 00 00       	mov    $0x37a,%edxf0100370495,19196
f0100375:	b8 0d 00 00 00       	mov    $0xd,%eaxf0100375496,19247
f010037a:	ee                   	out    %al,(%dx)f010037a497,19296
f010037b:	b8 08 00 00 00       	mov    $0x8,%eaxf010037b498,19345
f0100380:	ee                   	out    %al,(%dx)f0100380499,19394
f0100381:	8b 7d e4             	mov    -0x1c(%ebp),%edif0100381501,19462
f0100384:	89 fa                	mov    %edi,%edxf0100384502,19518
f0100386:	81 e2 00 ff ff ff    	and    $0xffffff00,%edxf0100386503,19567
f010038c:	89 f8                	mov    %edi,%eaxf010038c505,19638
f010038e:	80 cc 07             	or     $0x7,%ahf010038e506,19687
f0100391:	85 d2                	test   %edx,%edxf0100391507,19735
f0100393:	0f 45 c7             	cmovne %edi,%eaxf0100393508,19784
f0100396:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0100396509,19833
f0100399:	0f b6 c0             	movzbl %al,%eaxf0100399511,19910
f010039c:	83 f8 09             	cmp    $0x9,%eaxf010039c512,19958
f010039f:	0f 84 b9 00 00 00    	je     f010045e <cons_putc+0x16f>f010039f513,20007
f01003a5:	83 f8 09             	cmp    $0x9,%eaxf01003a5514,20073
f01003a8:	7e 74                	jle    f010041e <cons_putc+0x12f>f01003a8515,20122
f01003aa:	83 f8 0a             	cmp    $0xa,%eaxf01003aa516,20188
f01003ad:	0f 84 9e 00 00 00    	je     f0100451 <cons_putc+0x162>f01003ad517,20237
f01003b3:	83 f8 0d             	cmp    $0xd,%eaxf01003b3518,20303
f01003b6:	0f 85 d9 00 00 00    	jne    f0100495 <cons_putc+0x1a6>f01003b6519,20352
f01003bc:	0f b7 83 7c 1f 00 00 	movzwl 0x1f7c(%ebx),%eaxf01003bc521,20453
f01003c3:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eaxf01003c3522,20510
f01003c9:	c1 e8 16             	shr    $0x16,%eaxf01003c9523,20567
f01003cc:	8d 04 80             	lea    (%eax,%eax,4),%eaxf01003cc524,20617
f01003cf:	c1 e0 04             	shl    $0x4,%eaxf01003cf525,20675
f01003d2:	66 89 83 7c 1f 00 00 	mov    %ax,0x1f7c(%ebx)f01003d2526,20724
f01003d9:	66 81 bb 7c 1f 00 00 	cmpw   $0x7cf,0x1f7c(%ebx)f01003d9528,20808
f01003e0:	cf 07 f01003e0529,20867
f01003e2:	0f 87 d4 00 00 00    	ja     f01004bc <cons_putc+0x1cd>f01003e2530,20884
f01003e8:	8b 8b 84 1f 00 00    	mov    0x1f84(%ebx),%ecxf01003e8532,20972
f01003ee:	b8 0e 00 00 00       	mov    $0xe,%eaxf01003ee533,21029
f01003f3:	89 ca                	mov    %ecx,%edxf01003f3534,21078
f01003f5:	ee                   	out    %al,(%dx)f01003f5535,21127
f01003f6:	0f b7 9b 7c 1f 00 00 	movzwl 0x1f7c(%ebx),%ebxf01003f6537,21212
f01003fd:	8d 71 01             	lea    0x1(%ecx),%esif01003fd538,21269
f0100400:	89 d8                	mov    %ebx,%eaxf0100400539,21323
f0100402:	66 c1 e8 08          	shr    $0x8,%axf0100402540,21372
f0100406:	89 f2                	mov    %esi,%edxf0100406541,21420
f0100408:	ee                   	out    %al,(%dx)f0100408542,21469
f0100409:	b8 0f 00 00 00       	mov    $0xf,%eaxf0100409543,21518
f010040e:	89 ca                	mov    %ecx,%edxf010040e544,21567
f0100410:	ee                   	out    %al,(%dx)f0100410545,21616
f0100411:	89 d8                	mov    %ebx,%eaxf0100411546,21665
f0100413:	89 f2                	mov    %esi,%edxf0100413547,21714
f0100415:	ee                   	out    %al,(%dx)f0100415548,21763
f0100416:	8d 65 f4             	lea    -0xc(%ebp),%espf0100416553,21859
f0100419:	5b                   	pop    %ebxf0100419554,21914
f010041a:	5e                   	pop    %esif010041a555,21958
f010041b:	5f                   	pop    %edif010041b556,22002
f010041c:	5d                   	pop    %ebpf010041c557,22046
f010041d:	c3                   	ret    f010041d558,22090
f010041e:	83 f8 08             	cmp    $0x8,%eaxf010041e560,22151
f0100421:	75 72                	jne    f0100495 <cons_putc+0x1a6>f0100421561,22200
f0100423:	0f b7 83 7c 1f 00 00 	movzwl 0x1f7c(%ebx),%eaxf0100423563,22287
f010042a:	66 85 c0             	test   %ax,%axf010042a564,22344
f010042d:	74 b9                	je     f01003e8 <cons_putc+0xf9>f010042d565,22391
f010042f:	83 e8 01             	sub    $0x1,%eaxf010042f567,22470
f0100432:	66 89 83 7c 1f 00 00 	mov    %ax,0x1f7c(%ebx)f0100432568,22519
f0100439:	0f b7 c0             	movzwl %ax,%eaxf0100439570,22616
f010043c:	0f b7 55 e4          	movzwl -0x1c(%ebp),%edxf010043c571,22664
f0100440:	b2 00                	mov    $0x0,%dlf0100440572,22720
f0100442:	83 ca 20             	or     $0x20,%edxf0100442573,22768
f0100445:	8b 8b 80 1f 00 00    	mov    0x1f80(%ebx),%ecxf0100445574,22818
f010044b:	66 89 14 41          	mov    %dx,(%ecx,%eax,2)f010044b575,22875
f010044f:	eb 88                	jmp    f01003d9 <cons_putc+0xea>f010044f576,22932
f0100451:	66 83 83 7c 1f 00 00 	addw   $0x50,0x1f7c(%ebx)f0100451578,23020
f0100458:	50 f0100458579,23078
f0100459:	e9 5e ff ff ff       	jmp    f01003bc <cons_putc+0xcd>f0100459580,23092
f010045e:	b8 20 00 00 00       	mov    $0x20,%eaxf010045e582,23175
f0100463:	e8 87 fe ff ff       	call   f01002ef <cons_putc>f0100463583,23225
f0100468:	b8 20 00 00 00       	mov    $0x20,%eaxf0100468585,23303
f010046d:	e8 7d fe ff ff       	call   f01002ef <cons_putc>f010046d586,23353
f0100472:	b8 20 00 00 00       	mov    $0x20,%eaxf0100472588,23431
f0100477:	e8 73 fe ff ff       	call   f01002ef <cons_putc>f0100477589,23481
f010047c:	b8 20 00 00 00       	mov    $0x20,%eaxf010047c591,23559
f0100481:	e8 69 fe ff ff       	call   f01002ef <cons_putc>f0100481592,23609
f0100486:	b8 20 00 00 00       	mov    $0x20,%eaxf0100486594,23687
f010048b:	e8 5f fe ff ff       	call   f01002ef <cons_putc>f010048b595,23737
f0100490:	e9 44 ff ff ff       	jmp    f01003d9 <cons_putc+0xea>f0100490596,23797
f0100495:	0f b7 83 7c 1f 00 00 	movzwl 0x1f7c(%ebx),%eaxf0100495598,23915
f010049c:	8d 50 01             	lea    0x1(%eax),%edxf010049c599,23972
f010049f:	66 89 93 7c 1f 00 00 	mov    %dx,0x1f7c(%ebx)f010049f600,24026
f01004a6:	0f b7 c0             	movzwl %ax,%eaxf01004a6601,24082
f01004a9:	8b 93 80 1f 00 00    	mov    0x1f80(%ebx),%edxf01004a9602,24130
f01004af:	0f b7 7d e4          	movzwl -0x1c(%ebp),%edif01004af603,24187
f01004b3:	66 89 3c 42          	mov    %di,(%edx,%eax,2)f01004b3604,24243
f01004b7:	e9 1d ff ff ff       	jmp    f01003d9 <cons_putc+0xea>f01004b7605,24300
f01004bc:	8b 83 80 1f 00 00    	mov    0x1f80(%ebx),%eaxf01004bc607,24447
f01004c2:	83 ec 04             	sub    $0x4,%espf01004c2608,24504
f01004c5:	68 00 0f 00 00       	push   $0xf00f01004c5609,24553
f01004ca:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edxf01004ca610,24599
f01004d0:	52                   	push   %edxf01004d0611,24654
f01004d1:	50                   	push   %eaxf01004d1612,24698
f01004d2:	e8 2a 35 00 00       	call   f0103a01 <memmove>f01004d2613,24742
f01004d7:	8b 93 80 1f 00 00    	mov    0x1f80(%ebx),%edxf01004d7615,24830
f01004dd:	8d 82 00 0f 00 00    	lea    0xf00(%edx),%eaxf01004dd616,24887
f01004e3:	81 c2 a0 0f 00 00    	add    $0xfa0,%edxf01004e3617,24943
f01004e9:	83 c4 10             	add    $0x10,%espf01004e9618,24994
f01004ec:	66 c7 00 20 07       	movw   $0x720,(%eax)f01004ec619,25044
f01004f1:	83 c0 02             	add    $0x2,%eaxf01004f1620,25097
f01004f4:	39 d0                	cmp    %edx,%eaxf01004f4622,25197
f01004f6:	75 f4                	jne    f01004ec <cons_putc+0x1fd>f01004f6623,25246
f01004f8:	66 83 ab 7c 1f 00 00 	subw   $0x50,0x1f7c(%ebx)f01004f8625,25335
f01004ff:	50 f01004ff626,25393
f0100500:	e9 e3 fe ff ff       	jmp    f01003e8 <cons_putc+0xf9>f0100500627,25407
f0100505 <serial_intr>:f0100505629,25473
f0100505:	e8 e7 01 00 00       	call   f01006f1 <__x86.get_pc_thunk.ax>f0100505631,25499
f010050a:	05 02 6e 01 00       	add    $0x16e02,%eaxf010050a632,25571
f010050f:	80 b8 88 1f 00 00 00 	cmpb   $0x0,0x1f88(%eax)f010050f634,25644
f0100516:	75 02                	jne    f010051a <serial_intr+0x15>f0100516635,25701
f0100518:	f3 c3                	repz ret f0100518636,25768
f010051a:	55                   	push   %ebpf010051a638,25812
f010051b:	89 e5                	mov    %esp,%ebpf010051b639,25856
f010051d:	83 ec 08             	sub    $0x8,%espf010051d640,25905
f0100520:	8d 80 47 8e fe ff    	lea    -0x171b9(%eax),%eaxf0100520642,25985
f0100526:	e8 47 fc ff ff       	call   f0100172 <cons_intr>f0100526643,26044
f010052b:	c9                   	leave  f010052b645,26106
f010052c:	c3                   	ret    f010052c646,26146
f010052d <kbd_intr>:f010052d648,26187
f010052d:	55                   	push   %ebpf010052d650,26210
f010052e:	89 e5                	mov    %esp,%ebpf010052e651,26254
f0100530:	83 ec 08             	sub    $0x8,%espf0100530652,26303
f0100533:	e8 b9 01 00 00       	call   f01006f1 <__x86.get_pc_thunk.ax>f0100533653,26352
f0100538:	05 d4 6d 01 00       	add    $0x16dd4,%eaxf0100538654,26424
f010053d:	8d 80 b1 8e fe ff    	lea    -0x1714f(%eax),%eaxf010053d656,26504
f0100543:	e8 2a fc ff ff       	call   f0100172 <cons_intr>f0100543657,26563
f0100548:	c9                   	leave  f0100548659,26625
f0100549:	c3                   	ret    f0100549660,26665
f010054a <cons_getc>:f010054a662,26706
f010054a:	55                   	push   %ebpf010054a664,26730
f010054b:	89 e5                	mov    %esp,%ebpf010054b665,26774
f010054d:	53                   	push   %ebxf010054d666,26823
f010054e:	83 ec 04             	sub    $0x4,%espf010054e667,26867
f0100551:	e8 f9 fb ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0100551668,26916
f0100556:	81 c3 b6 6d 01 00    	add    $0x16db6,%ebxf0100556669,26988
f010055c:	e8 a4 ff ff ff       	call   f0100505 <serial_intr>f010055c671,27057
f0100561:	e8 c7 ff ff ff       	call   f010052d <kbd_intr>f0100561673,27132
f0100566:	8b 93 74 1f 00 00    	mov    0x1f74(%ebx),%edxf0100566675,27222
f010056c:	b8 00 00 00 00       	mov    $0x0,%eaxf010056c677,27290
f0100571:	3b 93 78 1f 00 00    	cmp    0x1f78(%ebx),%edxf0100571679,27370
f0100577:	74 19                	je     f0100592 <cons_getc+0x48>f0100577680,27427
		c = cons.buf[cons.rpos++];c681,27492
f0100579:	8d 4a 01             	lea    0x1(%edx),%ecxf0100579682,27521
f010057c:	89 8b 74 1f 00 00    	mov    %ecx,0x1f74(%ebx)f010057c683,27575
f0100582:	0f b6 84 13 74 1d 00 	movzbl 0x1d74(%ebx,%edx,1),%eaxf0100582684,27632
f0100589:	00 f0100589685,27696
f010058a:	81 f9 00 02 00 00    	cmp    $0x200,%ecxf010058a687,27742
f0100590:	74 06                	je     f0100598 <cons_getc+0x4e>f0100590688,27793
f0100592:	83 c4 04             	add    $0x4,%espf0100592690,27860
f0100595:	5b                   	pop    %ebxf0100595691,27909
f0100596:	5d                   	pop    %ebpf0100596692,27953
f0100597:	c3                   	ret    f0100597693,27997
f0100598:	c7 83 74 1f 00 00 00 	movl   $0x0,0x1f74(%ebx)f0100598695,28055
f010059f:	00 00 00 f010059f696,28112
f01005a2:	eb ee                	jmp    f0100592 <cons_getc+0x48>f01005a2697,28132
f01005a4 <cons_init>:f01005a4699,28198
voidvoid702,28255
f01005a4:	55                   	push   %ebpf01005a4705,28278
f01005a5:	89 e5                	mov    %esp,%ebpf01005a5706,28322
f01005a7:	57                   	push   %edif01005a7707,28371
f01005a8:	56                   	push   %esif01005a8708,28415
f01005a9:	53                   	push   %ebxf01005a9709,28459
f01005aa:	83 ec 1c             	sub    $0x1c,%espf01005aa710,28503
f01005ad:	e8 9d fb ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01005ad711,28553
f01005b2:	81 c3 5a 6d 01 00    	add    $0x16d5a,%ebxf01005b2712,28625
	was = *cp;was713,28678
f01005b8:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edxf01005b8714,28690
f01005bf:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000f01005bf716,28771
f01005c6:	5a a5 f01005c6717,28829
f01005c8:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eaxf01005c8719,28868
f01005cf:	66 3d 5a a5          	cmp    $0xa55a,%axf01005cf720,28923
f01005d3:	0f 84 bc 00 00 00    	je     f0100695 <cons_init+0xf1>f01005d3721,28974
		addr_6845 = MONO_BASE;addr_6845722,29039
f01005d9:	c7 83 84 1f 00 00 b4 	movl   $0x3b4,0x1f84(%ebx)f01005d9723,29064
f01005e0:	03 00 00 f01005e0724,29123
		cp = (uint16_t*) (KERNBASE + MONO_BUF);cp725,29143
f01005e3:	c7 45 e4 00 00 0b f0 	movl   $0xf00b0000,-0x1c(%ebp)f01005e3726,29185
f01005ea:	8b bb 84 1f 00 00    	mov    0x1f84(%ebx),%edif01005ea728,29270
f01005f0:	b8 0e 00 00 00       	mov    $0xe,%eaxf01005f0729,29327
f01005f5:	89 fa                	mov    %edi,%edxf01005f5730,29376
f01005f7:	ee                   	out    %al,(%dx)f01005f7731,29425
	pos = inb(addr_6845 + 1) << 8;pos732,29474
f01005f8:	8d 4f 01             	lea    0x1(%edi),%ecxf01005f8733,29506
f01005fb:	89 ca                	mov    %ecx,%edxf01005fb735,29616
f01005fd:	ec                   	in     (%dx),%alf01005fd736,29665
f01005fe:	0f b6 f0             	movzbl %al,%esif01005fe737,29714
f0100601:	c1 e6 08             	shl    $0x8,%esif0100601738,29762
f0100604:	b8 0f 00 00 00       	mov    $0xf,%eaxf0100604740,29868
f0100609:	89 fa                	mov    %edi,%edxf0100609741,29917
f010060b:	ee                   	out    %al,(%dx)f010060b742,29966
f010060c:	89 ca                	mov    %ecx,%edxf010060c744,30071
f010060e:	ec                   	in     (%dx),%alf010060e745,30120
	crt_buf = (uint16_t*) cp;crt_buf746,30169
f010060f:	8b 7d e4             	mov    -0x1c(%ebp),%edif010060f747,30196
f0100612:	89 bb 80 1f 00 00    	mov    %edi,0x1f80(%ebx)f0100612748,30252
f0100618:	0f b6 c0             	movzbl %al,%eaxf0100618750,30337
f010061b:	09 c6                	or     %eax,%esif010061b751,30385
	crt_pos = pos;crt_pos752,30434
f010061d:	66 89 b3 7c 1f 00 00 	mov    %si,0x1f7c(%ebx)f010061d753,30450
f0100624:	b9 00 00 00 00       	mov    $0x0,%ecxf0100624755,30563
f0100629:	89 c8                	mov    %ecx,%eaxf0100629756,30612
f010062b:	ba fa 03 00 00       	mov    $0x3fa,%edxf010062b757,30661
f0100630:	ee                   	out    %al,(%dx)f0100630758,30712
f0100631:	bf fb 03 00 00       	mov    $0x3fb,%edif0100631759,30761
f0100636:	b8 80 ff ff ff       	mov    $0xffffff80,%eaxf0100636760,30812
f010063b:	89 fa                	mov    %edi,%edxf010063b761,30868
f010063d:	ee                   	out    %al,(%dx)f010063d762,30917
f010063e:	b8 0c 00 00 00       	mov    $0xc,%eaxf010063e763,30966
f0100643:	ba f8 03 00 00       	mov    $0x3f8,%edxf0100643764,31015
f0100648:	ee                   	out    %al,(%dx)f0100648765,31066
f0100649:	be f9 03 00 00       	mov    $0x3f9,%esif0100649766,31115
f010064e:	89 c8                	mov    %ecx,%eaxf010064e767,31166
f0100650:	89 f2                	mov    %esi,%edxf0100650768,31215
f0100652:	ee                   	out    %al,(%dx)f0100652769,31264
f0100653:	b8 03 00 00 00       	mov    $0x3,%eaxf0100653770,31313
f0100658:	89 fa                	mov    %edi,%edxf0100658771,31362
f010065a:	ee                   	out    %al,(%dx)f010065a772,31411
f010065b:	ba fc 03 00 00       	mov    $0x3fc,%edxf010065b773,31460
f0100660:	89 c8                	mov    %ecx,%eaxf0100660774,31511
f0100662:	ee                   	out    %al,(%dx)f0100662775,31560
f0100663:	b8 01 00 00 00       	mov    $0x1,%eaxf0100663776,31609
f0100668:	89 f2                	mov    %esi,%edxf0100668777,31658
f010066a:	ee                   	out    %al,(%dx)f010066a778,31707
f010066b:	ba fd 03 00 00       	mov    $0x3fd,%edxf010066b780,31812
f0100670:	ec                   	in     (%dx),%alf0100670781,31863
f0100671:	89 c1                	mov    %eax,%ecxf0100671782,31912
	serial_exists = (inb(COM1+COM_LSR) != 0xFF);serial_exists783,31961
f0100673:	3c ff                	cmp    $0xff,%alf0100673784,32007
f0100675:	0f 95 83 88 1f 00 00 	setne  0x1f88(%ebx)f0100675785,32056
f010067c:	ba fa 03 00 00       	mov    $0x3fa,%edxf010067c786,32108
f0100681:	ec                   	in     (%dx),%alf0100681787,32159
f0100682:	ba f8 03 00 00       	mov    $0x3f8,%edxf0100682788,32208
f0100687:	ec                   	in     (%dx),%alf0100687789,32259
f0100688:	80 f9 ff             	cmp    $0xff,%clf0100688795,32372
f010068b:	74 25                	je     f01006b2 <cons_init+0x10e>f010068b796,32421
f010068d:	8d 65 f4             	lea    -0xc(%ebp),%espf010068d799,32533
f0100690:	5b                   	pop    %ebxf0100690800,32588
f0100691:	5e                   	pop    %esif0100691801,32632
f0100692:	5f                   	pop    %edif0100692802,32676
f0100693:	5d                   	pop    %ebpf0100693803,32720
f0100694:	c3                   	ret    f0100694804,32764
f0100695:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000f0100695806,32817
		addr_6845 = CGA_BASE;addr_6845807,32871
f010069c:	c7 83 84 1f 00 00 d4 	movl   $0x3d4,0x1f84(%ebx)f010069c808,32895
f01006a3:	03 00 00 f01006a3809,32954
	cp = (uint16_t*) (KERNBASE + CGA_BUF);cp810,32974
f01006a6:	c7 45 e4 00 80 0b f0 	movl   $0xf00b8000,-0x1c(%ebp)f01006a6811,33014
f01006ad:	e9 38 ff ff ff       	jmp    f01005ea <cons_init+0x46>f01006ad812,33077
f01006b2:	83 ec 0c             	sub    $0xc,%espf01006b2814,33186
f01006b5:	8d 83 4d cb fe ff    	lea    -0x134b3(%ebx),%eaxf01006b5815,33235
f01006bb:	50                   	push   %eaxf01006bb816,33294
f01006bc:	e8 97 27 00 00       	call   f0102e58 <cprintf>f01006bc817,33338
f01006c1:	83 c4 10             	add    $0x10,%espf01006c1818,33396
f01006c4:	eb c7                	jmp    f010068d <cons_init+0xe9>f01006c4820,33448
f01006c6 <cputchar>:f01006c6822,33514
voidvoid826,33597
f01006c6:	55                   	push   %ebpf01006c6829,33620
f01006c7:	89 e5                	mov    %esp,%ebpf01006c7830,33664
f01006c9:	83 ec 08             	sub    $0x8,%espf01006c9831,33713
f01006cc:	8b 45 08             	mov    0x8(%ebp),%eaxf01006cc833,33777
f01006cf:	e8 1b fc ff ff       	call   f01002ef <cons_putc>f01006cf834,33831
f01006d4:	c9                   	leave  f01006d4836,33893
f01006d5:	c3                   	ret    f01006d5837,33933
f01006d6 <getchar>:f01006d6839,33974
intint841,33995
f01006d6:	55                   	push   %ebpf01006d6844,34015
f01006d7:	89 e5                	mov    %esp,%ebpf01006d7845,34059
f01006d9:	83 ec 08             	sub    $0x8,%espf01006d9846,34108
f01006dc:	e8 69 fe ff ff       	call   f010054a <cons_getc>f01006dc850,34198
f01006e1:	85 c0                	test   %eax,%eaxf01006e1851,34258
f01006e3:	74 f7                	je     f01006dc <getchar+0x6>f01006e3852,34307
f01006e5:	c9                   	leave  f01006e5856,34402
f01006e6:	c3                   	ret    f01006e6857,34442
f01006e7 <iscons>:f01006e7859,34483
intint861,34503
f01006e7:	55                   	push   %ebpf01006e7864,34527
f01006e8:	89 e5                	mov    %esp,%ebpf01006e8865,34571
f01006ea:	b8 01 00 00 00       	mov    $0x1,%eaxf01006ea869,34654
f01006ef:	5d                   	pop    %ebpf01006ef870,34703
f01006f0:	c3                   	ret    f01006f0871,34747
f01006f1 <__x86.get_pc_thunk.ax>:f01006f1873,34788
f01006f1:	8b 04 24             	mov    (%esp),%eaxf01006f1874,34822
f01006f4:	c3                   	ret    f01006f4875,34873
f01006f5 <mon_help>:f01006f5877,34914
intint881,35000
f01006f5:	55                   	push   %ebpf01006f5884,35060
f01006f6:	89 e5                	mov    %esp,%ebpf01006f6885,35104
f01006f8:	56                   	push   %esif01006f8886,35153
f01006f9:	53                   	push   %ebxf01006f9887,35197
f01006fa:	e8 50 fa ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01006fa888,35241
f01006ff:	81 c3 0d 6c 01 00    	add    $0x16c0d,%ebxf01006ff889,35313
f0100705:	83 ec 04             	sub    $0x4,%espf0100705894,35479
f0100708:	8d 83 74 cd fe ff    	lea    -0x1328c(%ebx),%eaxf0100708895,35528
f010070e:	50                   	push   %eaxf010070e896,35587
f010070f:	8d 83 92 cd fe ff    	lea    -0x1326e(%ebx),%eaxf010070f897,35631
f0100715:	50                   	push   %eaxf0100715898,35690
f0100716:	8d b3 97 cd fe ff    	lea    -0x13269(%ebx),%esif0100716899,35734
f010071c:	56                   	push   %esif010071c900,35793
f010071d:	e8 36 27 00 00       	call   f0102e58 <cprintf>f010071d901,35837
f0100722:	83 c4 0c             	add    $0xc,%espf0100722902,35895
f0100725:	8d 83 00 ce fe ff    	lea    -0x13200(%ebx),%eaxf0100725903,35944
f010072b:	50                   	push   %eaxf010072b904,36003
f010072c:	8d 83 a0 cd fe ff    	lea    -0x13260(%ebx),%eaxf010072c905,36047
f0100732:	50                   	push   %eaxf0100732906,36106
f0100733:	56                   	push   %esif0100733907,36150
f0100734:	e8 1f 27 00 00       	call   f0102e58 <cprintf>f0100734908,36194
f0100739:	b8 00 00 00 00       	mov    $0x0,%eaxf0100739911,36265
f010073e:	8d 65 f8             	lea    -0x8(%ebp),%espf010073e912,36314
f0100741:	5b                   	pop    %ebxf0100741913,36369
f0100742:	5e                   	pop    %esif0100742914,36413
f0100743:	5d                   	pop    %ebpf0100743915,36457
f0100744:	c3                   	ret    f0100744916,36501
f0100745 <mon_kerninfo>:f0100745918,36542
intint920,36568
f0100745:	55                   	push   %ebpf0100745923,36632
f0100746:	89 e5                	mov    %esp,%ebpf0100746924,36676
f0100748:	57                   	push   %edif0100748925,36725
f0100749:	56                   	push   %esif0100749926,36769
f010074a:	53                   	push   %ebxf010074a927,36813
f010074b:	83 ec 18             	sub    $0x18,%espf010074b928,36857
f010074e:	e8 fc f9 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f010074e929,36907
f0100753:	81 c3 b9 6b 01 00    	add    $0x16bb9,%ebxf0100753930,36979
f0100759:	8d 83 a9 cd fe ff    	lea    -0x13257(%ebx),%eaxf0100759934,37129
f010075f:	50                   	push   %eaxf010075f935,37188
f0100760:	e8 f3 26 00 00       	call   f0102e58 <cprintf>f0100760936,37232
f0100765:	83 c4 08             	add    $0x8,%espf0100765938,37351
f0100768:	ff b3 f4 ff ff ff    	pushl  -0xc(%ebx)f0100768939,37400
f010076e:	8d 83 28 ce fe ff    	lea    -0x131d8(%ebx),%eaxf010076e940,37450
f0100774:	50                   	push   %eaxf0100774941,37509
f0100775:	e8 de 26 00 00       	call   f0102e58 <cprintf>f0100775942,37553
f010077a:	83 c4 0c             	add    $0xc,%espf010077a944,37685
f010077d:	c7 c7 0c 00 10 f0    	mov    $0xf010000c,%edif010077d945,37734
f0100783:	8d 87 00 00 00 10    	lea    0x10000000(%edi),%eaxf0100783946,37790
f0100789:	50                   	push   %eaxf0100789947,37851
f010078a:	57                   	push   %edif010078a948,37895
f010078b:	8d 83 50 ce fe ff    	lea    -0x131b0(%ebx),%eaxf010078b949,37939
f0100791:	50                   	push   %eaxf0100791950,37998
f0100792:	e8 c1 26 00 00       	call   f0102e58 <cprintf>f0100792951,38042
f0100797:	83 c4 0c             	add    $0xc,%espf0100797953,38174
f010079a:	c7 c0 e9 3d 10 f0    	mov    $0xf0103de9,%eaxf010079a954,38223
f01007a0:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edxf01007a0955,38279
f01007a6:	52                   	push   %edxf01007a6956,38340
f01007a7:	50                   	push   %eaxf01007a7957,38384
f01007a8:	8d 83 74 ce fe ff    	lea    -0x1318c(%ebx),%eaxf01007a8958,38428
f01007ae:	50                   	push   %eaxf01007ae959,38487
f01007af:	e8 a4 26 00 00       	call   f0102e58 <cprintf>f01007af960,38531
f01007b4:	83 c4 0c             	add    $0xc,%espf01007b4962,38663
f01007b7:	c7 c0 60 90 11 f0    	mov    $0xf0119060,%eaxf01007b7963,38712
f01007bd:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edxf01007bd964,38768
f01007c3:	52                   	push   %edxf01007c3965,38829
f01007c4:	50                   	push   %eaxf01007c4966,38873
f01007c5:	8d 83 98 ce fe ff    	lea    -0x13168(%ebx),%eaxf01007c5967,38917
f01007cb:	50                   	push   %eaxf01007cb968,38976
f01007cc:	e8 87 26 00 00       	call   f0102e58 <cprintf>f01007cc969,39020
f01007d1:	83 c4 0c             	add    $0xc,%espf01007d1971,39148
f01007d4:	c7 c6 c0 96 11 f0    	mov    $0xf01196c0,%esif01007d4972,39197
f01007da:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eaxf01007da973,39253
f01007e0:	50                   	push   %eaxf01007e0974,39314
f01007e1:	56                   	push   %esif01007e1975,39358
f01007e2:	8d 83 bc ce fe ff    	lea    -0x13144(%ebx),%eaxf01007e2976,39402
f01007e8:	50                   	push   %eaxf01007e8977,39461
f01007e9:	e8 6a 26 00 00       	call   f0102e58 <cprintf>f01007e9978,39505
f01007ee:	83 c4 08             	add    $0x8,%espf01007ee980,39618
f01007f1:	81 c6 ff 03 00 00    	add    $0x3ff,%esif01007f1982,39705
f01007f7:	29 fe                	sub    %edi,%esif01007f7983,39756
f01007f9:	c1 fe 0a             	sar    $0xa,%esif01007f9985,39860
f01007fc:	56                   	push   %esif01007fc986,39909
f01007fd:	8d 83 e0 ce fe ff    	lea    -0x13120(%ebx),%eaxf01007fd987,39953
f0100803:	50                   	push   %eaxf0100803988,40012
f0100804:	e8 4f 26 00 00       	call   f0102e58 <cprintf>f0100804989,40056
f0100809:	b8 00 00 00 00       	mov    $0x0,%eaxf0100809992,40127
f010080e:	8d 65 f4             	lea    -0xc(%ebp),%espf010080e993,40176
f0100811:	5b                   	pop    %ebxf0100811994,40231
f0100812:	5e                   	pop    %esif0100812995,40275
f0100813:	5f                   	pop    %edif0100813996,40319
f0100814:	5d                   	pop    %ebpf0100814997,40363
f0100815:	c3                   	ret    f0100815998,40407
f0100816 <mon_backtrace>:f01008161000,40448
intint1002,40475
f0100816:	55                   	push   %ebpf01008161005,40540
f0100817:	89 e5                	mov    %esp,%ebpf01008171006,40584
f0100819:	b8 00 00 00 00       	mov    $0x0,%eaxf01008191010,40666
f010081e:	5d                   	pop    %ebpf010081e1011,40715
f010081f:	c3                   	ret    f010081f1012,40759
f0100820 <monitor>:f01008201014,40800
voidvoid1018,40834
f0100820:	55                   	push   %ebpf01008201021,40871
f0100821:	89 e5                	mov    %esp,%ebpf01008211022,40915
f0100823:	57                   	push   %edif01008231023,40964
f0100824:	56                   	push   %esif01008241024,41008
f0100825:	53                   	push   %ebxf01008251025,41052
f0100826:	83 ec 68             	sub    $0x68,%espf01008261026,41096
f0100829:	e8 21 f9 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01008291027,41146
f010082e:	81 c3 de 6a 01 00    	add    $0x16ade,%ebxf010082e1028,41218
f0100834:	8d 83 0c cf fe ff    	lea    -0x130f4(%ebx),%eaxf01008341032,41334
f010083a:	50                   	push   %eaxf010083a1033,41393
f010083b:	e8 18 26 00 00       	call   f0102e58 <cprintf>f010083b1034,41437
f0100840:	8d 83 30 cf fe ff    	lea    -0x130d0(%ebx),%eaxf01008401036,41546
f0100846:	89 04 24             	mov    %eax,(%esp)f01008461037,41605
f0100849:	e8 0a 26 00 00       	call   f0102e58 <cprintf>f01008491038,41656
f010084e:	83 c4 10             	add    $0x10,%espf010084e1039,41714
f0100851:	8d bb c6 cd fe ff    	lea    -0x1323a(%ebx),%edif01008511041,41807
f0100857:	eb 4a                	jmp    f01008a3 <monitor+0x83>f01008571042,41866
f0100859:	83 ec 08             	sub    $0x8,%espf01008591043,41929
f010085c:	0f be c0             	movsbl %al,%eaxf010085c1044,41978
f010085f:	50                   	push   %eaxf010085f1045,42026
f0100860:	57                   	push   %edif01008601046,42070
f0100861:	e8 11 31 00 00       	call   f0103977 <strchr>f01008611047,42114
f0100866:	83 c4 10             	add    $0x10,%espf01008661048,42171
f0100869:	85 c0                	test   %eax,%eaxf01008691049,42221
f010086b:	74 08                	je     f0100875 <monitor+0x55>f010086b1050,42270
f010086d:	c6 06 00             	movb   $0x0,(%esi)f010086d1052,42348
f0100870:	8d 76 01             	lea    0x1(%esi),%esif01008701053,42399
f0100873:	eb 79                	jmp    f01008ee <monitor+0xce>f01008731054,42453
f0100875:	80 3e 00             	cmpb   $0x0,(%esi)f01008751056,42533
f0100878:	74 7f                	je     f01008f9 <monitor+0xd9>f01008781057,42584
f010087a:	83 7d a4 0f          	cmpl   $0xf,-0x5c(%ebp)f010087a1059,42674
f010087e:	74 0f                	je     f010088f <monitor+0x6f>f010087e1060,42730
f0100880:	8b 45 a4             	mov    -0x5c(%ebp),%eaxf01008801062,42815
f0100883:	8d 48 01             	lea    0x1(%eax),%ecxf01008831063,42871
f0100886:	89 4d a4             	mov    %ecx,-0x5c(%ebp)f01008861064,42925
f0100889:	89 74 85 a8          	mov    %esi,-0x58(%ebp,%eax,4)f01008891065,42981
f010088d:	eb 44                	jmp    f01008d3 <monitor+0xb3>f010088d1066,43044
f010088f:	83 ec 08             	sub    $0x8,%espf010088f1068,43161
f0100892:	6a 10                	push   $0x10f01008921069,43210
f0100894:	8d 83 cb cd fe ff    	lea    -0x13235(%ebx),%eaxf01008941070,43255
f010089a:	50                   	push   %eaxf010089a1071,43314
f010089b:	e8 b8 25 00 00       	call   f0102e58 <cprintf>f010089b1072,43358
f01008a0:	83 c4 10             	add    $0x10,%espf01008a01073,43416
		buf = readline("K> ");buf1077,43481
f01008a3:	8d 83 c2 cd fe ff    	lea    -0x1323e(%ebx),%eaxf01008a31078,43506
f01008a9:	89 45 a4             	mov    %eax,-0x5c(%ebp)f01008a91079,43565
f01008ac:	83 ec 0c             	sub    $0xc,%espf01008ac1080,43621
f01008af:	ff 75 a4             	pushl  -0x5c(%ebp)f01008af1081,43670
f01008b2:	e8 88 2e 00 00       	call   f010373f <readline>f01008b21082,43721
f01008b7:	89 c6                	mov    %eax,%esif01008b71083,43780
f01008b9:	83 c4 10             	add    $0x10,%espf01008b91085,43848
f01008bc:	85 c0                	test   %eax,%eaxf01008bc1086,43898
f01008be:	74 ec                	je     f01008ac <monitor+0x8c>f01008be1087,43947
f01008c0:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)f01008c01089,44027
	argc = 0;argc1090,44083
f01008c7:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%ebp)f01008c71091,44094
f01008ce:	eb 1e                	jmp    f01008ee <monitor+0xce>f01008ce1092,44150
f01008d0:	83 c6 01             	add    $0x1,%esif01008d01094,44223
f01008d3:	0f b6 06             	movzbl (%esi),%eaxf01008d31096,44316
f01008d6:	84 c0                	test   %al,%alf01008d61097,44367
f01008d8:	74 14                	je     f01008ee <monitor+0xce>f01008d81098,44414
f01008da:	83 ec 08             	sub    $0x8,%espf01008da1099,44477
f01008dd:	0f be c0             	movsbl %al,%eaxf01008dd1100,44526
f01008e0:	50                   	push   %eaxf01008e01101,44574
f01008e1:	57                   	push   %edif01008e11102,44618
f01008e2:	e8 90 30 00 00       	call   f0103977 <strchr>f01008e21103,44662
f01008e7:	83 c4 10             	add    $0x10,%espf01008e71104,44719
f01008ea:	85 c0                	test   %eax,%eaxf01008ea1105,44769
f01008ec:	74 e2                	je     f01008d0 <monitor+0xb0>f01008ec1106,44818
f01008ee:	0f b6 06             	movzbl (%esi),%eaxf01008ee1108,44924
f01008f1:	84 c0                	test   %al,%alf01008f11109,44975
f01008f3:	0f 85 60 ff ff ff    	jne    f0100859 <monitor+0x39>f01008f31110,45022
f01008f9:	8b 45 a4             	mov    -0x5c(%ebp),%eaxf01008f91112,45102
f01008fc:	c7 44 85 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%eax,4)f01008fc1113,45158
f0100903:	00 f01009031114,45221
f0100904:	85 c0                	test   %eax,%eaxf01009041116,45251
f0100906:	74 9b                	je     f01008a3 <monitor+0x83>f01009061117,45300
f0100908:	83 ec 08             	sub    $0x8,%espf01009081119,45409
f010090b:	8d 83 92 cd fe ff    	lea    -0x1326e(%ebx),%eaxf010090b1120,45458
f0100911:	50                   	push   %eaxf01009111121,45517
f0100912:	ff 75 a8             	pushl  -0x58(%ebp)f01009121122,45561
f0100915:	e8 ff 2f 00 00       	call   f0103919 <strcmp>f01009151123,45612
f010091a:	83 c4 10             	add    $0x10,%espf010091a1124,45669
f010091d:	85 c0                	test   %eax,%eaxf010091d1125,45719
f010091f:	74 38                	je     f0100959 <monitor+0x139>f010091f1126,45768
f0100921:	83 ec 08             	sub    $0x8,%espf01009211127,45832
f0100924:	8d 83 a0 cd fe ff    	lea    -0x13260(%ebx),%eaxf01009241128,45881
f010092a:	50                   	push   %eaxf010092a1129,45940
f010092b:	ff 75 a8             	pushl  -0x58(%ebp)f010092b1130,45984
f010092e:	e8 e6 2f 00 00       	call   f0103919 <strcmp>f010092e1131,46035
f0100933:	83 c4 10             	add    $0x10,%espf01009331132,46092
f0100936:	85 c0                	test   %eax,%eaxf01009361133,46142
f0100938:	74 1a                	je     f0100954 <monitor+0x134>f01009381134,46191
f010093a:	83 ec 08             	sub    $0x8,%espf010093a1136,46300
f010093d:	ff 75 a8             	pushl  -0x58(%ebp)f010093d1137,46349
f0100940:	8d 83 e8 cd fe ff    	lea    -0x13218(%ebx),%eaxf01009401138,46400
f0100946:	50                   	push   %eaxf01009461139,46459
f0100947:	e8 0c 25 00 00       	call   f0102e58 <cprintf>f01009471140,46503
f010094c:	83 c4 10             	add    $0x10,%espf010094c1141,46561
f010094f:	e9 4f ff ff ff       	jmp    f01008a3 <monitor+0x83>f010094f1142,46611
f0100954:	b8 01 00 00 00       	mov    $0x1,%eaxf01009541144,46720
f0100959:	83 ec 04             	sub    $0x4,%espf01009591146,46813
f010095c:	8d 04 40             	lea    (%eax,%eax,2),%eaxf010095c1147,46862
f010095f:	ff 75 08             	pushl  0x8(%ebp)f010095f1148,46920
f0100962:	8d 55 a8             	lea    -0x58(%ebp),%edxf01009621149,46969
f0100965:	52                   	push   %edxf01009651150,47025
f0100966:	ff 75 a4             	pushl  -0x5c(%ebp)f01009661151,47069
f0100969:	ff 94 83 0c 1d 00 00 	call   *0x1d0c(%ebx,%eax,4)f01009691152,47120
f0100970:	83 c4 10             	add    $0x10,%espf01009701154,47208
f0100973:	85 c0                	test   %eax,%eaxf01009731155,47258
f0100975:	0f 89 28 ff ff ff    	jns    f01008a3 <monitor+0x83>f01009751156,47307
f010097b:	8d 65 f4             	lea    -0xc(%ebp),%espf010097b1160,47386
f010097e:	5b                   	pop    %ebxf010097e1161,47441
f010097f:	5e                   	pop    %esif010097f1162,47485
f0100980:	5f                   	pop    %edif01009801163,47529
f0100981:	5d                   	pop    %ebpf01009811164,47573
f0100982:	c3                   	ret    f01009821165,47617
f0100983 <nvram_read>:f01009831167,47658
static intstatic1171,47791
f0100983:	55                   	push   %ebpf01009831174,47822
f0100984:	89 e5                	mov    %esp,%ebpf01009841175,47866
f0100986:	57                   	push   %edif01009861176,47915
f0100987:	56                   	push   %esif01009871177,47959
f0100988:	53                   	push   %ebxf01009881178,48003
f0100989:	83 ec 18             	sub    $0x18,%espf01009891179,48047
f010098c:	e8 be f7 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f010098c1180,48097
f0100991:	81 c3 7b 69 01 00    	add    $0x1697b,%ebxf01009911181,48169
f0100997:	89 c7                	mov    %eax,%edif01009971182,48222
f0100999:	50                   	push   %eaxf01009991184,48327
f010099a:	e8 32 24 00 00       	call   f0102dd1 <mc146818_read>f010099a1185,48371
f010099f:	89 c6                	mov    %eax,%esif010099f1186,48435
f01009a1:	83 c7 01             	add    $0x1,%edif01009a11187,48484
f01009a4:	89 3c 24             	mov    %edi,(%esp)f01009a41188,48533
f01009a7:	e8 25 24 00 00       	call   f0102dd1 <mc146818_read>f01009a71189,48584
f01009ac:	c1 e0 08             	shl    $0x8,%eaxf01009ac1190,48648
f01009af:	09 f0                	or     %esi,%eaxf01009af1191,48697
f01009b1:	8d 65 f4             	lea    -0xc(%ebp),%espf01009b11193,48748
f01009b4:	5b                   	pop    %ebxf01009b41194,48803
f01009b5:	5e                   	pop    %esif01009b51195,48847
f01009b6:	5f                   	pop    %edif01009b61196,48891
f01009b7:	5d                   	pop    %ebpf01009b71197,48935
f01009b8:	c3                   	ret    f01009b81198,48979
f01009b9 <boot_alloc>:f01009b91200,49020
static void *static1204,49203
f01009b9:	55                   	push   %ebpf01009b91207,49242
f01009ba:	89 e5                	mov    %esp,%ebpf01009ba1208,49286
f01009bc:	53                   	push   %ebxf01009bc1209,49335
f01009bd:	83 ec 04             	sub    $0x4,%espf01009bd1210,49379
f01009c0:	e8 00 24 00 00       	call   f0102dc5 <__x86.get_pc_thunk.cx>f01009c01211,49428
f01009c5:	81 c1 47 69 01 00    	add    $0x16947,%ecxf01009c51212,49500
f01009cb:	89 c2                	mov    %eax,%edxf01009cb1213,49553
f01009cd:	83 b9 8c 1f 00 00 00 	cmpl   $0x0,0x1f8c(%ecx)f01009cd1220,49902
f01009d4:	74 34                	je     f0100a0a <boot_alloc+0x51>f01009d41221,49959
f01009d6:	8b 81 8c 1f 00 00    	mov    0x1f8c(%ecx),%eaxf01009d61228,50291
f01009dc:	8b 99 94 1f 00 00    	mov    0x1f94(%ecx),%ebxf01009dc1229,50348
f01009e2:	c1 e3 0c             	shl    $0xc,%ebxf01009e21230,50405
f01009e5:	81 c3 c0 96 11 f0    	add    $0xf01196c0,%ebxf01009e51231,50454
f01009eb:	29 c3                	sub    %eax,%ebxf01009eb1232,50510
f01009ed:	39 d3                	cmp    %edx,%ebxf01009ed1235,50587
f01009ef:	72 31                	jb     f0100a22 <boot_alloc+0x69>f01009ef1236,50636
        result = nextfree;result1240,50838
f01009f1:	81 c2 ff 0f 00 00    	add    $0xfff,%edxf01009f11242,50905
f01009f7:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf01009f71243,50956
f01009fd:	01 c2                	add    %eax,%edxf01009fd1244,51012
f01009ff:	89 91 8c 1f 00 00    	mov    %edx,0x1f8c(%ecx)f01009ff1245,51061
f0100a05:	8b 5d fc             	mov    -0x4(%ebp),%ebxf0100a051248,51143
f0100a08:	c9                   	leave  f0100a081249,51198
f0100a09:	c3                   	ret    f0100a091250,51238
		nextfree = ROUNDUP((char *) end, PGSIZE);nextfree1251,51278
f0100a0a:	c7 c0 c0 96 11 f0    	mov    $0xf01196c0,%eaxf0100a0a1252,51322
f0100a10:	05 ff 0f 00 00       	add    $0xfff,%eaxf0100a101253,51378
f0100a15:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf0100a151254,51429
f0100a1a:	89 81 8c 1f 00 00    	mov    %eax,0x1f8c(%ecx)f0100a1a1255,51485
f0100a20:	eb b4                	jmp    f01009d6 <boot_alloc+0x1d>f0100a201256,51542
f0100a22:	83 ec 0c             	sub    $0xc,%espf0100a221258,51706
f0100a25:	53                   	push   %ebxf0100a251259,51755
f0100a26:	52                   	push   %edxf0100a261260,51799
f0100a27:	8d 81 58 cf fe ff    	lea    -0x130a8(%ecx),%eaxf0100a271261,51843
f0100a2d:	50                   	push   %eaxf0100a2d1262,51902
f0100a2e:	6a 6d                	push   $0x6df0100a2e1263,51946
f0100a30:	8d 81 70 d7 fe ff    	lea    -0x12890(%ecx),%eaxf0100a301264,51991
f0100a36:	50                   	push   %eaxf0100a361265,52050
f0100a37:	89 cb                	mov    %ecx,%ebxf0100a371266,52094
f0100a39:	e8 5b f6 ff ff       	call   f0100099 <_panic>f0100a391267,52143
f0100a3e <check_va2pa>:f0100a3e1269,52201
static physaddr_tstatic1273,52365
f0100a3e:	55                   	push   %ebpf0100a3e1276,52425
f0100a3f:	89 e5                	mov    %esp,%ebpf0100a3f1277,52469
f0100a41:	56                   	push   %esif0100a411278,52518
f0100a42:	53                   	push   %ebxf0100a421279,52562
f0100a43:	e8 7d 23 00 00       	call   f0102dc5 <__x86.get_pc_thunk.cx>f0100a431280,52606
f0100a48:	81 c1 c4 68 01 00    	add    $0x168c4,%ecxf0100a481281,52678
	pgdir = &pgdir[PDX(va)];pgdir1284,52743
f0100a4e:	89 d3                	mov    %edx,%ebxf0100a4e1285,52769
f0100a50:	c1 eb 16             	shr    $0x16,%ebxf0100a501286,52818
f0100a53:	8b 04 98             	mov    (%eax,%ebx,4),%eaxf0100a531288,52892
f0100a56:	a8 01                	test   $0x1,%alf0100a561289,52950
f0100a58:	74 5a                	je     f0100ab4 <check_va2pa+0x76>f0100a581290,52998
	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));p1292,53078
f0100a5a:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf0100a5a1293,53117
#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)KADDR1294,53173
static inline void*static1296,53223
f0100a5f:	89 c6                	mov    %eax,%esif0100a5f1300,53321
f0100a61:	c1 ee 0c             	shr    $0xc,%esif0100a611301,53370
f0100a64:	c7 c3 c8 96 11 f0    	mov    $0xf01196c8,%ebxf0100a641302,53419
f0100a6a:	3b 33                	cmp    (%ebx),%esif0100a6a1303,53475
f0100a6c:	73 2b                	jae    f0100a99 <check_va2pa+0x5b>f0100a6c1304,53526
f0100a6e:	c1 ea 0c             	shr    $0xc,%edxf0100a6e1306,53621
f0100a71:	81 e2 ff 03 00 00    	and    $0x3ff,%edxf0100a711307,53670
f0100a77:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eaxf0100a771308,53721
f0100a7e:	89 c2                	mov    %eax,%edxf0100a7e1309,53790
f0100a80:	83 e2 01             	and    $0x1,%edxf0100a801310,53839
f0100a83:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf0100a831313,53931
f0100a88:	85 d2                	test   %edx,%edxf0100a881314,53987
f0100a8a:	ba ff ff ff ff       	mov    $0xffffffff,%edxf0100a8a1315,54036
f0100a8f:	0f 44 c2             	cmove  %edx,%eaxf0100a8f1316,54092
f0100a92:	8d 65 f8             	lea    -0x8(%ebp),%espf0100a921318,54143
f0100a95:	5b                   	pop    %ebxf0100a951319,54198
f0100a96:	5e                   	pop    %esif0100a961320,54242
f0100a97:	5d                   	pop    %ebpf0100a971321,54286
f0100a98:	c3                   	ret    f0100a981322,54330
f0100a99:	50                   	push   %eaxf0100a991324,54434
f0100a9a:	8d 81 a4 cf fe ff    	lea    -0x1305c(%ecx),%eaxf0100a9a1325,54478
f0100aa0:	50                   	push   %eaxf0100aa01326,54537
f0100aa1:	68 c4 02 00 00       	push   $0x2c4f0100aa11327,54581
f0100aa6:	8d 81 70 d7 fe ff    	lea    -0x12890(%ecx),%eaxf0100aa61328,54627
f0100aac:	50                   	push   %eaxf0100aac1329,54686
f0100aad:	89 cb                	mov    %ecx,%ebxf0100aad1330,54730
f0100aaf:	e8 e5 f5 ff ff       	call   f0100099 <_panic>f0100aaf1331,54779
f0100ab4:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf0100ab41333,54849
f0100ab9:	eb d7                	jmp    f0100a92 <check_va2pa+0x54>f0100ab91334,54905
f0100abb <check_page_free_list>:f0100abb1336,54973
f0100abb:	55                   	push   %ebpf0100abb1338,55008
f0100abc:	89 e5                	mov    %esp,%ebpf0100abc1339,55052
f0100abe:	57                   	push   %edif0100abe1340,55101
f0100abf:	56                   	push   %esif0100abf1341,55145
f0100ac0:	53                   	push   %ebxf0100ac01342,55189
f0100ac1:	83 ec 3c             	sub    $0x3c,%espf0100ac11343,55233
f0100ac4:	e8 04 23 00 00       	call   f0102dcd <__x86.get_pc_thunk.di>f0100ac41344,55283
f0100ac9:	81 c7 43 68 01 00    	add    $0x16843,%edif0100ac91345,55355
f0100acf:	89 7d c4             	mov    %edi,-0x3c(%ebp)f0100acf1346,55408
f0100ad2:	84 c0                	test   %al,%alf0100ad21348,55520
f0100ad4:	0f 85 dd 02 00 00    	jne    f0100db7 <check_page_free_list+0x2fc>f0100ad41349,55567
f0100ada:	8b 45 c4             	mov    -0x3c(%ebp),%eaxf0100ada1351,55666
f0100add:	83 b8 90 1f 00 00 00 	cmpl   $0x0,0x1f90(%eax)f0100add1352,55722
f0100ae4:	74 0c                	je     f0100af2 <check_page_free_list+0x37>f0100ae41353,55779
f0100ae6:	c7 45 d4 00 04 00 00 	movl   $0x400,-0x2c(%ebp)f0100ae61355,55911
f0100aed:	e9 2f 03 00 00       	jmp    f0100e21 <check_page_free_list+0x366>f0100aed1356,55969
f0100af2:	83 ec 04             	sub    $0x4,%espf0100af21358,56094
f0100af5:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100af51359,56143
f0100af8:	8d 83 c8 cf fe ff    	lea    -0x13038(%ebx),%eaxf0100af81360,56199
f0100afe:	50                   	push   %eaxf0100afe1361,56258
f0100aff:	68 05 02 00 00       	push   $0x205f0100aff1362,56302
f0100b04:	8d 83 70 d7 fe ff    	lea    -0x12890(%ebx),%eaxf0100b041363,56348
f0100b0a:	50                   	push   %eaxf0100b0a1364,56407
f0100b0b:	e8 89 f5 ff ff       	call   f0100099 <_panic>f0100b0b1365,56451
f0100b10:	50                   	push   %eaxf0100b101366,56508
f0100b11:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100b111367,56552
f0100b14:	8d 83 a4 cf fe ff    	lea    -0x1305c(%ebx),%eaxf0100b141368,56608
f0100b1a:	50                   	push   %eaxf0100b1a1369,56667
f0100b1b:	6a 52                	push   $0x52f0100b1b1370,56711
f0100b1d:	8d 83 7c d7 fe ff    	lea    -0x12884(%ebx),%eaxf0100b1d1371,56756
f0100b23:	50                   	push   %eaxf0100b231372,56815
f0100b24:	e8 70 f5 ff ff       	call   f0100099 <_panic>f0100b241373,56859
f0100b29:	8b 36                	mov    (%esi),%esif0100b291375,56965
f0100b2b:	85 f6                	test   %esi,%esif0100b2b1376,57016
f0100b2d:	74 40                	je     f0100b6f <check_page_free_list+0xb4>f0100b2d1377,57065
void	tlb_invalidate(pde_t *pgdir, void *va);void1378,57141
static inline physaddr_tstatic1380,57187
f0100b2f:	89 f0                	mov    %esi,%eaxf0100b2f1384,57276
f0100b31:	2b 07                	sub    (%edi),%eaxf0100b311385,57325
f0100b33:	c1 f8 03             	sar    $0x3,%eaxf0100b331386,57376
f0100b36:	c1 e0 0c             	shl    $0xc,%eaxf0100b361387,57425
f0100b39:	89 c2                	mov    %eax,%edxf0100b391389,57510
f0100b3b:	c1 ea 16             	shr    $0x16,%edxf0100b3b1390,57559
f0100b3e:	3b 55 d4             	cmp    -0x2c(%ebp),%edxf0100b3e1391,57609
f0100b41:	73 e6                	jae    f0100b29 <check_page_free_list+0x6e>f0100b411392,57665
f0100b43:	89 c2                	mov    %eax,%edxf0100b431394,57767
f0100b45:	c1 ea 0c             	shr    $0xc,%edxf0100b451395,57816
f0100b48:	8b 4d d0             	mov    -0x30(%ebp),%ecxf0100b481396,57865
f0100b4b:	3b 11                	cmp    (%ecx),%edxf0100b4b1397,57921
f0100b4d:	73 c1                	jae    f0100b10 <check_page_free_list+0x55>f0100b4d1398,57972
f0100b4f:	83 ec 04             	sub    $0x4,%espf0100b4f1400,58084
f0100b52:	68 80 00 00 00       	push   $0x80f0100b521401,58133
f0100b57:	68 97 00 00 00       	push   $0x97f0100b571402,58178
f0100b5c:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0100b5c1404,58256
f0100b61:	50                   	push   %eaxf0100b611405,58312
f0100b62:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100b621406,58356
f0100b65:	e8 4a 2e 00 00       	call   f01039b4 <memset>f0100b651407,58412
f0100b6a:	83 c4 10             	add    $0x10,%espf0100b6a1408,58469
f0100b6d:	eb ba                	jmp    f0100b29 <check_page_free_list+0x6e>f0100b6d1409,58519
	first_free_page = (char *) boot_alloc(0);first_free_page1410,58595
f0100b6f:	b8 00 00 00 00       	mov    $0x0,%eaxf0100b6f1411,58638
f0100b74:	e8 40 fe ff ff       	call   f01009b9 <boot_alloc>f0100b741412,58687
f0100b79:	89 45 c8             	mov    %eax,-0x38(%ebp)f0100b791413,58748
f0100b7c:	8b 7d c4             	mov    -0x3c(%ebp),%edif0100b7c1415,58855
f0100b7f:	8b 97 90 1f 00 00    	mov    0x1f90(%edi),%edxf0100b7f1416,58911
f0100b85:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100b851418,58991
f0100b8b:	8b 08                	mov    (%eax),%ecxf0100b8b1419,59047
f0100b8d:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf0100b8d1421,59129
f0100b93:	8b 00                	mov    (%eax),%eaxf0100b931422,59185
f0100b95:	89 45 cc             	mov    %eax,-0x34(%ebp)f0100b951423,59236
f0100b98:	8d 1c c1             	lea    (%ecx,%eax,8),%ebxf0100b981424,59292
f0100b9b:	89 4d d4             	mov    %ecx,-0x2c(%ebp)f0100b9b1426,59411
f0100b9e:	bf 00 00 00 00       	mov    $0x0,%edif0100b9e1428,59509
f0100ba3:	89 75 d0             	mov    %esi,-0x30(%ebp)f0100ba31429,59558
f0100ba6:	e9 08 01 00 00       	jmp    f0100cb3 <check_page_free_list+0x1f8>f0100ba61431,59665
f0100bab:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100bab1433,59765
f0100bae:	8d 83 8a d7 fe ff    	lea    -0x12876(%ebx),%eaxf0100bae1434,59821
f0100bb4:	50                   	push   %eaxf0100bb41435,59880
f0100bb5:	8d 83 96 d7 fe ff    	lea    -0x1286a(%ebx),%eaxf0100bb51436,59924
f0100bbb:	50                   	push   %eaxf0100bbb1437,59983
f0100bbc:	68 1f 02 00 00       	push   $0x21ff0100bbc1438,60027
f0100bc1:	8d 83 70 d7 fe ff    	lea    -0x12890(%ebx),%eaxf0100bc11439,60073
f0100bc7:	50                   	push   %eaxf0100bc71440,60132
f0100bc8:	e8 cc f4 ff ff       	call   f0100099 <_panic>f0100bc81441,60176
f0100bcd:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100bcd1443,60264
f0100bd0:	8d 83 ab d7 fe ff    	lea    -0x12855(%ebx),%eaxf0100bd01444,60320
f0100bd6:	50                   	push   %eaxf0100bd61445,60379
f0100bd7:	8d 83 96 d7 fe ff    	lea    -0x1286a(%ebx),%eaxf0100bd71446,60423
f0100bdd:	50                   	push   %eaxf0100bdd1447,60482
f0100bde:	68 20 02 00 00       	push   $0x220f0100bde1448,60526
f0100be3:	8d 83 70 d7 fe ff    	lea    -0x12890(%ebx),%eaxf0100be31449,60572
f0100be9:	50                   	push   %eaxf0100be91450,60631
f0100bea:	e8 aa f4 ff ff       	call   f0100099 <_panic>f0100bea1451,60675
f0100bef:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100bef1453,60793
f0100bf2:	8d 83 ec cf fe ff    	lea    -0x13014(%ebx),%eaxf0100bf21454,60849
f0100bf8:	50                   	push   %eaxf0100bf81455,60908
f0100bf9:	8d 83 96 d7 fe ff    	lea    -0x1286a(%ebx),%eaxf0100bf91456,60952
f0100bff:	50                   	push   %eaxf0100bff1457,61011
f0100c00:	68 21 02 00 00       	push   $0x221f0100c001458,61055
f0100c05:	8d 83 70 d7 fe ff    	lea    -0x12890(%ebx),%eaxf0100c051459,61101
f0100c0b:	50                   	push   %eaxf0100c0b1460,61160
f0100c0c:	e8 88 f4 ff ff       	call   f0100099 <_panic>f0100c0c1461,61204
f0100c11:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100c111463,61289
f0100c14:	8d 83 bf d7 fe ff    	lea    -0x12841(%ebx),%eaxf0100c141464,61345
f0100c1a:	50                   	push   %eaxf0100c1a1465,61404
f0100c1b:	8d 83 96 d7 fe ff    	lea    -0x1286a(%ebx),%eaxf0100c1b1466,61448
f0100c21:	50                   	push   %eaxf0100c211467,61507
f0100c22:	68 24 02 00 00       	push   $0x224f0100c221468,61551
f0100c27:	8d 83 70 d7 fe ff    	lea    -0x12890(%ebx),%eaxf0100c271469,61597
f0100c2d:	50                   	push   %eaxf0100c2d1470,61656
f0100c2e:	e8 66 f4 ff ff       	call   f0100099 <_panic>f0100c2e1471,61700
f0100c33:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100c331473,61793
f0100c36:	8d 83 d0 d7 fe ff    	lea    -0x12830(%ebx),%eaxf0100c361474,61849
f0100c3c:	50                   	push   %eaxf0100c3c1475,61908
f0100c3d:	8d 83 96 d7 fe ff    	lea    -0x1286a(%ebx),%eaxf0100c3d1476,61952
f0100c43:	50                   	push   %eaxf0100c431477,62011
f0100c44:	68 25 02 00 00       	push   $0x225f0100c441478,62055
f0100c49:	8d 83 70 d7 fe ff    	lea    -0x12890(%ebx),%eaxf0100c491479,62101
f0100c4f:	50                   	push   %eaxf0100c4f1480,62160
f0100c50:	e8 44 f4 ff ff       	call   f0100099 <_panic>f0100c501481,62204
f0100c55:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100c551483,62307
f0100c58:	8d 83 20 d0 fe ff    	lea    -0x12fe0(%ebx),%eaxf0100c581484,62363
f0100c5e:	50                   	push   %eaxf0100c5e1485,62422
f0100c5f:	8d 83 96 d7 fe ff    	lea    -0x1286a(%ebx),%eaxf0100c5f1486,62466
f0100c65:	50                   	push   %eaxf0100c651487,62525
f0100c66:	68 26 02 00 00       	push   $0x226f0100c661488,62569
f0100c6b:	8d 83 70 d7 fe ff    	lea    -0x12890(%ebx),%eaxf0100c6b1489,62615
f0100c71:	50                   	push   %eaxf0100c711490,62674
f0100c72:	e8 22 f4 ff ff       	call   f0100099 <_panic>f0100c721491,62718
f0100c77:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100c771493,62812
f0100c7a:	8d 83 e9 d7 fe ff    	lea    -0x12817(%ebx),%eaxf0100c7a1494,62868
f0100c80:	50                   	push   %eaxf0100c801495,62927
f0100c81:	8d 83 96 d7 fe ff    	lea    -0x1286a(%ebx),%eaxf0100c811496,62971
f0100c87:	50                   	push   %eaxf0100c871497,63030
f0100c88:	68 27 02 00 00       	push   $0x227f0100c881498,63074
f0100c8d:	8d 83 70 d7 fe ff    	lea    -0x12890(%ebx),%eaxf0100c8d1499,63120
f0100c93:	50                   	push   %eaxf0100c931500,63179
f0100c94:	e8 00 f4 ff ff       	call   f0100099 <_panic>f0100c941501,63223
f0100c99:	89 c6                	mov    %eax,%esif0100c991503,63306
f0100c9b:	c1 ee 0c             	shr    $0xc,%esif0100c9b1504,63355
f0100c9e:	39 75 cc             	cmp    %esi,-0x34(%ebp)f0100c9e1505,63404
f0100ca1:	76 70                	jbe    f0100d13 <check_page_free_list+0x258>f0100ca11506,63460
f0100ca3:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0100ca31508,63570
f0100ca8:	39 45 c8             	cmp    %eax,-0x38(%ebp)f0100ca81510,63706
f0100cab:	77 7f                	ja     f0100d2c <check_page_free_list+0x271>f0100cab1511,63762
f0100cad:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)f0100cad1513,63858
f0100cb1:	8b 12                	mov    (%edx),%edxf0100cb11515,63965
f0100cb3:	85 d2                	test   %edx,%edxf0100cb31516,64016
f0100cb5:	0f 84 93 00 00 00    	je     f0100d4e <check_page_free_list+0x293>f0100cb51517,64065
f0100cbb:	39 d1                	cmp    %edx,%ecxf0100cbb1519,64165
f0100cbd:	0f 87 e8 fe ff ff    	ja     f0100bab <check_page_free_list+0xf0>f0100cbd1520,64214
f0100cc3:	39 d3                	cmp    %edx,%ebxf0100cc31522,64321
f0100cc5:	0f 86 02 ff ff ff    	jbe    f0100bcd <check_page_free_list+0x112>f0100cc51523,64370
f0100ccb:	89 d0                	mov    %edx,%eaxf0100ccb1525,64508
f0100ccd:	2b 45 d4             	sub    -0x2c(%ebp),%eaxf0100ccd1526,64557
f0100cd0:	a8 07                	test   $0x7,%alf0100cd01527,64613
f0100cd2:	0f 85 17 ff ff ff    	jne    f0100bef <check_page_free_list+0x134>f0100cd21528,64661
f0100cd8:	c1 f8 03             	sar    $0x3,%eaxf0100cd81530,64771
f0100cdb:	c1 e0 0c             	shl    $0xc,%eaxf0100cdb1531,64820
f0100cde:	85 c0                	test   %eax,%eaxf0100cde1533,64897
f0100ce0:	0f 84 2b ff ff ff    	je     f0100c11 <check_page_free_list+0x156>f0100ce01534,64946
f0100ce6:	3d 00 00 0a 00       	cmp    $0xa0000,%eaxf0100ce61536,65059
f0100ceb:	0f 84 42 ff ff ff    	je     f0100c33 <check_page_free_list+0x178>f0100ceb1537,65112
f0100cf1:	3d 00 f0 0f 00       	cmp    $0xff000,%eaxf0100cf11539,65235
f0100cf6:	0f 84 59 ff ff ff    	je     f0100c55 <check_page_free_list+0x19a>f0100cf61540,65288
f0100cfc:	3d 00 00 10 00       	cmp    $0x100000,%eaxf0100cfc1542,65402
f0100d01:	0f 84 70 ff ff ff    	je     f0100c77 <check_page_free_list+0x1bc>f0100d011543,65456
f0100d07:	3d ff ff 0f 00       	cmp    $0xfffff,%eaxf0100d071545,65613
f0100d0c:	77 8b                	ja     f0100c99 <check_page_free_list+0x1de>f0100d0c1546,65666
f0100d0e:	83 c7 01             	add    $0x1,%edif0100d0e1548,65763
f0100d11:	eb 9e                	jmp    f0100cb1 <check_page_free_list+0x1f6>f0100d111549,65812
f0100d13:	50                   	push   %eaxf0100d131551,65953
f0100d14:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d141552,65997
f0100d17:	8d 83 a4 cf fe ff    	lea    -0x1305c(%ebx),%eaxf0100d171553,66053
f0100d1d:	50                   	push   %eaxf0100d1d1554,66112
f0100d1e:	6a 52                	push   $0x52f0100d1e1555,66156
f0100d20:	8d 83 7c d7 fe ff    	lea    -0x12884(%ebx),%eaxf0100d201556,66201
f0100d26:	50                   	push   %eaxf0100d261557,66260
f0100d27:	e8 6d f3 ff ff       	call   f0100099 <_panic>f0100d271558,66304
f0100d2c:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d2c1560,66441
f0100d2f:	8d 83 44 d0 fe ff    	lea    -0x12fbc(%ebx),%eaxf0100d2f1561,66497
f0100d35:	50                   	push   %eaxf0100d351562,66556
f0100d36:	8d 83 96 d7 fe ff    	lea    -0x1286a(%ebx),%eaxf0100d361563,66600
f0100d3c:	50                   	push   %eaxf0100d3c1564,66659
f0100d3d:	68 28 02 00 00       	push   $0x228f0100d3d1565,66703
f0100d42:	8d 83 70 d7 fe ff    	lea    -0x12890(%ebx),%eaxf0100d421566,66749
f0100d48:	50                   	push   %eaxf0100d481567,66808
f0100d49:	e8 4b f3 ff ff       	call   f0100099 <_panic>f0100d491568,66852
f0100d4e:	8b 75 d0             	mov    -0x30(%ebp),%esif0100d4e1569,66909
f0100d51:	85 ff                	test   %edi,%edif0100d511571,66993
f0100d53:	7e 1e                	jle    f0100d73 <check_page_free_list+0x2b8>f0100d531572,67042
f0100d55:	85 f6                	test   %esi,%esif0100d551574,67146
f0100d57:	7e 3c                	jle    f0100d95 <check_page_free_list+0x2da>f0100d571575,67195
f0100d59:	83 ec 0c             	sub    $0xc,%espf0100d591577,67321
f0100d5c:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d5c1578,67370
f0100d5f:	8d 83 8c d0 fe ff    	lea    -0x12f74(%ebx),%eaxf0100d5f1579,67426
f0100d65:	50                   	push   %eaxf0100d651580,67485
f0100d66:	e8 ed 20 00 00       	call   f0102e58 <cprintf>f0100d661581,67529
f0100d6b:	8d 65 f4             	lea    -0xc(%ebp),%espf0100d6b1583,67589
f0100d6e:	5b                   	pop    %ebxf0100d6e1584,67644
f0100d6f:	5e                   	pop    %esif0100d6f1585,67688
f0100d70:	5f                   	pop    %edif0100d701586,67732
f0100d71:	5d                   	pop    %ebpf0100d711587,67776
f0100d72:	c3                   	ret    f0100d721588,67820
f0100d73:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d731590,67888
f0100d76:	8d 83 03 d8 fe ff    	lea    -0x127fd(%ebx),%eaxf0100d761591,67944
f0100d7c:	50                   	push   %eaxf0100d7c1592,68003
f0100d7d:	8d 83 96 d7 fe ff    	lea    -0x1286a(%ebx),%eaxf0100d7d1593,68047
f0100d83:	50                   	push   %eaxf0100d831594,68106
f0100d84:	68 30 02 00 00       	push   $0x230f0100d841595,68150
f0100d89:	8d 83 70 d7 fe ff    	lea    -0x12890(%ebx),%eaxf0100d891596,68196
f0100d8f:	50                   	push   %eaxf0100d8f1597,68255
f0100d90:	e8 04 f3 ff ff       	call   f0100099 <_panic>f0100d901598,68299
f0100d95:	8b 5d c4             	mov    -0x3c(%ebp),%ebxf0100d951600,68383
f0100d98:	8d 83 15 d8 fe ff    	lea    -0x127eb(%ebx),%eaxf0100d981601,68439
f0100d9e:	50                   	push   %eaxf0100d9e1602,68498
f0100d9f:	8d 83 96 d7 fe ff    	lea    -0x1286a(%ebx),%eaxf0100d9f1603,68542
f0100da5:	50                   	push   %eaxf0100da51604,68601
f0100da6:	68 31 02 00 00       	push   $0x231f0100da61605,68645
f0100dab:	8d 83 70 d7 fe ff    	lea    -0x12890(%ebx),%eaxf0100dab1606,68691
f0100db1:	50                   	push   %eaxf0100db11607,68750
f0100db2:	e8 e2 f2 ff ff       	call   f0100099 <_panic>f0100db21608,68794
f0100db7:	8b 45 c4             	mov    -0x3c(%ebp),%eaxf0100db71610,68873
f0100dba:	8b 80 90 1f 00 00    	mov    0x1f90(%eax),%eaxf0100dba1611,68929
f0100dc0:	85 c0                	test   %eax,%eaxf0100dc01612,68986
f0100dc2:	0f 84 2a fd ff ff    	je     f0100af2 <check_page_free_list+0x37>f0100dc21613,69035
f0100dc8:	8d 55 d8             	lea    -0x28(%ebp),%edxf0100dc81615,69155
f0100dcb:	89 55 e0             	mov    %edx,-0x20(%ebp)f0100dcb1616,69211
f0100dce:	8d 55 dc             	lea    -0x24(%ebp),%edxf0100dce1617,69267
f0100dd1:	89 55 e4             	mov    %edx,-0x1c(%ebp)f0100dd11618,69323
f0100dd4:	8b 7d c4             	mov    -0x3c(%ebp),%edif0100dd41620,69412
f0100dd7:	c7 c3 d0 96 11 f0    	mov    $0xf01196d0,%ebxf0100dd71621,69468
f0100ddd:	89 c2                	mov    %eax,%edxf0100ddd1622,69524
f0100ddf:	2b 13                	sub    (%ebx),%edxf0100ddf1623,69573
f0100de1:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edxf0100de11625,69673
f0100de7:	0f 95 c2             	setne  %dlf0100de71626,69727
f0100dea:	0f b6 d2             	movzbl %dl,%edxf0100dea1627,69770
f0100ded:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecxf0100ded1629,69841
f0100df1:	89 01                	mov    %eax,(%ecx)f0100df11630,69904
f0100df3:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)f0100df31632,69987
f0100df7:	8b 00                	mov    (%eax),%eaxf0100df71634,70102
f0100df9:	85 c0                	test   %eax,%eaxf0100df91635,70153
f0100dfb:	75 e0                	jne    f0100ddd <check_page_free_list+0x322>f0100dfb1636,70202
f0100dfd:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf0100dfd1638,70293
f0100e00:	c7 00 00 00 00 00    	movl   $0x0,(%eax)f0100e001639,70349
f0100e06:	8b 55 dc             	mov    -0x24(%ebp),%edxf0100e061641,70416
f0100e09:	8b 45 e0             	mov    -0x20(%ebp),%eaxf0100e091642,70472
f0100e0c:	89 10                	mov    %edx,(%eax)f0100e0c1643,70528
		page_free_list = pp1;page_free_list1644,70579
f0100e0e:	8b 45 d8             	mov    -0x28(%ebp),%eaxf0100e0e1645,70603
f0100e11:	8b 7d c4             	mov    -0x3c(%ebp),%edif0100e111646,70659
f0100e14:	89 87 90 1f 00 00    	mov    %eax,0x1f90(%edi)f0100e141647,70715
f0100e1a:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)f0100e1a1649,70828
f0100e21:	8b 45 c4             	mov    -0x3c(%ebp),%eaxf0100e211651,70933
f0100e24:	8b b0 90 1f 00 00    	mov    0x1f90(%eax),%esif0100e241652,70989
f0100e2a:	c7 c7 d0 96 11 f0    	mov    $0xf01196d0,%edif0100e2a1653,71046
f0100e30:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf0100e301655,71128
f0100e36:	89 45 d0             	mov    %eax,-0x30(%ebp)f0100e361656,71184
f0100e39:	e9 ed fc ff ff       	jmp    f0100b2b <check_page_free_list+0x70>f0100e391657,71240
f0100e3e <page_init>:f0100e3e1659,71317
f0100e3e:	55                   	push   %ebpf0100e3e1661,71341
f0100e3f:	89 e5                	mov    %esp,%ebpf0100e3f1662,71385
f0100e41:	57                   	push   %edif0100e411663,71434
f0100e42:	56                   	push   %esif0100e421664,71478
f0100e43:	53                   	push   %ebxf0100e431665,71522
f0100e44:	83 ec 1c             	sub    $0x1c,%espf0100e441666,71566
f0100e47:	e8 7d 1f 00 00       	call   f0102dc9 <__x86.get_pc_thunk.si>f0100e471667,71616
f0100e4c:	81 c6 c0 64 01 00    	add    $0x164c0,%esif0100e4c1668,71688
f0100e52:	bb 00 00 00 00       	mov    $0x0,%ebxf0100e521670,71773
f0100e57:	c7 c7 c8 96 11 f0    	mov    $0xf01196c8,%edif0100e571671,71822
f0100e5d:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100e5d1673,71902
f0100e63:	89 45 e0             	mov    %eax,-0x20(%ebp)f0100e631674,71958
f0100e66:	eb 38                	jmp    f0100ea0 <page_init+0x62>f0100e661676,72046
f0100e68:	39 9e 94 1f 00 00    	cmp    %ebx,0x1f94(%esi)f0100e681678,72146
f0100e6e:	76 52                	jbe    f0100ec2 <page_init+0x84>f0100e6e1679,72203
f0100e70:	8d 0c dd 00 00 00 00 	lea    0x0(,%ebx,8),%ecxf0100e701680,72268
f0100e77:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100e771682,72349
f0100e7d:	89 ca                	mov    %ecx,%edxf0100e7d1683,72405
f0100e7f:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0100e7f1684,72454
f0100e82:	03 10                	add    (%eax),%edxf0100e821685,72510
f0100e84:	66 c7 42 04 00 00    	movw   $0x0,0x4(%edx)f0100e841686,72561
f0100e8a:	8b 86 90 1f 00 00    	mov    0x1f90(%esi),%eaxf0100e8a1688,72653
f0100e90:	89 02                	mov    %eax,(%edx)f0100e901689,72710
			page_free_list = &pages[i];page_free_list1690,72761
f0100e92:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf0100e921691,72792
f0100e95:	03 08                	add    (%eax),%ecxf0100e951692,72848
f0100e97:	89 8e 90 1f 00 00    	mov    %ecx,0x1f90(%esi)f0100e971693,72899
f0100e9d:	83 c3 01             	add    $0x1,%ebxf0100e9d1695,72988
f0100ea0:	39 1f                	cmp    %ebx,(%edi)f0100ea01696,73037
f0100ea2:	0f 86 80 00 00 00    	jbe    f0100f28 <page_init+0xea>f0100ea21697,73088
f0100ea8:	85 db                	test   %ebx,%ebxf0100ea81699,73169
f0100eaa:	75 bc                	jne    f0100e68 <page_init+0x2a>f0100eaa1700,73218
f0100eac:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100eac1702,73307
f0100eb2:	8b 00                	mov    (%eax),%eaxf0100eb21703,73363
f0100eb4:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)f0100eb41704,73414
f0100eba:	c7 00 00 00 00 00    	movl   $0x0,(%eax)f0100eba1706,73496
f0100ec0:	eb db                	jmp    f0100e9d <page_init+0x5f>f0100ec01707,73547
f0100ec2:	81 fb ff 00 00 00    	cmp    $0xff,%ebxf0100ec21709,73702
f0100ec8:	77 16                	ja     f0100ee0 <page_init+0xa2>f0100ec81710,73752
f0100eca:	8b 45 e0             	mov    -0x20(%ebp),%eaxf0100eca1712,73841
f0100ecd:	8b 00                	mov    (%eax),%eaxf0100ecd1713,73897
f0100ecf:	8d 04 d8             	lea    (%eax,%ebx,8),%eaxf0100ecf1714,73948
f0100ed2:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)f0100ed21715,74006
f0100ed8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)f0100ed81717,74088
f0100ede:	eb bd                	jmp    f0100e9d <page_init+0x5f>f0100ede1718,74139
f0100ee0:	b8 00 00 00 00       	mov    $0x0,%eaxf0100ee01720,74294
f0100ee5:	e8 cf fa ff ff       	call   f01009b9 <boot_alloc>f0100ee51721,74343
f0100eea:	05 00 00 00 10       	add    $0x10000000,%eaxf0100eea1722,74404
f0100eef:	c1 e8 0c             	shr    $0xc,%eaxf0100eef1723,74460
f0100ef2:	39 d8                	cmp    %ebx,%eaxf0100ef21724,74509
f0100ef4:	77 d4                	ja     f0100eca <page_init+0x8c>f0100ef41725,74558
f0100ef6:	8d 0c dd 00 00 00 00 	lea    0x0(,%ebx,8),%ecxf0100ef61726,74623
f0100efd:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100efd1728,74704
f0100f03:	89 ca                	mov    %ecx,%edxf0100f031729,74760
f0100f05:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0100f051730,74809
f0100f08:	03 10                	add    (%eax),%edxf0100f081731,74865
f0100f0a:	66 c7 42 04 00 00    	movw   $0x0,0x4(%edx)f0100f0a1732,74916
f0100f10:	8b 86 90 1f 00 00    	mov    0x1f90(%esi),%eaxf0100f101734,75008
f0100f16:	89 02                	mov    %eax,(%edx)f0100f161735,75065
			page_free_list = &pages[i];page_free_list1736,75116
f0100f18:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf0100f181737,75147
f0100f1b:	03 08                	add    (%eax),%ecxf0100f1b1738,75203
f0100f1d:	89 8e 90 1f 00 00    	mov    %ecx,0x1f90(%esi)f0100f1d1739,75254
f0100f23:	e9 75 ff ff ff       	jmp    f0100e9d <page_init+0x5f>f0100f231740,75311
f0100f28:	83 c4 1c             	add    $0x1c,%espf0100f281742,75378
f0100f2b:	5b                   	pop    %ebxf0100f2b1743,75428
f0100f2c:	5e                   	pop    %esif0100f2c1744,75472
f0100f2d:	5f                   	pop    %edif0100f2d1745,75516
f0100f2e:	5d                   	pop    %ebpf0100f2e1746,75560
f0100f2f:	c3                   	ret    f0100f2f1747,75604
f0100f30 <page_alloc>:f0100f301749,75645
f0100f30:	55                   	push   %ebpf0100f301751,75670
f0100f31:	89 e5                	mov    %esp,%ebpf0100f311752,75714
f0100f33:	56                   	push   %esif0100f331753,75763
f0100f34:	53                   	push   %ebxf0100f341754,75807
f0100f35:	e8 15 f2 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0100f351755,75851
f0100f3a:	81 c3 d2 63 01 00    	add    $0x163d2,%ebxf0100f3a1756,75923
f0100f40:	8b b3 90 1f 00 00    	mov    0x1f90(%ebx),%esif0100f401758,76011
f0100f46:	85 f6                	test   %esi,%esif0100f461759,76068
f0100f48:	74 1a                	je     f0100f64 <page_alloc+0x34>f0100f481760,76117
	page_free_list = result->pp_link;page_free_list1761,76183
f0100f4a:	8b 06                	mov    (%esi),%eaxf0100f4a1762,76218
f0100f4c:	89 83 90 1f 00 00    	mov    %eax,0x1f90(%ebx)f0100f4c1763,76269
f0100f52:	c7 06 00 00 00 00    	movl   $0x0,(%esi)f0100f521765,76351
f0100f58:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)f0100f581767,76423
f0100f5e:	f6 45 08 01          	testb  $0x1,0x8(%ebp)f0100f5e1769,76508
f0100f62:	75 09                	jne    f0100f6d <page_alloc+0x3d>f0100f621770,76562
f0100f64:	89 f0                	mov    %esi,%eaxf0100f641772,76630
f0100f66:	8d 65 f8             	lea    -0x8(%ebp),%espf0100f661773,76679
f0100f69:	5b                   	pop    %ebxf0100f691774,76734
f0100f6a:	5e                   	pop    %esif0100f6a1775,76778
f0100f6b:	5d                   	pop    %ebpf0100f6b1776,76822
f0100f6c:	c3                   	ret    f0100f6c1777,76866
f0100f6d:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0100f6d1779,76939
f0100f73:	89 f2                	mov    %esi,%edxf0100f731780,76995
f0100f75:	2b 10                	sub    (%eax),%edxf0100f751781,77044
f0100f77:	89 d0                	mov    %edx,%eaxf0100f771782,77095
f0100f79:	c1 f8 03             	sar    $0x3,%eaxf0100f791783,77144
f0100f7c:	c1 e0 0c             	shl    $0xc,%eaxf0100f7c1784,77193
f0100f7f:	89 c1                	mov    %eax,%ecxf0100f7f1786,77268
f0100f81:	c1 e9 0c             	shr    $0xc,%ecxf0100f811787,77317
f0100f84:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf0100f841788,77366
f0100f8a:	3b 0a                	cmp    (%edx),%ecxf0100f8a1789,77422
f0100f8c:	73 1a                	jae    f0100fa8 <page_alloc+0x78>f0100f8c1790,77473
f0100f8e:	83 ec 04             	sub    $0x4,%espf0100f8e1792,77578
f0100f91:	68 00 10 00 00       	push   $0x1000f0100f911793,77627
f0100f96:	6a 00                	push   $0x0f0100f961794,77674
f0100f98:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0100f981796,77751
f0100f9d:	50                   	push   %eaxf0100f9d1797,77807
f0100f9e:	e8 11 2a 00 00       	call   f01039b4 <memset>f0100f9e1798,77851
f0100fa3:	83 c4 10             	add    $0x10,%espf0100fa31799,77908
f0100fa6:	eb bc                	jmp    f0100f64 <page_alloc+0x34>f0100fa61800,77958
f0100fa8:	50                   	push   %eaxf0100fa81802,78088
f0100fa9:	8d 83 a4 cf fe ff    	lea    -0x1305c(%ebx),%eaxf0100fa91803,78132
f0100faf:	50                   	push   %eaxf0100faf1804,78191
f0100fb0:	6a 52                	push   $0x52f0100fb01805,78235
f0100fb2:	8d 83 7c d7 fe ff    	lea    -0x12884(%ebx),%eaxf0100fb21806,78280
f0100fb8:	50                   	push   %eaxf0100fb81807,78339
f0100fb9:	e8 db f0 ff ff       	call   f0100099 <_panic>f0100fb91808,78383
f0100fbe <page_free>:f0100fbe1810,78441
f0100fbe:	55                   	push   %ebpf0100fbe1812,78465
f0100fbf:	89 e5                	mov    %esp,%ebpf0100fbf1813,78509
f0100fc1:	53                   	push   %ebxf0100fc11814,78558
f0100fc2:	83 ec 04             	sub    $0x4,%espf0100fc21815,78602
f0100fc5:	e8 85 f1 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0100fc51816,78651
f0100fca:	81 c3 42 63 01 00    	add    $0x16342,%ebxf0100fca1817,78723
f0100fd0:	8b 45 08             	mov    0x8(%ebp),%eaxf0100fd01818,78776
f0100fd3:	0f b7 48 04          	movzwl 0x4(%eax),%ecxf0100fd31820,78846
f0100fd7:	66 85 c9             	test   %cx,%cxf0100fd71821,78900
f0100fda:	75 19                	jne    f0100ff5 <page_free+0x37>f0100fda1822,78947
f0100fdc:	8b 08                	mov    (%eax),%ecxf0100fdc1824,79029
f0100fde:	85 c9                	test   %ecx,%ecxf0100fde1825,79080
f0100fe0:	75 2f                	jne    f0101011 <page_free+0x53>f0100fe01826,79129
f0100fe2:	8b 8b 90 1f 00 00    	mov    0x1f90(%ebx),%ecxf0100fe21828,79225
f0100fe8:	89 08                	mov    %ecx,(%eax)f0100fe81829,79282
	page_free_list = pp;page_free_list1830,79333
f0100fea:	89 83 90 1f 00 00    	mov    %eax,0x1f90(%ebx)f0100fea1831,79355
f0100ff0:	8b 5d fc             	mov    -0x4(%ebp),%ebxf0100ff01833,79414
f0100ff3:	c9                   	leave  f0100ff31834,79469
f0100ff4:	c3                   	ret    f0100ff41835,79509
f0100ff5:	0f b7 c9             	movzwl %cx,%ecxf0100ff51837,79616
f0100ff8:	51                   	push   %ecxf0100ff81838,79664
f0100ff9:	8d 83 b0 d0 fe ff    	lea    -0x12f50(%ebx),%eaxf0100ff91839,79708
f0100fff:	50                   	push   %eaxf0100fff1840,79767
f0101000:	68 3f 01 00 00       	push   $0x13ff01010001841,79811
f0101005:	8d 83 70 d7 fe ff    	lea    -0x12890(%ebx),%eaxf01010051842,79857
f010100b:	50                   	push   %eaxf010100b1843,79916
f010100c:	e8 88 f0 ff ff       	call   f0100099 <_panic>f010100c1844,79960
f0101011:	51                   	push   %ecxf01010111846,80081
f0101012:	8d 83 dc d0 fe ff    	lea    -0x12f24(%ebx),%eaxf01010121847,80125
f0101018:	50                   	push   %eaxf01010181848,80184
f0101019:	68 41 01 00 00       	push   $0x141f01010191849,80228
f010101e:	8d 83 70 d7 fe ff    	lea    -0x12890(%ebx),%eaxf010101e1850,80274
f0101024:	50                   	push   %eaxf01010241851,80333
f0101025:	e8 6f f0 ff ff       	call   f0100099 <_panic>f01010251852,80377
f010102a <page_decref>:f010102a1854,80435
f010102a:	55                   	push   %ebpf010102a1856,80461
f010102b:	89 e5                	mov    %esp,%ebpf010102b1857,80505
f010102d:	83 ec 08             	sub    $0x8,%espf010102d1858,80554
f0101030:	8b 55 08             	mov    0x8(%ebp),%edxf01010301859,80603
f0101033:	0f b7 42 04          	movzwl 0x4(%edx),%eaxf01010331861,80681
f0101037:	83 e8 01             	sub    $0x1,%eaxf01010371862,80735
f010103a:	66 89 42 04          	mov    %ax,0x4(%edx)f010103a1863,80784
f010103e:	66 85 c0             	test   %ax,%axf010103e1864,80837
f0101041:	74 02                	je     f0101045 <page_decref+0x1b>f01010411865,80884
f0101043:	c9                   	leave  f01010431867,80953
f0101044:	c3                   	ret    f01010441868,80993
f0101045:	83 ec 0c             	sub    $0xc,%espf01010451870,81050
f0101048:	52                   	push   %edxf01010481871,81099
f0101049:	e8 70 ff ff ff       	call   f0100fbe <page_free>f01010491872,81143
f010104e:	83 c4 10             	add    $0x10,%espf010104e1873,81203
f0101051:	eb f0                	jmp    f0101043 <page_decref+0x19>f01010511875,81255
f0101053 <pgdir_walk>:f01010531877,81323
f0101053:	55                   	push   %ebpf01010531879,81348
f0101054:	89 e5                	mov    %esp,%ebpf01010541880,81392
f0101056:	57                   	push   %edif01010561881,81441
f0101057:	56                   	push   %esif01010571882,81485
f0101058:	53                   	push   %ebxf01010581883,81529
f0101059:	83 ec 0c             	sub    $0xc,%espf01010591884,81573
f010105c:	e8 ee f0 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f010105c1885,81622
f0101061:	81 c3 ab 62 01 00    	add    $0x162ab,%ebxf01010611886,81694
f0101067:	8b 7d 0c             	mov    0xc(%ebp),%edif01010671887,81747
	pde = pgdir+PDX(va);pde1888,81801
f010106a:	89 fe                	mov    %edi,%esif010106a1889,81823
f010106c:	c1 ee 16             	shr    $0x16,%esif010106c1890,81872
f010106f:	c1 e6 02             	shl    $0x2,%esif010106f1891,81922
f0101072:	03 75 08             	add    0x8(%ebp),%esif01010721892,81971
f0101075:	f6 06 01             	testb  $0x1,(%esi)f01010751894,82048
f0101078:	75 30                	jne    f01010aa <pgdir_walk+0x57>f01010781895,82099
f010107a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)f010107a1897,82192
f010107e:	74 71                	je     f01010f1 <pgdir_walk+0x9e>f010107e1898,82247
		pp = page_alloc(ALLOC_ZERO);pp1899,82313
f0101080:	83 ec 0c             	sub    $0xc,%espf01010801900,82344
f0101083:	6a 01                	push   $0x1f01010831901,82393
f0101085:	e8 a6 fe ff ff       	call   f0100f30 <page_alloc>f01010851902,82437
f010108a:	83 c4 10             	add    $0x10,%espf010108a1904,82521
f010108d:	85 c0                	test   %eax,%eaxf010108d1905,82571
f010108f:	74 67                	je     f01010f8 <pgdir_walk+0xa5>f010108f1906,82620
f0101091:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)f01010911908,82704
f0101097:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf01010971910,82791
f010109d:	2b 02                	sub    (%edx),%eaxf010109d1911,82847
f010109f:	c1 f8 03             	sar    $0x3,%eaxf010109f1912,82898
f01010a2:	c1 e0 0c             	shl    $0xc,%eaxf01010a21913,82947
f01010a5:	83 c8 07             	or     $0x7,%eaxf01010a51915,83042
f01010a8:	89 06                	mov    %eax,(%esi)f01010a81916,83091
f01010aa:	8b 06                	mov    (%esi),%eaxf01010aa1918,83195
f01010ac:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf01010ac1919,83246
f01010b1:	89 c1                	mov    %eax,%ecxf01010b11921,83328
f01010b3:	c1 e9 0c             	shr    $0xc,%ecxf01010b31922,83377
f01010b6:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf01010b61923,83426
f01010bc:	3b 0a                	cmp    (%edx),%ecxf01010bc1924,83482
f01010be:	73 18                	jae    f01010d8 <pgdir_walk+0x85>f01010be1925,83533
f01010c0:	c1 ef 0a             	shr    $0xa,%edif01010c01926,83599
f01010c3:	81 e7 fc 0f 00 00    	and    $0xffc,%edif01010c31927,83648
f01010c9:	8d 84 38 00 00 00 f0 	lea    -0x10000000(%eax,%edi,1),%eaxf01010c91928,83699
f01010d0:	8d 65 f4             	lea    -0xc(%ebp),%espf01010d01930,83770
f01010d3:	5b                   	pop    %ebxf01010d31931,83825
f01010d4:	5e                   	pop    %esif01010d41932,83869
f01010d5:	5f                   	pop    %edif01010d51933,83913
f01010d6:	5d                   	pop    %ebpf01010d61934,83957
f01010d7:	c3                   	ret    f01010d71935,84001
f01010d8:	50                   	push   %eaxf01010d81937,84105
f01010d9:	8d 83 a4 cf fe ff    	lea    -0x1305c(%ebx),%eaxf01010d91938,84149
f01010df:	50                   	push   %eaxf01010df1939,84208
f01010e0:	68 7a 01 00 00       	push   $0x17af01010e01940,84252
f01010e5:	8d 83 70 d7 fe ff    	lea    -0x12890(%ebx),%eaxf01010e51941,84298
f01010eb:	50                   	push   %eaxf01010eb1942,84357
f01010ec:	e8 a8 ef ff ff       	call   f0100099 <_panic>f01010ec1943,84401
f01010f1:	b8 00 00 00 00       	mov    $0x0,%eaxf01010f11945,84485
f01010f6:	eb d8                	jmp    f01010d0 <pgdir_walk+0x7d>f01010f61946,84534
f01010f8:	b8 00 00 00 00       	mov    $0x0,%eaxf01010f81948,84623
f01010fd:	eb d1                	jmp    f01010d0 <pgdir_walk+0x7d>f01010fd1949,84672
f01010ff <page_lookup>:f01010ff1951,84739
f01010ff:	55                   	push   %ebpf01010ff1953,84765
f0101100:	89 e5                	mov    %esp,%ebpf01011001954,84809
f0101102:	56                   	push   %esif01011021955,84858
f0101103:	53                   	push   %ebxf01011031956,84902
f0101104:	e8 46 f0 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01011041957,84946
f0101109:	81 c3 03 62 01 00    	add    $0x16203,%ebxf01011091958,85018
f010110f:	8b 75 10             	mov    0x10(%ebp),%esif010110f1959,85071
f0101112:	83 ec 04             	sub    $0x4,%espf01011121961,85166
f0101115:	6a 00                	push   $0x0f01011151962,85215
f0101117:	ff 75 0c             	pushl  0xc(%ebp)f01011171963,85259
f010111a:	ff 75 08             	pushl  0x8(%ebp)f010111a1964,85308
f010111d:	e8 31 ff ff ff       	call   f0101053 <pgdir_walk>f010111d1965,85357
f0101122:	83 c4 10             	add    $0x10,%espf01011221967,85452
f0101125:	85 f6                	test   %esi,%esif01011251968,85502
f0101127:	74 02                	je     f010112b <page_lookup+0x2c>f01011271969,85551
f0101129:	89 06                	mov    %eax,(%esi)f01011291970,85618
f010112b:	85 c0                	test   %eax,%eaxf010112b1972,85721
f010112d:	74 3d                	je     f010116c <page_lookup+0x6d>f010112d1973,85770
f010112f:	8b 00                	mov    (%eax),%eaxf010112f1974,85837
f0101131:	a8 01                	test   $0x1,%alf01011311975,85888
f0101133:	74 3e                	je     f0101173 <page_lookup+0x74>f01011331976,85936
static inline struct PageInfo*static1979,86006
f0101135:	c1 e8 0c             	shr    $0xc,%eaxf01011351983,86088
f0101138:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf01011381984,86137
f010113e:	3b 02                	cmp    (%edx),%eaxf010113e1985,86193
f0101140:	73 12                	jae    f0101154 <page_lookup+0x55>f01011401986,86244
f0101142:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf01011421989,86381
f0101148:	8b 12                	mov    (%edx),%edxf01011481990,86437
f010114a:	8d 04 c2             	lea    (%edx,%eax,8),%eaxf010114a1991,86488
f010114d:	8d 65 f8             	lea    -0x8(%ebp),%espf010114d1993,86548
f0101150:	5b                   	pop    %ebxf01011501994,86603
f0101151:	5e                   	pop    %esif01011511995,86647
f0101152:	5d                   	pop    %ebpf01011521996,86691
f0101153:	c3                   	ret    f01011531997,86735
f0101154:	83 ec 04             	sub    $0x4,%espf01011541999,86818
f0101157:	8d 83 04 d1 fe ff    	lea    -0x12efc(%ebx),%eaxf01011572000,86867
f010115d:	50                   	push   %eaxf010115d2001,86926
f010115e:	6a 4b                	push   $0x4bf010115e2002,86970
f0101160:	8d 83 7c d7 fe ff    	lea    -0x12884(%ebx),%eaxf01011602003,87015
f0101166:	50                   	push   %eaxf01011662004,87074
f0101167:	e8 2d ef ff ff       	call   f0100099 <_panic>f01011672005,87118
f010116c:	b8 00 00 00 00       	mov    $0x0,%eaxf010116c2007,87227
f0101171:	eb da                	jmp    f010114d <page_lookup+0x4e>f01011712008,87276
f0101173:	b8 00 00 00 00       	mov    $0x0,%eaxf01011732009,87343
f0101178:	eb d3                	jmp    f010114d <page_lookup+0x4e>f01011782010,87392
f010117a <page_remove>:f010117a2012,87460
f010117a:	55                   	push   %ebpf010117a2014,87486
f010117b:	89 e5                	mov    %esp,%ebpf010117b2015,87530
f010117d:	56                   	push   %esif010117d2016,87579
f010117e:	53                   	push   %ebxf010117e2017,87623
f010117f:	8b 75 0c             	mov    0xc(%ebp),%esif010117f2018,87667
f0101182:	83 ec 04             	sub    $0x4,%espf01011822020,87774
f0101185:	6a 00                	push   $0x0f01011852021,87823
f0101187:	56                   	push   %esif01011872022,87867
f0101188:	ff 75 08             	pushl  0x8(%ebp)f01011882023,87911
f010118b:	e8 6f ff ff ff       	call   f01010ff <page_lookup>f010118b2024,87960
f0101190:	83 c4 10             	add    $0x10,%espf01011902026,88047
f0101193:	85 c0                	test   %eax,%eaxf01011932027,88097
f0101195:	74 15                	je     f01011ac <page_remove+0x32>f01011952028,88146
f0101197:	89 c3                	mov    %eax,%ebxf01011972029,88213
f0101199:	83 ec 0c             	sub    $0xc,%espf01011992031,88280
f010119c:	50                   	push   %eaxf010119c2032,88329
f010119d:	e8 88 fe ff ff       	call   f010102a <page_decref>f010119d2033,88373
f01011a2:	83 c4 10             	add    $0x10,%espf01011a22035,88484
f01011a5:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)f01011a52036,88534
f01011aa:	74 07                	je     f01011b3 <page_remove+0x39>f01011aa2037,88588
f01011ac:	8d 65 f8             	lea    -0x8(%ebp),%espf01011ac2039,88657
f01011af:	5b                   	pop    %ebxf01011af2040,88712
f01011b0:	5e                   	pop    %esif01011b02041,88756
f01011b1:	5d                   	pop    %ebpf01011b12042,88800
f01011b2:	c3                   	ret    f01011b22043,88844
static inline voidstatic2046,88887
f01011b3:	0f 01 3e             	invlpg (%esi)f01011b32050,88983
f01011b6:	eb f4                	jmp    f01011ac <page_remove+0x32>f01011b62051,89029
f01011b8 <page_insert>:f01011b82053,89097
f01011b8:	55                   	push   %ebpf01011b82055,89123
f01011b9:	89 e5                	mov    %esp,%ebpf01011b92056,89167
f01011bb:	57                   	push   %edif01011bb2057,89216
f01011bc:	56                   	push   %esif01011bc2058,89260
f01011bd:	53                   	push   %ebxf01011bd2059,89304
f01011be:	83 ec 10             	sub    $0x10,%espf01011be2060,89348
f01011c1:	e8 07 1c 00 00       	call   f0102dcd <__x86.get_pc_thunk.di>f01011c12061,89398
f01011c6:	81 c7 46 61 01 00    	add    $0x16146,%edif01011c62062,89470
f01011cc:	8b 75 0c             	mov    0xc(%ebp),%esif01011cc2063,89523
f01011cf:	6a 01                	push   $0x1f01011cf2065,89617
f01011d1:	ff 75 10             	pushl  0x10(%ebp)f01011d12066,89661
f01011d4:	ff 75 08             	pushl  0x8(%ebp)f01011d42067,89711
f01011d7:	e8 77 fe ff ff       	call   f0101053 <pgdir_walk>f01011d72068,89760
f01011dc:	83 c4 10             	add    $0x10,%espf01011dc2070,89850
f01011df:	85 c0                	test   %eax,%eaxf01011df2071,89900
f01011e1:	74 3f                	je     f0101222 <page_insert+0x6a>f01011e12072,89949
f01011e3:	89 c3                	mov    %eax,%ebxf01011e32073,90016
f01011e5:	66 83 46 04 01       	addw   $0x1,0x4(%esi)f01011e52075,90080
f01011ea:	83 ec 08             	sub    $0x8,%espf01011ea2077,90159
f01011ed:	ff 75 10             	pushl  0x10(%ebp)f01011ed2078,90208
f01011f0:	ff 75 08             	pushl  0x8(%ebp)f01011f02079,90258
f01011f3:	e8 82 ff ff ff       	call   f010117a <page_remove>f01011f32080,90307
f01011f8:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01011f82082,90402
f01011fe:	2b 30                	sub    (%eax),%esif01011fe2083,90458
f0101200:	89 f0                	mov    %esi,%eaxf01012002084,90509
f0101202:	c1 f8 03             	sar    $0x3,%eaxf01012022085,90558
f0101205:	c1 e0 0c             	shl    $0xc,%eaxf01012052086,90607
f0101208:	8b 55 14             	mov    0x14(%ebp),%edxf01012082088,90692
f010120b:	83 ca 01             	or     $0x1,%edxf010120b2089,90747
f010120e:	09 d0                	or     %edx,%eaxf010120e2090,90796
f0101210:	89 03                	mov    %eax,(%ebx)f01012102091,90845
f0101212:	83 c4 10             	add    $0x10,%espf01012122093,90907
f0101215:	b8 00 00 00 00       	mov    $0x0,%eaxf01012152094,90957
f010121a:	8d 65 f4             	lea    -0xc(%ebp),%espf010121a2096,91008
f010121d:	5b                   	pop    %ebxf010121d2097,91063
f010121e:	5e                   	pop    %esif010121e2098,91107
f010121f:	5f                   	pop    %edif010121f2099,91151
f0101220:	5d                   	pop    %ebpf01012202100,91195
f0101221:	c3                   	ret    f01012212101,91239
f0101222:	b8 fc ff ff ff       	mov    $0xfffffffc,%eaxf01012222103,91308
f0101227:	eb f1                	jmp    f010121a <page_insert+0x62>f01012272104,91364
f0101229 <mem_init>:f01012292106,91432
f0101229:	55                   	push   %ebpf01012292108,91455
f010122a:	89 e5                	mov    %esp,%ebpf010122a2109,91499
f010122c:	57                   	push   %edif010122c2110,91548
f010122d:	56                   	push   %esif010122d2111,91592
f010122e:	53                   	push   %ebxf010122e2112,91636
f010122f:	83 ec 3c             	sub    $0x3c,%espf010122f2113,91680
f0101232:	e8 96 1b 00 00       	call   f0102dcd <__x86.get_pc_thunk.di>f01012322114,91730
f0101237:	81 c7 d5 60 01 00    	add    $0x160d5,%edif01012372115,91802
	basemem = nvram_read(NVRAM_BASELO);basemem2116,91855
f010123d:	b8 15 00 00 00       	mov    $0x15,%eaxf010123d2117,91892
f0101242:	e8 3c f7 ff ff       	call   f0100983 <nvram_read>f01012422118,91942
f0101247:	89 c3                	mov    %eax,%ebxf01012472119,92003
	extmem = nvram_read(NVRAM_EXTLO);extmem2120,92052
f0101249:	b8 17 00 00 00       	mov    $0x17,%eaxf01012492121,92087
f010124e:	e8 30 f7 ff ff       	call   f0100983 <nvram_read>f010124e2122,92137
f0101253:	89 c6                	mov    %eax,%esif01012532123,92198
	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;ext16mem2124,92247
f0101255:	b8 34 00 00 00       	mov    $0x34,%eaxf01012552125,92291
f010125a:	e8 24 f7 ff ff       	call   f0100983 <nvram_read>f010125a2126,92341
f010125f:	c1 e0 06             	shl    $0x6,%eaxf010125f2127,92402
f0101262:	85 c0                	test   %eax,%eaxf01012622129,92466
f0101264:	0f 85 c4 00 00 00    	jne    f010132e <mem_init+0x105>f01012642130,92515
		totalmem = 1 * 1024 + extmem;totalmem2131,92580
f010126a:	8d 86 00 04 00 00    	lea    0x400(%esi),%eaxf010126a2132,92612
f0101270:	85 f6                	test   %esi,%esif01012702133,92668
f0101272:	0f 44 c3             	cmove  %ebx,%eaxf01012722134,92717
	npages = totalmem / (PGSIZE / 1024);npages2135,92766
f0101275:	89 c1                	mov    %eax,%ecxf01012752136,92804
f0101277:	c1 e9 02             	shr    $0x2,%ecxf01012772137,92853
f010127a:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf010127a2138,92902
f0101280:	89 0a                	mov    %ecx,(%edx)f01012802139,92958
	npages_basemem = basemem / (PGSIZE / 1024);npages_basemem2140,93009
f0101282:	89 da                	mov    %ebx,%edxf01012822141,93054
f0101284:	c1 ea 02             	shr    $0x2,%edxf01012842142,93103
f0101287:	89 97 94 1f 00 00    	mov    %edx,0x1f94(%edi)f01012872143,93152
f010128d:	89 c2                	mov    %eax,%edxf010128d2145,93282
f010128f:	29 da                	sub    %ebx,%edxf010128f2146,93331
f0101291:	52                   	push   %edxf01012912147,93380
f0101292:	53                   	push   %ebxf01012922148,93424
f0101293:	50                   	push   %eaxf01012932149,93468
f0101294:	8d 87 24 d1 fe ff    	lea    -0x12edc(%edi),%eaxf01012942150,93512
f010129a:	50                   	push   %eaxf010129a2151,93571
f010129b:	89 fb                	mov    %edi,%ebxf010129b2152,93615
f010129d:	e8 b6 1b 00 00       	call   f0102e58 <cprintf>f010129d2153,93664
	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);kern_pgdir2154,93722
f01012a2:	b8 00 10 00 00       	mov    $0x1000,%eaxf01012a22155,93766
f01012a7:	e8 0d f7 ff ff       	call   f01009b9 <boot_alloc>f01012a72156,93818
f01012ac:	c7 c6 cc 96 11 f0    	mov    $0xf01196cc,%esif01012ac2157,93879
f01012b2:	89 06                	mov    %eax,(%esi)f01012b22158,93935
f01012b4:	83 c4 0c             	add    $0xc,%espf01012b42160,94018
f01012b7:	68 00 10 00 00       	push   $0x1000f01012b72161,94067
f01012bc:	6a 00                	push   $0x0f01012bc2162,94114
f01012be:	50                   	push   %eaxf01012be2163,94158
f01012bf:	e8 f0 26 00 00       	call   f01039b4 <memset>f01012bf2164,94202
f01012c4:	8b 06                	mov    (%esi),%eaxf01012c42166,94319
f01012c6:	83 c4 10             	add    $0x10,%espf01012c62168,94401
f01012c9:	3d ff ff ff ef       	cmp    $0xefffffff,%eaxf01012c92169,94451
f01012ce:	76 68                	jbe    f0101338 <mem_init+0x10f>f01012ce2170,94507
f01012d0:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edxf01012d02172,94608
f01012d6:	83 ca 05             	or     $0x5,%edxf01012d62173,94669
f01012d9:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)f01012d92174,94718
	pages = (struct PageInfo *) boot_alloc(sizeof(struct PageInfo) * npages);pages2175,94774
f01012df:	c7 c3 c8 96 11 f0    	mov    $0xf01196c8,%ebxf01012df2176,94849
f01012e5:	8b 03                	mov    (%ebx),%eaxf01012e52177,94905
f01012e7:	c1 e0 03             	shl    $0x3,%eaxf01012e72178,94956
f01012ea:	e8 ca f6 ff ff       	call   f01009b9 <boot_alloc>f01012ea2179,95005
f01012ef:	c7 c6 d0 96 11 f0    	mov    $0xf01196d0,%esif01012ef2180,95066
f01012f5:	89 06                	mov    %eax,(%esi)f01012f52181,95122
f01012f7:	83 ec 04             	sub    $0x4,%espf01012f72183,95226
f01012fa:	8b 13                	mov    (%ebx),%edxf01012fa2184,95275
f01012fc:	c1 e2 03             	shl    $0x3,%edxf01012fc2185,95326
f01012ff:	52                   	push   %edxf01012ff2186,95375
f0101300:	6a 00                	push   $0x0f01013002187,95419
f0101302:	50                   	push   %eaxf01013022188,95463
f0101303:	89 fb                	mov    %edi,%ebxf01013032189,95507
f0101305:	e8 aa 26 00 00       	call   f01039b4 <memset>f01013052190,95556
f010130a:	e8 2f fb ff ff       	call   f0100e3e <page_init>f010130a2192,95627
f010130f:	b8 01 00 00 00       	mov    $0x1,%eaxf010130f2194,95713
f0101314:	e8 a2 f7 ff ff       	call   f0100abb <check_page_free_list>f01013142195,95762
f0101319:	83 c4 10             	add    $0x10,%espf01013192197,95846
f010131c:	83 3e 00             	cmpl   $0x0,(%esi)f010131c2198,95896
f010131f:	74 30                	je     f0101351 <mem_init+0x128>f010131f2199,95947
f0101321:	8b 87 90 1f 00 00    	mov    0x1f90(%edi),%eaxf01013212201,96072
f0101327:	be 00 00 00 00       	mov    $0x0,%esif01013272202,96129
f010132c:	eb 43                	jmp    f0101371 <mem_init+0x148>f010132c2203,96178
		totalmem = 16 * 1024 + ext16mem;totalmem2204,96243
f010132e:	05 00 40 00 00       	add    $0x4000,%eaxf010132e2205,96278
f0101333:	e9 3d ff ff ff       	jmp    f0101275 <mem_init+0x4c>f01013332206,96330
f0101338:	50                   	push   %eaxf01013382208,96460
f0101339:	8d 87 60 d1 fe ff    	lea    -0x12ea0(%edi),%eaxf01013392209,96504
f010133f:	50                   	push   %eaxf010133f2210,96563
f0101340:	68 92 00 00 00       	push   $0x92f01013402211,96607
f0101345:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01013452212,96652
f010134b:	50                   	push   %eaxf010134b2213,96711
f010134c:	e8 48 ed ff ff       	call   f0100099 <_panic>f010134c2214,96755
f0101351:	83 ec 04             	sub    $0x4,%espf01013512216,96851
f0101354:	8d 87 26 d8 fe ff    	lea    -0x127da(%edi),%eaxf01013542217,96900
f010135a:	50                   	push   %eaxf010135a2218,96959
f010135b:	68 44 02 00 00       	push   $0x244f010135b2219,97003
f0101360:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01013602220,97049
f0101366:	50                   	push   %eaxf01013662221,97108
f0101367:	e8 2d ed ff ff       	call   f0100099 <_panic>f01013672222,97152
f010136c:	83 c6 01             	add    $0x1,%esif010136c2224,97220
f010136f:	8b 00                	mov    (%eax),%eaxf010136f2226,97329
f0101371:	85 c0                	test   %eax,%eaxf01013712227,97380
f0101373:	75 f7                	jne    f010136c <mem_init+0x143>f01013732228,97429
f0101375:	83 ec 0c             	sub    $0xc,%espf01013752230,97526
f0101378:	6a 00                	push   $0x0f01013782231,97575
f010137a:	e8 b1 fb ff ff       	call   f0100f30 <page_alloc>f010137a2232,97619
f010137f:	89 c3                	mov    %eax,%ebxf010137f2233,97680
f0101381:	83 c4 10             	add    $0x10,%espf01013812234,97729
f0101384:	85 c0                	test   %eax,%eaxf01013842235,97779
f0101386:	0f 84 3f 02 00 00    	je     f01015cb <mem_init+0x3a2>f01013862236,97828
f010138c:	83 ec 0c             	sub    $0xc,%espf010138c2238,97925
f010138f:	6a 00                	push   $0x0f010138f2239,97974
f0101391:	e8 9a fb ff ff       	call   f0100f30 <page_alloc>f01013912240,98018
f0101396:	89 45 d4             	mov    %eax,-0x2c(%ebp)f01013962241,98079
f0101399:	83 c4 10             	add    $0x10,%espf01013992242,98135
f010139c:	85 c0                	test   %eax,%eaxf010139c2243,98185
f010139e:	0f 84 48 02 00 00    	je     f01015ec <mem_init+0x3c3>f010139e2244,98234
f01013a4:	83 ec 0c             	sub    $0xc,%espf01013a42246,98331
f01013a7:	6a 00                	push   $0x0f01013a72247,98380
f01013a9:	e8 82 fb ff ff       	call   f0100f30 <page_alloc>f01013a92248,98424
f01013ae:	89 45 d0             	mov    %eax,-0x30(%ebp)f01013ae2249,98485
f01013b1:	83 c4 10             	add    $0x10,%espf01013b12250,98541
f01013b4:	85 c0                	test   %eax,%eaxf01013b42251,98591
f01013b6:	0f 84 51 02 00 00    	je     f010160d <mem_init+0x3e4>f01013b62252,98640
f01013bc:	3b 5d d4             	cmp    -0x2c(%ebp),%ebxf01013bc2254,98733
f01013bf:	0f 84 69 02 00 00    	je     f010162e <mem_init+0x405>f01013bf2255,98789
f01013c5:	8b 45 d0             	mov    -0x30(%ebp),%eaxf01013c52257,98896
f01013c8:	39 45 d4             	cmp    %eax,-0x2c(%ebp)f01013c82258,98952
f01013cb:	0f 84 7e 02 00 00    	je     f010164f <mem_init+0x426>f01013cb2259,99008
f01013d1:	39 c3                	cmp    %eax,%ebxf01013d12260,99073
f01013d3:	0f 84 76 02 00 00    	je     f010164f <mem_init+0x426>f01013d32261,99122
f01013d9:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01013d92263,99220
f01013df:	8b 08                	mov    (%eax),%ecxf01013df2264,99276
f01013e1:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf01013e12266,99366
f01013e7:	8b 10                	mov    (%eax),%edxf01013e72267,99422
f01013e9:	c1 e2 0c             	shl    $0xc,%edxf01013e92268,99473
f01013ec:	89 d8                	mov    %ebx,%eaxf01013ec2269,99522
f01013ee:	29 c8                	sub    %ecx,%eaxf01013ee2270,99571
f01013f0:	c1 f8 03             	sar    $0x3,%eaxf01013f02271,99620
f01013f3:	c1 e0 0c             	shl    $0xc,%eaxf01013f32272,99669
f01013f6:	39 d0                	cmp    %edx,%eaxf01013f62273,99718
f01013f8:	0f 83 72 02 00 00    	jae    f0101670 <mem_init+0x447>f01013f82274,99767
f01013fe:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf01013fe2275,99832
f0101401:	29 c8                	sub    %ecx,%eaxf01014012276,99888
f0101403:	c1 f8 03             	sar    $0x3,%eaxf01014032277,99937
f0101406:	c1 e0 0c             	shl    $0xc,%eaxf01014062278,99986
f0101409:	39 c2                	cmp    %eax,%edxf01014092280,100074
f010140b:	0f 86 80 02 00 00    	jbe    f0101691 <mem_init+0x468>f010140b2281,100123
f0101411:	8b 45 d0             	mov    -0x30(%ebp),%eaxf01014112282,100188
f0101414:	29 c8                	sub    %ecx,%eaxf01014142283,100244
f0101416:	c1 f8 03             	sar    $0x3,%eaxf01014162284,100293
f0101419:	c1 e0 0c             	shl    $0xc,%eaxf01014192285,100342
f010141c:	39 c2                	cmp    %eax,%edxf010141c2287,100430
f010141e:	0f 86 8e 02 00 00    	jbe    f01016b2 <mem_init+0x489>f010141e2288,100479
	fl = page_free_list;fl2289,100544
f0101424:	8b 87 90 1f 00 00    	mov    0x1f90(%edi),%eaxf01014242290,100566
f010142a:	89 45 c8             	mov    %eax,-0x38(%ebp)f010142a2291,100623
	page_free_list = 0;page_free_list2292,100679
f010142d:	c7 87 90 1f 00 00 00 	movl   $0x0,0x1f90(%edi)f010142d2293,100700
f0101434:	00 00 00 f01014342294,100757
f0101437:	83 ec 0c             	sub    $0xc,%espf01014372296,100802
f010143a:	6a 00                	push   $0x0f010143a2297,100851
f010143c:	e8 ef fa ff ff       	call   f0100f30 <page_alloc>f010143c2298,100895
f0101441:	83 c4 10             	add    $0x10,%espf01014412299,100956
f0101444:	85 c0                	test   %eax,%eaxf01014442300,101006
f0101446:	0f 85 87 02 00 00    	jne    f01016d3 <mem_init+0x4aa>f01014462301,101055
f010144c:	83 ec 0c             	sub    $0xc,%espf010144c2303,101137
f010144f:	53                   	push   %ebxf010144f2304,101186
f0101450:	e8 69 fb ff ff       	call   f0100fbe <page_free>f01014502305,101230
f0101455:	83 c4 04             	add    $0x4,%espf01014552307,101307
f0101458:	ff 75 d4             	pushl  -0x2c(%ebp)f01014582308,101356
f010145b:	e8 5e fb ff ff       	call   f0100fbe <page_free>f010145b2309,101407
f0101460:	83 c4 04             	add    $0x4,%espf01014602311,101484
f0101463:	ff 75 d0             	pushl  -0x30(%ebp)f01014632312,101533
f0101466:	e8 53 fb ff ff       	call   f0100fbe <page_free>f01014662313,101584
f010146b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)f010146b2315,101676
f0101472:	e8 b9 fa ff ff       	call   f0100f30 <page_alloc>f01014722316,101727
f0101477:	89 45 d4             	mov    %eax,-0x2c(%ebp)f01014772317,101788
f010147a:	83 c4 10             	add    $0x10,%espf010147a2318,101844
f010147d:	85 c0                	test   %eax,%eaxf010147d2319,101894
f010147f:	0f 84 6f 02 00 00    	je     f01016f4 <mem_init+0x4cb>f010147f2320,101943
f0101485:	83 ec 0c             	sub    $0xc,%espf01014852322,102040
f0101488:	6a 00                	push   $0x0f01014882323,102089
f010148a:	e8 a1 fa ff ff       	call   f0100f30 <page_alloc>f010148a2324,102133
f010148f:	89 45 d0             	mov    %eax,-0x30(%ebp)f010148f2325,102194
f0101492:	83 c4 10             	add    $0x10,%espf01014922326,102250
f0101495:	85 c0                	test   %eax,%eaxf01014952327,102300
f0101497:	0f 84 78 02 00 00    	je     f0101715 <mem_init+0x4ec>f01014972328,102349
f010149d:	83 ec 0c             	sub    $0xc,%espf010149d2330,102446
f01014a0:	6a 00                	push   $0x0f01014a02331,102495
f01014a2:	e8 89 fa ff ff       	call   f0100f30 <page_alloc>f01014a22332,102539
f01014a7:	89 45 cc             	mov    %eax,-0x34(%ebp)f01014a72333,102600
f01014aa:	83 c4 10             	add    $0x10,%espf01014aa2334,102656
f01014ad:	85 c0                	test   %eax,%eaxf01014ad2335,102706
f01014af:	0f 84 81 02 00 00    	je     f0101736 <mem_init+0x50d>f01014af2336,102755
f01014b5:	8b 4d d0             	mov    -0x30(%ebp),%ecxf01014b52338,102848
f01014b8:	39 4d d4             	cmp    %ecx,-0x2c(%ebp)f01014b82339,102904
f01014bb:	0f 84 96 02 00 00    	je     f0101757 <mem_init+0x52e>f01014bb2340,102960
f01014c1:	8b 45 cc             	mov    -0x34(%ebp),%eaxf01014c12342,103067
f01014c4:	39 45 d4             	cmp    %eax,-0x2c(%ebp)f01014c42343,103123
f01014c7:	0f 84 ab 02 00 00    	je     f0101778 <mem_init+0x54f>f01014c72344,103179
f01014cd:	39 45 d0             	cmp    %eax,-0x30(%ebp)f01014cd2345,103244
f01014d0:	0f 84 a2 02 00 00    	je     f0101778 <mem_init+0x54f>f01014d02346,103300
f01014d6:	83 ec 0c             	sub    $0xc,%espf01014d62348,103390
f01014d9:	6a 00                	push   $0x0f01014d92349,103439
f01014db:	e8 50 fa ff ff       	call   f0100f30 <page_alloc>f01014db2350,103483
f01014e0:	83 c4 10             	add    $0x10,%espf01014e02351,103544
f01014e3:	85 c0                	test   %eax,%eaxf01014e32352,103594
f01014e5:	0f 85 ae 02 00 00    	jne    f0101799 <mem_init+0x570>f01014e52353,103643
f01014eb:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01014eb2354,103708
f01014f1:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf01014f12355,103764
f01014f4:	2b 08                	sub    (%eax),%ecxf01014f42356,103820
f01014f6:	89 c8                	mov    %ecx,%eaxf01014f62357,103871
f01014f8:	c1 f8 03             	sar    $0x3,%eaxf01014f82358,103920
f01014fb:	c1 e0 0c             	shl    $0xc,%eaxf01014fb2359,103969
f01014fe:	89 c1                	mov    %eax,%ecxf01014fe2361,104044
f0101500:	c1 e9 0c             	shr    $0xc,%ecxf01015002362,104093
f0101503:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf01015032363,104142
f0101509:	3b 0a                	cmp    (%edx),%ecxf01015092364,104198
f010150b:	0f 83 a9 02 00 00    	jae    f01017ba <mem_init+0x591>f010150b2365,104249
f0101511:	83 ec 04             	sub    $0x4,%espf01015112367,104349
f0101514:	68 00 10 00 00       	push   $0x1000f01015142368,104398
f0101519:	6a 01                	push   $0x1f01015192369,104445
f010151b:	2d 00 00 00 10       	sub    $0x10000000,%eaxf010151b2371,104522
f0101520:	50                   	push   %eaxf01015202372,104578
f0101521:	89 fb                	mov    %edi,%ebxf01015212373,104622
f0101523:	e8 8c 24 00 00       	call   f01039b4 <memset>f01015232374,104671
f0101528:	83 c4 04             	add    $0x4,%espf01015282376,104745
f010152b:	ff 75 d4             	pushl  -0x2c(%ebp)f010152b2377,104794
f010152e:	e8 8b fa ff ff       	call   f0100fbe <page_free>f010152e2378,104845
f0101533:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)f01015332380,104945
f010153a:	e8 f1 f9 ff ff       	call   f0100f30 <page_alloc>f010153a2381,104996
f010153f:	83 c4 10             	add    $0x10,%espf010153f2382,105057
f0101542:	85 c0                	test   %eax,%eaxf01015422383,105107
f0101544:	0f 84 88 02 00 00    	je     f01017d2 <mem_init+0x5a9>f01015442384,105156
f010154a:	39 45 d4             	cmp    %eax,-0x2c(%ebp)f010154a2386,105247
f010154d:	0f 85 9e 02 00 00    	jne    f01017f1 <mem_init+0x5c8>f010154d2387,105303
f0101553:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01015532389,105401
f0101559:	8b 55 d4             	mov    -0x2c(%ebp),%edxf01015592390,105457
f010155c:	2b 10                	sub    (%eax),%edxf010155c2391,105513
f010155e:	c1 fa 03             	sar    $0x3,%edxf010155e2392,105564
f0101561:	c1 e2 0c             	shl    $0xc,%edxf01015612393,105613
f0101564:	89 d1                	mov    %edx,%ecxf01015642395,105688
f0101566:	c1 e9 0c             	shr    $0xc,%ecxf01015662396,105737
f0101569:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf01015692397,105786
f010156f:	3b 08                	cmp    (%eax),%ecxf010156f2398,105842
f0101571:	0f 83 99 02 00 00    	jae    f0101810 <mem_init+0x5e7>f01015712399,105893
f0101577:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eaxf01015772401,105991
f010157d:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edxf010157d2402,106053
f0101583:	80 38 00             	cmpb   $0x0,(%eax)f01015832404,106129
f0101586:	0f 85 9a 02 00 00    	jne    f0101826 <mem_init+0x5fd>f01015862405,106180
f010158c:	83 c0 01             	add    $0x1,%eaxf010158c2406,106245
f010158f:	39 d0                	cmp    %edx,%eaxf010158f2408,106324
f0101591:	75 f0                	jne    f0101583 <mem_init+0x35a>f01015912409,106373
	page_free_list = fl;page_free_list2410,106438
f0101593:	8b 45 c8             	mov    -0x38(%ebp),%eaxf01015932411,106460
f0101596:	89 87 90 1f 00 00    	mov    %eax,0x1f90(%edi)f01015962412,106516
f010159c:	83 ec 0c             	sub    $0xc,%espf010159c2414,106590
f010159f:	ff 75 d4             	pushl  -0x2c(%ebp)f010159f2415,106639
f01015a2:	e8 17 fa ff ff       	call   f0100fbe <page_free>f01015a22416,106690
f01015a7:	83 c4 04             	add    $0x4,%espf01015a72418,106767
f01015aa:	ff 75 d0             	pushl  -0x30(%ebp)f01015aa2419,106816
f01015ad:	e8 0c fa ff ff       	call   f0100fbe <page_free>f01015ad2420,106867
f01015b2:	83 c4 04             	add    $0x4,%espf01015b22422,106944
f01015b5:	ff 75 cc             	pushl  -0x34(%ebp)f01015b52423,106993
f01015b8:	e8 01 fa ff ff       	call   f0100fbe <page_free>f01015b82424,107044
f01015bd:	8b 87 90 1f 00 00    	mov    0x1f90(%edi),%eaxf01015bd2426,107153
f01015c3:	83 c4 10             	add    $0x10,%espf01015c32427,107210
f01015c6:	e9 81 02 00 00       	jmp    f010184c <mem_init+0x623>f01015c62428,107260
f01015cb:	8d 87 41 d8 fe ff    	lea    -0x127bf(%edi),%eaxf01015cb2430,107357
f01015d1:	50                   	push   %eaxf01015d12431,107416
f01015d2:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01015d22432,107460
f01015d8:	50                   	push   %eaxf01015d82433,107519
f01015d9:	68 4c 02 00 00       	push   $0x24cf01015d92434,107563
f01015de:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01015de2435,107609
f01015e4:	50                   	push   %eaxf01015e42436,107668
f01015e5:	89 fb                	mov    %edi,%ebxf01015e52437,107712
f01015e7:	e8 ad ea ff ff       	call   f0100099 <_panic>f01015e72438,107761
f01015ec:	8d 87 57 d8 fe ff    	lea    -0x127a9(%edi),%eaxf01015ec2440,107850
f01015f2:	50                   	push   %eaxf01015f22441,107909
f01015f3:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01015f32442,107953
f01015f9:	50                   	push   %eaxf01015f92443,108012
f01015fa:	68 4d 02 00 00       	push   $0x24df01015fa2444,108056
f01015ff:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01015ff2445,108102
f0101605:	50                   	push   %eaxf01016052446,108161
f0101606:	89 fb                	mov    %edi,%ebxf01016062447,108205
f0101608:	e8 8c ea ff ff       	call   f0100099 <_panic>f01016082448,108254
f010160d:	8d 87 6d d8 fe ff    	lea    -0x12793(%edi),%eaxf010160d2450,108343
f0101613:	50                   	push   %eaxf01016132451,108402
f0101614:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01016142452,108446
f010161a:	50                   	push   %eaxf010161a2453,108505
f010161b:	68 4e 02 00 00       	push   $0x24ef010161b2454,108549
f0101620:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01016202455,108595
f0101626:	50                   	push   %eaxf01016262456,108654
f0101627:	89 fb                	mov    %edi,%ebxf01016272457,108698
f0101629:	e8 6b ea ff ff       	call   f0100099 <_panic>f01016292458,108747
f010162e:	8d 87 83 d8 fe ff    	lea    -0x1277d(%edi),%eaxf010162e2460,108832
f0101634:	50                   	push   %eaxf01016342461,108891
f0101635:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01016352462,108935
f010163b:	50                   	push   %eaxf010163b2463,108994
f010163c:	68 51 02 00 00       	push   $0x251f010163c2464,109038
f0101641:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01016412465,109084
f0101647:	50                   	push   %eaxf01016472466,109143
f0101648:	89 fb                	mov    %edi,%ebxf01016482467,109187
f010164a:	e8 4a ea ff ff       	call   f0100099 <_panic>f010164a2468,109236
f010164f:	8d 87 84 d1 fe ff    	lea    -0x12e7c(%edi),%eaxf010164f2470,109335
f0101655:	50                   	push   %eaxf01016552471,109394
f0101656:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01016562472,109438
f010165c:	50                   	push   %eaxf010165c2473,109497
f010165d:	68 52 02 00 00       	push   $0x252f010165d2474,109541
f0101662:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01016622475,109587
f0101668:	50                   	push   %eaxf01016682476,109646
f0101669:	89 fb                	mov    %edi,%ebxf01016692477,109690
f010166b:	e8 29 ea ff ff       	call   f0100099 <_panic>f010166b2478,109739
f0101670:	8d 87 95 d8 fe ff    	lea    -0x1276b(%edi),%eaxf01016702480,109835
f0101676:	50                   	push   %eaxf01016762481,109894
f0101677:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01016772482,109938
f010167d:	50                   	push   %eaxf010167d2483,109997
f010167e:	68 53 02 00 00       	push   $0x253f010167e2484,110041
f0101683:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01016832485,110087
f0101689:	50                   	push   %eaxf01016892486,110146
f010168a:	89 fb                	mov    %edi,%ebxf010168a2487,110190
f010168c:	e8 08 ea ff ff       	call   f0100099 <_panic>f010168c2488,110239
f0101691:	8d 87 b2 d8 fe ff    	lea    -0x1274e(%edi),%eaxf01016912490,110335
f0101697:	50                   	push   %eaxf01016972491,110394
f0101698:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01016982492,110438
f010169e:	50                   	push   %eaxf010169e2493,110497
f010169f:	68 54 02 00 00       	push   $0x254f010169f2494,110541
f01016a4:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01016a42495,110587
f01016aa:	50                   	push   %eaxf01016aa2496,110646
f01016ab:	89 fb                	mov    %edi,%ebxf01016ab2497,110690
f01016ad:	e8 e7 e9 ff ff       	call   f0100099 <_panic>f01016ad2498,110739
f01016b2:	8d 87 cf d8 fe ff    	lea    -0x12731(%edi),%eaxf01016b22500,110835
f01016b8:	50                   	push   %eaxf01016b82501,110894
f01016b9:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01016b92502,110938
f01016bf:	50                   	push   %eaxf01016bf2503,110997
f01016c0:	68 55 02 00 00       	push   $0x255f01016c02504,111041
f01016c5:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01016c52505,111087
f01016cb:	50                   	push   %eaxf01016cb2506,111146
f01016cc:	89 fb                	mov    %edi,%ebxf01016cc2507,111190
f01016ce:	e8 c6 e9 ff ff       	call   f0100099 <_panic>f01016ce2508,111239
f01016d3:	8d 87 ec d8 fe ff    	lea    -0x12714(%edi),%eaxf01016d32510,111321
f01016d9:	50                   	push   %eaxf01016d92511,111380
f01016da:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01016da2512,111424
f01016e0:	50                   	push   %eaxf01016e02513,111483
f01016e1:	68 5c 02 00 00       	push   $0x25cf01016e12514,111527
f01016e6:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01016e62515,111573
f01016ec:	50                   	push   %eaxf01016ec2516,111632
f01016ed:	89 fb                	mov    %edi,%ebxf01016ed2517,111676
f01016ef:	e8 a5 e9 ff ff       	call   f0100099 <_panic>f01016ef2518,111725
f01016f4:	8d 87 41 d8 fe ff    	lea    -0x127bf(%edi),%eaxf01016f42520,111814
f01016fa:	50                   	push   %eaxf01016fa2521,111873
f01016fb:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01016fb2522,111917
f0101701:	50                   	push   %eaxf01017012523,111976
f0101702:	68 63 02 00 00       	push   $0x263f01017022524,112020
f0101707:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01017072525,112066
f010170d:	50                   	push   %eaxf010170d2526,112125
f010170e:	89 fb                	mov    %edi,%ebxf010170e2527,112169
f0101710:	e8 84 e9 ff ff       	call   f0100099 <_panic>f01017102528,112218
f0101715:	8d 87 57 d8 fe ff    	lea    -0x127a9(%edi),%eaxf01017152530,112307
f010171b:	50                   	push   %eaxf010171b2531,112366
f010171c:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf010171c2532,112410
f0101722:	50                   	push   %eaxf01017222533,112469
f0101723:	68 64 02 00 00       	push   $0x264f01017232534,112513
f0101728:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01017282535,112559
f010172e:	50                   	push   %eaxf010172e2536,112618
f010172f:	89 fb                	mov    %edi,%ebxf010172f2537,112662
f0101731:	e8 63 e9 ff ff       	call   f0100099 <_panic>f01017312538,112711
f0101736:	8d 87 6d d8 fe ff    	lea    -0x12793(%edi),%eaxf01017362540,112800
f010173c:	50                   	push   %eaxf010173c2541,112859
f010173d:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf010173d2542,112903
f0101743:	50                   	push   %eaxf01017432543,112962
f0101744:	68 65 02 00 00       	push   $0x265f01017442544,113006
f0101749:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01017492545,113052
f010174f:	50                   	push   %eaxf010174f2546,113111
f0101750:	89 fb                	mov    %edi,%ebxf01017502547,113155
f0101752:	e8 42 e9 ff ff       	call   f0100099 <_panic>f01017522548,113204
f0101757:	8d 87 83 d8 fe ff    	lea    -0x1277d(%edi),%eaxf01017572550,113289
f010175d:	50                   	push   %eaxf010175d2551,113348
f010175e:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf010175e2552,113392
f0101764:	50                   	push   %eaxf01017642553,113451
f0101765:	68 67 02 00 00       	push   $0x267f01017652554,113495
f010176a:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010176a2555,113541
f0101770:	50                   	push   %eaxf01017702556,113600
f0101771:	89 fb                	mov    %edi,%ebxf01017712557,113644
f0101773:	e8 21 e9 ff ff       	call   f0100099 <_panic>f01017732558,113693
f0101778:	8d 87 84 d1 fe ff    	lea    -0x12e7c(%edi),%eaxf01017782560,113792
f010177e:	50                   	push   %eaxf010177e2561,113851
f010177f:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf010177f2562,113895
f0101785:	50                   	push   %eaxf01017852563,113954
f0101786:	68 68 02 00 00       	push   $0x268f01017862564,113998
f010178b:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010178b2565,114044
f0101791:	50                   	push   %eaxf01017912566,114103
f0101792:	89 fb                	mov    %edi,%ebxf01017922567,114147
f0101794:	e8 00 e9 ff ff       	call   f0100099 <_panic>f01017942568,114196
f0101799:	8d 87 ec d8 fe ff    	lea    -0x12714(%edi),%eaxf01017992570,114278
f010179f:	50                   	push   %eaxf010179f2571,114337
f01017a0:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01017a02572,114381
f01017a6:	50                   	push   %eaxf01017a62573,114440
f01017a7:	68 69 02 00 00       	push   $0x269f01017a72574,114484
f01017ac:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01017ac2575,114530
f01017b2:	50                   	push   %eaxf01017b22576,114589
f01017b3:	89 fb                	mov    %edi,%ebxf01017b32577,114633
f01017b5:	e8 df e8 ff ff       	call   f0100099 <_panic>f01017b52578,114682
f01017ba:	50                   	push   %eaxf01017ba2580,114803
f01017bb:	8d 87 a4 cf fe ff    	lea    -0x1305c(%edi),%eaxf01017bb2581,114847
f01017c1:	50                   	push   %eaxf01017c12582,114906
f01017c2:	6a 52                	push   $0x52f01017c22583,114950
f01017c4:	8d 87 7c d7 fe ff    	lea    -0x12884(%edi),%eaxf01017c42584,114995
f01017ca:	50                   	push   %eaxf01017ca2585,115054
f01017cb:	89 fb                	mov    %edi,%ebxf01017cb2586,115098
f01017cd:	e8 c7 e8 ff ff       	call   f0100099 <_panic>f01017cd2587,115147
f01017d2:	8d 87 fb d8 fe ff    	lea    -0x12705(%edi),%eaxf01017d22589,115244
f01017d8:	50                   	push   %eaxf01017d82590,115303
f01017d9:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01017d92591,115347
f01017df:	50                   	push   %eaxf01017df2592,115406
f01017e0:	68 6e 02 00 00       	push   $0x26ef01017e02593,115450
f01017e5:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01017e52594,115496
f01017eb:	50                   	push   %eaxf01017eb2595,115555
f01017ec:	e8 a8 e8 ff ff       	call   f0100099 <_panic>f01017ec2596,115599
f01017f1:	8d 87 19 d9 fe ff    	lea    -0x126e7(%edi),%eaxf01017f12598,115682
f01017f7:	50                   	push   %eaxf01017f72599,115741
f01017f8:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01017f82600,115785
f01017fe:	50                   	push   %eaxf01017fe2601,115844
f01017ff:	68 6f 02 00 00       	push   $0x26ff01017ff2602,115888
f0101804:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01018042603,115934
f010180a:	50                   	push   %eaxf010180a2604,115993
f010180b:	e8 89 e8 ff ff       	call   f0100099 <_panic>f010180b2605,116037
f0101810:	52                   	push   %edxf01018102606,116094
f0101811:	8d 87 a4 cf fe ff    	lea    -0x1305c(%edi),%eaxf01018112607,116138
f0101817:	50                   	push   %eaxf01018172608,116197
f0101818:	6a 52                	push   $0x52f01018182609,116241
f010181a:	8d 87 7c d7 fe ff    	lea    -0x12884(%edi),%eaxf010181a2610,116286
f0101820:	50                   	push   %eaxf01018202611,116345
f0101821:	e8 73 e8 ff ff       	call   f0100099 <_panic>f01018212612,116389
f0101826:	8d 87 29 d9 fe ff    	lea    -0x126d7(%edi),%eaxf01018262614,116467
f010182c:	50                   	push   %eaxf010182c2615,116526
f010182d:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf010182d2616,116570
f0101833:	50                   	push   %eaxf01018332617,116629
f0101834:	68 72 02 00 00       	push   $0x272f01018342618,116673
f0101839:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01018392619,116719
f010183f:	50                   	push   %eaxf010183f2620,116778
f0101840:	89 fb                	mov    %edi,%ebxf01018402621,116822
f0101842:	e8 52 e8 ff ff       	call   f0100099 <_panic>f01018422622,116871
f0101847:	83 ee 01             	sub    $0x1,%esif01018472624,116939
f010184a:	8b 00                	mov    (%eax),%eaxf010184a2626,117037
f010184c:	85 c0                	test   %eax,%eaxf010184c2627,117088
f010184e:	75 f7                	jne    f0101847 <mem_init+0x61e>f010184e2628,117137
f0101850:	85 f6                	test   %esi,%esif01018502630,117223
f0101852:	0f 85 a6 07 00 00    	jne    f0101ffe <mem_init+0xdd5>f01018522631,117272
f0101858:	83 ec 0c             	sub    $0xc,%espf01018582633,117382
f010185b:	8d 87 a4 d1 fe ff    	lea    -0x12e5c(%edi),%eaxf010185b2634,117431
f0101861:	50                   	push   %eaxf01018612635,117490
f0101862:	89 fb                	mov    %edi,%ebxf01018622636,117534
f0101864:	e8 ef 15 00 00       	call   f0102e58 <cprintf>f01018642637,117583
	pp0 = pp1 = pp2 = 0;pp02642,117722
f0101869:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)f01018692644,117776
f0101870:	e8 bb f6 ff ff       	call   f0100f30 <page_alloc>f01018702645,117827
f0101875:	89 45 d0             	mov    %eax,-0x30(%ebp)f01018752646,117888
f0101878:	83 c4 10             	add    $0x10,%espf01018782647,117944
f010187b:	85 c0                	test   %eax,%eaxf010187b2648,117994
f010187d:	0f 84 9c 07 00 00    	je     f010201f <mem_init+0xdf6>f010187d2649,118043
f0101883:	83 ec 0c             	sub    $0xc,%espf01018832651,118140
f0101886:	6a 00                	push   $0x0f01018862652,118189
f0101888:	e8 a3 f6 ff ff       	call   f0100f30 <page_alloc>f01018882653,118233
f010188d:	89 c6                	mov    %eax,%esif010188d2654,118294
f010188f:	83 c4 10             	add    $0x10,%espf010188f2655,118343
f0101892:	85 c0                	test   %eax,%eaxf01018922656,118393
f0101894:	0f 84 a4 07 00 00    	je     f010203e <mem_init+0xe15>f01018942657,118442
f010189a:	83 ec 0c             	sub    $0xc,%espf010189a2659,118539
f010189d:	6a 00                	push   $0x0f010189d2660,118588
f010189f:	e8 8c f6 ff ff       	call   f0100f30 <page_alloc>f010189f2661,118632
f01018a4:	89 45 d4             	mov    %eax,-0x2c(%ebp)f01018a42662,118693
f01018a7:	83 c4 10             	add    $0x10,%espf01018a72663,118749
f01018aa:	85 c0                	test   %eax,%eaxf01018aa2664,118799
f01018ac:	0f 84 ab 07 00 00    	je     f010205d <mem_init+0xe34>f01018ac2665,118848
f01018b2:	39 75 d0             	cmp    %esi,-0x30(%ebp)f01018b22669,118956
f01018b5:	0f 84 c1 07 00 00    	je     f010207c <mem_init+0xe53>f01018b52670,119012
f01018bb:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf01018bb2672,119119
f01018be:	39 c6                	cmp    %eax,%esif01018be2673,119175
f01018c0:	0f 84 d5 07 00 00    	je     f010209b <mem_init+0xe72>f01018c02674,119224
f01018c6:	39 45 d0             	cmp    %eax,-0x30(%ebp)f01018c62675,119289
f01018c9:	0f 84 cc 07 00 00    	je     f010209b <mem_init+0xe72>f01018c92676,119345
	fl = page_free_list;fl2679,119460
f01018cf:	8b 87 90 1f 00 00    	mov    0x1f90(%edi),%eaxf01018cf2680,119482
f01018d5:	89 45 c8             	mov    %eax,-0x38(%ebp)f01018d52681,119539
	page_free_list = 0;page_free_list2682,119595
f01018d8:	c7 87 90 1f 00 00 00 	movl   $0x0,0x1f90(%edi)f01018d82683,119616
f01018df:	00 00 00 f01018df2684,119673
f01018e2:	83 ec 0c             	sub    $0xc,%espf01018e22688,119748
f01018e5:	6a 00                	push   $0x0f01018e52689,119797
f01018e7:	e8 44 f6 ff ff       	call   f0100f30 <page_alloc>f01018e72690,119841
f01018ec:	83 c4 10             	add    $0x10,%espf01018ec2691,119902
f01018ef:	85 c0                	test   %eax,%eaxf01018ef2692,119952
f01018f1:	0f 85 c5 07 00 00    	jne    f01020bc <mem_init+0xe93>f01018f12693,120001
f01018f7:	83 ec 04             	sub    $0x4,%espf01018f72697,120174
f01018fa:	8d 45 e4             	lea    -0x1c(%ebp),%eaxf01018fa2698,120223
f01018fd:	50                   	push   %eaxf01018fd2699,120279
f01018fe:	6a 00                	push   $0x0f01018fe2700,120323
f0101900:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf01019002701,120367
f0101906:	ff 30                	pushl  (%eax)f01019062702,120423
f0101908:	e8 f2 f7 ff ff       	call   f01010ff <page_lookup>f01019082703,120469
f010190d:	83 c4 10             	add    $0x10,%espf010190d2704,120531
f0101910:	85 c0                	test   %eax,%eaxf01019102705,120581
f0101912:	0f 85 c3 07 00 00    	jne    f01020db <mem_init+0xeb2>f01019122706,120630
f0101918:	6a 02                	push   $0x2f01019182710,120814
f010191a:	6a 00                	push   $0x0f010191a2711,120858
f010191c:	56                   	push   %esif010191c2712,120902
f010191d:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf010191d2713,120946
f0101923:	ff 30                	pushl  (%eax)f01019232714,121002
f0101925:	e8 8e f8 ff ff       	call   f01011b8 <page_insert>f01019252715,121048
f010192a:	83 c4 10             	add    $0x10,%espf010192a2716,121110
f010192d:	85 c0                	test   %eax,%eaxf010192d2717,121160
f010192f:	0f 89 c5 07 00 00    	jns    f01020fa <mem_init+0xed1>f010192f2718,121209
f0101935:	83 ec 0c             	sub    $0xc,%espf01019352722,121354
f0101938:	ff 75 d0             	pushl  -0x30(%ebp)f01019382723,121403
f010193b:	e8 7e f6 ff ff       	call   f0100fbe <page_free>f010193b2724,121454
f0101940:	6a 02                	push   $0x2f01019402726,121570
f0101942:	6a 00                	push   $0x0f01019422727,121614
f0101944:	56                   	push   %esif01019442728,121658
f0101945:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf01019452729,121702
f010194b:	ff 30                	pushl  (%eax)f010194b2730,121758
f010194d:	e8 66 f8 ff ff       	call   f01011b8 <page_insert>f010194d2731,121804
f0101952:	83 c4 20             	add    $0x20,%espf01019522732,121866
f0101955:	85 c0                	test   %eax,%eaxf01019552733,121916
f0101957:	0f 85 bc 07 00 00    	jne    f0102119 <mem_init+0xef0>f01019572734,121965
f010195d:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf010195d2736,122080
f0101963:	8b 18                	mov    (%eax),%ebxf01019632737,122136
f0101965:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf01019652739,122220
f010196b:	8b 08                	mov    (%eax),%ecxf010196b2740,122276
f010196d:	89 4d cc             	mov    %ecx,-0x34(%ebp)f010196d2741,122327
f0101970:	8b 13                	mov    (%ebx),%edxf01019702742,122383
f0101972:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf01019722743,122434
f0101978:	8b 45 d0             	mov    -0x30(%ebp),%eaxf01019782744,122490
f010197b:	29 c8                	sub    %ecx,%eaxf010197b2745,122546
f010197d:	c1 f8 03             	sar    $0x3,%eaxf010197d2746,122595
f0101980:	c1 e0 0c             	shl    $0xc,%eaxf01019802747,122644
f0101983:	39 c2                	cmp    %eax,%edxf01019832748,122693
f0101985:	0f 85 ad 07 00 00    	jne    f0102138 <mem_init+0xf0f>f01019852749,122742
f010198b:	ba 00 00 00 00       	mov    $0x0,%edxf010198b2751,122862
f0101990:	89 d8                	mov    %ebx,%eaxf01019902752,122911
f0101992:	e8 a7 f0 ff ff       	call   f0100a3e <check_va2pa>f01019922753,122960
f0101997:	89 f2                	mov    %esi,%edxf01019972754,123022
f0101999:	2b 55 cc             	sub    -0x34(%ebp),%edxf01019992755,123071
f010199c:	c1 fa 03             	sar    $0x3,%edxf010199c2756,123127
f010199f:	c1 e2 0c             	shl    $0xc,%edxf010199f2757,123176
f01019a2:	39 d0                	cmp    %edx,%eaxf01019a22758,123225
f01019a4:	0f 85 af 07 00 00    	jne    f0102159 <mem_init+0xf30>f01019a42759,123274
f01019aa:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)f01019aa2761,123366
f01019af:	0f 85 c5 07 00 00    	jne    f010217a <mem_init+0xf51>f01019af2762,123420
f01019b5:	8b 45 d0             	mov    -0x30(%ebp),%eaxf01019b52764,123512
f01019b8:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)f01019b82765,123568
f01019bd:	0f 85 d8 07 00 00    	jne    f010219b <mem_init+0xf72>f01019bd2766,123622
f01019c3:	6a 02                	push   $0x2f01019c32770,123843
f01019c5:	68 00 10 00 00       	push   $0x1000f01019c52771,123887
f01019ca:	ff 75 d4             	pushl  -0x2c(%ebp)f01019ca2772,123934
f01019cd:	53                   	push   %ebxf01019cd2773,123985
f01019ce:	e8 e5 f7 ff ff       	call   f01011b8 <page_insert>f01019ce2774,124029
f01019d3:	83 c4 10             	add    $0x10,%espf01019d32775,124091
f01019d6:	85 c0                	test   %eax,%eaxf01019d62776,124141
f01019d8:	0f 85 de 07 00 00    	jne    f01021bc <mem_init+0xf93>f01019d82777,124190
f01019de:	ba 00 10 00 00       	mov    $0x1000,%edxf01019de2779,124313
f01019e3:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf01019e32780,124365
f01019e9:	8b 00                	mov    (%eax),%eaxf01019e92781,124421
f01019eb:	e8 4e f0 ff ff       	call   f0100a3e <check_va2pa>f01019eb2782,124472
f01019f0:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf01019f02783,124534
f01019f6:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf01019f62784,124590
f01019f9:	2b 0a                	sub    (%edx),%ecxf01019f92785,124646
f01019fb:	89 ca                	mov    %ecx,%edxf01019fb2786,124697
f01019fd:	c1 fa 03             	sar    $0x3,%edxf01019fd2787,124746
f0101a00:	c1 e2 0c             	shl    $0xc,%edxf0101a002788,124795
f0101a03:	39 d0                	cmp    %edx,%eaxf0101a032789,124844
f0101a05:	0f 85 d2 07 00 00    	jne    f01021dd <mem_init+0xfb4>f0101a052790,124893
f0101a0b:	83 ec 0c             	sub    $0xc,%espf0101a0b2794,125013
f0101a0e:	6a 00                	push   $0x0f0101a0e2795,125062
f0101a10:	e8 1b f5 ff ff       	call   f0100f30 <page_alloc>f0101a102796,125106
f0101a15:	83 c4 10             	add    $0x10,%espf0101a152797,125167
f0101a18:	85 c0                	test   %eax,%eaxf0101a182798,125217
f0101a1a:	0f 85 de 07 00 00    	jne    f01021fe <mem_init+0xfd5>f0101a1a2799,125266
f0101a20:	6a 02                	push   $0x2f0101a202803,125466
f0101a22:	68 00 10 00 00       	push   $0x1000f0101a222804,125510
f0101a27:	ff 75 d4             	pushl  -0x2c(%ebp)f0101a272805,125557
f0101a2a:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101a2a2806,125608
f0101a30:	ff 30                	pushl  (%eax)f0101a302807,125664
f0101a32:	e8 81 f7 ff ff       	call   f01011b8 <page_insert>f0101a322808,125710
f0101a37:	83 c4 10             	add    $0x10,%espf0101a372809,125772
f0101a3a:	85 c0                	test   %eax,%eaxf0101a3a2810,125822
f0101a3c:	0f 85 dd 07 00 00    	jne    f010221f <mem_init+0xff6>f0101a3c2811,125871
f0101a42:	ba 00 10 00 00       	mov    $0x1000,%edxf0101a422813,125994
f0101a47:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101a472814,126046
f0101a4d:	8b 00                	mov    (%eax),%eaxf0101a4d2815,126102
f0101a4f:	e8 ea ef ff ff       	call   f0100a3e <check_va2pa>f0101a4f2816,126153
f0101a54:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf0101a542817,126215
f0101a5a:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0101a5a2818,126271
f0101a5d:	2b 0a                	sub    (%edx),%ecxf0101a5d2819,126327
f0101a5f:	89 ca                	mov    %ecx,%edxf0101a5f2820,126378
f0101a61:	c1 fa 03             	sar    $0x3,%edxf0101a612821,126427
f0101a64:	c1 e2 0c             	shl    $0xc,%edxf0101a642822,126476
f0101a67:	39 d0                	cmp    %edx,%eaxf0101a672823,126525
f0101a69:	0f 85 d1 07 00 00    	jne    f0102240 <mem_init+0x1017>f0101a692824,126574
f0101a6f:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101a6f2826,126667
f0101a72:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)f0101a722827,126723
f0101a77:	0f 85 e4 07 00 00    	jne    f0102261 <mem_init+0x1038>f0101a772828,126777
f0101a7d:	83 ec 0c             	sub    $0xc,%espf0101a7d2833,126975
f0101a80:	6a 00                	push   $0x0f0101a802834,127024
f0101a82:	e8 a9 f4 ff ff       	call   f0100f30 <page_alloc>f0101a822835,127068
f0101a87:	83 c4 10             	add    $0x10,%espf0101a872836,127129
f0101a8a:	85 c0                	test   %eax,%eaxf0101a8a2837,127179
f0101a8c:	0f 85 f0 07 00 00    	jne    f0102282 <mem_init+0x1059>f0101a8c2838,127228
	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));ptep2841,127350
f0101a92:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101a922842,127410
f0101a98:	8b 10                	mov    (%eax),%edxf0101a982843,127466
f0101a9a:	8b 02                	mov    (%edx),%eaxf0101a9a2844,127517
f0101a9c:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf0101a9c2845,127568
f0101aa1:	89 c3                	mov    %eax,%ebxf0101aa12847,127650
f0101aa3:	c1 eb 0c             	shr    $0xc,%ebxf0101aa32848,127699
f0101aa6:	c7 c1 c8 96 11 f0    	mov    $0xf01196c8,%ecxf0101aa62849,127748
f0101aac:	3b 19                	cmp    (%ecx),%ebxf0101aac2850,127804
f0101aae:	0f 83 ef 07 00 00    	jae    f01022a3 <mem_init+0x107a>f0101aae2851,127855
f0101ab4:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0101ab42853,127954
f0101ab9:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0101ab92854,128010
f0101abc:	83 ec 04             	sub    $0x4,%espf0101abc2856,128137
f0101abf:	6a 00                	push   $0x0f0101abf2857,128186
f0101ac1:	68 00 10 00 00       	push   $0x1000f0101ac12858,128230
f0101ac6:	52                   	push   %edxf0101ac62859,128277
f0101ac7:	e8 87 f5 ff ff       	call   f0101053 <pgdir_walk>f0101ac72860,128321
f0101acc:	8b 4d e4             	mov    -0x1c(%ebp),%ecxf0101acc2861,128382
f0101acf:	8d 51 04             	lea    0x4(%ecx),%edxf0101acf2862,128438
f0101ad2:	83 c4 10             	add    $0x10,%espf0101ad22863,128492
f0101ad5:	39 d0                	cmp    %edx,%eaxf0101ad52864,128542
f0101ad7:	0f 85 e1 07 00 00    	jne    f01022be <mem_init+0x1095>f0101ad72865,128591
f0101add:	6a 06                	push   $0x6f0101add2869,128777
f0101adf:	68 00 10 00 00       	push   $0x1000f0101adf2870,128821
f0101ae4:	ff 75 d4             	pushl  -0x2c(%ebp)f0101ae42871,128868
f0101ae7:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101ae72872,128919
f0101aed:	ff 30                	pushl  (%eax)f0101aed2873,128975
f0101aef:	e8 c4 f6 ff ff       	call   f01011b8 <page_insert>f0101aef2874,129021
f0101af4:	83 c4 10             	add    $0x10,%espf0101af42875,129083
f0101af7:	85 c0                	test   %eax,%eaxf0101af72876,129133
f0101af9:	0f 85 e0 07 00 00    	jne    f01022df <mem_init+0x10b6>f0101af92877,129182
f0101aff:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101aff2879,129306
f0101b05:	8b 18                	mov    (%eax),%ebxf0101b052880,129362
f0101b07:	ba 00 10 00 00       	mov    $0x1000,%edxf0101b072881,129413
f0101b0c:	89 d8                	mov    %ebx,%eaxf0101b0c2882,129465
f0101b0e:	e8 2b ef ff ff       	call   f0100a3e <check_va2pa>f0101b0e2883,129514
f0101b13:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf0101b132885,129609
f0101b19:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0101b192886,129665
f0101b1c:	2b 0a                	sub    (%edx),%ecxf0101b1c2887,129721
f0101b1e:	89 ca                	mov    %ecx,%edxf0101b1e2888,129772
f0101b20:	c1 fa 03             	sar    $0x3,%edxf0101b202889,129821
f0101b23:	c1 e2 0c             	shl    $0xc,%edxf0101b232890,129870
f0101b26:	39 d0                	cmp    %edx,%eaxf0101b262891,129919
f0101b28:	0f 85 d2 07 00 00    	jne    f0102300 <mem_init+0x10d7>f0101b282892,129968
f0101b2e:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101b2e2894,130061
f0101b31:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)f0101b312895,130117
f0101b36:	0f 85 e5 07 00 00    	jne    f0102321 <mem_init+0x10f8>f0101b362896,130171
f0101b3c:	83 ec 04             	sub    $0x4,%espf0101b3c2898,130298
f0101b3f:	6a 00                	push   $0x0f0101b3f2899,130347
f0101b41:	68 00 10 00 00       	push   $0x1000f0101b412900,130391
f0101b46:	53                   	push   %ebxf0101b462901,130438
f0101b47:	e8 07 f5 ff ff       	call   f0101053 <pgdir_walk>f0101b472902,130482
f0101b4c:	83 c4 10             	add    $0x10,%espf0101b4c2903,130543
f0101b4f:	f6 00 04             	testb  $0x4,(%eax)f0101b4f2904,130593
f0101b52:	0f 84 ea 07 00 00    	je     f0102342 <mem_init+0x1119>f0101b522905,130644
f0101b58:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101b582907,130742
f0101b5e:	8b 00                	mov    (%eax),%eaxf0101b5e2908,130798
f0101b60:	f6 00 04             	testb  $0x4,(%eax)f0101b602909,130849
f0101b63:	0f 84 fa 07 00 00    	je     f0102363 <mem_init+0x113a>f0101b632910,130900
f0101b69:	6a 02                	push   $0x2f0101b692914,131085
f0101b6b:	68 00 10 00 00       	push   $0x1000f0101b6b2915,131129
f0101b70:	ff 75 d4             	pushl  -0x2c(%ebp)f0101b702916,131176
f0101b73:	50                   	push   %eaxf0101b732917,131227
f0101b74:	e8 3f f6 ff ff       	call   f01011b8 <page_insert>f0101b742918,131271
f0101b79:	83 c4 10             	add    $0x10,%espf0101b792919,131333
f0101b7c:	85 c0                	test   %eax,%eaxf0101b7c2920,131383
f0101b7e:	0f 85 00 08 00 00    	jne    f0102384 <mem_init+0x115b>f0101b7e2921,131432
f0101b84:	83 ec 04             	sub    $0x4,%espf0101b842923,131559
f0101b87:	6a 00                	push   $0x0f0101b872924,131608
f0101b89:	68 00 10 00 00       	push   $0x1000f0101b892925,131652
f0101b8e:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101b8e2926,131699
f0101b94:	ff 30                	pushl  (%eax)f0101b942927,131755
f0101b96:	e8 b8 f4 ff ff       	call   f0101053 <pgdir_walk>f0101b962928,131801
f0101b9b:	83 c4 10             	add    $0x10,%espf0101b9b2929,131862
f0101b9e:	f6 00 02             	testb  $0x2,(%eax)f0101b9e2930,131912
f0101ba1:	0f 84 fe 07 00 00    	je     f01023a5 <mem_init+0x117c>f0101ba12931,131963
f0101ba7:	83 ec 04             	sub    $0x4,%espf0101ba72933,132093
f0101baa:	6a 00                	push   $0x0f0101baa2934,132142
f0101bac:	68 00 10 00 00       	push   $0x1000f0101bac2935,132186
f0101bb1:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101bb12936,132233
f0101bb7:	ff 30                	pushl  (%eax)f0101bb72937,132289
f0101bb9:	e8 95 f4 ff ff       	call   f0101053 <pgdir_walk>f0101bb92938,132335
f0101bbe:	83 c4 10             	add    $0x10,%espf0101bbe2939,132396
f0101bc1:	f6 00 04             	testb  $0x4,(%eax)f0101bc12940,132446
f0101bc4:	0f 85 fc 07 00 00    	jne    f01023c6 <mem_init+0x119d>f0101bc42941,132497
f0101bca:	6a 02                	push   $0x2f0101bca2945,132708
f0101bcc:	68 00 00 40 00       	push   $0x400000f0101bcc2946,132752
f0101bd1:	ff 75 d0             	pushl  -0x30(%ebp)f0101bd12947,132801
f0101bd4:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101bd42948,132852
f0101bda:	ff 30                	pushl  (%eax)f0101bda2949,132908
f0101bdc:	e8 d7 f5 ff ff       	call   f01011b8 <page_insert>f0101bdc2950,132954
f0101be1:	83 c4 10             	add    $0x10,%espf0101be12951,133016
f0101be4:	85 c0                	test   %eax,%eaxf0101be42952,133066
f0101be6:	0f 89 fb 07 00 00    	jns    f01023e7 <mem_init+0x11be>f0101be62953,133115
f0101bec:	6a 02                	push   $0x2f0101bec2957,133290
f0101bee:	68 00 10 00 00       	push   $0x1000f0101bee2958,133334
f0101bf3:	56                   	push   %esif0101bf32959,133381
f0101bf4:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101bf42960,133425
f0101bfa:	ff 30                	pushl  (%eax)f0101bfa2961,133481
f0101bfc:	e8 b7 f5 ff ff       	call   f01011b8 <page_insert>f0101bfc2962,133527
f0101c01:	83 c4 10             	add    $0x10,%espf0101c012963,133589
f0101c04:	85 c0                	test   %eax,%eaxf0101c042964,133639
f0101c06:	0f 85 fc 07 00 00    	jne    f0102408 <mem_init+0x11df>f0101c062965,133688
f0101c0c:	83 ec 04             	sub    $0x4,%espf0101c0c2967,133818
f0101c0f:	6a 00                	push   $0x0f0101c0f2968,133867
f0101c11:	68 00 10 00 00       	push   $0x1000f0101c112969,133911
f0101c16:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101c162970,133958
f0101c1c:	ff 30                	pushl  (%eax)f0101c1c2971,134014
f0101c1e:	e8 30 f4 ff ff       	call   f0101053 <pgdir_walk>f0101c1e2972,134060
f0101c23:	83 c4 10             	add    $0x10,%espf0101c232973,134121
f0101c26:	f6 00 04             	testb  $0x4,(%eax)f0101c262974,134171
f0101c29:	0f 85 fa 07 00 00    	jne    f0102429 <mem_init+0x1200>f0101c292975,134222
f0101c2f:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101c2f2979,134401
f0101c35:	8b 18                	mov    (%eax),%ebxf0101c352980,134457
f0101c37:	ba 00 00 00 00       	mov    $0x0,%edxf0101c372981,134508
f0101c3c:	89 d8                	mov    %ebx,%eaxf0101c3c2982,134557
f0101c3e:	e8 fb ed ff ff       	call   f0100a3e <check_va2pa>f0101c3e2983,134606
f0101c43:	89 c2                	mov    %eax,%edxf0101c432984,134668
f0101c45:	89 45 cc             	mov    %eax,-0x34(%ebp)f0101c452985,134717
f0101c48:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0101c482986,134773
f0101c4e:	89 f1                	mov    %esi,%ecxf0101c4e2987,134829
f0101c50:	2b 08                	sub    (%eax),%ecxf0101c502988,134878
f0101c52:	89 c8                	mov    %ecx,%eaxf0101c522989,134929
f0101c54:	c1 f8 03             	sar    $0x3,%eaxf0101c542990,134978
f0101c57:	c1 e0 0c             	shl    $0xc,%eaxf0101c572991,135027
f0101c5a:	39 c2                	cmp    %eax,%edxf0101c5a2992,135076
f0101c5c:	0f 85 e8 07 00 00    	jne    f010244a <mem_init+0x1221>f0101c5c2993,135125
f0101c62:	ba 00 10 00 00       	mov    $0x1000,%edxf0101c622995,135249
f0101c67:	89 d8                	mov    %ebx,%eaxf0101c672996,135301
f0101c69:	e8 d0 ed ff ff       	call   f0100a3e <check_va2pa>f0101c692997,135350
f0101c6e:	39 45 cc             	cmp    %eax,-0x34(%ebp)f0101c6e2998,135412
f0101c71:	0f 85 f4 07 00 00    	jne    f010246b <mem_init+0x1242>f0101c712999,135468
f0101c77:	66 83 7e 04 02       	cmpw   $0x2,0x4(%esi)f0101c773002,135604
f0101c7c:	0f 85 0a 08 00 00    	jne    f010248c <mem_init+0x1263>f0101c7c3003,135658
f0101c82:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101c823005,135751
f0101c85:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)f0101c853006,135807
f0101c8a:	0f 85 1d 08 00 00    	jne    f01024ad <mem_init+0x1284>f0101c8a3007,135861
f0101c90:	83 ec 0c             	sub    $0xc,%espf0101c903011,136013
f0101c93:	6a 00                	push   $0x0f0101c933012,136062
f0101c95:	e8 96 f2 ff ff       	call   f0100f30 <page_alloc>f0101c953013,136106
f0101c9a:	83 c4 10             	add    $0x10,%espf0101c9a3014,136167
f0101c9d:	85 c0                	test   %eax,%eaxf0101c9d3015,136217
f0101c9f:	0f 84 29 08 00 00    	je     f01024ce <mem_init+0x12a5>f0101c9f3016,136266
f0101ca5:	39 45 d4             	cmp    %eax,-0x2c(%ebp)f0101ca53017,136332
f0101ca8:	0f 85 20 08 00 00    	jne    f01024ce <mem_init+0x12a5>f0101ca83018,136388
f0101cae:	83 ec 08             	sub    $0x8,%espf0101cae3022,136535
f0101cb1:	6a 00                	push   $0x0f0101cb13023,136584
f0101cb3:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101cb33024,136628
f0101cb9:	89 45 cc             	mov    %eax,-0x34(%ebp)f0101cb93025,136684
f0101cbc:	ff 30                	pushl  (%eax)f0101cbc3026,136740
f0101cbe:	e8 b7 f4 ff ff       	call   f010117a <page_remove>f0101cbe3027,136786
f0101cc3:	83 c4 08             	add    $0x8,%espf0101cc33029,136870
f0101cc6:	6a ff                	push   $0xfffffffff0101cc63030,136919
f0101cc8:	8d 87 a9 d9 fe ff    	lea    -0x12657(%edi),%eaxf0101cc83031,136970
f0101cce:	50                   	push   %eaxf0101cce3032,137029
f0101ccf:	89 fb                	mov    %edi,%ebxf0101ccf3033,137073
f0101cd1:	e8 82 11 00 00       	call   f0102e58 <cprintf>f0101cd13034,137122
f0101cd6:	8b 45 cc             	mov    -0x34(%ebp),%eaxf0101cd63036,137225
f0101cd9:	8b 18                	mov    (%eax),%ebxf0101cd93037,137281
f0101cdb:	ba 00 00 00 00       	mov    $0x0,%edxf0101cdb3038,137332
f0101ce0:	89 d8                	mov    %ebx,%eaxf0101ce03039,137381
f0101ce2:	e8 57 ed ff ff       	call   f0100a3e <check_va2pa>f0101ce23040,137430
f0101ce7:	83 c4 10             	add    $0x10,%espf0101ce73041,137492
f0101cea:	83 f8 ff             	cmp    $0xffffffff,%eaxf0101cea3042,137542
f0101ced:	0f 85 fc 07 00 00    	jne    f01024ef <mem_init+0x12c6>f0101ced3043,137598
f0101cf3:	ba 00 10 00 00       	mov    $0x1000,%edxf0101cf33045,137722
f0101cf8:	89 d8                	mov    %ebx,%eaxf0101cf83046,137774
f0101cfa:	e8 3f ed ff ff       	call   f0100a3e <check_va2pa>f0101cfa3047,137823
f0101cff:	c7 c2 d0 96 11 f0    	mov    $0xf01196d0,%edxf0101cff3048,137885
f0101d05:	89 f1                	mov    %esi,%ecxf0101d053049,137941
f0101d07:	2b 0a                	sub    (%edx),%ecxf0101d073050,137990
f0101d09:	89 ca                	mov    %ecx,%edxf0101d093051,138041
f0101d0b:	c1 fa 03             	sar    $0x3,%edxf0101d0b3052,138090
f0101d0e:	c1 e2 0c             	shl    $0xc,%edxf0101d0e3053,138139
f0101d11:	39 d0                	cmp    %edx,%eaxf0101d113054,138188
f0101d13:	0f 85 f7 07 00 00    	jne    f0102510 <mem_init+0x12e7>f0101d133055,138237
f0101d19:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)f0101d193057,138330
f0101d1e:	0f 85 0d 08 00 00    	jne    f0102531 <mem_init+0x1308>f0101d1e3058,138384
f0101d24:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101d243060,138477
f0101d27:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)f0101d273061,138533
f0101d2c:	0f 85 20 08 00 00    	jne    f0102552 <mem_init+0x1329>f0101d2c3062,138587
f0101d32:	6a 00                	push   $0x0f0101d323066,138753
f0101d34:	68 00 10 00 00       	push   $0x1000f0101d343067,138797
f0101d39:	56                   	push   %esif0101d393068,138844
f0101d3a:	53                   	push   %ebxf0101d3a3069,138888
f0101d3b:	e8 78 f4 ff ff       	call   f01011b8 <page_insert>f0101d3b3070,138932
f0101d40:	83 c4 10             	add    $0x10,%espf0101d403071,138994
f0101d43:	85 c0                	test   %eax,%eaxf0101d433072,139044
f0101d45:	0f 85 28 08 00 00    	jne    f0102573 <mem_init+0x134a>f0101d453073,139093
f0101d4b:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)f0101d4b3075,139181
f0101d50:	0f 84 3e 08 00 00    	je     f0102594 <mem_init+0x136b>f0101d503076,139235
f0101d56:	83 3e 00             	cmpl   $0x0,(%esi)f0101d563078,139332
f0101d59:	0f 85 56 08 00 00    	jne    f01025b5 <mem_init+0x138c>f0101d593079,139383
f0101d5f:	83 ec 08             	sub    $0x8,%espf0101d5f3083,139535
f0101d62:	68 00 10 00 00       	push   $0x1000f0101d623084,139584
f0101d67:	c7 c3 cc 96 11 f0    	mov    $0xf01196cc,%ebxf0101d673085,139631
f0101d6d:	ff 33                	pushl  (%ebx)f0101d6d3086,139687
f0101d6f:	e8 06 f4 ff ff       	call   f010117a <page_remove>f0101d6f3087,139733
f0101d74:	8b 1b                	mov    (%ebx),%ebxf0101d743089,139840
f0101d76:	ba 00 00 00 00       	mov    $0x0,%edxf0101d763090,139891
f0101d7b:	89 d8                	mov    %ebx,%eaxf0101d7b3091,139940
f0101d7d:	e8 bc ec ff ff       	call   f0100a3e <check_va2pa>f0101d7d3092,139989
f0101d82:	83 c4 10             	add    $0x10,%espf0101d823093,140051
f0101d85:	83 f8 ff             	cmp    $0xffffffff,%eaxf0101d853094,140101
f0101d88:	0f 85 48 08 00 00    	jne    f01025d6 <mem_init+0x13ad>f0101d883095,140157
f0101d8e:	ba 00 10 00 00       	mov    $0x1000,%edxf0101d8e3097,140271
f0101d93:	89 d8                	mov    %ebx,%eaxf0101d933098,140323
f0101d95:	e8 a4 ec ff ff       	call   f0100a3e <check_va2pa>f0101d953099,140372
f0101d9a:	83 f8 ff             	cmp    $0xffffffff,%eaxf0101d9a3100,140434
f0101d9d:	0f 85 54 08 00 00    	jne    f01025f7 <mem_init+0x13ce>f0101d9d3101,140490
f0101da3:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)f0101da33103,140583
f0101da8:	0f 85 6a 08 00 00    	jne    f0102618 <mem_init+0x13ef>f0101da83104,140637
f0101dae:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0101dae3106,140730
f0101db1:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)f0101db13107,140786
f0101db6:	0f 85 7d 08 00 00    	jne    f0102639 <mem_init+0x1410>f0101db63108,140840
f0101dbc:	83 ec 0c             	sub    $0xc,%espf0101dbc3112,140994
f0101dbf:	6a 00                	push   $0x0f0101dbf3113,141043
f0101dc1:	e8 6a f1 ff ff       	call   f0100f30 <page_alloc>f0101dc13114,141087
f0101dc6:	83 c4 10             	add    $0x10,%espf0101dc63115,141148
f0101dc9:	39 c6                	cmp    %eax,%esif0101dc93116,141198
f0101dcb:	0f 85 89 08 00 00    	jne    f010265a <mem_init+0x1431>f0101dcb3117,141247
f0101dd1:	85 c0                	test   %eax,%eaxf0101dd13118,141313
f0101dd3:	0f 84 81 08 00 00    	je     f010265a <mem_init+0x1431>f0101dd33119,141362
f0101dd9:	83 ec 0c             	sub    $0xc,%espf0101dd93123,141483
f0101ddc:	6a 00                	push   $0x0f0101ddc3124,141532
f0101dde:	e8 4d f1 ff ff       	call   f0100f30 <page_alloc>f0101dde3125,141576
f0101de3:	83 c4 10             	add    $0x10,%espf0101de33126,141637
f0101de6:	85 c0                	test   %eax,%eaxf0101de63127,141687
f0101de8:	0f 85 8d 08 00 00    	jne    f010267b <mem_init+0x1452>f0101de83128,141736
f0101dee:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101dee3132,141880
f0101df4:	8b 08                	mov    (%eax),%ecxf0101df43133,141936
f0101df6:	8b 11                	mov    (%ecx),%edxf0101df63134,141987
f0101df8:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf0101df83135,142038
f0101dfe:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0101dfe3136,142094
f0101e04:	8b 5d d0             	mov    -0x30(%ebp),%ebxf0101e043137,142150
f0101e07:	2b 18                	sub    (%eax),%ebxf0101e073138,142206
f0101e09:	89 d8                	mov    %ebx,%eaxf0101e093139,142257
f0101e0b:	c1 f8 03             	sar    $0x3,%eaxf0101e0b3140,142306
f0101e0e:	c1 e0 0c             	shl    $0xc,%eaxf0101e0e3141,142355
f0101e11:	39 c2                	cmp    %eax,%edxf0101e113142,142404
f0101e13:	0f 85 83 08 00 00    	jne    f010269c <mem_init+0x1473>f0101e133143,142453
f0101e19:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)f0101e193145,142539
f0101e1f:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0101e1f3147,142617
f0101e22:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)f0101e223148,142673
f0101e27:	0f 85 90 08 00 00    	jne    f01026bd <mem_init+0x1494>f0101e273149,142727
f0101e2d:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0101e2d3151,142811
f0101e30:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)f0101e303152,142867
f0101e36:	83 ec 0c             	sub    $0xc,%espf0101e363156,142982
f0101e39:	50                   	push   %eaxf0101e393157,143031
f0101e3a:	e8 7f f1 ff ff       	call   f0100fbe <page_free>f0101e3a3158,143075
	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);va3159,143135
	ptep = pgdir_walk(kern_pgdir, va, 1);ptep3160,143180
f0101e3f:	83 c4 0c             	add    $0xc,%espf0101e3f3161,143219
f0101e42:	6a 01                	push   $0x1f0101e423162,143268
f0101e44:	68 00 10 40 00       	push   $0x401000f0101e443163,143312
f0101e49:	c7 c3 cc 96 11 f0    	mov    $0xf01196cc,%ebxf0101e493164,143361
f0101e4f:	ff 33                	pushl  (%ebx)f0101e4f3165,143417
f0101e51:	e8 fd f1 ff ff       	call   f0101053 <pgdir_walk>f0101e513166,143463
f0101e56:	89 45 cc             	mov    %eax,-0x34(%ebp)f0101e563167,143524
f0101e59:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0101e593168,143580
	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));ptep13169,143636
f0101e5c:	8b 1b                	mov    (%ebx),%ebxf0101e5c3170,143693
f0101e5e:	8b 53 04             	mov    0x4(%ebx),%edxf0101e5e3171,143744
f0101e61:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf0101e613172,143798
f0101e67:	c7 c1 c8 96 11 f0    	mov    $0xf01196c8,%ecxf0101e673174,143880
f0101e6d:	8b 09                	mov    (%ecx),%ecxf0101e6d3175,143936
f0101e6f:	89 d0                	mov    %edx,%eaxf0101e6f3176,143987
f0101e71:	c1 e8 0c             	shr    $0xc,%eaxf0101e713177,144036
f0101e74:	83 c4 10             	add    $0x10,%espf0101e743178,144085
f0101e77:	39 c8                	cmp    %ecx,%eaxf0101e773179,144135
f0101e79:	0f 83 5f 08 00 00    	jae    f01026de <mem_init+0x14b5>f0101e793180,144184
f0101e7f:	81 ea fc ff ff 0f    	sub    $0xffffffc,%edxf0101e7f3182,144284
f0101e85:	39 55 cc             	cmp    %edx,-0x34(%ebp)f0101e853183,144339
f0101e88:	0f 85 6b 08 00 00    	jne    f01026f9 <mem_init+0x14d0>f0101e883184,144395
f0101e8e:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)f0101e8e3186,144487
f0101e95:	8b 5d d0             	mov    -0x30(%ebp),%ebxf0101e953188,144559
f0101e98:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)f0101e983189,144615
f0101e9e:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0101e9e3191,144702
f0101ea4:	2b 18                	sub    (%eax),%ebxf0101ea43192,144758
f0101ea6:	89 d8                	mov    %ebx,%eaxf0101ea63193,144809
f0101ea8:	c1 f8 03             	sar    $0x3,%eaxf0101ea83194,144858
f0101eab:	c1 e0 0c             	shl    $0xc,%eaxf0101eab3195,144907
f0101eae:	89 c2                	mov    %eax,%edxf0101eae3197,144982
f0101eb0:	c1 ea 0c             	shr    $0xc,%edxf0101eb03198,145031
f0101eb3:	39 d1                	cmp    %edx,%ecxf0101eb33199,145080
f0101eb5:	0f 86 5f 08 00 00    	jbe    f010271a <mem_init+0x14f1>f0101eb53200,145129
f0101ebb:	83 ec 04             	sub    $0x4,%espf0101ebb3204,145277
f0101ebe:	68 00 10 00 00       	push   $0x1000f0101ebe3205,145326
f0101ec3:	68 ff 00 00 00       	push   $0xfff0101ec33206,145373
f0101ec8:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0101ec83208,145451
f0101ecd:	50                   	push   %eaxf0101ecd3209,145507
f0101ece:	89 fb                	mov    %edi,%ebxf0101ece3210,145551
f0101ed0:	e8 df 1a 00 00       	call   f01039b4 <memset>f0101ed03211,145600
f0101ed5:	8b 5d d0             	mov    -0x30(%ebp),%ebxf0101ed53213,145674
f0101ed8:	89 1c 24             	mov    %ebx,(%esp)f0101ed83214,145730
f0101edb:	e8 de f0 ff ff       	call   f0100fbe <page_free>f0101edb3215,145781
f0101ee0:	83 c4 0c             	add    $0xc,%espf0101ee03217,145874
f0101ee3:	6a 01                	push   $0x1f0101ee33218,145923
f0101ee5:	6a 00                	push   $0x0f0101ee53219,145967
f0101ee7:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101ee73220,146011
f0101eed:	ff 30                	pushl  (%eax)f0101eed3221,146067
f0101eef:	e8 5f f1 ff ff       	call   f0101053 <pgdir_walk>f0101eef3222,146113
f0101ef4:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0101ef43224,146207
f0101efa:	2b 18                	sub    (%eax),%ebxf0101efa3225,146263
f0101efc:	89 da                	mov    %ebx,%edxf0101efc3226,146314
f0101efe:	c1 fa 03             	sar    $0x3,%edxf0101efe3227,146363
f0101f01:	c1 e2 0c             	shl    $0xc,%edxf0101f013228,146412
f0101f04:	89 d1                	mov    %edx,%ecxf0101f043230,146487
f0101f06:	c1 e9 0c             	shr    $0xc,%ecxf0101f063231,146536
f0101f09:	83 c4 10             	add    $0x10,%espf0101f093232,146585
f0101f0c:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf0101f0c3233,146635
f0101f12:	3b 08                	cmp    (%eax),%ecxf0101f123234,146691
f0101f14:	0f 83 18 08 00 00    	jae    f0102732 <mem_init+0x1509>f0101f143235,146742
f0101f1a:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eaxf0101f1a3237,146841
	ptep = (pte_t *) page2kva(pp0);ptep3238,146903
f0101f20:	89 45 e4             	mov    %eax,-0x1c(%ebp)f0101f203239,146936
f0101f23:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edxf0101f233240,146992
f0101f29:	f6 00 01             	testb  $0x1,(%eax)f0101f293243,147110
f0101f2c:	0f 85 18 08 00 00    	jne    f010274a <mem_init+0x1521>f0101f2c3244,147161
f0101f32:	83 c0 04             	add    $0x4,%eaxf0101f323245,147227
f0101f35:	39 d0                	cmp    %edx,%eaxf0101f353247,147305
f0101f37:	75 f0                	jne    f0101f29 <mem_init+0xd00>f0101f373248,147354
f0101f39:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0101f393250,147439
f0101f3f:	89 45 cc             	mov    %eax,-0x34(%ebp)f0101f3f3251,147495
f0101f42:	8b 00                	mov    (%eax),%eaxf0101f423252,147551
f0101f44:	c7 00 00 00 00 00    	movl   $0x0,(%eax)f0101f443253,147602
f0101f4a:	8b 4d d0             	mov    -0x30(%ebp),%ecxf0101f4a3255,147671
f0101f4d:	66 c7 41 04 00 00    	movw   $0x0,0x4(%ecx)f0101f4d3256,147727
	page_free_list = fl;page_free_list3259,147806
f0101f53:	8b 5d c8             	mov    -0x38(%ebp),%ebxf0101f533260,147828
f0101f56:	89 9f 90 1f 00 00    	mov    %ebx,0x1f90(%edi)f0101f563261,147884
f0101f5c:	83 ec 0c             	sub    $0xc,%espf0101f5c3265,147986
f0101f5f:	51                   	push   %ecxf0101f5f3266,148035
f0101f60:	e8 59 f0 ff ff       	call   f0100fbe <page_free>f0101f603267,148079
f0101f65:	89 34 24             	mov    %esi,(%esp)f0101f653269,148156
f0101f68:	e8 51 f0 ff ff       	call   f0100fbe <page_free>f0101f683270,148207
f0101f6d:	83 c4 04             	add    $0x4,%espf0101f6d3272,148284
f0101f70:	ff 75 d4             	pushl  -0x2c(%ebp)f0101f703273,148333
f0101f73:	e8 46 f0 ff ff       	call   f0100fbe <page_free>f0101f733274,148384
f0101f78:	8d 87 0e da fe ff    	lea    -0x125f2(%edi),%eaxf0101f783277,148484
f0101f7e:	89 04 24             	mov    %eax,(%esp)f0101f7e3278,148543
f0101f81:	89 fb                	mov    %edi,%ebxf0101f813279,148594
f0101f83:	e8 d0 0e 00 00       	call   f0102e58 <cprintf>f0101f833280,148643
	pgdir = kern_pgdir;pgdir3281,148701
f0101f88:	8b 45 cc             	mov    -0x34(%ebp),%eaxf0101f883282,148722
f0101f8b:	8b 18                	mov    (%eax),%ebxf0101f8b3283,148778
	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);n3284,148829
f0101f8d:	c7 c0 c8 96 11 f0    	mov    $0xf01196c8,%eaxf0101f8d3285,148883
f0101f93:	8b 00                	mov    (%eax),%eaxf0101f933286,148939
f0101f95:	89 45 c8             	mov    %eax,-0x38(%ebp)f0101f953287,148990
f0101f98:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eaxf0101f983288,149046
f0101f9f:	25 00 f0 ff ff       	and    $0xfffff000,%eaxf0101f9f3289,149105
f0101fa4:	89 45 d4             	mov    %eax,-0x2c(%ebp)f0101fa43290,149161
f0101fa7:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0101fa73292,149279
f0101fad:	8b 00                	mov    (%eax),%eaxf0101fad3293,149335
f0101faf:	89 45 c4             	mov    %eax,-0x3c(%ebp)f0101faf3294,149386
f0101fb2:	89 45 cc             	mov    %eax,-0x34(%ebp)f0101fb23296,149473
f0101fb5:	05 00 00 00 10       	add    $0x10000000,%eaxf0101fb53298,149565
f0101fba:	83 c4 10             	add    $0x10,%espf0101fba3299,149621
f0101fbd:	be 00 00 00 00       	mov    $0x0,%esif0101fbd3301,149704
f0101fc2:	89 5d d0             	mov    %ebx,-0x30(%ebp)f0101fc23302,149753
f0101fc5:	89 c3                	mov    %eax,%ebxf0101fc53303,149809
f0101fc7:	39 75 d4             	cmp    %esi,-0x2c(%ebp)f0101fc73304,149858
f0101fca:	0f 86 d9 07 00 00    	jbe    f01027a9 <mem_init+0x1580>f0101fca3305,149914
f0101fd0:	8d 96 00 00 00 ef    	lea    -0x11000000(%esi),%edxf0101fd03307,150042
f0101fd6:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0101fd63308,150104
f0101fd9:	e8 60 ea ff ff       	call   f0100a3e <check_va2pa>f0101fd93309,150160
f0101fde:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)f0101fde3311,150253
f0101fe5:	0f 86 80 07 00 00    	jbe    f010276b <mem_init+0x1542>f0101fe53312,150316
f0101feb:	8d 14 1e             	lea    (%esi,%ebx,1),%edxf0101feb3313,150382
f0101fee:	39 d0                	cmp    %edx,%eaxf0101fee3314,150440
f0101ff0:	0f 85 92 07 00 00    	jne    f0102788 <mem_init+0x155f>f0101ff03315,150489
f0101ff6:	81 c6 00 10 00 00    	add    $0x1000,%esif0101ff63317,150588
f0101ffc:	eb c9                	jmp    f0101fc7 <mem_init+0xd9e>f0101ffc3318,150640
f0101ffe:	8d 87 33 d9 fe ff    	lea    -0x126cd(%edi),%eaxf0101ffe3320,150726
f0102004:	50                   	push   %eaxf01020043321,150785
f0102005:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01020053322,150829
f010200b:	50                   	push   %eaxf010200b3323,150888
f010200c:	68 7f 02 00 00       	push   $0x27ff010200c3324,150932
f0102011:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01020113325,150978
f0102017:	50                   	push   %eaxf01020173326,151037
f0102018:	89 fb                	mov    %edi,%ebxf01020183327,151081
f010201a:	e8 7a e0 ff ff       	call   f0100099 <_panic>f010201a3328,151130
f010201f:	8d 87 41 d8 fe ff    	lea    -0x127bf(%edi),%eaxf010201f3330,151219
f0102025:	50                   	push   %eaxf01020253331,151278
f0102026:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01020263332,151322
f010202c:	50                   	push   %eaxf010202c3333,151381
f010202d:	68 d8 02 00 00       	push   $0x2d8f010202d3334,151425
f0102032:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01020323335,151471
f0102038:	50                   	push   %eaxf01020383336,151530
f0102039:	e8 5b e0 ff ff       	call   f0100099 <_panic>f01020393337,151574
f010203e:	8d 87 57 d8 fe ff    	lea    -0x127a9(%edi),%eaxf010203e3339,151663
f0102044:	50                   	push   %eaxf01020443340,151722
f0102045:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01020453341,151766
f010204b:	50                   	push   %eaxf010204b3342,151825
f010204c:	68 d9 02 00 00       	push   $0x2d9f010204c3343,151869
f0102051:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01020513344,151915
f0102057:	50                   	push   %eaxf01020573345,151974
f0102058:	e8 3c e0 ff ff       	call   f0100099 <_panic>f01020583346,152018
f010205d:	8d 87 6d d8 fe ff    	lea    -0x12793(%edi),%eaxf010205d3348,152107
f0102063:	50                   	push   %eaxf01020633349,152166
f0102064:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01020643350,152210
f010206a:	50                   	push   %eaxf010206a3351,152269
f010206b:	68 da 02 00 00       	push   $0x2daf010206b3352,152313
f0102070:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01020703353,152359
f0102076:	50                   	push   %eaxf01020763354,152418
f0102077:	e8 1d e0 ff ff       	call   f0100099 <_panic>f01020773355,152462
f010207c:	8d 87 83 d8 fe ff    	lea    -0x1277d(%edi),%eaxf010207c3357,152547
f0102082:	50                   	push   %eaxf01020823358,152606
f0102083:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01020833359,152650
f0102089:	50                   	push   %eaxf01020893360,152709
f010208a:	68 dd 02 00 00       	push   $0x2ddf010208a3361,152753
f010208f:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010208f3362,152799
f0102095:	50                   	push   %eaxf01020953363,152858
f0102096:	e8 fe df ff ff       	call   f0100099 <_panic>f01020963364,152902
f010209b:	8d 87 84 d1 fe ff    	lea    -0x12e7c(%edi),%eaxf010209b3366,153001
f01020a1:	50                   	push   %eaxf01020a13367,153060
f01020a2:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01020a23368,153104
f01020a8:	50                   	push   %eaxf01020a83369,153163
f01020a9:	68 de 02 00 00       	push   $0x2def01020a93370,153207
f01020ae:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01020ae3371,153253
f01020b4:	50                   	push   %eaxf01020b43372,153312
f01020b5:	89 fb                	mov    %edi,%ebxf01020b53373,153356
f01020b7:	e8 dd df ff ff       	call   f0100099 <_panic>f01020b73374,153405
f01020bc:	8d 87 ec d8 fe ff    	lea    -0x12714(%edi),%eaxf01020bc3376,153487
f01020c2:	50                   	push   %eaxf01020c23377,153546
f01020c3:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01020c33378,153590
f01020c9:	50                   	push   %eaxf01020c93379,153649
f01020ca:	68 e5 02 00 00       	push   $0x2e5f01020ca3380,153693
f01020cf:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01020cf3381,153739
f01020d5:	50                   	push   %eaxf01020d53382,153798
f01020d6:	e8 be df ff ff       	call   f0100099 <_panic>f01020d63383,153842
f01020db:	8d 87 c4 d1 fe ff    	lea    -0x12e3c(%edi),%eaxf01020db3385,153962
f01020e1:	50                   	push   %eaxf01020e13386,154021
f01020e2:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01020e23387,154065
f01020e8:	50                   	push   %eaxf01020e83388,154124
f01020e9:	68 e8 02 00 00       	push   $0x2e8f01020e93389,154168
f01020ee:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01020ee3390,154214
f01020f4:	50                   	push   %eaxf01020f43391,154273
f01020f5:	e8 9f df ff ff       	call   f0100099 <_panic>f01020f53392,154317
f01020fa:	8d 87 fc d1 fe ff    	lea    -0x12e04(%edi),%eaxf01020fa3394,154429
f0102100:	50                   	push   %eaxf01021003395,154488
f0102101:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01021013396,154532
f0102107:	50                   	push   %eaxf01021073397,154591
f0102108:	68 eb 02 00 00       	push   $0x2ebf01021083398,154635
f010210d:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010210d3399,154681
f0102113:	50                   	push   %eaxf01021133400,154740
f0102114:	e8 80 df ff ff       	call   f0100099 <_panic>f01021143401,154784
f0102119:	8d 87 2c d2 fe ff    	lea    -0x12dd4(%edi),%eaxf01021193403,154897
f010211f:	50                   	push   %eaxf010211f3404,154956
f0102120:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01021203405,155000
f0102126:	50                   	push   %eaxf01021263406,155059
f0102127:	68 ef 02 00 00       	push   $0x2eff01021273407,155103
f010212c:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010212c3408,155149
f0102132:	50                   	push   %eaxf01021323409,155208
f0102133:	e8 61 df ff ff       	call   f0100099 <_panic>f01021333410,155252
f0102138:	8d 87 5c d2 fe ff    	lea    -0x12da4(%edi),%eaxf01021383412,155359
f010213e:	50                   	push   %eaxf010213e3413,155418
f010213f:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf010213f3414,155462
f0102145:	50                   	push   %eaxf01021453415,155521
f0102146:	68 f0 02 00 00       	push   $0x2f0f01021463416,155565
f010214b:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010214b3417,155611
f0102151:	50                   	push   %eaxf01021513418,155670
f0102152:	89 fb                	mov    %edi,%ebxf01021523419,155714
f0102154:	e8 40 df ff ff       	call   f0100099 <_panic>f01021543420,155763
f0102159:	8d 87 84 d2 fe ff    	lea    -0x12d7c(%edi),%eaxf01021593422,155875
f010215f:	50                   	push   %eaxf010215f3423,155934
f0102160:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01021603424,155978
f0102166:	50                   	push   %eaxf01021663425,156037
f0102167:	68 f1 02 00 00       	push   $0x2f1f01021673426,156081
f010216c:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010216c3427,156127
f0102172:	50                   	push   %eaxf01021723428,156186
f0102173:	89 fb                	mov    %edi,%ebxf01021733429,156230
f0102175:	e8 1f df ff ff       	call   f0100099 <_panic>f01021753430,156279
f010217a:	8d 87 3e d9 fe ff    	lea    -0x126c2(%edi),%eaxf010217a3432,156363
f0102180:	50                   	push   %eaxf01021803433,156422
f0102181:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01021813434,156466
f0102187:	50                   	push   %eaxf01021873435,156525
f0102188:	68 f2 02 00 00       	push   $0x2f2f01021883436,156569
f010218d:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010218d3437,156615
f0102193:	50                   	push   %eaxf01021933438,156674
f0102194:	89 fb                	mov    %edi,%ebxf01021943439,156718
f0102196:	e8 fe de ff ff       	call   f0100099 <_panic>f01021963440,156767
f010219b:	8d 87 4f d9 fe ff    	lea    -0x126b1(%edi),%eaxf010219b3442,156851
f01021a1:	50                   	push   %eaxf01021a13443,156910
f01021a2:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01021a23444,156954
f01021a8:	50                   	push   %eaxf01021a83445,157013
f01021a9:	68 f3 02 00 00       	push   $0x2f3f01021a93446,157057
f01021ae:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01021ae3447,157103
f01021b4:	50                   	push   %eaxf01021b43448,157162
f01021b5:	89 fb                	mov    %edi,%ebxf01021b53449,157206
f01021b7:	e8 dd de ff ff       	call   f0100099 <_panic>f01021b73450,157255
f01021bc:	8d 87 b4 d2 fe ff    	lea    -0x12d4c(%edi),%eaxf01021bc3452,157379
f01021c2:	50                   	push   %eaxf01021c23453,157438
f01021c3:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01021c33454,157482
f01021c9:	50                   	push   %eaxf01021c93455,157541
f01021ca:	68 f6 02 00 00       	push   $0x2f6f01021ca3456,157585
f01021cf:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01021cf3457,157631
f01021d5:	50                   	push   %eaxf01021d53458,157690
f01021d6:	89 fb                	mov    %edi,%ebxf01021d63459,157734
f01021d8:	e8 bc de ff ff       	call   f0100099 <_panic>f01021d83460,157783
f01021dd:	8d 87 f0 d2 fe ff    	lea    -0x12d10(%edi),%eaxf01021dd3462,157898
f01021e3:	50                   	push   %eaxf01021e33463,157957
f01021e4:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01021e43464,158001
f01021ea:	50                   	push   %eaxf01021ea3465,158060
f01021eb:	68 f7 02 00 00       	push   $0x2f7f01021eb3466,158104
f01021f0:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01021f03467,158150
f01021f6:	50                   	push   %eaxf01021f63468,158209
f01021f7:	89 fb                	mov    %edi,%ebxf01021f73469,158253
f01021f9:	e8 9b de ff ff       	call   f0100099 <_panic>f01021f93470,158302
f01021fe:	8d 87 ec d8 fe ff    	lea    -0x12714(%edi),%eaxf01021fe3472,158384
f0102204:	50                   	push   %eaxf01022043473,158443
f0102205:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01022053474,158487
f010220b:	50                   	push   %eaxf010220b3475,158546
f010220c:	68 fa 02 00 00       	push   $0x2faf010220c3476,158590
f0102211:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01022113477,158636
f0102217:	50                   	push   %eaxf01022173478,158695
f0102218:	89 fb                	mov    %edi,%ebxf01022183479,158739
f010221a:	e8 7a de ff ff       	call   f0100099 <_panic>f010221a3480,158788
f010221f:	8d 87 b4 d2 fe ff    	lea    -0x12d4c(%edi),%eaxf010221f3482,158912
f0102225:	50                   	push   %eaxf01022253483,158971
f0102226:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01022263484,159015
f010222c:	50                   	push   %eaxf010222c3485,159074
f010222d:	68 fd 02 00 00       	push   $0x2fdf010222d3486,159118
f0102232:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01022323487,159164
f0102238:	50                   	push   %eaxf01022383488,159223
f0102239:	89 fb                	mov    %edi,%ebxf01022393489,159267
f010223b:	e8 59 de ff ff       	call   f0100099 <_panic>f010223b3490,159316
f0102240:	8d 87 f0 d2 fe ff    	lea    -0x12d10(%edi),%eaxf01022403492,159431
f0102246:	50                   	push   %eaxf01022463493,159490
f0102247:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01022473494,159534
f010224d:	50                   	push   %eaxf010224d3495,159593
f010224e:	68 fe 02 00 00       	push   $0x2fef010224e3496,159637
f0102253:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01022533497,159683
f0102259:	50                   	push   %eaxf01022593498,159742
f010225a:	89 fb                	mov    %edi,%ebxf010225a3499,159786
f010225c:	e8 38 de ff ff       	call   f0100099 <_panic>f010225c3500,159835
f0102261:	8d 87 60 d9 fe ff    	lea    -0x126a0(%edi),%eaxf01022613502,159919
f0102267:	50                   	push   %eaxf01022673503,159978
f0102268:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01022683504,160022
f010226e:	50                   	push   %eaxf010226e3505,160081
f010226f:	68 ff 02 00 00       	push   $0x2fff010226f3506,160125
f0102274:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01022743507,160171
f010227a:	50                   	push   %eaxf010227a3508,160230
f010227b:	89 fb                	mov    %edi,%ebxf010227b3509,160274
f010227d:	e8 17 de ff ff       	call   f0100099 <_panic>f010227d3510,160323
f0102282:	8d 87 ec d8 fe ff    	lea    -0x12714(%edi),%eaxf01022823512,160405
f0102288:	50                   	push   %eaxf01022883513,160464
f0102289:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01022893514,160508
f010228f:	50                   	push   %eaxf010228f3515,160567
f0102290:	68 03 03 00 00       	push   $0x303f01022903516,160611
f0102295:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01022953517,160657
f010229b:	50                   	push   %eaxf010229b3518,160716
f010229c:	89 fb                	mov    %edi,%ebxf010229c3519,160760
f010229e:	e8 f6 dd ff ff       	call   f0100099 <_panic>f010229e3520,160809
f01022a3:	50                   	push   %eaxf01022a33522,160930
f01022a4:	8d 87 a4 cf fe ff    	lea    -0x1305c(%edi),%eaxf01022a43523,160974
f01022aa:	50                   	push   %eaxf01022aa3524,161033
f01022ab:	68 06 03 00 00       	push   $0x306f01022ab3525,161077
f01022b0:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01022b03526,161123
f01022b6:	50                   	push   %eaxf01022b63527,161182
f01022b7:	89 fb                	mov    %edi,%ebxf01022b73528,161226
f01022b9:	e8 db dd ff ff       	call   f0100099 <_panic>f01022b93529,161275
f01022be:	8d 87 20 d3 fe ff    	lea    -0x12ce0(%edi),%eaxf01022be3531,161403
f01022c4:	50                   	push   %eaxf01022c43532,161462
f01022c5:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01022c53533,161506
f01022cb:	50                   	push   %eaxf01022cb3534,161565
f01022cc:	68 07 03 00 00       	push   $0x307f01022cc3535,161609
f01022d1:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01022d13536,161655
f01022d7:	50                   	push   %eaxf01022d73537,161714
f01022d8:	89 fb                	mov    %edi,%ebxf01022d83538,161758
f01022da:	e8 ba dd ff ff       	call   f0100099 <_panic>f01022da3539,161807
f01022df:	8d 87 60 d3 fe ff    	lea    -0x12ca0(%edi),%eaxf01022df3541,161937
f01022e5:	50                   	push   %eaxf01022e53542,161996
f01022e6:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01022e63543,162040
f01022ec:	50                   	push   %eaxf01022ec3544,162099
f01022ed:	68 0a 03 00 00       	push   $0x30af01022ed3545,162143
f01022f2:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01022f23546,162189
f01022f8:	50                   	push   %eaxf01022f83547,162248
f01022f9:	89 fb                	mov    %edi,%ebxf01022f93548,162292
f01022fb:	e8 99 dd ff ff       	call   f0100099 <_panic>f01022fb3549,162341
f0102300:	8d 87 f0 d2 fe ff    	lea    -0x12d10(%edi),%eaxf01023003551,162456
f0102306:	50                   	push   %eaxf01023063552,162515
f0102307:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01023073553,162559
f010230d:	50                   	push   %eaxf010230d3554,162618
f010230e:	68 0b 03 00 00       	push   $0x30bf010230e3555,162662
f0102313:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01023133556,162708
f0102319:	50                   	push   %eaxf01023193557,162767
f010231a:	89 fb                	mov    %edi,%ebxf010231a3558,162811
f010231c:	e8 78 dd ff ff       	call   f0100099 <_panic>f010231c3559,162860
f0102321:	8d 87 60 d9 fe ff    	lea    -0x126a0(%edi),%eaxf01023213561,162944
f0102327:	50                   	push   %eaxf01023273562,163003
f0102328:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01023283563,163047
f010232e:	50                   	push   %eaxf010232e3564,163106
f010232f:	68 0c 03 00 00       	push   $0x30cf010232f3565,163150
f0102334:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01023343566,163196
f010233a:	50                   	push   %eaxf010233a3567,163255
f010233b:	89 fb                	mov    %edi,%ebxf010233b3568,163299
f010233d:	e8 57 dd ff ff       	call   f0100099 <_panic>f010233d3569,163348
f0102342:	8d 87 a0 d3 fe ff    	lea    -0x12c60(%edi),%eaxf01023423571,163466
f0102348:	50                   	push   %eaxf01023483572,163525
f0102349:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01023493573,163569
f010234f:	50                   	push   %eaxf010234f3574,163628
f0102350:	68 0d 03 00 00       	push   $0x30df01023503575,163672
f0102355:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01023553576,163718
f010235b:	50                   	push   %eaxf010235b3577,163777
f010235c:	89 fb                	mov    %edi,%ebxf010235c3578,163821
f010235e:	e8 36 dd ff ff       	call   f0100099 <_panic>f010235e3579,163870
f0102363:	8d 87 71 d9 fe ff    	lea    -0x1268f(%edi),%eaxf01023633581,163959
f0102369:	50                   	push   %eaxf01023693582,164018
f010236a:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf010236a3583,164062
f0102370:	50                   	push   %eaxf01023703584,164121
f0102371:	68 0e 03 00 00       	push   $0x30ef01023713585,164165
f0102376:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01023763586,164211
f010237c:	50                   	push   %eaxf010237c3587,164270
f010237d:	89 fb                	mov    %edi,%ebxf010237d3588,164314
f010237f:	e8 15 dd ff ff       	call   f0100099 <_panic>f010237f3589,164363
f0102384:	8d 87 b4 d2 fe ff    	lea    -0x12d4c(%edi),%eaxf01023843591,164487
f010238a:	50                   	push   %eaxf010238a3592,164546
f010238b:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf010238b3593,164590
f0102391:	50                   	push   %eaxf01023913594,164649
f0102392:	68 11 03 00 00       	push   $0x311f01023923595,164693
f0102397:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01023973596,164739
f010239d:	50                   	push   %eaxf010239d3597,164798
f010239e:	89 fb                	mov    %edi,%ebxf010239e3598,164842
f01023a0:	e8 f4 dc ff ff       	call   f0100099 <_panic>f01023a03599,164891
f01023a5:	8d 87 d4 d3 fe ff    	lea    -0x12c2c(%edi),%eaxf01023a53601,165009
f01023ab:	50                   	push   %eaxf01023ab3602,165068
f01023ac:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01023ac3603,165112
f01023b2:	50                   	push   %eaxf01023b23604,165171
f01023b3:	68 12 03 00 00       	push   $0x312f01023b33605,165215
f01023b8:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01023b83606,165261
f01023be:	50                   	push   %eaxf01023be3607,165320
f01023bf:	89 fb                	mov    %edi,%ebxf01023bf3608,165364
f01023c1:	e8 d3 dc ff ff       	call   f0100099 <_panic>f01023c13609,165413
f01023c6:	8d 87 08 d4 fe ff    	lea    -0x12bf8(%edi),%eaxf01023c63611,165534
f01023cc:	50                   	push   %eaxf01023cc3612,165593
f01023cd:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01023cd3613,165637
f01023d3:	50                   	push   %eaxf01023d33614,165696
f01023d4:	68 13 03 00 00       	push   $0x313f01023d43615,165740
f01023d9:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01023d93616,165786
f01023df:	50                   	push   %eaxf01023df3617,165845
f01023e0:	89 fb                	mov    %edi,%ebxf01023e03618,165889
f01023e2:	e8 b2 dc ff ff       	call   f0100099 <_panic>f01023e23619,165938
f01023e7:	8d 87 40 d4 fe ff    	lea    -0x12bc0(%edi),%eaxf01023e73621,166061
f01023ed:	50                   	push   %eaxf01023ed3622,166120
f01023ee:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01023ee3623,166164
f01023f4:	50                   	push   %eaxf01023f43624,166223
f01023f5:	68 16 03 00 00       	push   $0x316f01023f53625,166267
f01023fa:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01023fa3626,166313
f0102400:	50                   	push   %eaxf01024003627,166372
f0102401:	89 fb                	mov    %edi,%ebxf01024013628,166416
f0102403:	e8 91 dc ff ff       	call   f0100099 <_panic>f01024033629,166465
f0102408:	8d 87 78 d4 fe ff    	lea    -0x12b88(%edi),%eaxf01024083631,166589
f010240e:	50                   	push   %eaxf010240e3632,166648
f010240f:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf010240f3633,166692
f0102415:	50                   	push   %eaxf01024153634,166751
f0102416:	68 19 03 00 00       	push   $0x319f01024163635,166795
f010241b:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010241b3636,166841
f0102421:	50                   	push   %eaxf01024213637,166900
f0102422:	89 fb                	mov    %edi,%ebxf01024223638,166944
f0102424:	e8 70 dc ff ff       	call   f0100099 <_panic>f01024243639,166993
f0102429:	8d 87 08 d4 fe ff    	lea    -0x12bf8(%edi),%eaxf01024293641,167114
f010242f:	50                   	push   %eaxf010242f3642,167173
f0102430:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01024303643,167217
f0102436:	50                   	push   %eaxf01024363644,167276
f0102437:	68 1a 03 00 00       	push   $0x31af01024373645,167320
f010243c:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010243c3646,167366
f0102442:	50                   	push   %eaxf01024423647,167425
f0102443:	89 fb                	mov    %edi,%ebxf01024433648,167469
f0102445:	e8 4f dc ff ff       	call   f0100099 <_panic>f01024453649,167518
f010244a:	8d 87 b4 d4 fe ff    	lea    -0x12b4c(%edi),%eaxf010244a3651,167628
f0102450:	50                   	push   %eaxf01024503652,167687
f0102451:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01024513653,167731
f0102457:	50                   	push   %eaxf01024573654,167790
f0102458:	68 1d 03 00 00       	push   $0x31df01024583655,167834
f010245d:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010245d3656,167880
f0102463:	50                   	push   %eaxf01024633657,167939
f0102464:	89 fb                	mov    %edi,%ebxf01024643658,167983
f0102466:	e8 2e dc ff ff       	call   f0100099 <_panic>f01024663659,168032
f010246b:	8d 87 e0 d4 fe ff    	lea    -0x12b20(%edi),%eaxf010246b3661,168147
f0102471:	50                   	push   %eaxf01024713662,168206
f0102472:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01024723663,168250
f0102478:	50                   	push   %eaxf01024783664,168309
f0102479:	68 1e 03 00 00       	push   $0x31ef01024793665,168353
f010247e:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010247e3666,168399
f0102484:	50                   	push   %eaxf01024843667,168458
f0102485:	89 fb                	mov    %edi,%ebxf01024853668,168502
f0102487:	e8 0d dc ff ff       	call   f0100099 <_panic>f01024873669,168551
f010248c:	8d 87 87 d9 fe ff    	lea    -0x12679(%edi),%eaxf010248c3671,168635
f0102492:	50                   	push   %eaxf01024923672,168694
f0102493:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01024933673,168738
f0102499:	50                   	push   %eaxf01024993674,168797
f010249a:	68 20 03 00 00       	push   $0x320f010249a3675,168841
f010249f:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010249f3676,168887
f01024a5:	50                   	push   %eaxf01024a53677,168946
f01024a6:	89 fb                	mov    %edi,%ebxf01024a63678,168990
f01024a8:	e8 ec db ff ff       	call   f0100099 <_panic>f01024a83679,169039
f01024ad:	8d 87 98 d9 fe ff    	lea    -0x12668(%edi),%eaxf01024ad3681,169123
f01024b3:	50                   	push   %eaxf01024b33682,169182
f01024b4:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01024b43683,169226
f01024ba:	50                   	push   %eaxf01024ba3684,169285
f01024bb:	68 21 03 00 00       	push   $0x321f01024bb3685,169329
f01024c0:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01024c03686,169375
f01024c6:	50                   	push   %eaxf01024c63687,169434
f01024c7:	89 fb                	mov    %edi,%ebxf01024c73688,169478
f01024c9:	e8 cb db ff ff       	call   f0100099 <_panic>f01024c93689,169527
f01024ce:	8d 87 10 d5 fe ff    	lea    -0x12af0(%edi),%eaxf01024ce3691,169628
f01024d4:	50                   	push   %eaxf01024d43692,169687
f01024d5:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01024d53693,169731
f01024db:	50                   	push   %eaxf01024db3694,169790
f01024dc:	68 24 03 00 00       	push   $0x324f01024dc3695,169834
f01024e1:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01024e13696,169880
f01024e7:	50                   	push   %eaxf01024e73697,169939
f01024e8:	89 fb                	mov    %edi,%ebxf01024e83698,169983
f01024ea:	e8 aa db ff ff       	call   f0100099 <_panic>f01024ea3699,170032
f01024ef:	8d 87 34 d5 fe ff    	lea    -0x12acc(%edi),%eaxf01024ef3701,170134
f01024f5:	50                   	push   %eaxf01024f53702,170193
f01024f6:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01024f63703,170237
f01024fc:	50                   	push   %eaxf01024fc3704,170296
f01024fd:	68 29 03 00 00       	push   $0x329f01024fd3705,170340
f0102502:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01025023706,170386
f0102508:	50                   	push   %eaxf01025083707,170445
f0102509:	89 fb                	mov    %edi,%ebxf01025093708,170489
f010250b:	e8 89 db ff ff       	call   f0100099 <_panic>f010250b3709,170538
f0102510:	8d 87 e0 d4 fe ff    	lea    -0x12b20(%edi),%eaxf01025103711,170653
f0102516:	50                   	push   %eaxf01025163712,170712
f0102517:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01025173713,170756
f010251d:	50                   	push   %eaxf010251d3714,170815
f010251e:	68 2a 03 00 00       	push   $0x32af010251e3715,170859
f0102523:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01025233716,170905
f0102529:	50                   	push   %eaxf01025293717,170964
f010252a:	89 fb                	mov    %edi,%ebxf010252a3718,171008
f010252c:	e8 68 db ff ff       	call   f0100099 <_panic>f010252c3719,171057
f0102531:	8d 87 3e d9 fe ff    	lea    -0x126c2(%edi),%eaxf01025313721,171141
f0102537:	50                   	push   %eaxf01025373722,171200
f0102538:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01025383723,171244
f010253e:	50                   	push   %eaxf010253e3724,171303
f010253f:	68 2b 03 00 00       	push   $0x32bf010253f3725,171347
f0102544:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01025443726,171393
f010254a:	50                   	push   %eaxf010254a3727,171452
f010254b:	89 fb                	mov    %edi,%ebxf010254b3728,171496
f010254d:	e8 47 db ff ff       	call   f0100099 <_panic>f010254d3729,171545
f0102552:	8d 87 98 d9 fe ff    	lea    -0x12668(%edi),%eaxf01025523731,171629
f0102558:	50                   	push   %eaxf01025583732,171688
f0102559:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01025593733,171732
f010255f:	50                   	push   %eaxf010255f3734,171791
f0102560:	68 2c 03 00 00       	push   $0x32cf01025603735,171835
f0102565:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01025653736,171881
f010256b:	50                   	push   %eaxf010256b3737,171940
f010256c:	89 fb                	mov    %edi,%ebxf010256c3738,171984
f010256e:	e8 26 db ff ff       	call   f0100099 <_panic>f010256e3739,172033
f0102573:	8d 87 58 d5 fe ff    	lea    -0x12aa8(%edi),%eaxf01025733741,172153
f0102579:	50                   	push   %eaxf01025793742,172212
f010257a:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf010257a3743,172256
f0102580:	50                   	push   %eaxf01025803744,172315
f0102581:	68 2f 03 00 00       	push   $0x32ff01025813745,172359
f0102586:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01025863746,172405
f010258c:	50                   	push   %eaxf010258c3747,172464
f010258d:	89 fb                	mov    %edi,%ebxf010258d3748,172508
f010258f:	e8 05 db ff ff       	call   f0100099 <_panic>f010258f3749,172557
f0102594:	8d 87 ad d9 fe ff    	lea    -0x12653(%edi),%eaxf01025943751,172636
f010259a:	50                   	push   %eaxf010259a3752,172695
f010259b:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf010259b3753,172739
f01025a1:	50                   	push   %eaxf01025a13754,172798
f01025a2:	68 30 03 00 00       	push   $0x330f01025a23755,172842
f01025a7:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01025a73756,172888
f01025ad:	50                   	push   %eaxf01025ad3757,172947
f01025ae:	89 fb                	mov    %edi,%ebxf01025ae3758,172991
f01025b0:	e8 e4 da ff ff       	call   f0100099 <_panic>f01025b03759,173040
f01025b5:	8d 87 b9 d9 fe ff    	lea    -0x12647(%edi),%eaxf01025b53761,173128
f01025bb:	50                   	push   %eaxf01025bb3762,173187
f01025bc:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01025bc3763,173231
f01025c2:	50                   	push   %eaxf01025c23764,173290
f01025c3:	68 31 03 00 00       	push   $0x331f01025c33765,173334
f01025c8:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01025c83766,173380
f01025ce:	50                   	push   %eaxf01025ce3767,173439
f01025cf:	89 fb                	mov    %edi,%ebxf01025cf3768,173483
f01025d1:	e8 c3 da ff ff       	call   f0100099 <_panic>f01025d13769,173532
f01025d6:	8d 87 34 d5 fe ff    	lea    -0x12acc(%edi),%eaxf01025d63771,173634
f01025dc:	50                   	push   %eaxf01025dc3772,173693
f01025dd:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01025dd3773,173737
f01025e3:	50                   	push   %eaxf01025e33774,173796
f01025e4:	68 35 03 00 00       	push   $0x335f01025e43775,173840
f01025e9:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01025e93776,173886
f01025ef:	50                   	push   %eaxf01025ef3777,173945
f01025f0:	89 fb                	mov    %edi,%ebxf01025f03778,173989
f01025f2:	e8 a2 da ff ff       	call   f0100099 <_panic>f01025f23779,174038
f01025f7:	8d 87 90 d5 fe ff    	lea    -0x12a70(%edi),%eaxf01025f73781,174143
f01025fd:	50                   	push   %eaxf01025fd3782,174202
f01025fe:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01025fe3783,174246
f0102604:	50                   	push   %eaxf01026043784,174305
f0102605:	68 36 03 00 00       	push   $0x336f01026053785,174349
f010260a:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010260a3786,174395
f0102610:	50                   	push   %eaxf01026103787,174454
f0102611:	89 fb                	mov    %edi,%ebxf01026113788,174498
f0102613:	e8 81 da ff ff       	call   f0100099 <_panic>f01026133789,174547
f0102618:	8d 87 ce d9 fe ff    	lea    -0x12632(%edi),%eaxf01026183791,174631
f010261e:	50                   	push   %eaxf010261e3792,174690
f010261f:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf010261f3793,174734
f0102625:	50                   	push   %eaxf01026253794,174793
f0102626:	68 37 03 00 00       	push   $0x337f01026263795,174837
f010262b:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010262b3796,174883
f0102631:	50                   	push   %eaxf01026313797,174942
f0102632:	89 fb                	mov    %edi,%ebxf01026323798,174986
f0102634:	e8 60 da ff ff       	call   f0100099 <_panic>f01026343799,175035
f0102639:	8d 87 98 d9 fe ff    	lea    -0x12668(%edi),%eaxf01026393801,175119
f010263f:	50                   	push   %eaxf010263f3802,175178
f0102640:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01026403803,175222
f0102646:	50                   	push   %eaxf01026463804,175281
f0102647:	68 38 03 00 00       	push   $0x338f01026473805,175325
f010264c:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010264c3806,175371
f0102652:	50                   	push   %eaxf01026523807,175430
f0102653:	89 fb                	mov    %edi,%ebxf01026533808,175474
f0102655:	e8 3f da ff ff       	call   f0100099 <_panic>f01026553809,175523
f010265a:	8d 87 b8 d5 fe ff    	lea    -0x12a48(%edi),%eaxf010265a3811,175624
f0102660:	50                   	push   %eaxf01026603812,175683
f0102661:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01026613813,175727
f0102667:	50                   	push   %eaxf01026673814,175786
f0102668:	68 3b 03 00 00       	push   $0x33bf01026683815,175830
f010266d:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010266d3816,175876
f0102673:	50                   	push   %eaxf01026733817,175935
f0102674:	89 fb                	mov    %edi,%ebxf01026743818,175979
f0102676:	e8 1e da ff ff       	call   f0100099 <_panic>f01026763819,176028
f010267b:	8d 87 ec d8 fe ff    	lea    -0x12714(%edi),%eaxf010267b3821,176110
f0102681:	50                   	push   %eaxf01026813822,176169
f0102682:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01026823823,176213
f0102688:	50                   	push   %eaxf01026883824,176272
f0102689:	68 3e 03 00 00       	push   $0x33ef01026893825,176316
f010268e:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010268e3826,176362
f0102694:	50                   	push   %eaxf01026943827,176421
f0102695:	89 fb                	mov    %edi,%ebxf01026953828,176465
f0102697:	e8 fd d9 ff ff       	call   f0100099 <_panic>f01026973829,176514
f010269c:	8d 87 5c d2 fe ff    	lea    -0x12da4(%edi),%eaxf010269c3831,176621
f01026a2:	50                   	push   %eaxf01026a23832,176680
f01026a3:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01026a33833,176724
f01026a9:	50                   	push   %eaxf01026a93834,176783
f01026aa:	68 41 03 00 00       	push   $0x341f01026aa3835,176827
f01026af:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01026af3836,176873
f01026b5:	50                   	push   %eaxf01026b53837,176932
f01026b6:	89 fb                	mov    %edi,%ebxf01026b63838,176976
f01026b8:	e8 dc d9 ff ff       	call   f0100099 <_panic>f01026b83839,177025
f01026bd:	8d 87 4f d9 fe ff    	lea    -0x126b1(%edi),%eaxf01026bd3841,177109
f01026c3:	50                   	push   %eaxf01026c33842,177168
f01026c4:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01026c43843,177212
f01026ca:	50                   	push   %eaxf01026ca3844,177271
f01026cb:	68 43 03 00 00       	push   $0x343f01026cb3845,177315
f01026d0:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01026d03846,177361
f01026d6:	50                   	push   %eaxf01026d63847,177420
f01026d7:	89 fb                	mov    %edi,%ebxf01026d73848,177464
f01026d9:	e8 bb d9 ff ff       	call   f0100099 <_panic>f01026d93849,177513
f01026de:	52                   	push   %edxf01026de3850,177570
f01026df:	8d 87 a4 cf fe ff    	lea    -0x1305c(%edi),%eaxf01026df3851,177614
f01026e5:	50                   	push   %eaxf01026e53852,177673
f01026e6:	68 4a 03 00 00       	push   $0x34af01026e63853,177717
f01026eb:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01026eb3854,177763
f01026f1:	50                   	push   %eaxf01026f13855,177822
f01026f2:	89 fb                	mov    %edi,%ebxf01026f23856,177866
f01026f4:	e8 a0 d9 ff ff       	call   f0100099 <_panic>f01026f43857,177915
f01026f9:	8d 87 df d9 fe ff    	lea    -0x12621(%edi),%eaxf01026f93859,178006
f01026ff:	50                   	push   %eaxf01026ff3860,178065
f0102700:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01027003861,178109
f0102706:	50                   	push   %eaxf01027063862,178168
f0102707:	68 4b 03 00 00       	push   $0x34bf01027073863,178212
f010270c:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010270c3864,178258
f0102712:	50                   	push   %eaxf01027123865,178317
f0102713:	89 fb                	mov    %edi,%ebxf01027133866,178361
f0102715:	e8 7f d9 ff ff       	call   f0100099 <_panic>f01027153867,178410
f010271a:	50                   	push   %eaxf010271a3868,178467
f010271b:	8d 87 a4 cf fe ff    	lea    -0x1305c(%edi),%eaxf010271b3869,178511
f0102721:	50                   	push   %eaxf01027213870,178570
f0102722:	6a 52                	push   $0x52f01027223871,178614
f0102724:	8d 87 7c d7 fe ff    	lea    -0x12884(%edi),%eaxf01027243872,178659
f010272a:	50                   	push   %eaxf010272a3873,178718
f010272b:	89 fb                	mov    %edi,%ebxf010272b3874,178762
f010272d:	e8 67 d9 ff ff       	call   f0100099 <_panic>f010272d3875,178811
f0102732:	52                   	push   %edxf01027323876,178868
f0102733:	8d 87 a4 cf fe ff    	lea    -0x1305c(%edi),%eaxf01027333877,178912
f0102739:	50                   	push   %eaxf01027393878,178971
f010273a:	6a 52                	push   $0x52f010273a3879,179015
f010273c:	8d 87 7c d7 fe ff    	lea    -0x12884(%edi),%eaxf010273c3880,179060
f0102742:	50                   	push   %eaxf01027423881,179119
f0102743:	89 fb                	mov    %edi,%ebxf01027433882,179163
f0102745:	e8 4f d9 ff ff       	call   f0100099 <_panic>f01027453883,179212
f010274a:	8d 87 f7 d9 fe ff    	lea    -0x12609(%edi),%eaxf010274a3885,179303
f0102750:	50                   	push   %eaxf01027503886,179362
f0102751:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01027513887,179406
f0102757:	50                   	push   %eaxf01027573888,179465
f0102758:	68 55 03 00 00       	push   $0x355f01027583889,179509
f010275d:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010275d3890,179555
f0102763:	50                   	push   %eaxf01027633891,179614
f0102764:	89 fb                	mov    %edi,%ebxf01027643892,179658
f0102766:	e8 2e d9 ff ff       	call   f0100099 <_panic>f01027663893,179707
f010276b:	ff 75 c4             	pushl  -0x3c(%ebp)f010276b3895,179830
f010276e:	8d 87 60 d1 fe ff    	lea    -0x12ea0(%edi),%eaxf010276e3896,179881
f0102774:	50                   	push   %eaxf01027743897,179940
f0102775:	68 97 02 00 00       	push   $0x297f01027753898,179984
f010277a:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010277a3899,180030
f0102780:	50                   	push   %eaxf01027803900,180089
f0102781:	89 fb                	mov    %edi,%ebxf01027813901,180133
f0102783:	e8 11 d9 ff ff       	call   f0100099 <_panic>f01027833902,180182
f0102788:	8d 87 dc d5 fe ff    	lea    -0x12a24(%edi),%eaxf01027883904,180301
f010278e:	50                   	push   %eaxf010278e3905,180360
f010278f:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf010278f3906,180404
f0102795:	50                   	push   %eaxf01027953907,180463
f0102796:	68 97 02 00 00       	push   $0x297f01027963908,180507
f010279b:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010279b3909,180553
f01027a1:	50                   	push   %eaxf01027a13910,180612
f01027a2:	89 fb                	mov    %edi,%ebxf01027a23911,180656
f01027a4:	e8 f0 d8 ff ff       	call   f0100099 <_panic>f01027a43912,180705
f01027a9:	8b 5d d0             	mov    -0x30(%ebp),%ebxf01027a93913,180762
f01027ac:	8b 45 c8             	mov    -0x38(%ebp),%eaxf01027ac3915,180865
f01027af:	c1 e0 0c             	shl    $0xc,%eaxf01027af3916,180921
f01027b2:	89 45 d4             	mov    %eax,-0x2c(%ebp)f01027b23917,180970
f01027b5:	be 00 00 00 00       	mov    $0x0,%esif01027b53918,181026
f01027ba:	3b 75 d4             	cmp    -0x2c(%ebp),%esif01027ba3919,181075
f01027bd:	73 3a                	jae    f01027f9 <mem_init+0x15d0>f01027bd3920,181131
f01027bf:	8d 96 00 00 00 f0    	lea    -0x10000000(%esi),%edxf01027bf3922,181246
f01027c5:	89 d8                	mov    %ebx,%eaxf01027c53923,181308
f01027c7:	e8 72 e2 ff ff       	call   f0100a3e <check_va2pa>f01027c73924,181357
f01027cc:	39 c6                	cmp    %eax,%esif01027cc3925,181419
f01027ce:	75 08                	jne    f01027d8 <mem_init+0x15af>f01027ce3926,181468
f01027d0:	81 c6 00 10 00 00    	add    $0x1000,%esif01027d03928,181581
f01027d6:	eb e2                	jmp    f01027ba <mem_init+0x1591>f01027d63929,181633
f01027d8:	8d 87 10 d6 fe ff    	lea    -0x129f0(%edi),%eaxf01027d83931,181748
f01027de:	50                   	push   %eaxf01027de3932,181807
f01027df:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01027df3933,181851
f01027e5:	50                   	push   %eaxf01027e53934,181910
f01027e6:	68 9c 02 00 00       	push   $0x29cf01027e63935,181954
f01027eb:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01027eb3936,182000
f01027f1:	50                   	push   %eaxf01027f13937,182059
f01027f2:	89 fb                	mov    %edi,%ebxf01027f23938,182103
f01027f4:	e8 a0 d8 ff ff       	call   f0100099 <_panic>f01027f43939,182152
f01027f9:	be 00 80 ff ef       	mov    $0xefff8000,%esif01027f93941,182256
f01027fe:	c7 c0 00 e0 10 f0    	mov    $0xf010e000,%eaxf01027fe3943,182343
f0102804:	89 45 d4             	mov    %eax,-0x2c(%ebp)f01028043944,182399
f0102807:	05 00 80 00 20       	add    $0x20008000,%eaxf01028073946,182535
f010280c:	89 45 d0             	mov    %eax,-0x30(%ebp)f010280c3947,182591
f010280f:	89 f2                	mov    %esi,%edxf010280f3948,182647
f0102811:	89 d8                	mov    %ebx,%eaxf01028113949,182696
f0102813:	e8 26 e2 ff ff       	call   f0100a3e <check_va2pa>f01028133950,182745
f0102818:	81 7d d4 ff ff ff ef 	cmpl   $0xefffffff,-0x2c(%ebp)f01028183951,182807
f010281f:	76 33                	jbe    f0102854 <mem_init+0x162b>f010281f3952,182870
f0102821:	8b 4d d0             	mov    -0x30(%ebp),%ecxf01028213953,182936
f0102824:	8d 14 31             	lea    (%ecx,%esi,1),%edxf01028243954,182992
f0102827:	39 c2                	cmp    %eax,%edxf01028273955,183050
f0102829:	75 49                	jne    f0102874 <mem_init+0x164b>f01028293956,183099
f010282b:	81 c6 00 10 00 00    	add    $0x1000,%esif010282b3957,183165
f0102831:	81 fe 00 00 00 f0    	cmp    $0xf0000000,%esif01028313959,183257
f0102837:	75 d6                	jne    f010280f <mem_init+0x15e6>f01028373960,183313
f0102839:	ba 00 00 c0 ef       	mov    $0xefc00000,%edxf01028393962,183434
f010283e:	89 d8                	mov    %ebx,%eaxf010283e3963,183490
f0102840:	e8 f9 e1 ff ff       	call   f0100a3e <check_va2pa>f01028403964,183539
f0102845:	83 f8 ff             	cmp    $0xffffffff,%eaxf01028453965,183601
f0102848:	75 4b                	jne    f0102895 <mem_init+0x166c>f01028483966,183657
f010284a:	b8 00 00 00 00       	mov    $0x0,%eaxf010284a3968,183759
f010284f:	e9 8b 00 00 00       	jmp    f01028df <mem_init+0x16b6>f010284f3969,183808
f0102854:	ff b7 fc ff ff ff    	pushl  -0x4(%edi)f01028543971,183940
f010285a:	8d 87 60 d1 fe ff    	lea    -0x12ea0(%edi),%eaxf010285a3972,183990
f0102860:	50                   	push   %eaxf01028603973,184049
f0102861:	68 a0 02 00 00       	push   $0x2a0f01028613974,184093
f0102866:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01028663975,184139
f010286c:	50                   	push   %eaxf010286c3976,184198
f010286d:	89 fb                	mov    %edi,%ebxf010286d3977,184242
f010286f:	e8 25 d8 ff ff       	call   f0100099 <_panic>f010286f3978,184291
f0102874:	8d 87 38 d6 fe ff    	lea    -0x129c8(%edi),%eaxf01028743980,184428
f010287a:	50                   	push   %eaxf010287a3981,184487
f010287b:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf010287b3982,184531
f0102881:	50                   	push   %eaxf01028813983,184590
f0102882:	68 a0 02 00 00       	push   $0x2a0f01028823984,184634
f0102887:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01028873985,184680
f010288d:	50                   	push   %eaxf010288d3986,184739
f010288e:	89 fb                	mov    %edi,%ebxf010288e3987,184783
f0102890:	e8 04 d8 ff ff       	call   f0100099 <_panic>f01028903988,184832
f0102895:	8d 87 80 d6 fe ff    	lea    -0x12980(%edi),%eaxf01028953990,184944
f010289b:	50                   	push   %eaxf010289b3991,185003
f010289c:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf010289c3992,185047
f01028a2:	50                   	push   %eaxf01028a23993,185106
f01028a3:	68 a1 02 00 00       	push   $0x2a1f01028a33994,185150
f01028a8:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01028a83995,185196
f01028ae:	50                   	push   %eaxf01028ae3996,185255
f01028af:	89 fb                	mov    %edi,%ebxf01028af3997,185299
f01028b1:	e8 e3 d7 ff ff       	call   f0100099 <_panic>f01028b13998,185348
f01028b6:	f6 04 83 01          	testb  $0x1,(%ebx,%eax,4)f01028b64000,185434
f01028ba:	74 51                	je     f010290d <mem_init+0x16e4>f01028ba4001,185492
f01028bc:	83 c0 01             	add    $0x1,%eaxf01028bc4003,185594
f01028bf:	3d ff 03 00 00       	cmp    $0x3ff,%eaxf01028bf4004,185643
f01028c4:	0f 87 b3 00 00 00    	ja     f010297d <mem_init+0x1754>f01028c44005,185694
f01028ca:	3d bc 03 00 00       	cmp    $0x3bc,%eaxf01028ca4007,185775
f01028cf:	72 0e                	jb     f01028df <mem_init+0x16b6>f01028cf4008,185826
f01028d1:	3d bd 03 00 00       	cmp    $0x3bd,%eaxf01028d14009,185892
f01028d6:	76 de                	jbe    f01028b6 <mem_init+0x168d>f01028d64010,185943
f01028d8:	3d bf 03 00 00       	cmp    $0x3bf,%eaxf01028d84011,186009
f01028dd:	74 d7                	je     f01028b6 <mem_init+0x168d>f01028dd4012,186060
f01028df:	3d bf 03 00 00       	cmp    $0x3bf,%eaxf01028df4014,186155
f01028e4:	77 48                	ja     f010292e <mem_init+0x1705>f01028e44015,186206
f01028e6:	83 3c 83 00          	cmpl   $0x0,(%ebx,%eax,4)f01028e64017,186299
f01028ea:	74 d0                	je     f01028bc <mem_init+0x1693>f01028ea4018,186357
f01028ec:	8d 87 49 da fe ff    	lea    -0x125b7(%edi),%eaxf01028ec4019,186423
f01028f2:	50                   	push   %eaxf01028f24020,186482
f01028f3:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01028f34021,186526
f01028f9:	50                   	push   %eaxf01028f94022,186585
f01028fa:	68 b0 02 00 00       	push   $0x2b0f01028fa4023,186629
f01028ff:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01028ff4024,186675
f0102905:	50                   	push   %eaxf01029054025,186734
f0102906:	89 fb                	mov    %edi,%ebxf01029064026,186778
f0102908:	e8 8c d7 ff ff       	call   f0100099 <_panic>f01029084027,186827
f010290d:	8d 87 27 da fe ff    	lea    -0x125d9(%edi),%eaxf010290d4029,186913
f0102913:	50                   	push   %eaxf01029134030,186972
f0102914:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01029144031,187016
f010291a:	50                   	push   %eaxf010291a4032,187075
f010291b:	68 a9 02 00 00       	push   $0x2a9f010291b4033,187119
f0102920:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf01029204034,187165
f0102926:	50                   	push   %eaxf01029264035,187224
f0102927:	89 fb                	mov    %edi,%ebxf01029274036,187268
f0102929:	e8 6b d7 ff ff       	call   f0100099 <_panic>f01029294037,187317
f010292e:	8b 14 83             	mov    (%ebx,%eax,4),%edxf010292e4039,187404
f0102931:	f6 c2 01             	test   $0x1,%dlf01029314040,187462
f0102934:	74 26                	je     f010295c <mem_init+0x1733>f01029344041,187510
f0102936:	f6 c2 02             	test   $0x2,%dlf01029364043,187606
f0102939:	75 81                	jne    f01028bc <mem_init+0x1693>f01029394044,187654
f010293b:	8d 87 38 da fe ff    	lea    -0x125c8(%edi),%eaxf010293b4045,187720
f0102941:	50                   	push   %eaxf01029414046,187779
f0102942:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01029424047,187823
f0102948:	50                   	push   %eaxf01029484048,187882
f0102949:	68 ae 02 00 00       	push   $0x2aef01029494049,187926
f010294e:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010294e4050,187972
f0102954:	50                   	push   %eaxf01029544051,188031
f0102955:	89 fb                	mov    %edi,%ebxf01029554052,188075
f0102957:	e8 3d d7 ff ff       	call   f0100099 <_panic>f01029574053,188124
f010295c:	8d 87 27 da fe ff    	lea    -0x125d9(%edi),%eaxf010295c4055,188211
f0102962:	50                   	push   %eaxf01029624056,188270
f0102963:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf01029634057,188314
f0102969:	50                   	push   %eaxf01029694058,188373
f010296a:	68 ad 02 00 00       	push   $0x2adf010296a4059,188417
f010296f:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf010296f4060,188463
f0102975:	50                   	push   %eaxf01029754061,188522
f0102976:	89 fb                	mov    %edi,%ebxf01029764062,188566
f0102978:	e8 1c d7 ff ff       	call   f0100099 <_panic>f01029784063,188615
f010297d:	83 ec 0c             	sub    $0xc,%espf010297d4065,188717
f0102980:	8d 87 b0 d6 fe ff    	lea    -0x12950(%edi),%eaxf01029804066,188766
f0102986:	50                   	push   %eaxf01029864067,188825
f0102987:	89 fb                	mov    %edi,%ebxf01029874068,188869
f0102989:	e8 ca 04 00 00       	call   f0102e58 <cprintf>f01029894069,188918
f010298e:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf010298e4071,189002
f0102994:	8b 00                	mov    (%eax),%eaxf01029944072,189058
f0102996:	83 c4 10             	add    $0x10,%espf01029964074,189140
f0102999:	3d ff ff ff ef       	cmp    $0xefffffff,%eaxf01029994075,189190
f010299e:	0f 86 33 02 00 00    	jbe    f0102bd7 <mem_init+0x19ae>f010299e4076,189246
f01029a4:	05 00 00 00 10       	add    $0x10000000,%eaxf01029a44078,189348
static inline voidstatic4081,189407
f01029a9:	0f 22 d8             	mov    %eax,%cr3f01029a94085,189493
f01029ac:	b8 00 00 00 00       	mov    $0x0,%eaxf01029ac4087,189568
f01029b1:	e8 05 e1 ff ff       	call   f0100abb <check_page_free_list>f01029b14088,189617
f01029b6:	0f 20 c0             	mov    %cr0,%eaxf01029b64090,189733
f01029b9:	83 e0 f3             	and    $0xfffffff3,%eaxf01029b94092,189808
f01029bc:	0d 23 00 05 80       	or     $0x80050023,%eaxf01029bc4093,189864
f01029c1:	0f 22 c0             	mov    %eax,%cr0f01029c14095,189966
	pp1 = pp2 = 0;pp14100,190092
f01029c4:	83 ec 0c             	sub    $0xc,%espf01029c44102,190140
f01029c7:	6a 00                	push   $0x0f01029c74103,190189
f01029c9:	e8 62 e5 ff ff       	call   f0100f30 <page_alloc>f01029c94104,190233
f01029ce:	89 c6                	mov    %eax,%esif01029ce4105,190294
f01029d0:	83 c4 10             	add    $0x10,%espf01029d04106,190343
f01029d3:	85 c0                	test   %eax,%eaxf01029d34107,190393
f01029d5:	0f 84 15 02 00 00    	je     f0102bf0 <mem_init+0x19c7>f01029d54108,190442
f01029db:	83 ec 0c             	sub    $0xc,%espf01029db4110,190540
f01029de:	6a 00                	push   $0x0f01029de4111,190589
f01029e0:	e8 4b e5 ff ff       	call   f0100f30 <page_alloc>f01029e04112,190633
f01029e5:	89 45 d0             	mov    %eax,-0x30(%ebp)f01029e54113,190694
f01029e8:	83 c4 10             	add    $0x10,%espf01029e84114,190750
f01029eb:	85 c0                	test   %eax,%eaxf01029eb4115,190800
f01029ed:	0f 84 1c 02 00 00    	je     f0102c0f <mem_init+0x19e6>f01029ed4116,190849
f01029f3:	83 ec 0c             	sub    $0xc,%espf01029f34118,190947
f01029f6:	6a 00                	push   $0x0f01029f64119,190996
f01029f8:	e8 33 e5 ff ff       	call   f0100f30 <page_alloc>f01029f84120,191040
f01029fd:	89 45 d4             	mov    %eax,-0x2c(%ebp)f01029fd4121,191101
f0102a00:	83 c4 10             	add    $0x10,%espf0102a004122,191157
f0102a03:	85 c0                	test   %eax,%eaxf0102a034123,191207
f0102a05:	0f 84 23 02 00 00    	je     f0102c2e <mem_init+0x1a05>f0102a054124,191256
f0102a0b:	83 ec 0c             	sub    $0xc,%espf0102a0b4126,191339
f0102a0e:	56                   	push   %esif0102a0e4127,191388
f0102a0f:	e8 aa e5 ff ff       	call   f0100fbe <page_free>f0102a0f4128,191432
f0102a14:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0102a144130,191525
f0102a1a:	8b 4d d0             	mov    -0x30(%ebp),%ecxf0102a1a4131,191581
f0102a1d:	2b 08                	sub    (%eax),%ecxf0102a1d4132,191637
f0102a1f:	89 c8                	mov    %ecx,%eaxf0102a1f4133,191688
f0102a21:	c1 f8 03             	sar    $0x3,%eaxf0102a214134,191737
f0102a24:	c1 e0 0c             	shl    $0xc,%eaxf0102a244135,191786
f0102a27:	89 c1                	mov    %eax,%ecxf0102a274137,191861
f0102a29:	c1 e9 0c             	shr    $0xc,%ecxf0102a294138,191910
f0102a2c:	83 c4 10             	add    $0x10,%espf0102a2c4139,191959
f0102a2f:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf0102a2f4140,192009
f0102a35:	3b 0a                	cmp    (%edx),%ecxf0102a354141,192065
f0102a37:	0f 83 10 02 00 00    	jae    f0102c4d <mem_init+0x1a24>f0102a374142,192116
f0102a3d:	83 ec 04             	sub    $0x4,%espf0102a3d4144,192217
f0102a40:	68 00 10 00 00       	push   $0x1000f0102a404145,192266
f0102a45:	6a 01                	push   $0x1f0102a454146,192313
f0102a47:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0102a474148,192390
f0102a4c:	50                   	push   %eaxf0102a4c4149,192446
f0102a4d:	e8 62 0f 00 00       	call   f01039b4 <memset>f0102a4d4150,192490
f0102a52:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0102a524152,192580
f0102a58:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0102a584153,192636
f0102a5b:	2b 08                	sub    (%eax),%ecxf0102a5b4154,192692
f0102a5d:	89 c8                	mov    %ecx,%eaxf0102a5d4155,192743
f0102a5f:	c1 f8 03             	sar    $0x3,%eaxf0102a5f4156,192792
f0102a62:	c1 e0 0c             	shl    $0xc,%eaxf0102a624157,192841
f0102a65:	89 c1                	mov    %eax,%ecxf0102a654159,192916
f0102a67:	c1 e9 0c             	shr    $0xc,%ecxf0102a674160,192965
f0102a6a:	83 c4 10             	add    $0x10,%espf0102a6a4161,193014
f0102a6d:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf0102a6d4162,193064
f0102a73:	3b 0a                	cmp    (%edx),%ecxf0102a734163,193120
f0102a75:	0f 83 e8 01 00 00    	jae    f0102c63 <mem_init+0x1a3a>f0102a754164,193171
f0102a7b:	83 ec 04             	sub    $0x4,%espf0102a7b4166,193272
f0102a7e:	68 00 10 00 00       	push   $0x1000f0102a7e4167,193321
f0102a83:	6a 02                	push   $0x2f0102a834168,193368
f0102a85:	2d 00 00 00 10       	sub    $0x10000000,%eaxf0102a854170,193445
f0102a8a:	50                   	push   %eaxf0102a8a4171,193501
f0102a8b:	e8 24 0f 00 00       	call   f01039b4 <memset>f0102a8b4172,193545
f0102a90:	6a 02                	push   $0x2f0102a904174,193656
f0102a92:	68 00 10 00 00       	push   $0x1000f0102a924175,193700
f0102a97:	8b 5d d0             	mov    -0x30(%ebp),%ebxf0102a974176,193747
f0102a9a:	53                   	push   %ebxf0102a9a4177,193803
f0102a9b:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0102a9b4178,193847
f0102aa1:	ff 30                	pushl  (%eax)f0102aa14179,193903
f0102aa3:	e8 10 e7 ff ff       	call   f01011b8 <page_insert>f0102aa34180,193949
f0102aa8:	83 c4 20             	add    $0x20,%espf0102aa84182,194038
f0102aab:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)f0102aab4183,194088
f0102ab0:	0f 85 c3 01 00 00    	jne    f0102c79 <mem_init+0x1a50>f0102ab04184,194142
f0102ab6:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000f0102ab64186,194253
f0102abd:	01 01 01 f0102abd4187,194310
f0102ac0:	0f 85 d4 01 00 00    	jne    f0102c9a <mem_init+0x1a71>f0102ac04188,194330
f0102ac6:	6a 02                	push   $0x2f0102ac64190,194450
f0102ac8:	68 00 10 00 00       	push   $0x1000f0102ac84191,194494
f0102acd:	ff 75 d4             	pushl  -0x2c(%ebp)f0102acd4192,194541
f0102ad0:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0102ad04193,194592
f0102ad6:	ff 30                	pushl  (%eax)f0102ad64194,194648
f0102ad8:	e8 db e6 ff ff       	call   f01011b8 <page_insert>f0102ad84195,194694
f0102add:	83 c4 10             	add    $0x10,%espf0102add4197,194801
f0102ae0:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000f0102ae04198,194851
f0102ae7:	02 02 02 f0102ae74199,194908
f0102aea:	0f 85 cb 01 00 00    	jne    f0102cbb <mem_init+0x1a92>f0102aea4200,194928
f0102af0:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0102af04202,195021
f0102af3:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)f0102af34203,195077
f0102af8:	0f 85 de 01 00 00    	jne    f0102cdc <mem_init+0x1ab3>f0102af84204,195131
f0102afe:	8b 45 d0             	mov    -0x30(%ebp),%eaxf0102afe4206,195224
f0102b01:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)f0102b014207,195280
f0102b06:	0f 85 f1 01 00 00    	jne    f0102cfd <mem_init+0x1ad4>f0102b064208,195334
f0102b0c:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000f0102b0c4210,195436
f0102b13:	03 03 03 f0102b134211,195493
f0102b16:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0102b164213,195546
f0102b1c:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf0102b1c4214,195602
f0102b1f:	2b 08                	sub    (%eax),%ecxf0102b1f4215,195658
f0102b21:	89 c8                	mov    %ecx,%eaxf0102b214216,195709
f0102b23:	c1 f8 03             	sar    $0x3,%eaxf0102b234217,195758
f0102b26:	c1 e0 0c             	shl    $0xc,%eaxf0102b264218,195807
f0102b29:	89 c1                	mov    %eax,%ecxf0102b294220,195882
f0102b2b:	c1 e9 0c             	shr    $0xc,%ecxf0102b2b4221,195931
f0102b2e:	c7 c2 c8 96 11 f0    	mov    $0xf01196c8,%edxf0102b2e4222,195980
f0102b34:	3b 0a                	cmp    (%edx),%ecxf0102b344223,196036
f0102b36:	0f 83 e2 01 00 00    	jae    f0102d1e <mem_init+0x1af5>f0102b364224,196087
f0102b3c:	81 b8 00 00 00 f0 03 	cmpl   $0x3030303,-0x10000000(%eax)f0102b3c4226,196205
f0102b43:	03 03 03 f0102b434227,196273
f0102b46:	0f 85 ea 01 00 00    	jne    f0102d36 <mem_init+0x1b0d>f0102b464228,196293
f0102b4c:	83 ec 08             	sub    $0x8,%espf0102b4c4230,196401
f0102b4f:	68 00 10 00 00       	push   $0x1000f0102b4f4231,196450
f0102b54:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0102b544232,196497
f0102b5a:	ff 30                	pushl  (%eax)f0102b5a4233,196553
f0102b5c:	e8 19 e6 ff ff       	call   f010117a <page_remove>f0102b5c4234,196599
f0102b61:	83 c4 10             	add    $0x10,%espf0102b614236,196688
f0102b64:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf0102b644237,196738
f0102b67:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)f0102b674238,196794
f0102b6c:	0f 85 e5 01 00 00    	jne    f0102d57 <mem_init+0x1b2e>f0102b6c4239,196848
f0102b72:	c7 c0 cc 96 11 f0    	mov    $0xf01196cc,%eaxf0102b724243,196992
f0102b78:	8b 08                	mov    (%eax),%ecxf0102b784244,197048
f0102b7a:	8b 11                	mov    (%ecx),%edxf0102b7a4245,197099
f0102b7c:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edxf0102b7c4246,197150
f0102b82:	c7 c0 d0 96 11 f0    	mov    $0xf01196d0,%eaxf0102b824248,197239
f0102b88:	89 f3                	mov    %esi,%ebxf0102b884249,197295
f0102b8a:	2b 18                	sub    (%eax),%ebxf0102b8a4250,197344
f0102b8c:	89 d8                	mov    %ebx,%eaxf0102b8c4251,197395
f0102b8e:	c1 f8 03             	sar    $0x3,%eaxf0102b8e4252,197444
f0102b91:	c1 e0 0c             	shl    $0xc,%eaxf0102b914253,197493
f0102b94:	39 c2                	cmp    %eax,%edxf0102b944254,197542
f0102b96:	0f 85 dc 01 00 00    	jne    f0102d78 <mem_init+0x1b4f>f0102b964255,197591
f0102b9c:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)f0102b9c4257,197677
f0102ba2:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)f0102ba24259,197755
f0102ba7:	0f 85 ec 01 00 00    	jne    f0102d99 <mem_init+0x1b70>f0102ba74260,197809
f0102bad:	66 c7 46 04 00 00    	movw   $0x0,0x4(%esi)f0102bad4262,197893
f0102bb3:	83 ec 0c             	sub    $0xc,%espf0102bb34266,197992
f0102bb6:	56                   	push   %esif0102bb64267,198041
f0102bb7:	e8 02 e4 ff ff       	call   f0100fbe <page_free>f0102bb74268,198085
f0102bbc:	8d 87 44 d7 fe ff    	lea    -0x128bc(%edi),%eaxf0102bbc4271,198201
f0102bc2:	89 04 24             	mov    %eax,(%esp)f0102bc24272,198260
f0102bc5:	89 fb                	mov    %edi,%ebxf0102bc54273,198311
f0102bc7:	e8 8c 02 00 00       	call   f0102e58 <cprintf>f0102bc74274,198360
f0102bcc:	83 c4 10             	add    $0x10,%espf0102bcc4276,198420
f0102bcf:	8d 65 f4             	lea    -0xc(%ebp),%espf0102bcf4277,198470
f0102bd2:	5b                   	pop    %ebxf0102bd24278,198525
f0102bd3:	5e                   	pop    %esif0102bd34279,198569
f0102bd4:	5f                   	pop    %edif0102bd44280,198613
f0102bd5:	5d                   	pop    %ebpf0102bd54281,198657
f0102bd6:	c3                   	ret    f0102bd64282,198701
f0102bd7:	50                   	push   %eaxf0102bd74284,198807
f0102bd8:	8d 87 60 d1 fe ff    	lea    -0x12ea0(%edi),%eaxf0102bd84285,198851
f0102bde:	50                   	push   %eaxf0102bde4286,198910
f0102bdf:	68 d4 00 00 00       	push   $0xd4f0102bdf4287,198954
f0102be4:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf0102be44288,198999
f0102bea:	50                   	push   %eaxf0102bea4289,199058
f0102beb:	e8 a9 d4 ff ff       	call   f0100099 <_panic>f0102beb4290,199102
f0102bf0:	8d 87 41 d8 fe ff    	lea    -0x127bf(%edi),%eaxf0102bf04292,199191
f0102bf6:	50                   	push   %eaxf0102bf64293,199250
f0102bf7:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf0102bf74294,199294
f0102bfd:	50                   	push   %eaxf0102bfd4295,199353
f0102bfe:	68 70 03 00 00       	push   $0x370f0102bfe4296,199397
f0102c03:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf0102c034297,199443
f0102c09:	50                   	push   %eaxf0102c094298,199502
f0102c0a:	e8 8a d4 ff ff       	call   f0100099 <_panic>f0102c0a4299,199546
f0102c0f:	8d 87 57 d8 fe ff    	lea    -0x127a9(%edi),%eaxf0102c0f4301,199635
f0102c15:	50                   	push   %eaxf0102c154302,199694
f0102c16:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf0102c164303,199738
f0102c1c:	50                   	push   %eaxf0102c1c4304,199797
f0102c1d:	68 71 03 00 00       	push   $0x371f0102c1d4305,199841
f0102c22:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf0102c224306,199887
f0102c28:	50                   	push   %eaxf0102c284307,199946
f0102c29:	e8 6b d4 ff ff       	call   f0100099 <_panic>f0102c294308,199990
f0102c2e:	8d 87 6d d8 fe ff    	lea    -0x12793(%edi),%eaxf0102c2e4310,200079
f0102c34:	50                   	push   %eaxf0102c344311,200138
f0102c35:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf0102c354312,200182
f0102c3b:	50                   	push   %eaxf0102c3b4313,200241
f0102c3c:	68 72 03 00 00       	push   $0x372f0102c3c4314,200285
f0102c41:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf0102c414315,200331
f0102c47:	50                   	push   %eaxf0102c474316,200390
f0102c48:	e8 4c d4 ff ff       	call   f0100099 <_panic>f0102c484317,200434
f0102c4d:	50                   	push   %eaxf0102c4d4319,200555
f0102c4e:	8d 87 a4 cf fe ff    	lea    -0x1305c(%edi),%eaxf0102c4e4320,200599
f0102c54:	50                   	push   %eaxf0102c544321,200658
f0102c55:	6a 52                	push   $0x52f0102c554322,200702
f0102c57:	8d 87 7c d7 fe ff    	lea    -0x12884(%edi),%eaxf0102c574323,200747
f0102c5d:	50                   	push   %eaxf0102c5d4324,200806
f0102c5e:	e8 36 d4 ff ff       	call   f0100099 <_panic>f0102c5e4325,200850
f0102c63:	50                   	push   %eaxf0102c634326,200907
f0102c64:	8d 87 a4 cf fe ff    	lea    -0x1305c(%edi),%eaxf0102c644327,200951
f0102c6a:	50                   	push   %eaxf0102c6a4328,201010
f0102c6b:	6a 52                	push   $0x52f0102c6b4329,201054
f0102c6d:	8d 87 7c d7 fe ff    	lea    -0x12884(%edi),%eaxf0102c6d4330,201099
f0102c73:	50                   	push   %eaxf0102c734331,201158
f0102c74:	e8 20 d4 ff ff       	call   f0100099 <_panic>f0102c744332,201202
f0102c79:	8d 87 3e d9 fe ff    	lea    -0x126c2(%edi),%eaxf0102c794334,201286
f0102c7f:	50                   	push   %eaxf0102c7f4335,201345
f0102c80:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf0102c804336,201389
f0102c86:	50                   	push   %eaxf0102c864337,201448
f0102c87:	68 77 03 00 00       	push   $0x377f0102c874338,201492
f0102c8c:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf0102c8c4339,201538
f0102c92:	50                   	push   %eaxf0102c924340,201597
f0102c93:	89 fb                	mov    %edi,%ebxf0102c934341,201641
f0102c95:	e8 ff d3 ff ff       	call   f0100099 <_panic>f0102c954342,201690
f0102c9a:	8d 87 d0 d6 fe ff    	lea    -0x12930(%edi),%eaxf0102c9a4344,201792
f0102ca0:	50                   	push   %eaxf0102ca04345,201851
f0102ca1:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf0102ca14346,201895
f0102ca7:	50                   	push   %eaxf0102ca74347,201954
f0102ca8:	68 78 03 00 00       	push   $0x378f0102ca84348,201998
f0102cad:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf0102cad4349,202044
f0102cb3:	50                   	push   %eaxf0102cb34350,202103
f0102cb4:	89 fb                	mov    %edi,%ebxf0102cb44351,202147
f0102cb6:	e8 de d3 ff ff       	call   f0100099 <_panic>f0102cb64352,202196
f0102cbb:	8d 87 f4 d6 fe ff    	lea    -0x1290c(%edi),%eaxf0102cbb4354,202298
f0102cc1:	50                   	push   %eaxf0102cc14355,202357
f0102cc2:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf0102cc24356,202401
f0102cc8:	50                   	push   %eaxf0102cc84357,202460
f0102cc9:	68 7a 03 00 00       	push   $0x37af0102cc94358,202504
f0102cce:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf0102cce4359,202550
f0102cd4:	50                   	push   %eaxf0102cd44360,202609
f0102cd5:	89 fb                	mov    %edi,%ebxf0102cd54361,202653
f0102cd7:	e8 bd d3 ff ff       	call   f0100099 <_panic>f0102cd74362,202702
f0102cdc:	8d 87 60 d9 fe ff    	lea    -0x126a0(%edi),%eaxf0102cdc4364,202786
f0102ce2:	50                   	push   %eaxf0102ce24365,202845
f0102ce3:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf0102ce34366,202889
f0102ce9:	50                   	push   %eaxf0102ce94367,202948
f0102cea:	68 7b 03 00 00       	push   $0x37bf0102cea4368,202992
f0102cef:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf0102cef4369,203038
f0102cf5:	50                   	push   %eaxf0102cf54370,203097
f0102cf6:	89 fb                	mov    %edi,%ebxf0102cf64371,203141
f0102cf8:	e8 9c d3 ff ff       	call   f0100099 <_panic>f0102cf84372,203190
f0102cfd:	8d 87 ce d9 fe ff    	lea    -0x12632(%edi),%eaxf0102cfd4374,203274
f0102d03:	50                   	push   %eaxf0102d034375,203333
f0102d04:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf0102d044376,203377
f0102d0a:	50                   	push   %eaxf0102d0a4377,203436
f0102d0b:	68 7c 03 00 00       	push   $0x37cf0102d0b4378,203480
f0102d10:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf0102d104379,203526
f0102d16:	50                   	push   %eaxf0102d164380,203585
f0102d17:	89 fb                	mov    %edi,%ebxf0102d174381,203629
f0102d19:	e8 7b d3 ff ff       	call   f0100099 <_panic>f0102d194382,203678
f0102d1e:	50                   	push   %eaxf0102d1e4383,203735
f0102d1f:	8d 87 a4 cf fe ff    	lea    -0x1305c(%edi),%eaxf0102d1f4384,203779
f0102d25:	50                   	push   %eaxf0102d254385,203838
f0102d26:	6a 52                	push   $0x52f0102d264386,203882
f0102d28:	8d 87 7c d7 fe ff    	lea    -0x12884(%edi),%eaxf0102d284387,203927
f0102d2e:	50                   	push   %eaxf0102d2e4388,203986
f0102d2f:	89 fb                	mov    %edi,%ebxf0102d2f4389,204030
f0102d31:	e8 63 d3 ff ff       	call   f0100099 <_panic>f0102d314390,204079
f0102d36:	8d 87 18 d7 fe ff    	lea    -0x128e8(%edi),%eaxf0102d364392,204188
f0102d3c:	50                   	push   %eaxf0102d3c4393,204247
f0102d3d:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf0102d3d4394,204291
f0102d43:	50                   	push   %eaxf0102d434395,204350
f0102d44:	68 7e 03 00 00       	push   $0x37ef0102d444396,204394
f0102d49:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf0102d494397,204440
f0102d4f:	50                   	push   %eaxf0102d4f4398,204499
f0102d50:	89 fb                	mov    %edi,%ebxf0102d504399,204543
f0102d52:	e8 42 d3 ff ff       	call   f0100099 <_panic>f0102d524400,204592
f0102d57:	8d 87 98 d9 fe ff    	lea    -0x12668(%edi),%eaxf0102d574402,204676
f0102d5d:	50                   	push   %eaxf0102d5d4403,204735
f0102d5e:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf0102d5e4404,204779
f0102d64:	50                   	push   %eaxf0102d644405,204838
f0102d65:	68 80 03 00 00       	push   $0x380f0102d654406,204882
f0102d6a:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf0102d6a4407,204928
f0102d70:	50                   	push   %eaxf0102d704408,204987
f0102d71:	89 fb                	mov    %edi,%ebxf0102d714409,205031
f0102d73:	e8 21 d3 ff ff       	call   f0100099 <_panic>f0102d734410,205080
f0102d78:	8d 87 5c d2 fe ff    	lea    -0x12da4(%edi),%eaxf0102d784412,205187
f0102d7e:	50                   	push   %eaxf0102d7e4413,205246
f0102d7f:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf0102d7f4414,205290
f0102d85:	50                   	push   %eaxf0102d854415,205349
f0102d86:	68 83 03 00 00       	push   $0x383f0102d864416,205393
f0102d8b:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf0102d8b4417,205439
f0102d91:	50                   	push   %eaxf0102d914418,205498
f0102d92:	89 fb                	mov    %edi,%ebxf0102d924419,205542
f0102d94:	e8 00 d3 ff ff       	call   f0100099 <_panic>f0102d944420,205591
f0102d99:	8d 87 4f d9 fe ff    	lea    -0x126b1(%edi),%eaxf0102d994422,205675
f0102d9f:	50                   	push   %eaxf0102d9f4423,205734
f0102da0:	8d 87 96 d7 fe ff    	lea    -0x1286a(%edi),%eaxf0102da04424,205778
f0102da6:	50                   	push   %eaxf0102da64425,205837
f0102da7:	68 85 03 00 00       	push   $0x385f0102da74426,205881
f0102dac:	8d 87 70 d7 fe ff    	lea    -0x12890(%edi),%eaxf0102dac4427,205927
f0102db2:	50                   	push   %eaxf0102db24428,205986
f0102db3:	89 fb                	mov    %edi,%ebxf0102db34429,206030
f0102db5:	e8 df d2 ff ff       	call   f0100099 <_panic>f0102db54430,206079
f0102dba <tlb_invalidate>:f0102dba4432,206137
f0102dba:	55                   	push   %ebpf0102dba4434,206166
f0102dbb:	89 e5                	mov    %esp,%ebpf0102dbb4435,206210
f0102dbd:	8b 45 0c             	mov    0xc(%ebp),%eaxf0102dbd4437,206315
f0102dc0:	0f 01 38             	invlpg (%eax)f0102dc04438,206369
f0102dc3:	5d                   	pop    %ebpf0102dc34440,206417
f0102dc4:	c3                   	ret    f0102dc44441,206461
f0102dc5 <__x86.get_pc_thunk.cx>:f0102dc54443,206502
f0102dc5:	8b 0c 24             	mov    (%esp),%ecxf0102dc54444,206536
f0102dc8:	c3                   	ret    f0102dc84445,206587
f0102dc9 <__x86.get_pc_thunk.si>:f0102dc94447,206628
f0102dc9:	8b 34 24             	mov    (%esp),%esif0102dc94448,206662
f0102dcc:	c3                   	ret    f0102dcc4449,206713
f0102dcd <__x86.get_pc_thunk.di>:f0102dcd4451,206754
f0102dcd:	8b 3c 24             	mov    (%esp),%edif0102dcd4452,206788
f0102dd0:	c3                   	ret    f0102dd04453,206839
f0102dd1 <mc146818_read>:f0102dd14455,206880
unsignedunsigned4459,206933
f0102dd1:	55                   	push   %ebpf0102dd14462,206972
f0102dd2:	89 e5                	mov    %esp,%ebpf0102dd24463,207016
f0102dd4:	8b 45 08             	mov    0x8(%ebp),%eaxf0102dd44465,207122
f0102dd7:	ba 70 00 00 00       	mov    $0x70,%edxf0102dd74466,207176
f0102ddc:	ee                   	out    %al,(%dx)f0102ddc4467,207226
f0102ddd:	ba 71 00 00 00       	mov    $0x71,%edxf0102ddd4469,207331
f0102de2:	ec                   	in     (%dx),%alf0102de24470,207381
f0102de3:	0f b6 c0             	movzbl %al,%eaxf0102de34473,207473
f0102de6:	5d                   	pop    %ebpf0102de64475,207523
f0102de7:	c3                   	ret    f0102de74476,207567
f0102de8 <mc146818_write>:f0102de84478,207608
voidvoid4480,207636
f0102de8:	55                   	push   %ebpf0102de84483,207688
f0102de9:	89 e5                	mov    %esp,%ebpf0102de94484,207732
f0102deb:	8b 45 08             	mov    0x8(%ebp),%eaxf0102deb4486,207838
f0102dee:	ba 70 00 00 00       	mov    $0x70,%edxf0102dee4487,207892
f0102df3:	ee                   	out    %al,(%dx)f0102df34488,207942
f0102df4:	8b 45 0c             	mov    0xc(%ebp),%eaxf0102df44489,207991
f0102df7:	ba 71 00 00 00       	mov    $0x71,%edxf0102df74490,208045
f0102dfc:	ee                   	out    %al,(%dx)f0102dfc4491,208095
f0102dfd:	5d                   	pop    %ebpf0102dfd4495,208190
f0102dfe:	c3                   	ret    f0102dfe4496,208234
f0102dff <putch>:f0102dff4498,208275
static voidstatic4502,208319
f0102dff:	55                   	push   %ebpf0102dff4505,208357
f0102e00:	89 e5                	mov    %esp,%ebpf0102e004506,208401
f0102e02:	53                   	push   %ebxf0102e024507,208450
f0102e03:	83 ec 10             	sub    $0x10,%espf0102e034508,208494
f0102e06:	e8 44 d3 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0102e064509,208544
f0102e0b:	81 c3 01 45 01 00    	add    $0x14501,%ebxf0102e0b4510,208616
f0102e11:	ff 75 08             	pushl  0x8(%ebp)f0102e114512,208684
f0102e14:	e8 ad d8 ff ff       	call   f01006c6 <cputchar>f0102e144513,208733
f0102e19:	83 c4 10             	add    $0x10,%espf0102e194516,208803
f0102e1c:	8b 5d fc             	mov    -0x4(%ebp),%ebxf0102e1c4517,208853
f0102e1f:	c9                   	leave  f0102e1f4518,208908
f0102e20:	c3                   	ret    f0102e204519,208948
f0102e21 <vcprintf>:f0102e214521,208989
intint4523,209011
f0102e21:	55                   	push   %ebpf0102e214526,209055
f0102e22:	89 e5                	mov    %esp,%ebpf0102e224527,209099
f0102e24:	53                   	push   %ebxf0102e244528,209148
f0102e25:	83 ec 14             	sub    $0x14,%espf0102e254529,209192
f0102e28:	e8 22 d3 ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f0102e284530,209242
f0102e2d:	81 c3 df 44 01 00    	add    $0x144df,%ebxf0102e2d4531,209314
f0102e33:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)f0102e334533,209381
f0102e3a:	ff 75 0c             	pushl  0xc(%ebp)f0102e3a4536,209478
f0102e3d:	ff 75 08             	pushl  0x8(%ebp)f0102e3d4537,209527
f0102e40:	8d 45 f4             	lea    -0xc(%ebp),%eaxf0102e404538,209576
f0102e43:	50                   	push   %eaxf0102e434539,209631
f0102e44:	8d 83 f3 ba fe ff    	lea    -0x1450d(%ebx),%eaxf0102e444540,209675
f0102e4a:	50                   	push   %eaxf0102e4a4541,209734
f0102e4b:	e8 18 04 00 00       	call   f0103268 <vprintfmt>f0102e4b4542,209778
f0102e50:	8b 45 f4             	mov    -0xc(%ebp),%eaxf0102e504545,209853
f0102e53:	8b 5d fc             	mov    -0x4(%ebp),%ebxf0102e534546,209908
f0102e56:	c9                   	leave  f0102e564547,209963
f0102e57:	c3                   	ret    f0102e574548,210003
f0102e58 <cprintf>:f0102e584550,210044
intint4552,210065
f0102e58:	55                   	push   %ebpf0102e584555,210101
f0102e59:	89 e5                	mov    %esp,%ebpf0102e594556,210145
f0102e5b:	83 ec 10             	sub    $0x10,%espf0102e5b4557,210194
f0102e5e:	8d 45 0c             	lea    0xc(%ebp),%eaxf0102e5e4562,210288
	cnt = vcprintf(fmt, ap);cnt4563,210342
f0102e61:	50                   	push   %eaxf0102e614564,210368
f0102e62:	ff 75 08             	pushl  0x8(%ebp)f0102e624565,210412
f0102e65:	e8 b7 ff ff ff       	call   f0102e21 <vcprintf>f0102e654566,210461
f0102e6a:	c9                   	leave  f0102e6a4571,210549
f0102e6b:	c3                   	ret    f0102e6b4572,210589
f0102e6c <stab_binsearch>:f0102e6c4574,210630
static voidstatic4577,210706
f0102e6c:	55                   	push   %ebpf0102e6c4581,210832
f0102e6d:	89 e5                	mov    %esp,%ebpf0102e6d4582,210876
f0102e6f:	57                   	push   %edif0102e6f4583,210925
f0102e70:	56                   	push   %esif0102e704584,210969
f0102e71:	53                   	push   %ebxf0102e714585,211013
f0102e72:	83 ec 14             	sub    $0x14,%espf0102e724586,211057
f0102e75:	89 45 ec             	mov    %eax,-0x14(%ebp)f0102e754587,211107
f0102e78:	89 55 e4             	mov    %edx,-0x1c(%ebp)f0102e784588,211163
f0102e7b:	89 4d e0             	mov    %ecx,-0x20(%ebp)f0102e7b4589,211219
f0102e7e:	8b 7d 08             	mov    0x8(%ebp),%edif0102e7e4590,211275
f0102e81:	8b 32                	mov    (%edx),%esif0102e814592,211388
f0102e83:	8b 01                	mov    (%ecx),%eaxf0102e834593,211439
f0102e85:	89 45 f0             	mov    %eax,-0x10(%ebp)f0102e854594,211490
f0102e88:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)f0102e884595,211546
f0102e8f:	eb 2f                	jmp    f0102ec0 <stab_binsearch+0x54>f0102e8f4598,211621
f0102e91:	83 e8 01             	sub    $0x1,%eaxf0102e914604,211830
f0102e94:	39 c6                	cmp    %eax,%esif0102e944606,211923
f0102e96:	7f 49                	jg     f0102ee1 <stab_binsearch+0x75>f0102e964607,211972
f0102e98:	0f b6 0a             	movzbl (%edx),%ecxf0102e984608,212042
f0102e9b:	83 ea 0c             	sub    $0xc,%edxf0102e9b4609,212093
f0102e9e:	39 f9                	cmp    %edi,%ecxf0102e9e4610,212142
f0102ea0:	75 ef                	jne    f0102e91 <stab_binsearch+0x25>f0102ea04611,212191
		any_matches = 1;any_matches4616,212305
f0102ea2:	8d 14 40             	lea    (%eax,%eax,2),%edxf0102ea24618,212357
f0102ea5:	8b 4d ec             	mov    -0x14(%ebp),%ecxf0102ea54619,212415
f0102ea8:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edxf0102ea84620,212471
f0102eac:	3b 55 0c             	cmp    0xc(%ebp),%edxf0102eac4621,212532
f0102eaf:	73 35                	jae    f0102ee6 <stab_binsearch+0x7a>f0102eaf4622,212586
f0102eb1:	8b 75 e4             	mov    -0x1c(%ebp),%esif0102eb14624,212677
f0102eb4:	89 06                	mov    %eax,(%esi)f0102eb44625,212733
			l = true_m + 1;l4626,212784
f0102eb6:	8d 73 01             	lea    0x1(%ebx),%esif0102eb64627,212803
		any_matches = 1;any_matches4628,212857
f0102eb9:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)f0102eb94629,212876
f0102ec0:	3b 75 f0             	cmp    -0x10(%ebp),%esif0102ec04631,212950
f0102ec3:	7f 4e                	jg     f0102f13 <stab_binsearch+0xa7>f0102ec34632,213006
f0102ec5:	8b 45 f0             	mov    -0x10(%ebp),%eaxf0102ec54634,213116
f0102ec8:	01 f0                	add    %esi,%eaxf0102ec84635,213172
f0102eca:	89 c3                	mov    %eax,%ebxf0102eca4636,213221
f0102ecc:	c1 eb 1f             	shr    $0x1f,%ebxf0102ecc4637,213270
f0102ecf:	01 c3                	add    %eax,%ebxf0102ecf4638,213320
f0102ed1:	d1 fb                	sar    %ebxf0102ed14639,213369
f0102ed3:	8d 04 5b             	lea    (%ebx,%ebx,2),%eaxf0102ed34640,213413
f0102ed6:	8b 4d ec             	mov    -0x14(%ebp),%ecxf0102ed64641,213471
f0102ed9:	8d 54 81 04          	lea    0x4(%ecx,%eax,4),%edxf0102ed94642,213527
f0102edd:	89 d8                	mov    %ebx,%eaxf0102edd4643,213588
f0102edf:	eb b3                	jmp    f0102e94 <stab_binsearch+0x28>f0102edf4645,213681
			l = true_m + 1;l4646,213751
f0102ee1:	8d 73 01             	lea    0x1(%ebx),%esif0102ee14647,213770
f0102ee4:	eb da                	jmp    f0102ec0 <stab_binsearch+0x54>f0102ee44649,213837
f0102ee6:	3b 55 0c             	cmp    0xc(%ebp),%edxf0102ee64651,213947
f0102ee9:	76 14                	jbe    f0102eff <stab_binsearch+0x93>f0102ee94652,214001
f0102eeb:	83 e8 01             	sub    $0x1,%eaxf0102eeb4654,214097
f0102eee:	89 45 f0             	mov    %eax,-0x10(%ebp)f0102eee4655,214146
f0102ef1:	8b 5d e0             	mov    -0x20(%ebp),%ebxf0102ef14656,214202
f0102ef4:	89 03                	mov    %eax,(%ebx)f0102ef44657,214258
		any_matches = 1;any_matches4658,214309
f0102ef6:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)f0102ef64659,214328
f0102efd:	eb c1                	jmp    f0102ec0 <stab_binsearch+0x54>f0102efd4660,214384
			r = m - 1;r4661,214454
f0102eff:	8b 75 e4             	mov    -0x1c(%ebp),%esif0102eff4666,214576
f0102f02:	89 06                	mov    %eax,(%esi)f0102f024667,214632
			l = m;l4668,214683
f0102f04:	83 45 0c 01          	addl   $0x1,0xc(%ebp)f0102f044670,214704
f0102f08:	89 c6                	mov    %eax,%esif0102f084671,214758
		any_matches = 1;any_matches4672,214807
f0102f0a:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)f0102f0a4673,214826
f0102f11:	eb ad                	jmp    f0102ec0 <stab_binsearch+0x54>f0102f114674,214882
f0102f13:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)f0102f134679,214979
f0102f17:	74 16                	je     f0102f2f <stab_binsearch+0xc3>f0102f174680,215035
f0102f19:	8b 45 e0             	mov    -0x20(%ebp),%eaxf0102f194685,215220
f0102f1c:	8b 00                	mov    (%eax),%eaxf0102f1c4686,215276
f0102f1e:	8b 75 e4             	mov    -0x1c(%ebp),%esif0102f1e4688,215379
f0102f21:	8b 0e                	mov    (%esi),%ecxf0102f214689,215435
f0102f23:	8d 14 40             	lea    (%eax,%eax,2),%edxf0102f234690,215486
f0102f26:	8b 75 ec             	mov    -0x14(%ebp),%esif0102f264691,215544
f0102f29:	8d 54 96 04          	lea    0x4(%esi,%edx,4),%edxf0102f294692,215600
f0102f2d:	eb 12                	jmp    f0102f41 <stab_binsearch+0xd5>f0102f2d4694,215687
f0102f2f:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf0102f2f4696,215793
f0102f32:	8b 00                	mov    (%eax),%eaxf0102f324697,215849
f0102f34:	83 e8 01             	sub    $0x1,%eaxf0102f344698,215900
f0102f37:	8b 7d e0             	mov    -0x20(%ebp),%edif0102f374699,215949
f0102f3a:	89 07                	mov    %eax,(%edi)f0102f3a4700,216005
f0102f3c:	eb 16                	jmp    f0102f54 <stab_binsearch+0xe8>f0102f3c4701,216056
f0102f3e:	83 e8 01             	sub    $0x1,%eaxf0102f3e4703,216138
f0102f41:	39 c1                	cmp    %eax,%ecxf0102f414705,216213
f0102f43:	7d 0a                	jge    f0102f4f <stab_binsearch+0xe3>f0102f434706,216262
f0102f45:	0f b6 1a             	movzbl (%edx),%ebxf0102f454708,216384
f0102f48:	83 ea 0c             	sub    $0xc,%edxf0102f484709,216435
f0102f4b:	39 fb                	cmp    %edi,%ebxf0102f4b4710,216484
f0102f4d:	75 ef                	jne    f0102f3e <stab_binsearch+0xd2>f0102f4d4711,216533
f0102f4f:	8b 7d e4             	mov    -0x1c(%ebp),%edif0102f4f4714,216644
f0102f52:	89 07                	mov    %eax,(%edi)f0102f524715,216700
f0102f54:	83 c4 14             	add    $0x14,%espf0102f544718,216756
f0102f57:	5b                   	pop    %ebxf0102f574719,216806
f0102f58:	5e                   	pop    %esif0102f584720,216850
f0102f59:	5f                   	pop    %edif0102f594721,216894
f0102f5a:	5d                   	pop    %ebpf0102f5a4722,216938
f0102f5b:	c3                   	ret    f0102f5b4723,216982
f0102f5c <debuginfo_eip>:f0102f5c4725,217023
intint4729,217153
f0102f5c:	55                   	push   %ebpf0102f5c4732,217216
f0102f5d:	89 e5                	mov    %esp,%ebpf0102f5d4733,217260
f0102f5f:	57                   	push   %edif0102f5f4734,217309
f0102f60:	56                   	push   %esif0102f604735,217353
f0102f61:	53                   	push   %ebxf0102f614736,217397
f0102f62:	83 ec 2c             	sub    $0x2c,%espf0102f624737,217441
f0102f65:	e8 5b fe ff ff       	call   f0102dc5 <__x86.get_pc_thunk.cx>f0102f654738,217491
f0102f6a:	81 c1 a2 43 01 00    	add    $0x143a2,%ecxf0102f6a4739,217563
f0102f70:	89 4d d4             	mov    %ecx,-0x2c(%ebp)f0102f704740,217616
f0102f73:	8b 5d 08             	mov    0x8(%ebp),%ebxf0102f734741,217672
f0102f76:	8b 7d 0c             	mov    0xc(%ebp),%edif0102f764742,217726
	const struct Stab *stabs, *stab_end;const4743,217780
f0102f79:	8d 81 57 da fe ff    	lea    -0x125a9(%ecx),%eaxf0102f794749,217952
f0102f7f:	89 07                	mov    %eax,(%edi)f0102f7f4750,218011
f0102f81:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)f0102f814752,218083
f0102f88:	89 47 08             	mov    %eax,0x8(%edi)f0102f884754,218171
f0102f8b:	c7 47 0c 09 00 00 00 	movl   $0x9,0xc(%edi)f0102f8b4756,218252
f0102f92:	89 5f 10             	mov    %ebx,0x10(%edi)f0102f924758,218333
f0102f95:	c7 47 14 00 00 00 00 	movl   $0x0,0x14(%edi)f0102f954760,218412
f0102f9c:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebxf0102f9c4764,218524
f0102fa2:	0f 86 f4 00 00 00    	jbe    f010309c <debuginfo_eip+0x140>f0102fa24765,218580
f0102fa8:	c7 c0 09 b4 10 f0    	mov    $0xf010b409,%eaxf0102fa84772,218822
f0102fae:	39 81 f8 ff ff ff    	cmp    %eax,-0x8(%ecx)f0102fae4773,218878
f0102fb4:	0f 86 88 01 00 00    	jbe    f0103142 <debuginfo_eip+0x1e6>f0102fb44774,218933
f0102fba:	8b 75 d4             	mov    -0x2c(%ebp),%esif0102fba4775,219003
f0102fbd:	c7 c0 a8 d1 10 f0    	mov    $0xf010d1a8,%eaxf0102fbd4776,219059
f0102fc3:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)f0102fc34777,219115
f0102fc7:	0f 85 7c 01 00 00    	jne    f0103149 <debuginfo_eip+0x1ed>f0102fc74778,219170
	lfile = 0;lfile4784,219471
f0102fcd:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)f0102fcd4785,219483
	rfile = (stab_end - stabs) - 1;rfile4786,219539
f0102fd4:	c7 c0 7c 4f 10 f0    	mov    $0xf0104f7c,%eaxf0102fd44787,219572
f0102fda:	c7 c2 08 b4 10 f0    	mov    $0xf010b408,%edxf0102fda4788,219628
f0102fe0:	29 c2                	sub    %eax,%edxf0102fe04789,219684
f0102fe2:	c1 fa 02             	sar    $0x2,%edxf0102fe24790,219733
f0102fe5:	69 d2 ab aa aa aa    	imul   $0xaaaaaaab,%edx,%edxf0102fe54791,219782
f0102feb:	83 ea 01             	sub    $0x1,%edxf0102feb4792,219843
f0102fee:	89 55 e0             	mov    %edx,-0x20(%ebp)f0102fee4793,219892
f0102ff1:	8d 4d e0             	lea    -0x20(%ebp),%ecxf0102ff14795,220000
f0102ff4:	8d 55 e4             	lea    -0x1c(%ebp),%edxf0102ff44796,220056
f0102ff7:	83 ec 08             	sub    $0x8,%espf0102ff74797,220112
f0102ffa:	53                   	push   %ebxf0102ffa4798,220161
f0102ffb:	6a 64                	push   $0x64f0102ffb4799,220205
f0102ffd:	e8 6a fe ff ff       	call   f0102e6c <stab_binsearch>f0102ffd4800,220250
f0103002:	8b 45 e4             	mov    -0x1c(%ebp),%eaxf01030024802,220332
f0103005:	83 c4 10             	add    $0x10,%espf01030054803,220388
f0103008:	85 c0                	test   %eax,%eaxf01030084804,220438
f010300a:	0f 84 40 01 00 00    	je     f0103150 <debuginfo_eip+0x1f4>f010300a4805,220487
	lfun = lfile;lfun4810,220648
f0103010:	89 45 dc             	mov    %eax,-0x24(%ebp)f01030104811,220663
	rfun = rfile;rfun4812,220719
f0103013:	8b 45 e0             	mov    -0x20(%ebp),%eaxf01030134813,220734
f0103016:	89 45 d8             	mov    %eax,-0x28(%ebp)f01030164814,220790
f0103019:	8d 4d d8             	lea    -0x28(%ebp),%ecxf01030194816,220897
f010301c:	8d 55 dc             	lea    -0x24(%ebp),%edxf010301c4817,220953
f010301f:	83 ec 08             	sub    $0x8,%espf010301f4818,221009
f0103022:	53                   	push   %ebxf01030224819,221058
f0103023:	6a 24                	push   $0x24f01030234820,221102
f0103025:	89 75 d4             	mov    %esi,-0x2c(%ebp)f01030254821,221147
f0103028:	c7 c0 7c 4f 10 f0    	mov    $0xf0104f7c,%eaxf01030284822,221203
f010302e:	e8 39 fe ff ff       	call   f0102e6c <stab_binsearch>f010302e4823,221259
f0103033:	8b 75 dc             	mov    -0x24(%ebp),%esif01030334826,221346
f0103036:	83 c4 10             	add    $0x10,%espf01030364827,221402
f0103039:	3b 75 d8             	cmp    -0x28(%ebp),%esif01030394828,221452
f010303c:	7f 79                	jg     f01030b7 <debuginfo_eip+0x15b>f010303c4829,221508
f010303e:	8d 04 76             	lea    (%esi,%esi,2),%eaxf010303e4833,221730
f0103041:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01030414834,221788
f0103044:	c7 c2 7c 4f 10 f0    	mov    $0xf0104f7c,%edxf01030444835,221844
f010304a:	8d 0c 82             	lea    (%edx,%eax,4),%ecxf010304a4836,221900
f010304d:	8b 11                	mov    (%ecx),%edxf010304d4837,221958
f010304f:	c7 c0 a8 d1 10 f0    	mov    $0xf010d1a8,%eaxf010304f4838,222009
f0103055:	81 e8 09 b4 10 f0    	sub    $0xf010b409,%eaxf01030554839,222065
f010305b:	39 c2                	cmp    %eax,%edxf010305b4840,222121
f010305d:	73 09                	jae    f0103068 <debuginfo_eip+0x10c>f010305d4841,222170
f010305f:	81 c2 09 b4 10 f0    	add    $0xf010b409,%edxf010305f4843,222293
f0103065:	89 57 08             	mov    %edx,0x8(%edi)f01030654844,222349
f0103068:	8b 41 08             	mov    0x8(%ecx),%eaxf01030684846,222446
f010306b:	89 47 10             	mov    %eax,0x10(%edi)f010306b4847,222500
		lline = lfile;lline4849,222583
		rline = rfile;rline4850,222600
f010306e:	83 ec 08             	sub    $0x8,%espf010306e4854,222731
f0103071:	6a 3a                	push   $0x3af01030714855,222780
f0103073:	ff 77 08             	pushl  0x8(%edi)f01030734856,222825
f0103076:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01030764857,222874
f0103079:	e8 1a 09 00 00       	call   f0103998 <strfind>f01030794858,222930
f010307e:	2b 47 08             	sub    0x8(%edi),%eaxf010307e4859,222988
f0103081:	89 47 0c             	mov    %eax,0xc(%edi)f01030814860,223042
f0103084:	8b 5d e4             	mov    -0x1c(%ebp),%ebxf01030844867,223366
f0103087:	8d 04 76             	lea    (%esi,%esi,2),%eaxf01030874868,223422
f010308a:	8b 4d d4             	mov    -0x2c(%ebp),%ecxf010308a4869,223480
f010308d:	c7 c2 7c 4f 10 f0    	mov    $0xf0104f7c,%edxf010308d4870,223536
f0103093:	8d 44 82 04          	lea    0x4(%edx,%eax,4),%eaxf01030934871,223592
f0103097:	83 c4 10             	add    $0x10,%espf01030974872,223653
f010309a:	eb 29                	jmp    f01030c5 <debuginfo_eip+0x169>f010309a4873,223703
f010309c:	83 ec 04             	sub    $0x4,%espf010309c4875,223807
f010309f:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf010309f4876,223856
f01030a2:	8d 83 61 da fe ff    	lea    -0x1259f(%ebx),%eaxf01030a24877,223912
f01030a8:	50                   	push   %eaxf01030a84878,223971
f01030a9:	6a 7f                	push   $0x7ff01030a94879,224015
f01030ab:	8d 83 6e da fe ff    	lea    -0x12592(%ebx),%eaxf01030ab4880,224060
f01030b1:	50                   	push   %eaxf01030b14881,224119
f01030b2:	e8 e2 cf ff ff       	call   f0100099 <_panic>f01030b24882,224163
f01030b7:	89 5f 10             	mov    %ebx,0x10(%edi)f01030b74884,224248
		lline = lfile;lline4885,224303
f01030ba:	8b 75 e4             	mov    -0x1c(%ebp),%esif01030ba4886,224320
f01030bd:	eb af                	jmp    f010306e <debuginfo_eip+0x112>f01030bd4887,224376
f01030bf:	83 ee 01             	sub    $0x1,%esif01030bf4891,224564
f01030c2:	83 e8 0c             	sub    $0xc,%eaxf01030c24892,224613
f01030c5:	39 f3                	cmp    %esi,%ebxf01030c54894,224685
f01030c7:	7f 3a                	jg     f0103103 <debuginfo_eip+0x1a7>f01030c74895,224734
f01030c9:	0f b6 10             	movzbl (%eax),%edxf01030c94897,224844
f01030cc:	80 fa 84             	cmp    $0x84,%dlf01030cc4898,224895
f01030cf:	74 0b                	je     f01030dc <debuginfo_eip+0x180>f01030cf4899,224944
f01030d1:	80 fa 64             	cmp    $0x64,%dlf01030d14901,225081
f01030d4:	75 e9                	jne    f01030bf <debuginfo_eip+0x163>f01030d44902,225130
f01030d6:	83 78 04 00          	cmpl   $0x0,0x4(%eax)f01030d64903,225200
f01030da:	74 e3                	je     f01030bf <debuginfo_eip+0x163>f01030da4904,225254
f01030dc:	8d 14 76             	lea    (%esi,%esi,2),%edxf01030dc4906,225392
f01030df:	8b 5d d4             	mov    -0x2c(%ebp),%ebxf01030df4907,225450
f01030e2:	c7 c0 7c 4f 10 f0    	mov    $0xf0104f7c,%eaxf01030e24908,225506
f01030e8:	8b 14 90             	mov    (%eax,%edx,4),%edxf01030e84909,225562
f01030eb:	c7 c0 a8 d1 10 f0    	mov    $0xf010d1a8,%eaxf01030eb4910,225620
f01030f1:	81 e8 09 b4 10 f0    	sub    $0xf010b409,%eaxf01030f14911,225676
f01030f7:	39 c2                	cmp    %eax,%edxf01030f74912,225732
f01030f9:	73 08                	jae    f0103103 <debuginfo_eip+0x1a7>f01030f94913,225781
f01030fb:	81 c2 09 b4 10 f0    	add    $0xf010b409,%edxf01030fb4915,225901
f0103101:	89 17                	mov    %edx,(%edi)f01031014916,225957
f0103103:	8b 5d dc             	mov    -0x24(%ebp),%ebxf01031034922,226144
f0103106:	8b 4d d8             	mov    -0x28(%ebp),%ecxf01031064923,226200
f0103109:	b8 00 00 00 00       	mov    $0x0,%eaxf01031094930,226387
f010310e:	39 cb                	cmp    %ecx,%ebxf010310e4932,226454
f0103110:	7d 4a                	jge    f010315c <debuginfo_eip+0x200>f01031104933,226503
f0103112:	8d 53 01             	lea    0x1(%ebx),%edxf01031124935,226598
f0103115:	8d 1c 5b             	lea    (%ebx,%ebx,2),%ebxf01031154936,226652
f0103118:	8b 45 d4             	mov    -0x2c(%ebp),%eaxf01031184937,226710
f010311b:	c7 c0 7c 4f 10 f0    	mov    $0xf0104f7c,%eaxf010311b4938,226766
f0103121:	8d 44 98 10          	lea    0x10(%eax,%ebx,4),%eaxf01031214939,226822
f0103125:	eb 07                	jmp    f010312e <debuginfo_eip+0x1d2>f01031254940,226884
f0103127:	83 47 14 01          	addl   $0x1,0x14(%edi)f01031274942,226978
f010312b:	83 c2 01             	add    $0x1,%edxf010312b4944,227049
f010312e:	39 d1                	cmp    %edx,%ecxf010312e4946,227123
f0103130:	74 25                	je     f0103157 <debuginfo_eip+0x1fb>f01031304947,227172
f0103132:	83 c0 0c             	add    $0xc,%eaxf01031324948,227242
f0103135:	80 78 f4 a0          	cmpb   $0xa0,-0xc(%eax)f01031354950,227345
f0103139:	74 ec                	je     f0103127 <debuginfo_eip+0x1cb>f01031394951,227401
f010313b:	b8 00 00 00 00       	mov    $0x0,%eaxf010313b4953,227482
f0103140:	eb 1a                	jmp    f010315c <debuginfo_eip+0x200>f01031404954,227531
f0103142:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf01031424956,227614
f0103147:	eb 13                	jmp    f010315c <debuginfo_eip+0x200>f01031474957,227670
f0103149:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf01031494958,227740
f010314e:	eb 0c                	jmp    f010315c <debuginfo_eip+0x200>f010314e4959,227796
f0103150:	b8 ff ff ff ff       	mov    $0xffffffff,%eaxf01031504961,227879
f0103155:	eb 05                	jmp    f010315c <debuginfo_eip+0x200>f01031554962,227935
f0103157:	b8 00 00 00 00       	mov    $0x0,%eaxf01031574964,228016
f010315c:	8d 65 f4             	lea    -0xc(%ebp),%espf010315c4966,228067
f010315f:	5b                   	pop    %ebxf010315f4967,228122
f0103160:	5e                   	pop    %esif01031604968,228166
f0103161:	5f                   	pop    %edif01031614969,228210
f0103162:	5d                   	pop    %ebpf01031624970,228254
f0103163:	c3                   	ret    f01031634971,228298
f0103164 <printnum>:f01031644973,228339
static voidstatic4976,228429
f0103164:	55                   	push   %ebpf01031644980,228555
f0103165:	89 e5                	mov    %esp,%ebpf01031654981,228599
f0103167:	57                   	push   %edif01031674982,228648
f0103168:	56                   	push   %esif01031684983,228692
f0103169:	53                   	push   %ebxf01031694984,228736
f010316a:	83 ec 2c             	sub    $0x2c,%espf010316a4985,228780
f010316d:	e8 53 fc ff ff       	call   f0102dc5 <__x86.get_pc_thunk.cx>f010316d4986,228830
f0103172:	81 c1 9a 41 01 00    	add    $0x1419a,%ecxf01031724987,228902
f0103178:	89 4d e4             	mov    %ecx,-0x1c(%ebp)f01031784988,228955
f010317b:	89 c7                	mov    %eax,%edif010317b4989,229011
f010317d:	89 d6                	mov    %edx,%esif010317d4990,229060
f010317f:	8b 45 08             	mov    0x8(%ebp),%eaxf010317f4991,229109
f0103182:	8b 55 0c             	mov    0xc(%ebp),%edxf01031824992,229163
f0103185:	89 45 d0             	mov    %eax,-0x30(%ebp)f01031854993,229217
f0103188:	89 55 d4             	mov    %edx,-0x2c(%ebp)f01031884994,229273
f010318b:	8b 4d 10             	mov    0x10(%ebp),%ecxf010318b4997,229417
f010318e:	bb 00 00 00 00       	mov    $0x0,%ebxf010318e4998,229472
f0103193:	89 4d d8             	mov    %ecx,-0x28(%ebp)f01031934999,229521
f0103196:	89 5d dc             	mov    %ebx,-0x24(%ebp)f01031965000,229577
f0103199:	39 d3                	cmp    %edx,%ebxf01031995001,229633
f010319b:	72 09                	jb     f01031a6 <printnum+0x42>f010319b5002,229682
f010319d:	39 45 10             	cmp    %eax,0x10(%ebp)f010319d5003,229746
f01031a0:	0f 87 83 00 00 00    	ja     f0103229 <printnum+0xc5>f01031a05004,229801
f01031a6:	83 ec 0c             	sub    $0xc,%espf01031a65006,229927
f01031a9:	ff 75 18             	pushl  0x18(%ebp)f01031a95007,229976
f01031ac:	8b 45 14             	mov    0x14(%ebp),%eaxf01031ac5008,230026
f01031af:	8d 58 ff             	lea    -0x1(%eax),%ebxf01031af5009,230081
f01031b2:	53                   	push   %ebxf01031b25010,230136
f01031b3:	ff 75 10             	pushl  0x10(%ebp)f01031b35011,230180
f01031b6:	83 ec 08             	sub    $0x8,%espf01031b65012,230230
f01031b9:	ff 75 dc             	pushl  -0x24(%ebp)f01031b95013,230279
f01031bc:	ff 75 d8             	pushl  -0x28(%ebp)f01031bc5014,230330
f01031bf:	ff 75 d4             	pushl  -0x2c(%ebp)f01031bf5015,230381
f01031c2:	ff 75 d0             	pushl  -0x30(%ebp)f01031c25016,230432
f01031c5:	8b 5d e4             	mov    -0x1c(%ebp),%ebxf01031c55017,230483
f01031c8:	e8 e3 09 00 00       	call   f0103bb0 <__udivdi3>f01031c85018,230539
f01031cd:	83 c4 18             	add    $0x18,%espf01031cd5019,230599
f01031d0:	52                   	push   %edxf01031d05020,230649
f01031d1:	50                   	push   %eaxf01031d15021,230693
f01031d2:	89 f2                	mov    %esi,%edxf01031d25022,230737
f01031d4:	89 f8                	mov    %edi,%eaxf01031d45023,230786
f01031d6:	e8 89 ff ff ff       	call   f0103164 <printnum>f01031d65024,230835
f01031db:	83 c4 20             	add    $0x20,%espf01031db5025,230894
f01031de:	eb 13                	jmp    f01031f3 <printnum+0x8f>f01031de5026,230944
f01031e0:	83 ec 08             	sub    $0x8,%espf01031e05031,231120
f01031e3:	56                   	push   %esif01031e35032,231169
f01031e4:	ff 75 18             	pushl  0x18(%ebp)f01031e45033,231213
f01031e7:	ff d7                	call   *%edif01031e75034,231263
f01031e9:	83 c4 10             	add    $0x10,%espf01031e95035,231308
f01031ec:	83 eb 01             	sub    $0x1,%ebxf01031ec5037,231380
f01031ef:	85 db                	test   %ebx,%ebxf01031ef5038,231429
f01031f1:	7f ed                	jg     f01031e0 <printnum+0x7c>f01031f15039,231478
f01031f3:	83 ec 08             	sub    $0x8,%espf01031f35044,231644
f01031f6:	56                   	push   %esif01031f65045,231693
f01031f7:	83 ec 04             	sub    $0x4,%espf01031f75046,231737
f01031fa:	ff 75 dc             	pushl  -0x24(%ebp)f01031fa5047,231786
f01031fd:	ff 75 d8             	pushl  -0x28(%ebp)f01031fd5048,231837
f0103200:	ff 75 d4             	pushl  -0x2c(%ebp)f01032005049,231888
f0103203:	ff 75 d0             	pushl  -0x30(%ebp)f01032035050,231939
f0103206:	8b 75 e4             	mov    -0x1c(%ebp),%esif01032065051,231990
f0103209:	89 f3                	mov    %esi,%ebxf01032095052,232046
f010320b:	e8 c0 0a 00 00       	call   f0103cd0 <__umoddi3>f010320b5053,232095
f0103210:	83 c4 14             	add    $0x14,%espf01032105054,232155
f0103213:	0f be 84 06 7c da fe 	movsbl -0x12584(%esi,%eax,1),%eaxf01032135055,232205
f010321a:	ff f010321a5056,232271
f010321b:	50                   	push   %eaxf010321b5057,232285
f010321c:	ff d7                	call   *%edif010321c5058,232329
f010321e:	83 c4 10             	add    $0x10,%espf010321e5060,232376
f0103221:	8d 65 f4             	lea    -0xc(%ebp),%espf01032215061,232426
f0103224:	5b                   	pop    %ebxf01032245062,232481
f0103225:	5e                   	pop    %esif01032255063,232525
f0103226:	5f                   	pop    %edif01032265064,232569
f0103227:	5d                   	pop    %ebpf01032275065,232613
f0103228:	c3                   	ret    f01032285066,232657
f0103229:	8b 5d 14             	mov    0x14(%ebp),%ebxf01032295067,232697
f010322c:	eb be                	jmp    f01031ec <printnum+0x88>f010322c5068,232752
f010322e <sprintputch>:f010322e5070,232817
static voidstatic5074,232855
f010322e:	55                   	push   %ebpf010322e5077,232910
f010322f:	89 e5                	mov    %esp,%ebpf010322f5078,232954
f0103231:	8b 45 0c             	mov    0xc(%ebp),%eaxf01032315079,233003
f0103234:	83 40 08 01          	addl   $0x1,0x8(%eax)f01032345081,233068
f0103238:	8b 10                	mov    (%eax),%edxf01032385083,233145
f010323a:	3b 50 04             	cmp    0x4(%eax),%edxf010323a5084,233196
f010323d:	73 0a                	jae    f0103249 <sprintputch+0x1b>f010323d5085,233250
f010323f:	8d 4a 01             	lea    0x1(%edx),%ecxf010323f5087,233335
f0103242:	89 08                	mov    %ecx,(%eax)f01032425088,233389
f0103244:	8b 45 08             	mov    0x8(%ebp),%eaxf01032445089,233440
f0103247:	88 02                	mov    %al,(%edx)f01032475090,233494
f0103249:	5d                   	pop    %ebpf01032495092,233546
f010324a:	c3                   	ret    f010324a5093,233590
f010324b <printfmt>:f010324b5095,233631
f010324b:	55                   	push   %ebpf010324b5097,233654
f010324c:	89 e5                	mov    %esp,%ebpf010324c5098,233698
f010324e:	83 ec 08             	sub    $0x8,%espf010324e5099,233747
f0103251:	8d 45 14             	lea    0x14(%ebp),%eaxf01032515101,233816
f0103254:	50                   	push   %eaxf01032545103,233907
f0103255:	ff 75 10             	pushl  0x10(%ebp)f01032555104,233951
f0103258:	ff 75 0c             	pushl  0xc(%ebp)f01032585105,234001
f010325b:	ff 75 08             	pushl  0x8(%ebp)f010325b5106,234050
f010325e:	e8 05 00 00 00       	call   f0103268 <vprintfmt>f010325e5107,234099
f0103263:	83 c4 10             	add    $0x10,%espf01032635109,234161
f0103266:	c9                   	leave  f01032665110,234211
f0103267:	c3                   	ret    f01032675111,234251
f0103268 <vprintfmt>:f01032685113,234292
f0103268:	55                   	push   %ebpf01032685115,234316
f0103269:	89 e5                	mov    %esp,%ebpf01032695116,234360
f010326b:	57                   	push   %edif010326b5117,234409
f010326c:	56                   	push   %esif010326c5118,234453
f010326d:	53                   	push   %ebxf010326d5119,234497
f010326e:	83 ec 2c             	sub    $0x2c,%espf010326e5120,234541
f0103271:	e8 d9 ce ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01032715121,234591
f0103276:	81 c3 96 40 01 00    	add    $0x14096,%ebxf01032765122,234663
f010327c:	8b 75 0c             	mov    0xc(%ebp),%esif010327c5123,234716
f010327f:	8b 7d 10             	mov    0x10(%ebp),%edif010327f5124,234770
f0103282:	e9 8e 03 00 00       	jmp    f0103615 <.L35+0x48>f01032825125,234825
		padc = ' ';padc5126,234885
f0103287:	c6 45 d4 20          	movb   $0x20,-0x2c(%ebp)f01032875127,234899
		altflag = 0;altflag5128,234956
f010328b:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)f010328b5129,234971
		precision = -1;precision5130,235027
f0103292:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)f01032925131,235045
		width = -1;width5132,235108
f0103299:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)f01032995133,235122
		lflag = 0;lflag5134,235185
f01032a0:	b9 00 00 00 00       	mov    $0x0,%ecxf01032a05135,235198
f01032a5:	89 4d cc             	mov    %ecx,-0x34(%ebp)f01032a55136,235247
f01032a8:	8d 47 01             	lea    0x1(%edi),%eaxf01032a85138,235346
f01032ab:	89 45 e4             	mov    %eax,-0x1c(%ebp)f01032ab5139,235400
f01032ae:	0f b6 17             	movzbl (%edi),%edxf01032ae5140,235456
f01032b1:	8d 42 dd             	lea    -0x23(%edx),%eaxf01032b15141,235507
f01032b4:	3c 55                	cmp    $0x55,%alf01032b45142,235563
f01032b6:	0f 87 e1 03 00 00    	ja     f010369d <.L22>f01032b65143,235612
f01032bc:	0f b6 c0             	movzbl %al,%eaxf01032bc5144,235667
f01032bf:	89 d9                	mov    %ebx,%ecxf01032bf5145,235715
f01032c1:	03 8c 83 08 db fe ff 	add    -0x124f8(%ebx,%eax,4),%ecxf01032c15146,235764
f01032c8:	ff e1                	jmp    *%ecxf01032c85147,235830
f01032ca <.L67>:f01032ca5149,235876
f01032ca:	8b 7d e4             	mov    -0x1c(%ebp),%edif01032ca5150,235893
			padc = '-';padc5151,235949
f01032cd:	c6 45 d4 2d          	movb   $0x2d,-0x2c(%ebp)f01032cd5152,235964
f01032d1:	eb d5                	jmp    f01032a8 <vprintfmt+0x40>f01032d15153,236021
f01032d3 <.L28>:f01032d35155,236087
f01032d3:	8b 7d e4             	mov    -0x1c(%ebp),%edif01032d35157,236147
			padc = '0';padc5158,236203
f01032d6:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)f01032d65159,236218
f01032da:	eb cc                	jmp    f01032a8 <vprintfmt+0x40>f01032da5160,236275
f01032dc <.L29>:f01032dc5162,236341
f01032dc:	0f b6 d2             	movzbl %dl,%edxf01032dc5164,236401
f01032df:	8b 7d e4             	mov    -0x1c(%ebp),%edif01032df5165,236449
f01032e2:	b8 00 00 00 00       	mov    $0x0,%eaxf01032e25167,236539
				precision = precision * 10 + ch - '0';precision5168,236588
f01032e7:	8d 04 80             	lea    (%eax,%eax,4),%eaxf01032e75169,236631
f01032ea:	8d 44 42 d0          	lea    -0x30(%edx,%eax,2),%eaxf01032ea5170,236689
				ch = *fmt;ch5171,236752
f01032ee:	0f be 17             	movsbl (%edi),%edxf01032ee5172,236767
f01032f1:	8d 4a d0             	lea    -0x30(%edx),%ecxf01032f15174,236848
f01032f4:	83 f9 09             	cmp    $0x9,%ecxf01032f45175,236904
f01032f7:	77 55                	ja     f010334e <.L23+0xf>f01032f75176,236953
f01032f9:	83 c7 01             	add    $0x1,%edif01032f95178,237046
				precision = precision * 10 + ch - '0';precision5179,237095
f01032fc:	eb e9                	jmp    f01032e7 <.L29+0xb>f01032fc5180,237138
f01032fe <.L26>:f01032fe5182,237198
			precision = va_arg(ap, int);precision5183,237215
f01032fe:	8b 45 14             	mov    0x14(%ebp),%eaxf01032fe5184,237247
f0103301:	8b 00                	mov    (%eax),%eaxf01033015185,237302
f0103303:	89 45 d0             	mov    %eax,-0x30(%ebp)f01033035186,237353
f0103306:	8b 45 14             	mov    0x14(%ebp),%eaxf01033065187,237409
f0103309:	8d 40 04             	lea    0x4(%eax),%eaxf01033095188,237464
f010330c:	89 45 14             	mov    %eax,0x14(%ebp)f010330c5189,237518
f010330f:	8b 7d e4             	mov    -0x1c(%ebp),%edif010330f5191,237616
f0103312:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)f01033125193,237690
f0103316:	79 90                	jns    f01032a8 <vprintfmt+0x40>f01033165194,237746
				width = precision, precision = -1;width5195,237811
f0103318:	8b 45 d0             	mov    -0x30(%ebp),%eaxf01033185196,237850
f010331b:	89 45 e0             	mov    %eax,-0x20(%ebp)f010331b5197,237906
f010331e:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)f010331e5198,237962
f0103325:	eb 81                	jmp    f01032a8 <vprintfmt+0x40>f01033255199,238025
f0103327 <.L27>:f01033275201,238091
f0103327:	8b 45 e0             	mov    -0x20(%ebp),%eaxf01033275202,238108
f010332a:	85 c0                	test   %eax,%eaxf010332a5203,238164
f010332c:	ba 00 00 00 00       	mov    $0x0,%edxf010332c5204,238213
f0103331:	0f 49 d0             	cmovns %eax,%edxf01033315205,238262
f0103334:	89 55 e0             	mov    %edx,-0x20(%ebp)f01033345206,238311
f0103337:	8b 7d e4             	mov    -0x1c(%ebp),%edif01033375208,238410
f010333a:	e9 69 ff ff ff       	jmp    f01032a8 <vprintfmt+0x40>f010333a5209,238466
f010333f <.L23>:f010333f5211,238532
f010333f:	8b 7d e4             	mov    -0x1c(%ebp),%edif010333f5212,238549
			altflag = 1;altflag5213,238605
f0103342:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)f01033425214,238621
f0103349:	e9 5a ff ff ff       	jmp    f01032a8 <vprintfmt+0x40>f01033495216,238695
f010334e:	89 45 d0             	mov    %eax,-0x30(%ebp)f010334e5217,238760
f0103351:	eb bf                	jmp    f0103312 <.L26+0x14>f01033515218,238816
f0103353 <.L33>:f01033535220,238877
f0103353:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)f01033535222,238906
f0103357:	8b 7d e4             	mov    -0x1c(%ebp),%edif01033575224,239005
f010335a:	e9 49 ff ff ff       	jmp    f01032a8 <vprintfmt+0x40>f010335a5226,239079
f010335f <.L30>:f010335f5228,239145
f010335f:	8b 45 14             	mov    0x14(%ebp),%eaxf010335f5230,239197
f0103362:	8d 78 04             	lea    0x4(%eax),%edif01033625231,239252
f0103365:	83 ec 08             	sub    $0x8,%espf01033655232,239306
f0103368:	56                   	push   %esif01033685233,239355
f0103369:	ff 30                	pushl  (%eax)f01033695234,239399
f010336b:	ff 55 08             	call   *0x8(%ebp)f010336b5235,239445
f010336e:	83 c4 10             	add    $0x10,%espf010336e5237,239505
f0103371:	89 7d 14             	mov    %edi,0x14(%ebp)f01033715239,239590
f0103374:	e9 99 02 00 00       	jmp    f0103612 <.L35+0x45>f01033745241,239655
f0103379 <.L32>:f01033795243,239716
			err = va_arg(ap, int);err5244,239733
f0103379:	8b 45 14             	mov    0x14(%ebp),%eaxf01033795245,239759
f010337c:	8d 78 04             	lea    0x4(%eax),%edif010337c5246,239814
f010337f:	8b 00                	mov    (%eax),%eaxf010337f5247,239868
f0103381:	99                   	cltd   f01033815248,239919
f0103382:	31 d0                	xor    %edx,%eaxf01033825249,239959
f0103384:	29 d0                	sub    %edx,%eaxf01033845250,240008
f0103386:	83 f8 06             	cmp    $0x6,%eaxf01033865252,240116
f0103389:	7f 27                	jg     f01033b2 <.L32+0x39>f01033895253,240165
f010338b:	8b 94 83 1c 1d 00 00 	mov    0x1d1c(%ebx,%eax,4),%edxf010338b5254,240225
f0103392:	85 d2                	test   %edx,%edxf01033925255,240289
f0103394:	74 1c                	je     f01033b2 <.L32+0x39>f01033945256,240338
f0103396:	52                   	push   %edxf01033965258,240436
f0103397:	8d 83 a8 d7 fe ff    	lea    -0x12858(%ebx),%eaxf01033975259,240480
f010339d:	50                   	push   %eaxf010339d5260,240539
f010339e:	56                   	push   %esif010339e5261,240583
f010339f:	ff 75 08             	pushl  0x8(%ebp)f010339f5262,240627
f01033a2:	e8 a4 fe ff ff       	call   f010324b <printfmt>f01033a25263,240676
f01033a7:	83 c4 10             	add    $0x10,%espf01033a75264,240735
			err = va_arg(ap, int);err5265,240785
f01033aa:	89 7d 14             	mov    %edi,0x14(%ebp)f01033aa5266,240811
f01033ad:	e9 60 02 00 00       	jmp    f0103612 <.L35+0x45>f01033ad5267,240866
f01033b2:	50                   	push   %eaxf01033b25269,240972
f01033b3:	8d 83 94 da fe ff    	lea    -0x1256c(%ebx),%eaxf01033b35270,241016
f01033b9:	50                   	push   %eaxf01033b95271,241075
f01033ba:	56                   	push   %esif01033ba5272,241119
f01033bb:	ff 75 08             	pushl  0x8(%ebp)f01033bb5273,241163
f01033be:	e8 88 fe ff ff       	call   f010324b <printfmt>f01033be5274,241212
f01033c3:	83 c4 10             	add    $0x10,%espf01033c35275,241271
			err = va_arg(ap, int);err5276,241321
f01033c6:	89 7d 14             	mov    %edi,0x14(%ebp)f01033c65277,241347
f01033c9:	e9 44 02 00 00       	jmp    f0103612 <.L35+0x45>f01033c95279,241448
f01033ce <.L36>:f01033ce5281,241509
f01033ce:	8b 45 14             	mov    0x14(%ebp),%eaxf01033ce5283,241567
f01033d1:	83 c0 04             	add    $0x4,%eaxf01033d15284,241622
f01033d4:	89 45 cc             	mov    %eax,-0x34(%ebp)f01033d45285,241671
f01033d7:	8b 45 14             	mov    0x14(%ebp),%eaxf01033d75286,241727
f01033da:	8b 38                	mov    (%eax),%edif01033da5287,241782
				p = "(null)";p5288,241833
f01033dc:	85 ff                	test   %edi,%edif01033dc5289,241851
f01033de:	8d 83 8d da fe ff    	lea    -0x12573(%ebx),%eaxf01033de5290,241900
f01033e4:	0f 44 f8             	cmove  %eax,%edif01033e45291,241959
f01033e7:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)f01033e75293,242041
f01033eb:	0f 8e b5 00 00 00    	jle    f01034a6 <.L36+0xd8>f01033eb5294,242097
f01033f1:	80 7d d4 2d          	cmpb   $0x2d,-0x2c(%ebp)f01033f15295,242157
f01033f5:	75 08                	jne    f01033ff <.L36+0x31>f01033f55296,242214
f01033f7:	89 75 0c             	mov    %esi,0xc(%ebp)f01033f75297,242274
f01033fa:	8b 75 d0             	mov    -0x30(%ebp),%esif01033fa5298,242328
f01033fd:	eb 6d                	jmp    f010346c <.L36+0x9e>f01033fd5299,242384
f01033ff:	83 ec 08             	sub    $0x8,%espf01033ff5301,242505
f0103402:	ff 75 d0             	pushl  -0x30(%ebp)f01034025302,242554
f0103405:	57                   	push   %edif01034055303,242605
f0103406:	e8 49 04 00 00       	call   f0103854 <strnlen>f01034065304,242649
f010340b:	8b 55 e0             	mov    -0x20(%ebp),%edxf010340b5305,242707
f010340e:	29 c2                	sub    %eax,%edxf010340e5306,242763
f0103410:	89 55 c8             	mov    %edx,-0x38(%ebp)f01034105307,242812
f0103413:	83 c4 10             	add    $0x10,%espf01034135308,242868
f0103416:	0f be 45 d4          	movsbl -0x2c(%ebp),%eaxf01034165310,242944
f010341a:	89 45 e0             	mov    %eax,-0x20(%ebp)f010341a5311,243000
f010341d:	89 7d d4             	mov    %edi,-0x2c(%ebp)f010341d5312,243056
f0103420:	89 d7                	mov    %edx,%edif01034205313,243112
f0103422:	eb 10                	jmp    f0103434 <.L36+0x66>f01034225315,243222
f0103424:	83 ec 08             	sub    $0x8,%espf01034245317,243308
f0103427:	56                   	push   %esif01034275318,243357
f0103428:	ff 75 e0             	pushl  -0x20(%ebp)f01034285319,243401
f010342b:	ff 55 08             	call   *0x8(%ebp)f010342b5320,243452
f010342e:	83 ef 01             	sub    $0x1,%edif010342e5322,243563
f0103431:	83 c4 10             	add    $0x10,%espf01034315323,243612
f0103434:	85 ff                	test   %edi,%edif01034345324,243662
f0103436:	7f ec                	jg     f0103424 <.L36+0x56>f01034365325,243711
f0103438:	8b 7d d4             	mov    -0x2c(%ebp),%edif01034385326,243771
f010343b:	8b 55 c8             	mov    -0x38(%ebp),%edxf010343b5327,243827
f010343e:	85 d2                	test   %edx,%edxf010343e5328,243883
f0103440:	b8 00 00 00 00       	mov    $0x0,%eaxf01034405329,243932
f0103445:	0f 49 c2             	cmovns %edx,%eaxf01034455330,243981
f0103448:	29 c2                	sub    %eax,%edxf01034485331,244030
f010344a:	89 55 e0             	mov    %edx,-0x20(%ebp)f010344a5332,244079
f010344d:	89 75 0c             	mov    %esi,0xc(%ebp)f010344d5333,244135
f0103450:	8b 75 d0             	mov    -0x30(%ebp),%esif01034505334,244189
f0103453:	eb 17                	jmp    f010346c <.L36+0x9e>f01034535335,244245
f0103455:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)f01034555337,244348
f0103459:	75 30                	jne    f010348b <.L36+0xbd>f01034595338,244404
f010345b:	83 ec 08             	sub    $0x8,%espf010345b5340,244488
f010345e:	ff 75 0c             	pushl  0xc(%ebp)f010345e5341,244537
f0103461:	50                   	push   %eaxf01034615342,244586
f0103462:	ff 55 08             	call   *0x8(%ebp)f01034625343,244630
f0103465:	83 c4 10             	add    $0x10,%espf01034655344,244680
f0103468:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)f01034685346,244809
f010346c:	83 c7 01             	add    $0x1,%edif010346c5347,244865
f010346f:	0f b6 57 ff          	movzbl -0x1(%edi),%edxf010346f5348,244914
f0103473:	0f be c2             	movsbl %dl,%eaxf01034735349,244969
f0103476:	85 c0                	test   %eax,%eaxf01034765350,245017
f0103478:	74 52                	je     f01034cc <.L36+0xfe>f01034785351,245066
f010347a:	85 f6                	test   %esi,%esif010347a5352,245126
f010347c:	78 d7                	js     f0103455 <.L36+0x87>f010347c5353,245175
f010347e:	83 ee 01             	sub    $0x1,%esif010347e5354,245235
f0103481:	79 d2                	jns    f0103455 <.L36+0x87>f01034815355,245284
f0103483:	8b 75 0c             	mov    0xc(%ebp),%esif01034835356,245344
f0103486:	8b 7d e0             	mov    -0x20(%ebp),%edif01034865357,245398
f0103489:	eb 32                	jmp    f01034bd <.L36+0xef>f01034895358,245454
f010348b:	0f be d2             	movsbl %dl,%edxf010348b5360,245557
f010348e:	83 ea 20             	sub    $0x20,%edxf010348e5361,245605
f0103491:	83 fa 5e             	cmp    $0x5e,%edxf01034915362,245655
f0103494:	76 c5                	jbe    f010345b <.L36+0x8d>f01034945363,245705
f0103496:	83 ec 08             	sub    $0x8,%espf01034965365,245790
f0103499:	ff 75 0c             	pushl  0xc(%ebp)f01034995366,245839
f010349c:	6a 3f                	push   $0x3ff010349c5367,245888
f010349e:	ff 55 08             	call   *0x8(%ebp)f010349e5368,245933
f01034a1:	83 c4 10             	add    $0x10,%espf01034a15369,245983
f01034a4:	eb c2                	jmp    f0103468 <.L36+0x9a>f01034a45370,246033
f01034a6:	89 75 0c             	mov    %esi,0xc(%ebp)f01034a65371,246093
f01034a9:	8b 75 d0             	mov    -0x30(%ebp),%esif01034a95372,246147
f01034ac:	eb be                	jmp    f010346c <.L36+0x9e>f01034ac5373,246203
f01034ae:	83 ec 08             	sub    $0x8,%espf01034ae5375,246287
f01034b1:	56                   	push   %esif01034b15376,246336
f01034b2:	6a 20                	push   $0x20f01034b25377,246380
f01034b4:	ff 55 08             	call   *0x8(%ebp)f01034b45378,246425
f01034b7:	83 ef 01             	sub    $0x1,%edif01034b75380,246505
f01034ba:	83 c4 10             	add    $0x10,%espf01034ba5381,246554
f01034bd:	85 ff                	test   %edi,%edif01034bd5382,246604
f01034bf:	7f ed                	jg     f01034ae <.L36+0xe0>f01034bf5383,246653
f01034c1:	8b 45 cc             	mov    -0x34(%ebp),%eaxf01034c15385,246754
f01034c4:	89 45 14             	mov    %eax,0x14(%ebp)f01034c45386,246810
f01034c7:	e9 46 01 00 00       	jmp    f0103612 <.L35+0x45>f01034c75387,246865
f01034cc:	8b 7d e0             	mov    -0x20(%ebp),%edif01034cc5388,246925
f01034cf:	8b 75 0c             	mov    0xc(%ebp),%esif01034cf5389,246981
f01034d2:	eb e9                	jmp    f01034bd <.L36+0xef>f01034d25390,247035
f01034d4 <.L31>:f01034d45392,247096
f01034d4:	8b 4d cc             	mov    -0x34(%ebp),%ecxf01034d45393,247113
f01034d7:	83 f9 01             	cmp    $0x1,%ecxf01034d75395,247186
f01034da:	7e 40                	jle    f010351c <.L31+0x48>f01034da5396,247235
f01034dc:	8b 45 14             	mov    0x14(%ebp),%eaxf01034dc5398,247328
f01034df:	8b 50 04             	mov    0x4(%eax),%edxf01034df5399,247383
f01034e2:	8b 00                	mov    (%eax),%eaxf01034e25400,247437
f01034e4:	89 45 d8             	mov    %eax,-0x28(%ebp)f01034e45401,247488
f01034e7:	89 55 dc             	mov    %edx,-0x24(%ebp)f01034e75402,247544
f01034ea:	8b 45 14             	mov    0x14(%ebp),%eaxf01034ea5403,247600
f01034ed:	8d 40 08             	lea    0x8(%eax),%eaxf01034ed5404,247655
f01034f0:	89 45 14             	mov    %eax,0x14(%ebp)f01034f05405,247709
f01034f3:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)f01034f35407,247794
f01034f7:	79 55                	jns    f010354e <.L31+0x7a>f01034f75408,247850
f01034f9:	83 ec 08             	sub    $0x8,%espf01034f95410,247934
f01034fc:	56                   	push   %esif01034fc5411,247983
f01034fd:	6a 2d                	push   $0x2df01034fd5412,248027
f01034ff:	ff 55 08             	call   *0x8(%ebp)f01034ff5413,248072
				num = -(long long) num;num5414,248122
f0103502:	8b 55 d8             	mov    -0x28(%ebp),%edxf01035025415,248150
f0103505:	8b 4d dc             	mov    -0x24(%ebp),%ecxf01035055416,248206
f0103508:	f7 da                	neg    %edxf01035085417,248262
f010350a:	83 d1 00             	adc    $0x0,%ecxf010350a5418,248306
f010350d:	f7 d9                	neg    %ecxf010350d5419,248355
f010350f:	83 c4 10             	add    $0x10,%espf010350f5420,248399
			base = 10;base5421,248449
f0103512:	b8 0a 00 00 00       	mov    $0xa,%eaxf01035125422,248463
f0103517:	e9 db 00 00 00       	jmp    f01035f7 <.L35+0x2a>f01035175423,248512
f010351c:	85 c9                	test   %ecx,%ecxf010351c5425,248589
f010351e:	75 17                	jne    f0103537 <.L31+0x63>f010351e5426,248638
f0103520:	8b 45 14             	mov    0x14(%ebp),%eaxf01035205428,248725
f0103523:	8b 00                	mov    (%eax),%eaxf01035235429,248780
f0103525:	89 45 d8             	mov    %eax,-0x28(%ebp)f01035255430,248831
f0103528:	99                   	cltd   f01035285431,248887
f0103529:	89 55 dc             	mov    %edx,-0x24(%ebp)f01035295432,248927
f010352c:	8b 45 14             	mov    0x14(%ebp),%eaxf010352c5433,248983
f010352f:	8d 40 04             	lea    0x4(%eax),%eaxf010352f5434,249038
f0103532:	89 45 14             	mov    %eax,0x14(%ebp)f01035325435,249092
f0103535:	eb bc                	jmp    f01034f3 <.L31+0x1f>f01035355436,249147
f0103537:	8b 45 14             	mov    0x14(%ebp),%eaxf01035375438,249235
f010353a:	8b 00                	mov    (%eax),%eaxf010353a5439,249290
f010353c:	89 45 d8             	mov    %eax,-0x28(%ebp)f010353c5440,249341
f010353f:	99                   	cltd   f010353f5441,249397
f0103540:	89 55 dc             	mov    %edx,-0x24(%ebp)f01035405442,249437
f0103543:	8b 45 14             	mov    0x14(%ebp),%eaxf01035435443,249493
f0103546:	8d 40 04             	lea    0x4(%eax),%eaxf01035465444,249548
f0103549:	89 45 14             	mov    %eax,0x14(%ebp)f01035495445,249602
f010354c:	eb a5                	jmp    f01034f3 <.L31+0x1f>f010354c5446,249657
			num = getint(&ap, lflag);num5447,249717
f010354e:	8b 55 d8             	mov    -0x28(%ebp),%edxf010354e5448,249746
f0103551:	8b 4d dc             	mov    -0x24(%ebp),%ecxf01035515449,249802
			base = 10;base5450,249858
f0103554:	b8 0a 00 00 00       	mov    $0xa,%eaxf01035545451,249872
f0103559:	e9 99 00 00 00       	jmp    f01035f7 <.L35+0x2a>f01035595452,249921
f010355e <.L37>:f010355e5454,249982
f010355e:	8b 4d cc             	mov    -0x34(%ebp),%ecxf010355e5455,249999
f0103561:	83 f9 01             	cmp    $0x1,%ecxf01035615457,250072
f0103564:	7e 15                	jle    f010357b <.L37+0x1d>f01035645458,250121
f0103566:	8b 45 14             	mov    0x14(%ebp),%eaxf01035665460,250223
f0103569:	8b 10                	mov    (%eax),%edxf01035695461,250278
f010356b:	8b 48 04             	mov    0x4(%eax),%ecxf010356b5462,250329
f010356e:	8d 40 08             	lea    0x8(%eax),%eaxf010356e5463,250383
f0103571:	89 45 14             	mov    %eax,0x14(%ebp)f01035715464,250437
			base = 10;base5465,250492
f0103574:	b8 0a 00 00 00       	mov    $0xa,%eaxf01035745466,250506
f0103579:	eb 7c                	jmp    f01035f7 <.L35+0x2a>f01035795467,250555
f010357b:	85 c9                	test   %ecx,%ecxf010357b5469,250632
f010357d:	75 17                	jne    f0103596 <.L37+0x38>f010357d5470,250681
f010357f:	8b 45 14             	mov    0x14(%ebp),%eaxf010357f5472,250777
f0103582:	8b 10                	mov    (%eax),%edxf01035825473,250832
f0103584:	b9 00 00 00 00       	mov    $0x0,%ecxf01035845474,250883
f0103589:	8d 40 04             	lea    0x4(%eax),%eaxf01035895475,250932
f010358c:	89 45 14             	mov    %eax,0x14(%ebp)f010358c5476,250986
			base = 10;base5477,251041
f010358f:	b8 0a 00 00 00       	mov    $0xa,%eaxf010358f5478,251055
f0103594:	eb 61                	jmp    f01035f7 <.L35+0x2a>f01035945479,251104
f0103596:	8b 45 14             	mov    0x14(%ebp),%eaxf01035965481,251201
f0103599:	8b 10                	mov    (%eax),%edxf01035995482,251256
f010359b:	b9 00 00 00 00       	mov    $0x0,%ecxf010359b5483,251307
f01035a0:	8d 40 04             	lea    0x4(%eax),%eaxf01035a05484,251356
f01035a3:	89 45 14             	mov    %eax,0x14(%ebp)f01035a35485,251410
			base = 10;base5486,251465
f01035a6:	b8 0a 00 00 00       	mov    $0xa,%eaxf01035a65487,251479
f01035ab:	eb 4a                	jmp    f01035f7 <.L35+0x2a>f01035ab5488,251528
f01035ad <.L34>:f01035ad5490,251589
f01035ad:	83 ec 08             	sub    $0x8,%espf01035ad5492,251629
f01035b0:	56                   	push   %esif01035b05493,251678
f01035b1:	6a 58                	push   $0x58f01035b15494,251722
f01035b3:	ff 55 08             	call   *0x8(%ebp)f01035b35495,251767
f01035b6:	83 c4 08             	add    $0x8,%espf01035b65497,251840
f01035b9:	56                   	push   %esif01035b95498,251889
f01035ba:	6a 58                	push   $0x58f01035ba5499,251933
f01035bc:	ff 55 08             	call   *0x8(%ebp)f01035bc5500,251978
f01035bf:	83 c4 08             	add    $0x8,%espf01035bf5502,252051
f01035c2:	56                   	push   %esif01035c25503,252100
f01035c3:	6a 58                	push   $0x58f01035c35504,252144
f01035c5:	ff 55 08             	call   *0x8(%ebp)f01035c55505,252189
f01035c8:	83 c4 10             	add    $0x10,%espf01035c85507,252249
f01035cb:	eb 45                	jmp    f0103612 <.L35+0x45>f01035cb5508,252299
f01035cd <.L35>:f01035cd5510,252360
f01035cd:	83 ec 08             	sub    $0x8,%espf01035cd5512,252400
f01035d0:	56                   	push   %esif01035d05513,252449
f01035d1:	6a 30                	push   $0x30f01035d15514,252493
f01035d3:	ff 55 08             	call   *0x8(%ebp)f01035d35515,252538
f01035d6:	83 c4 08             	add    $0x8,%espf01035d65517,252611
f01035d9:	56                   	push   %esif01035d95518,252660
f01035da:	6a 78                	push   $0x78f01035da5519,252704
f01035dc:	ff 55 08             	call   *0x8(%ebp)f01035dc5520,252749
			num = (unsigned long long)num5521,252799
f01035df:	8b 45 14             	mov    0x14(%ebp),%eaxf01035df5522,252829
f01035e2:	8b 10                	mov    (%eax),%edxf01035e25523,252884
f01035e4:	b9 00 00 00 00       	mov    $0x0,%ecxf01035e45524,252935
f01035e9:	83 c4 10             	add    $0x10,%espf01035e95526,253000
f01035ec:	8d 40 04             	lea    0x4(%eax),%eaxf01035ec5528,253086
f01035ef:	89 45 14             	mov    %eax,0x14(%ebp)f01035ef5529,253140
			base = 16;base5530,253195
f01035f2:	b8 10 00 00 00       	mov    $0x10,%eaxf01035f25531,253209
f01035f7:	83 ec 0c             	sub    $0xc,%espf01035f75533,253311
f01035fa:	0f be 7d d4          	movsbl -0x2c(%ebp),%edif01035fa5534,253360
f01035fe:	57                   	push   %edif01035fe5535,253416
f01035ff:	ff 75 e0             	pushl  -0x20(%ebp)f01035ff5536,253460
f0103602:	50                   	push   %eaxf01036025537,253511
f0103603:	51                   	push   %ecxf01036035538,253555
f0103604:	52                   	push   %edxf01036045539,253599
f0103605:	89 f2                	mov    %esi,%edxf01036055540,253643
f0103607:	8b 45 08             	mov    0x8(%ebp),%eaxf01036075541,253692
f010360a:	e8 55 fb ff ff       	call   f0103164 <printnum>f010360a5542,253746
f010360f:	83 c4 20             	add    $0x20,%espf010360f5544,253815
			err = va_arg(ap, int);err5545,253865
f0103612:	8b 7d e4             	mov    -0x1c(%ebp),%edif01036125546,253891
f0103615:	83 c7 01             	add    $0x1,%edif01036155548,253998
f0103618:	0f b6 47 ff          	movzbl -0x1(%edi),%eaxf01036185549,254047
f010361c:	83 f8 25             	cmp    $0x25,%eaxf010361c5550,254102
f010361f:	0f 84 62 fc ff ff    	je     f0103287 <vprintfmt+0x1f>f010361f5551,254152
f0103625:	85 c0                	test   %eax,%eaxf01036255553,254236
f0103627:	0f 84 91 00 00 00    	je     f01036be <.L22+0x21>f01036275554,254285
f010362d:	83 ec 08             	sub    $0x8,%espf010362d5556,254367
f0103630:	56                   	push   %esif01036305557,254416
f0103631:	50                   	push   %eaxf01036315558,254460
f0103632:	ff 55 08             	call   *0x8(%ebp)f01036325559,254504
f0103635:	83 c4 10             	add    $0x10,%espf01036355560,254554
f0103638:	eb db                	jmp    f0103615 <.L35+0x48>f01036385561,254604
f010363a <.L38>:f010363a5563,254665
f010363a:	8b 4d cc             	mov    -0x34(%ebp),%ecxf010363a5564,254682
f010363d:	83 f9 01             	cmp    $0x1,%ecxf010363d5566,254755
f0103640:	7e 15                	jle    f0103657 <.L38+0x1d>f01036405567,254804
f0103642:	8b 45 14             	mov    0x14(%ebp),%eaxf01036425569,254906
f0103645:	8b 10                	mov    (%eax),%edxf01036455570,254961
f0103647:	8b 48 04             	mov    0x4(%eax),%ecxf01036475571,255012
f010364a:	8d 40 08             	lea    0x8(%eax),%eaxf010364a5572,255066
f010364d:	89 45 14             	mov    %eax,0x14(%ebp)f010364d5573,255120
			base = 16;base5574,255175
f0103650:	b8 10 00 00 00       	mov    $0x10,%eaxf01036505575,255189
f0103655:	eb a0                	jmp    f01035f7 <.L35+0x2a>f01036555576,255239
f0103657:	85 c9                	test   %ecx,%ecxf01036575578,255316
f0103659:	75 17                	jne    f0103672 <.L38+0x38>f01036595579,255365
f010365b:	8b 45 14             	mov    0x14(%ebp),%eaxf010365b5581,255461
f010365e:	8b 10                	mov    (%eax),%edxf010365e5582,255516
f0103660:	b9 00 00 00 00       	mov    $0x0,%ecxf01036605583,255567
f0103665:	8d 40 04             	lea    0x4(%eax),%eaxf01036655584,255616
f0103668:	89 45 14             	mov    %eax,0x14(%ebp)f01036685585,255670
			base = 16;base5586,255725
f010366b:	b8 10 00 00 00       	mov    $0x10,%eaxf010366b5587,255739
f0103670:	eb 85                	jmp    f01035f7 <.L35+0x2a>f01036705588,255789
f0103672:	8b 45 14             	mov    0x14(%ebp),%eaxf01036725590,255886
f0103675:	8b 10                	mov    (%eax),%edxf01036755591,255941
f0103677:	b9 00 00 00 00       	mov    $0x0,%ecxf01036775592,255992
f010367c:	8d 40 04             	lea    0x4(%eax),%eaxf010367c5593,256041
f010367f:	89 45 14             	mov    %eax,0x14(%ebp)f010367f5594,256095
			base = 16;base5595,256150
f0103682:	b8 10 00 00 00       	mov    $0x10,%eaxf01036825596,256164
f0103687:	e9 6b ff ff ff       	jmp    f01035f7 <.L35+0x2a>f01036875597,256214
f010368c <.L25>:f010368c5599,256275
f010368c:	83 ec 08             	sub    $0x8,%espf010368c5601,256314
f010368f:	56                   	push   %esif010368f5602,256363
f0103690:	6a 25                	push   $0x25f01036905603,256407
f0103692:	ff 55 08             	call   *0x8(%ebp)f01036925604,256452
f0103695:	83 c4 10             	add    $0x10,%espf01036955606,256512
f0103698:	e9 75 ff ff ff       	jmp    f0103612 <.L35+0x45>f01036985607,256562
f010369d <.L22>:f010369d5609,256623
f010369d:	83 ec 08             	sub    $0x8,%espf010369d5611,256663
f01036a0:	56                   	push   %esif01036a05612,256712
f01036a1:	6a 25                	push   $0x25f01036a15613,256756
f01036a3:	ff 55 08             	call   *0x8(%ebp)f01036a35614,256801
f01036a6:	83 c4 10             	add    $0x10,%espf01036a65616,256889
f01036a9:	89 f8                	mov    %edi,%eaxf01036a95617,256939
f01036ab:	eb 03                	jmp    f01036b0 <.L22+0x13>f01036ab5618,256988
f01036ad:	83 e8 01             	sub    $0x1,%eaxf01036ad5619,257048
f01036b0:	80 78 ff 25          	cmpb   $0x25,-0x1(%eax)f01036b05620,257097
f01036b4:	75 f7                	jne    f01036ad <.L22+0x10>f01036b45621,257153
f01036b6:	89 45 e4             	mov    %eax,-0x1c(%ebp)f01036b65622,257213
f01036b9:	e9 54 ff ff ff       	jmp    f0103612 <.L35+0x45>f01036b95623,257269
f01036be:	8d 65 f4             	lea    -0xc(%ebp),%espf01036be5625,257331
f01036c1:	5b                   	pop    %ebxf01036c15626,257386
f01036c2:	5e                   	pop    %esif01036c25627,257430
f01036c3:	5f                   	pop    %edif01036c35628,257474
f01036c4:	5d                   	pop    %ebpf01036c45629,257518
f01036c5:	c3                   	ret    f01036c55630,257562
f01036c6 <vsnprintf>:f01036c65632,257603
intint5634,257626
f01036c6:	55                   	push   %ebpf01036c65637,257689
f01036c7:	89 e5                	mov    %esp,%ebpf01036c75638,257733
f01036c9:	53                   	push   %ebxf01036c95639,257782
f01036ca:	83 ec 14             	sub    $0x14,%espf01036ca5640,257826
f01036cd:	e8 7d ca ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01036cd5641,257876
f01036d2:	81 c3 3a 3c 01 00    	add    $0x13c3a,%ebxf01036d25642,257948
f01036d8:	8b 45 08             	mov    0x8(%ebp),%eaxf01036d85643,258001
f01036db:	8b 55 0c             	mov    0xc(%ebp),%edxf01036db5644,258055
f01036de:	89 45 ec             	mov    %eax,-0x14(%ebp)f01036de5646,258150
f01036e1:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecxf01036e15647,258206
f01036e5:	89 4d f0             	mov    %ecx,-0x10(%ebp)f01036e55648,258268
f01036e8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)f01036e85649,258324
f01036ef:	85 c0                	test   %eax,%eaxf01036ef5652,258407
f01036f1:	74 2b                	je     f010371e <vsnprintf+0x58>f01036f15653,258456
f01036f3:	85 d2                	test   %edx,%edxf01036f35654,258521
f01036f5:	7e 27                	jle    f010371e <vsnprintf+0x58>f01036f55655,258570
f01036f7:	ff 75 14             	pushl  0x14(%ebp)f01036f75660,258735
f01036fa:	ff 75 10             	pushl  0x10(%ebp)f01036fa5661,258785
f01036fd:	8d 45 ec             	lea    -0x14(%ebp),%eaxf01036fd5662,258835
f0103700:	50                   	push   %eaxf01037005663,258891
f0103701:	8d 83 22 bf fe ff    	lea    -0x140de(%ebx),%eaxf01037015664,258935
f0103707:	50                   	push   %eaxf01037075665,258994
f0103708:	e8 5b fb ff ff       	call   f0103268 <vprintfmt>f01037085666,259038
f010370d:	8b 45 ec             	mov    -0x14(%ebp),%eaxf010370d5670,259145
f0103710:	c6 00 00             	movb   $0x0,(%eax)f01037105671,259201
f0103713:	8b 45 f4             	mov    -0xc(%ebp),%eaxf01037135674,259268
f0103716:	83 c4 10             	add    $0x10,%espf01037165675,259323
f0103719:	8b 5d fc             	mov    -0x4(%ebp),%ebxf01037195677,259375
f010371c:	c9                   	leave  f010371c5678,259430
f010371d:	c3                   	ret    f010371d5679,259470
f010371e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eaxf010371e5681,259529
f0103723:	eb f4                	jmp    f0103719 <vsnprintf+0x53>f01037235682,259585
f0103725 <snprintf>:f01037255684,259651
intint5686,259673
f0103725:	55                   	push   %ebpf01037255689,259728
f0103726:	89 e5                	mov    %esp,%ebpf01037265690,259772
f0103728:	83 ec 08             	sub    $0x8,%espf01037285691,259821
f010372b:	8d 45 14             	lea    0x14(%ebp),%eaxf010372b5696,259913
	rc = vsnprintf(buf, n, fmt, ap);rc5697,259968
f010372e:	50                   	push   %eaxf010372e5698,260002
f010372f:	ff 75 10             	pushl  0x10(%ebp)f010372f5699,260046
f0103732:	ff 75 0c             	pushl  0xc(%ebp)f01037325700,260096
f0103735:	ff 75 08             	pushl  0x8(%ebp)f01037355701,260145
f0103738:	e8 89 ff ff ff       	call   f01036c6 <vsnprintf>f01037385702,260194
f010373d:	c9                   	leave  f010373d5707,260282
f010373e:	c3                   	ret    f010373e5708,260322
f010373f <readline>:f010373f5710,260363
#define BUFLEN 1024BUFLEN5711,260384
static char buf[BUFLEN];static5712,260404
char *char5714,260430
f010373f:	55                   	push   %ebpf010373f5717,260468
f0103740:	89 e5                	mov    %esp,%ebpf01037405718,260512
f0103742:	57                   	push   %edif01037425719,260561
f0103743:	56                   	push   %esif01037435720,260605
f0103744:	53                   	push   %ebxf01037445721,260649
f0103745:	83 ec 1c             	sub    $0x1c,%espf01037455722,260693
f0103748:	e8 02 ca ff ff       	call   f010014f <__x86.get_pc_thunk.bx>f01037485723,260743
f010374d:	81 c3 bf 3b 01 00    	add    $0x13bbf,%ebxf010374d5724,260815
f0103753:	8b 45 08             	mov    0x8(%ebp),%eaxf01037535725,260868
f0103756:	85 c0                	test   %eax,%eaxf01037565729,260964
f0103758:	74 13                	je     f010376d <readline+0x2e>f01037585730,261013
f010375a:	83 ec 08             	sub    $0x8,%espf010375a5732,261102
f010375d:	50                   	push   %eaxf010375d5733,261151
f010375e:	8d 83 a8 d7 fe ff    	lea    -0x12858(%ebx),%eaxf010375e5734,261195
f0103764:	50                   	push   %eaxf01037645735,261254
f0103765:	e8 ee f6 ff ff       	call   f0102e58 <cprintf>f01037655736,261298
f010376a:	83 c4 10             	add    $0x10,%espf010376a5737,261356
	i = 0;i5739,261407
	echoing = iscons(0);echoing5740,261415
f010376d:	83 ec 0c             	sub    $0xc,%espf010376d5741,261437
f0103770:	6a 00                	push   $0x0f01037705742,261486
f0103772:	e8 70 cf ff ff       	call   f01006e7 <iscons>f01037725743,261530
f0103777:	89 45 e4             	mov    %eax,-0x1c(%ebp)f01037775744,261587
f010377a:	83 c4 10             	add    $0x10,%espf010377a5745,261643
	i = 0;i5746,261693
f010377d:	bf 00 00 00 00       	mov    $0x0,%edif010377d5747,261701
f0103782:	eb 46                	jmp    f01037ca <readline+0x8b>f01037825748,261750
		c = getchar();c5750,261827
f0103784:	83 ec 08             	sub    $0x8,%espf01037845753,261894
f0103787:	50                   	push   %eaxf01037875754,261943
f0103788:	8d 83 60 dc fe ff    	lea    -0x123a0(%ebx),%eaxf01037885755,261987
f010378e:	50                   	push   %eaxf010378e5756,262046
f010378f:	e8 c4 f6 ff ff       	call   f0102e58 <cprintf>f010378f5757,262090
f0103794:	83 c4 10             	add    $0x10,%espf01037945759,262164
f0103797:	b8 00 00 00 00       	mov    $0x0,%eaxf01037975760,262214
f010379c:	8d 65 f4             	lea    -0xc(%ebp),%espf010379c5767,262322
f010379f:	5b                   	pop    %ebxf010379f5768,262377
f01037a0:	5e                   	pop    %esif01037a05769,262421
f01037a1:	5f                   	pop    %edif01037a15770,262465
f01037a2:	5d                   	pop    %ebpf01037a25771,262509
f01037a3:	c3                   	ret    f01037a35772,262553
f01037a4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)f01037a45774,262609
f01037a8:	75 05                	jne    f01037af <readline+0x70>f01037a85775,262665
f01037aa:	83 ef 01             	sub    $0x1,%edif01037aa5777,262737
f01037ad:	eb 1b                	jmp    f01037ca <readline+0x8b>f01037ad5778,262786
f01037af:	83 ec 0c             	sub    $0xc,%espf01037af5780,262870
f01037b2:	6a 08                	push   $0x8f01037b25781,262919
f01037b4:	e8 0d cf ff ff       	call   f01006c6 <cputchar>f01037b45782,262963
f01037b9:	83 c4 10             	add    $0x10,%espf01037b95783,263022
f01037bc:	eb ec                	jmp    f01037aa <readline+0x6b>f01037bc5784,263072
f01037be:	89 f0                	mov    %esi,%eaxf01037be5786,263153
f01037c0:	88 84 3b b4 1f 00 00 	mov    %al,0x1fb4(%ebx,%edi,1)f01037c05787,263202
f01037c7:	8d 7f 01             	lea    0x1(%edi),%edif01037c75788,263265
		c = getchar();c5789,263319
f01037ca:	e8 07 cf ff ff       	call   f01006d6 <getchar>f01037ca5790,263336
f01037cf:	89 c6                	mov    %eax,%esif01037cf5791,263394
f01037d1:	85 c0                	test   %eax,%eaxf01037d15793,263458
f01037d3:	78 af                	js     f0103784 <readline+0x45>f01037d35794,263507
f01037d5:	83 f8 08             	cmp    $0x8,%eaxf01037d55796,263623
f01037d8:	0f 94 c2             	sete   %dlf01037d85797,263672
f01037db:	83 f8 7f             	cmp    $0x7f,%eaxf01037db5798,263715
f01037de:	0f 94 c0             	sete   %alf01037de5799,263765
f01037e1:	08 c2                	or     %al,%dlf01037e15800,263808
f01037e3:	74 04                	je     f01037e9 <readline+0xaa>f01037e35801,263855
f01037e5:	85 ff                	test   %edi,%edif01037e55802,263919
f01037e7:	7f bb                	jg     f01037a4 <readline+0x65>f01037e75803,263968
f01037e9:	83 fe 1f             	cmp    $0x1f,%esif01037e95805,264073
f01037ec:	7e 1c                	jle    f010380a <readline+0xcb>f01037ec5806,264123
f01037ee:	81 ff fe 03 00 00    	cmp    $0x3fe,%edif01037ee5807,264187
f01037f4:	7f 14                	jg     f010380a <readline+0xcb>f01037f45808,264238
f01037f6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)f01037f65810,264318
f01037fa:	74 c2                	je     f01037be <readline+0x7f>f01037fa5811,264374
f01037fc:	83 ec 0c             	sub    $0xc,%espf01037fc5813,264455
f01037ff:	56                   	push   %esif01037ff5814,264504
f0103800:	e8 c1 ce ff ff       	call   f01006c6 <cputchar>f01038005815,264548
f0103805:	83 c4 10             	add    $0x10,%espf01038055816,264607
f0103808:	eb b4                	jmp    f01037be <readline+0x7f>f01038085817,264657
f010380a:	83 fe 0a             	cmp    $0xa,%esif010380a5819,264760
f010380d:	74 05                	je     f0103814 <readline+0xd5>f010380d5820,264809
f010380f:	83 fe 0d             	cmp    $0xd,%esif010380f5821,264873
f0103812:	75 b6                	jne    f01037ca <readline+0x8b>f01038125822,264922
f0103814:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)f01038145824,265002
f0103818:	75 13                	jne    f010382d <readline+0xee>f01038185825,265058
f010381a:	c6 84 3b b4 1f 00 00 	movb   $0x0,0x1fb4(%ebx,%edi,1)f010381a5827,265137
f0103821:	00 f01038215828,265201
f0103822:	8d 83 b4 1f 00 00    	lea    0x1fb4(%ebx),%eaxf01038225830,265230
f0103828:	e9 6f ff ff ff       	jmp    f010379c <readline+0x5d>f01038285831,265287
f010382d:	83 ec 0c             	sub    $0xc,%espf010382d5833,265371
f0103830:	6a 0a                	push   $0xaf01038305834,265420
f0103832:	e8 8f ce ff ff       	call   f01006c6 <cputchar>f01038325835,265464
f0103837:	83 c4 10             	add    $0x10,%espf01038375836,265523
f010383a:	eb de                	jmp    f010381a <readline+0xdb>f010383a5837,265573
f010383c <strlen>:f010383c5839,265638
#define ASM 1ASM5841,265696
intint5843,265711
f010383c:	55                   	push   %ebpf010383c5846,265739
f010383d:	89 e5                	mov    %esp,%ebpf010383d5847,265783
f010383f:	8b 55 08             	mov    0x8(%ebp),%edxf010383f5848,265832
f0103842:	b8 00 00 00 00       	mov    $0x0,%eaxf01038425852,265925
f0103847:	eb 03                	jmp    f010384c <strlen+0x10>f01038475853,265974
f0103849:	83 c0 01             	add    $0x1,%eaxf01038495855,266043
f010384c:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)f010384c5857,266122
f0103850:	75 f7                	jne    f0103849 <strlen+0xd>f01038505858,266180
f0103852:	5d                   	pop    %ebpf01038525861,266254
f0103853:	c3                   	ret    f01038535862,266298
f0103854 <strnlen>:f01038545864,266339
intint5866,266360
f0103854:	55                   	push   %ebpf01038545869,266402
f0103855:	89 e5                	mov    %esp,%ebpf01038555870,266446
f0103857:	8b 4d 08             	mov    0x8(%ebp),%ecxf01038575871,266495
f010385a:	8b 55 0c             	mov    0xc(%ebp),%edxf010385a5872,266549
f010385d:	b8 00 00 00 00       	mov    $0x0,%eaxf010385d5876,266662
f0103862:	eb 03                	jmp    f0103867 <strnlen+0x13>f01038625877,266711
f0103864:	83 c0 01             	add    $0x1,%eaxf01038645879,266781
f0103867:	39 d0                	cmp    %edx,%eaxf01038675881,266880
f0103869:	74 06                	je     f0103871 <strnlen+0x1d>f01038695882,266929
f010386b:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)f010386b5883,266992
f010386f:	75 f3                	jne    f0103864 <strnlen+0x10>f010386f5884,267050
f0103871:	5d                   	pop    %ebpf01038715887,267126
f0103872:	c3                   	ret    f01038725888,267170
f0103873 <strcpy>:f01038735890,267211
char *char5892,267231
f0103873:	55                   	push   %ebpf01038735895,267275
f0103874:	89 e5                	mov    %esp,%ebpf01038745896,267319
f0103876:	53                   	push   %ebxf01038765897,267368
f0103877:	8b 45 08             	mov    0x8(%ebp),%eaxf01038775898,267412
f010387a:	8b 4d 0c             	mov    0xc(%ebp),%ecxf010387a5899,267466
	ret = dst;ret5902,267533
f010387d:	89 c2                	mov    %eax,%edxf010387d5904,267580
f010387f:	83 c1 01             	add    $0x1,%ecxf010387f5905,267629
f0103882:	83 c2 01             	add    $0x1,%edxf01038825906,267678
f0103885:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebxf01038855907,267727
f0103889:	88 5a ff             	mov    %bl,-0x1(%edx)f01038895908,267782
f010388c:	84 db                	test   %bl,%blf010388c5909,267836
f010388e:	75 ef                	jne    f010387f <strcpy+0xc>f010388e5910,267883
f0103890:	5b                   	pop    %ebxf01038905914,267979
f0103891:	5d                   	pop    %ebpf01038915915,268023
f0103892:	c3                   	ret    f01038925916,268067
f0103893 <strcat>:f01038935918,268108
char *char5920,268128
f0103893:	55                   	push   %ebpf01038935923,268172
f0103894:	89 e5                	mov    %esp,%ebpf01038945924,268216
f0103896:	53                   	push   %ebxf01038965925,268265
f0103897:	8b 5d 08             	mov    0x8(%ebp),%ebxf01038975926,268309
f010389a:	53                   	push   %ebxf010389a5928,268387
f010389b:	e8 9c ff ff ff       	call   f010383c <strlen>f010389b5929,268431
f01038a0:	83 c4 04             	add    $0x4,%espf01038a05930,268488
f01038a3:	ff 75 0c             	pushl  0xc(%ebp)f01038a35932,268562
f01038a6:	01 d8                	add    %ebx,%eaxf01038a65933,268611
f01038a8:	50                   	push   %eaxf01038a85934,268660
f01038a9:	e8 c5 ff ff ff       	call   f0103873 <strcpy>f01038a95935,268704
f01038ae:	89 d8                	mov    %ebx,%eaxf01038ae5938,268776
f01038b0:	8b 5d fc             	mov    -0x4(%ebp),%ebxf01038b05939,268825
f01038b3:	c9                   	leave  f01038b35940,268880
f01038b4:	c3                   	ret    f01038b45941,268920
f01038b5 <strncpy>:f01038b55943,268961
char *char5945,268982
f01038b5:	55                   	push   %ebpf01038b55947,269040
f01038b6:	89 e5                	mov    %esp,%ebpf01038b65948,269084
f01038b8:	56                   	push   %esif01038b85949,269133
f01038b9:	53                   	push   %ebxf01038b95950,269177
f01038ba:	8b 75 08             	mov    0x8(%ebp),%esif01038ba5951,269221
f01038bd:	8b 4d 0c             	mov    0xc(%ebp),%ecxf01038bd5952,269275
f01038c0:	89 f3                	mov    %esi,%ebxf01038c05953,269329
f01038c2:	03 5d 10             	add    0x10(%ebp),%ebxf01038c25954,269378
	ret = dst;ret5958,269457
f01038c5:	89 f2                	mov    %esi,%edxf01038c55960,269499
f01038c7:	eb 0f                	jmp    f01038d8 <strncpy+0x23>f01038c75961,269548
f01038c9:	83 c2 01             	add    $0x1,%edxf01038c95963,269628
f01038cc:	0f b6 01             	movzbl (%ecx),%eaxf01038cc5964,269677
f01038cf:	88 42 ff             	mov    %al,-0x1(%edx)f01038cf5965,269728
f01038d2:	80 39 01             	cmpb   $0x1,(%ecx)f01038d25969,269875
f01038d5:	83 d9 ff             	sbb    $0xffffffff,%ecxf01038d55970,269926
f01038d8:	39 da                	cmp    %ebx,%edxf01038d85972,270012
f01038da:	75 ed                	jne    f01038c9 <strncpy+0x14>f01038da5973,270061
f01038dc:	89 f0                	mov    %esi,%eaxf01038dc5977,270142
f01038de:	5b                   	pop    %ebxf01038de5978,270191
f01038df:	5e                   	pop    %esif01038df5979,270235
f01038e0:	5d                   	pop    %ebpf01038e05980,270279
f01038e1:	c3                   	ret    f01038e15981,270323
f01038e2 <strlcpy>:f01038e25983,270364
size_tsize_t5985,270385
f01038e2:	55                   	push   %ebpf01038e25988,270443
f01038e3:	89 e5                	mov    %esp,%ebpf01038e35989,270487
f01038e5:	56                   	push   %esif01038e55990,270536
f01038e6:	53                   	push   %ebxf01038e65991,270580
f01038e7:	8b 75 08             	mov    0x8(%ebp),%esif01038e75992,270624
f01038ea:	8b 55 0c             	mov    0xc(%ebp),%edxf01038ea5993,270678
f01038ed:	8b 4d 10             	mov    0x10(%ebp),%ecxf01038ed5994,270732
f01038f0:	89 f0                	mov    %esi,%eaxf01038f05995,270787
f01038f2:	8d 5c 0e ff          	lea    -0x1(%esi,%ecx,1),%ebxf01038f25996,270836
	dst_in = dst;dst_in5999,270914
f01038f6:	85 c9                	test   %ecx,%ecxf01038f66001,270946
f01038f8:	75 0b                	jne    f0103905 <strlcpy+0x23>f01038f86002,270995
f01038fa:	eb 17                	jmp    f0103913 <strlcpy+0x31>f01038fa6003,271058
f01038fc:	83 c2 01             	add    $0x1,%edxf01038fc6006,271178
f01038ff:	83 c0 01             	add    $0x1,%eaxf01038ff6007,271227
f0103902:	88 48 ff             	mov    %cl,-0x1(%eax)f01039026008,271276
f0103905:	39 d8                	cmp    %ebx,%eaxf01039056010,271367
f0103907:	74 07                	je     f0103910 <strlcpy+0x2e>f01039076011,271416
f0103909:	0f b6 0a             	movzbl (%edx),%ecxf01039096012,271479
f010390c:	84 c9                	test   %cl,%clf010390c6013,271530
f010390e:	75 ec                	jne    f01038fc <strlcpy+0x1a>f010390e6014,271577
f0103910:	c6 00 00             	movb   $0x0,(%eax)f01039106016,271655
f0103913:	29 f0                	sub    %esi,%eaxf01039136019,271731
f0103915:	5b                   	pop    %ebxf01039156021,271782
f0103916:	5e                   	pop    %esif01039166022,271826
f0103917:	5d                   	pop    %ebpf01039176023,271870
f0103918:	c3                   	ret    f01039186024,271914
f0103919 <strcmp>:f01039196026,271955
intint6028,271975
f0103919:	55                   	push   %ebpf01039196031,272018
f010391a:	89 e5                	mov    %esp,%ebpf010391a6032,272062
f010391c:	8b 4d 08             	mov    0x8(%ebp),%ecxf010391c6033,272111
f010391f:	8b 55 0c             	mov    0xc(%ebp),%edxf010391f6034,272165
f0103922:	eb 06                	jmp    f010392a <strcmp+0x11>f01039226036,272243
f0103924:	83 c1 01             	add    $0x1,%ecxf01039246038,272317
f0103927:	83 c2 01             	add    $0x1,%edxf01039276039,272366
f010392a:	0f b6 01             	movzbl (%ecx),%eaxf010392a6041,272439
f010392d:	84 c0                	test   %al,%alf010392d6042,272490
f010392f:	74 04                	je     f0103935 <strcmp+0x1c>f010392f6043,272537
f0103931:	3a 02                	cmp    (%edx),%alf01039316044,272599
f0103933:	74 ef                	je     f0103924 <strcmp+0xb>f01039336045,272649
f0103935:	0f b6 c0             	movzbl %al,%eaxf01039356047,272767
f0103938:	0f b6 12             	movzbl (%edx),%edxf01039386048,272815
f010393b:	29 d0                	sub    %edx,%eaxf010393b6049,272866
f010393d:	5d                   	pop    %ebpf010393d6051,272917
f010393e:	c3                   	ret    f010393e6052,272961
f010393f <strncmp>:f010393f6054,273002
intint6056,273023
f010393f:	55                   	push   %ebpf010393f6059,273077
f0103940:	89 e5                	mov    %esp,%ebpf01039406060,273121
f0103942:	53                   	push   %ebxf01039426061,273170
f0103943:	8b 45 08             	mov    0x8(%ebp),%eaxf01039436062,273214
f0103946:	8b 55 0c             	mov    0xc(%ebp),%edxf01039466063,273268
f0103949:	89 c3                	mov    %eax,%ebxf01039496064,273322
f010394b:	03 5d 10             	add    0x10(%ebp),%ebxf010394b6065,273371
f010394e:	eb 06                	jmp    f0103956 <strncmp+0x17>f010394e6067,273459
f0103950:	83 c0 01             	add    $0x1,%eaxf01039506069,273539
f0103953:	83 c2 01             	add    $0x1,%edxf01039536070,273588
f0103956:	39 d8                	cmp    %ebx,%eaxf01039566072,273670
f0103958:	74 16                	je     f0103970 <strncmp+0x31>f01039586073,273719
f010395a:	0f b6 08             	movzbl (%eax),%ecxf010395a6074,273782
f010395d:	84 c9                	test   %cl,%clf010395d6075,273833
f010395f:	74 04                	je     f0103965 <strncmp+0x26>f010395f6076,273880
f0103961:	3a 0a                	cmp    (%edx),%clf01039616077,273943
f0103963:	74 eb                	je     f0103950 <strncmp+0x11>f01039636078,273993
f0103965:	0f b6 00             	movzbl (%eax),%eaxf01039656083,274145
f0103968:	0f b6 12             	movzbl (%edx),%edxf01039686084,274196
f010396b:	29 d0                	sub    %edx,%eaxf010396b6085,274247
f010396d:	5b                   	pop    %ebxf010396d6087,274298
f010396e:	5d                   	pop    %ebpf010396e6088,274342
f010396f:	c3                   	ret    f010396f6089,274386
f0103970:	b8 00 00 00 00       	mov    $0x0,%eaxf01039706091,274438
f0103975:	eb f6                	jmp    f010396d <strncmp+0x2e>f01039756092,274487
f0103977 <strchr>:f01039776094,274551
char *char6098,274677
f0103977:	55                   	push   %ebpf01039776101,274716
f0103978:	89 e5                	mov    %esp,%ebpf01039786102,274760
f010397a:	8b 45 08             	mov    0x8(%ebp),%eaxf010397a6103,274809
f010397d:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecxf010397d6104,274863
f0103981:	0f b6 10             	movzbl (%eax),%edxf01039816106,274934
f0103984:	84 d2                	test   %dl,%dlf01039846107,274985
f0103986:	74 09                	je     f0103991 <strchr+0x1a>f01039866108,275032
f0103988:	38 ca                	cmp    %cl,%dlf01039886110,275109
f010398a:	74 0a                	je     f0103996 <strchr+0x1f>f010398a6111,275156
f010398c:	83 c0 01             	add    $0x1,%eaxf010398c6113,275235
f010398f:	eb f0                	jmp    f0103981 <strchr+0xa>f010398f6114,275284
f0103991:	b8 00 00 00 00       	mov    $0x0,%eaxf01039916117,275378
f0103996:	5d                   	pop    %ebpf01039966119,275429
f0103997:	c3                   	ret    f01039976120,275473
f0103998 <strfind>:f01039986122,275514
char *char6126,275672
f0103998:	55                   	push   %ebpf01039986129,275712
f0103999:	89 e5                	mov    %esp,%ebpf01039996130,275756
f010399b:	8b 45 08             	mov    0x8(%ebp),%eaxf010399b6131,275805
f010399e:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecxf010399e6132,275859
f01039a2:	eb 03                	jmp    f01039a7 <strfind+0xf>f01039a26134,275930
f01039a4:	83 c0 01             	add    $0x1,%eaxf01039a46135,275992
f01039a7:	0f b6 10             	movzbl (%eax),%edxf01039a76136,276041
f01039aa:	38 ca                	cmp    %cl,%dlf01039aa6138,276107
f01039ac:	74 04                	je     f01039b2 <strfind+0x1a>f01039ac6139,276154
f01039ae:	84 d2                	test   %dl,%dlf01039ae6140,276217
f01039b0:	75 f2                	jne    f01039a4 <strfind+0xc>f01039b06141,276264
f01039b2:	5d                   	pop    %ebpf01039b26145,276358
f01039b3:	c3                   	ret    f01039b36146,276402
f01039b4 <memset>:f01039b46148,276443
void *void6151,276471
f01039b4:	55                   	push   %ebpf01039b46154,276513
f01039b5:	89 e5                	mov    %esp,%ebpf01039b56155,276557
f01039b7:	57                   	push   %edif01039b76156,276606
f01039b8:	56                   	push   %esif01039b86157,276650
f01039b9:	53                   	push   %ebxf01039b96158,276694
f01039ba:	8b 7d 08             	mov    0x8(%ebp),%edif01039ba6159,276738
f01039bd:	8b 4d 10             	mov    0x10(%ebp),%ecxf01039bd6160,276792
f01039c0:	85 c9                	test   %ecx,%ecxf01039c06164,276871
f01039c2:	74 13                	je     f01039d7 <memset+0x23>f01039c26165,276920
f01039c4:	f7 c7 03 00 00 00    	test   $0x3,%edif01039c46168,277028
f01039ca:	75 05                	jne    f01039d1 <memset+0x1d>f01039ca6169,277077
f01039cc:	f6 c1 03             	test   $0x3,%clf01039cc6170,277139
f01039cf:	74 0d                	je     f01039de <memset+0x2a>f01039cf6171,277187
		c = (c<<24)|(c<<16)|(c<<8)|c;c6172,277249
f01039d1:	8b 45 0c             	mov    0xc(%ebp),%eaxf01039d16178,277413
f01039d4:	fc                   	cld    f01039d46179,277467
f01039d5:	f3 aa                	rep stos %al,%es:(%edi)f01039d56180,277507
f01039d7:	89 f8                	mov    %edi,%eaxf01039d76185,277630
f01039d9:	5b                   	pop    %ebxf01039d96186,277679
f01039da:	5e                   	pop    %esif01039da6187,277723
f01039db:	5f                   	pop    %edif01039db6188,277767
f01039dc:	5d                   	pop    %ebpf01039dc6189,277811
f01039dd:	c3                   	ret    f01039dd6190,277855
f01039de:	0f b6 55 0c          	movzbl 0xc(%ebp),%edxf01039de6192,277908
		c = (c<<24)|(c<<16)|(c<<8)|c;c6193,277962
f01039e2:	89 d3                	mov    %edx,%ebxf01039e26194,277994
f01039e4:	c1 e3 08             	shl    $0x8,%ebxf01039e46195,278043
f01039e7:	89 d0                	mov    %edx,%eaxf01039e76196,278092
f01039e9:	c1 e0 18             	shl    $0x18,%eaxf01039e96197,278141
f01039ec:	89 d6                	mov    %edx,%esif01039ec6198,278191
f01039ee:	c1 e6 10             	shl    $0x10,%esif01039ee6199,278240
f01039f1:	09 f0                	or     %esi,%eaxf01039f16200,278290
f01039f3:	09 c2                	or     %eax,%edxf01039f36201,278339
f01039f5:	09 da                	or     %ebx,%edxf01039f56202,278388
f01039f7:	c1 e9 02             	shr    $0x2,%ecxf01039f76204,278471
f01039fa:	89 d0                	mov    %edx,%eaxf01039fa6206,278554
f01039fc:	fc                   	cld    f01039fc6207,278603
f01039fd:	f3 ab                	rep stos %eax,%es:(%edi)f01039fd6208,278643
f01039ff:	eb d6                	jmp    f01039d7 <memset+0x23>f01039ff6209,278700
f0103a01 <memmove>:f0103a016211,278763
void *void6213,278784
f0103a01:	55                   	push   %ebpf0103a016216,278839
f0103a02:	89 e5                	mov    %esp,%ebpf0103a026217,278883
f0103a04:	57                   	push   %edif0103a046218,278932
f0103a05:	56                   	push   %esif0103a056219,278976
f0103a06:	8b 45 08             	mov    0x8(%ebp),%eaxf0103a066220,279020
f0103a09:	8b 75 0c             	mov    0xc(%ebp),%esif0103a096221,279074
f0103a0c:	8b 4d 10             	mov    0x10(%ebp),%ecxf0103a0c6222,279128
	s = src;s6226,279210
	d = dst;d6227,279220
f0103a0f:	39 c6                	cmp    %eax,%esif0103a0f6229,279257
f0103a11:	73 35                	jae    f0103a48 <memmove+0x47>f0103a116230,279306
f0103a13:	8d 14 0e             	lea    (%esi,%ecx,1),%edxf0103a136231,279369
f0103a16:	39 c2                	cmp    %eax,%edxf0103a166232,279427
f0103a18:	76 2e                	jbe    f0103a48 <memmove+0x47>f0103a186233,279476
f0103a1a:	8d 3c 08             	lea    (%eax,%ecx,1),%edif0103a1a6236,279559
f0103a1d:	89 d6                	mov    %edx,%esif0103a1d6238,279667
f0103a1f:	09 fe                	or     %edi,%esif0103a1f6239,279716
f0103a21:	f7 c6 03 00 00 00    	test   $0x3,%esif0103a216240,279765
f0103a27:	74 0c                	je     f0103a35 <memmove+0x34>f0103a276241,279814
f0103a29:	83 ef 01             	sub    $0x1,%edif0103a296247,280068
f0103a2c:	8d 72 ff             	lea    -0x1(%edx),%esif0103a2c6248,280117
f0103a2f:	fd                   	std    f0103a2f6250,280207
f0103a30:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)f0103a306251,280247
f0103a32:	fc                   	cld    f0103a326254,280392
f0103a33:	eb 21                	jmp    f0103a56 <memmove+0x55>f0103a336255,280432
f0103a35:	f6 c1 03             	test   $0x3,%clf0103a356257,280545
f0103a38:	75 ef                	jne    f0103a29 <memmove+0x28>f0103a386258,280593
f0103a3a:	83 ef 04             	sub    $0x4,%edif0103a3a6260,280714
f0103a3d:	8d 72 fc             	lea    -0x4(%edx),%esif0103a3d6261,280763
f0103a40:	c1 e9 02             	shr    $0x2,%ecxf0103a406262,280818
f0103a43:	fd                   	std    f0103a436264,280902
f0103a44:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)f0103a446265,280942
f0103a46:	eb ea                	jmp    f0103a32 <memmove+0x31>f0103a466266,281006
f0103a48:	89 f2                	mov    %esi,%edxf0103a486269,281129
f0103a4a:	09 c2                	or     %eax,%edxf0103a4a6270,281178
f0103a4c:	f6 c2 03             	test   $0x3,%dlf0103a4c6271,281227
f0103a4f:	74 09                	je     f0103a5a <memmove+0x59>f0103a4f6272,281275
f0103a51:	89 c7                	mov    %eax,%edif0103a516277,281469
f0103a53:	fc                   	cld    f0103a536278,281518
f0103a54:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)f0103a546279,281558
f0103a56:	5e                   	pop    %esif0103a566284,281692
f0103a57:	5f                   	pop    %edif0103a576285,281736
f0103a58:	5d                   	pop    %ebpf0103a586286,281780
f0103a59:	c3                   	ret    f0103a596287,281824
f0103a5a:	f6 c1 03             	test   $0x3,%clf0103a5a6289,281914
f0103a5d:	75 f2                	jne    f0103a51 <memmove+0x50>f0103a5d6290,281962
f0103a5f:	c1 e9 02             	shr    $0x2,%ecxf0103a5f6292,282079
f0103a62:	89 c7                	mov    %eax,%edif0103a626294,282163
f0103a64:	fc                   	cld    f0103a646295,282212
f0103a65:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)f0103a656296,282252
f0103a67:	eb ed                	jmp    f0103a56 <memmove+0x55>f0103a676297,282316
f0103a69 <memcpy>:f0103a696299,282380
void *void6303,282409
f0103a69:	55                   	push   %ebpf0103a696306,282463
f0103a6a:	89 e5                	mov    %esp,%ebpf0103a6a6307,282507
f0103a6c:	ff 75 10             	pushl  0x10(%ebp)f0103a6c6309,282586
f0103a6f:	ff 75 0c             	pushl  0xc(%ebp)f0103a6f6310,282636
f0103a72:	ff 75 08             	pushl  0x8(%ebp)f0103a726311,282685
f0103a75:	e8 87 ff ff ff       	call   f0103a01 <memmove>f0103a756312,282734
f0103a7a:	c9                   	leave  f0103a7a6314,282794
f0103a7b:	c3                   	ret    f0103a7b6315,282834
f0103a7c <memcmp>:f0103a7c6317,282875
intint6319,282895
f0103a7c:	55                   	push   %ebpf0103a7c6322,282950
f0103a7d:	89 e5                	mov    %esp,%ebpf0103a7d6323,282994
f0103a7f:	56                   	push   %esif0103a7f6324,283043
f0103a80:	53                   	push   %ebxf0103a806325,283087
f0103a81:	8b 45 08             	mov    0x8(%ebp),%eaxf0103a816326,283131
f0103a84:	8b 55 0c             	mov    0xc(%ebp),%edxf0103a846327,283185
f0103a87:	89 c6                	mov    %eax,%esif0103a876328,283239
f0103a89:	03 75 10             	add    0x10(%ebp),%esif0103a896329,283288
f0103a8c:	39 f0                	cmp    %esi,%eaxf0103a8c6334,283449
f0103a8e:	74 1c                	je     f0103aac <memcmp+0x30>f0103a8e6335,283498
f0103a90:	0f b6 08             	movzbl (%eax),%ecxf0103a906337,283578
f0103a93:	0f b6 1a             	movzbl (%edx),%ebxf0103a936338,283629
f0103a96:	38 d9                	cmp    %bl,%clf0103a966339,283680
f0103a98:	75 08                	jne    f0103aa2 <memcmp+0x26>f0103a986340,283727
f0103a9a:	83 c0 01             	add    $0x1,%eaxf0103a9a6343,283836
f0103a9d:	83 c2 01             	add    $0x1,%edxf0103a9d6344,283885
f0103aa0:	eb ea                	jmp    f0103a8c <memcmp+0x10>f0103aa06345,283934
f0103aa2:	0f b6 c1             	movzbl %cl,%eaxf0103aa26347,284029
f0103aa5:	0f b6 db             	movzbl %bl,%ebxf0103aa56348,284077
f0103aa8:	29 d8                	sub    %ebx,%eaxf0103aa86349,284125
f0103aaa:	eb 05                	jmp    f0103ab1 <memcmp+0x35>f0103aaa6350,284174
f0103aac:	b8 00 00 00 00       	mov    $0x0,%eaxf0103aac6354,284251
f0103ab1:	5b                   	pop    %ebxf0103ab16356,284302
f0103ab2:	5e                   	pop    %esif0103ab26357,284346
f0103ab3:	5d                   	pop    %ebpf0103ab36358,284390
f0103ab4:	c3                   	ret    f0103ab46359,284434
f0103ab5 <memfind>:f0103ab56361,284475
void *void6363,284496
f0103ab5:	55                   	push   %ebpf0103ab56366,284545
f0103ab6:	89 e5                	mov    %esp,%ebpf0103ab66367,284589
f0103ab8:	8b 45 08             	mov    0x8(%ebp),%eaxf0103ab86368,284638
f0103abb:	8b 4d 0c             	mov    0xc(%ebp),%ecxf0103abb6369,284692
f0103abe:	89 c2                	mov    %eax,%edxf0103abe6371,284788
f0103ac0:	03 55 10             	add    0x10(%ebp),%edxf0103ac06372,284837
f0103ac3:	39 d0                	cmp    %edx,%eaxf0103ac36374,284915
f0103ac5:	73 09                	jae    f0103ad0 <memfind+0x1b>f0103ac56375,284964
f0103ac7:	38 08                	cmp    %cl,(%eax)f0103ac76377,285082
f0103ac9:	74 05                	je     f0103ad0 <memfind+0x1b>f0103ac96378,285132
f0103acb:	83 c0 01             	add    $0x1,%eaxf0103acb6380,285218
f0103ace:	eb f3                	jmp    f0103ac3 <memfind+0xe>f0103ace6381,285267
f0103ad0:	5d                   	pop    %ebpf0103ad06385,285361
f0103ad1:	c3                   	ret    f0103ad16386,285405
f0103ad2 <strtol>:f0103ad26388,285446
longlong6390,285466
f0103ad2:	55                   	push   %ebpf0103ad26393,285520
f0103ad3:	89 e5                	mov    %esp,%ebpf0103ad36394,285564
f0103ad5:	57                   	push   %edif0103ad56395,285613
f0103ad6:	56                   	push   %esif0103ad66396,285657
f0103ad7:	53                   	push   %ebxf0103ad76397,285701
f0103ad8:	8b 4d 08             	mov    0x8(%ebp),%ecxf0103ad86398,285745
f0103adb:	8b 5d 10             	mov    0x10(%ebp),%ebxf0103adb6399,285799
f0103ade:	eb 03                	jmp    f0103ae3 <strtol+0x11>f0103ade6405,285947
f0103ae0:	83 c1 01             	add    $0x1,%ecxf0103ae06407,286016
f0103ae3:	0f b6 01             	movzbl (%ecx),%eaxf0103ae36409,286098
f0103ae6:	3c 20                	cmp    $0x20,%alf0103ae66410,286149
f0103ae8:	74 f6                	je     f0103ae0 <strtol+0xe>f0103ae86411,286198
f0103aea:	3c 09                	cmp    $0x9,%alf0103aea6412,286259
f0103aec:	74 f2                	je     f0103ae0 <strtol+0xe>f0103aec6413,286307
f0103aee:	3c 2b                	cmp    $0x2b,%alf0103aee6417,286405
f0103af0:	74 2e                	je     f0103b20 <strtol+0x4e>f0103af06418,286454
f0103af2:	bf 00 00 00 00       	mov    $0x0,%edif0103af26420,286530
f0103af7:	3c 2d                	cmp    $0x2d,%alf0103af76423,286607
f0103af9:	74 2f                	je     f0103b2a <strtol+0x58>f0103af96424,286656
f0103afb:	f7 c3 ef ff ff ff    	test   $0xffffffef,%ebxf0103afb6429,286828
f0103b01:	75 05                	jne    f0103b08 <strtol+0x36>f0103b016430,286884
f0103b03:	80 39 30             	cmpb   $0x30,(%ecx)f0103b036431,286946
f0103b06:	74 2c                	je     f0103b34 <strtol+0x62>f0103b066432,286998
f0103b08:	85 db                	test   %ebx,%ebxf0103b086435,287117
f0103b0a:	75 0a                	jne    f0103b16 <strtol+0x44>f0103b0a6436,287166
		base = 10;base6439,287266
f0103b0c:	bb 0a 00 00 00       	mov    $0xa,%ebxf0103b0c6440,287279
f0103b11:	80 39 30             	cmpb   $0x30,(%ecx)f0103b116442,287364
f0103b14:	74 28                	je     f0103b3e <strtol+0x6c>f0103b146443,287416
		base = 10;base6444,287478
f0103b16:	b8 00 00 00 00       	mov    $0x0,%eaxf0103b166445,287491
f0103b1b:	89 5d 10             	mov    %ebx,0x10(%ebp)f0103b1b6446,287540
f0103b1e:	eb 50                	jmp    f0103b70 <strtol+0x9e>f0103b1e6447,287595
f0103b20:	83 c1 01             	add    $0x1,%ecxf0103b206449,287664
f0103b23:	bf 00 00 00 00       	mov    $0x0,%edif0103b236451,287727
f0103b28:	eb d1                	jmp    f0103afb <strtol+0x29>f0103b286452,287776
f0103b2a:	83 c1 01             	add    $0x1,%ecxf0103b2a6454,287854
f0103b2d:	bf 01 00 00 00       	mov    $0x1,%edif0103b2d6455,287903
f0103b32:	eb c7                	jmp    f0103afb <strtol+0x29>f0103b326456,287952
f0103b34:	80 79 01 78          	cmpb   $0x78,0x1(%ecx)f0103b346458,288078
f0103b38:	74 0e                	je     f0103b48 <strtol+0x76>f0103b386459,288133
f0103b3a:	85 db                	test   %ebx,%ebxf0103b3a6461,288231
f0103b3c:	75 d8                	jne    f0103b16 <strtol+0x44>f0103b3c6462,288280
f0103b3e:	83 c1 01             	add    $0x1,%ecxf0103b3e6464,288359
f0103b41:	bb 08 00 00 00       	mov    $0x8,%ebxf0103b416465,288408
f0103b46:	eb ce                	jmp    f0103b16 <strtol+0x44>f0103b466466,288457
f0103b48:	83 c1 02             	add    $0x2,%ecxf0103b486468,288540
f0103b4b:	bb 10 00 00 00       	mov    $0x10,%ebxf0103b4b6469,288589
f0103b50:	eb c4                	jmp    f0103b16 <strtol+0x44>f0103b506470,288639
			dig = *s - '0';dig6475,288756
f0103b52:	8d 72 9f             	lea    -0x61(%edx),%esif0103b526477,288810
f0103b55:	89 f3                	mov    %esi,%ebxf0103b556478,288866
f0103b57:	80 fb 19             	cmp    $0x19,%blf0103b576479,288915
f0103b5a:	77 29                	ja     f0103b85 <strtol+0xb3>f0103b5a6480,288964
			dig = *s - 'a' + 10;dig6481,289026
f0103b5c:	0f be d2             	movsbl %dl,%edxf0103b5c6482,289050
f0103b5f:	83 ea 57             	sub    $0x57,%edxf0103b5f6483,289098
			dig = *s - 'A' + 10;dig6485,289183
f0103b62:	3b 55 10             	cmp    0x10(%ebp),%edxf0103b626489,289243
f0103b65:	7d 30                	jge    f0103b97 <strtol+0xc5>f0103b656490,289298
f0103b67:	83 c1 01             	add    $0x1,%ecxf0103b676493,289403
f0103b6a:	0f af 45 10          	imul   0x10(%ebp),%eaxf0103b6a6494,289452
f0103b6e:	01 d0                	add    %edx,%eaxf0103b6e6495,289507
f0103b70:	0f b6 11             	movzbl (%ecx),%edxf0103b706497,289586
f0103b73:	8d 72 d0             	lea    -0x30(%edx),%esif0103b736498,289637
f0103b76:	89 f3                	mov    %esi,%ebxf0103b766499,289693
f0103b78:	80 fb 09             	cmp    $0x9,%blf0103b786500,289742
f0103b7b:	77 d5                	ja     f0103b52 <strtol+0x80>f0103b7b6501,289790
			dig = *s - '0';dig6502,289852
f0103b7d:	0f be d2             	movsbl %dl,%edxf0103b7d6503,289871
f0103b80:	83 ea 30             	sub    $0x30,%edxf0103b806504,289919
f0103b83:	eb dd                	jmp    f0103b62 <strtol+0x90>f0103b836505,289969
f0103b85:	8d 72 bf             	lea    -0x41(%edx),%esif0103b856507,290066
f0103b88:	89 f3                	mov    %esi,%ebxf0103b886508,290122
f0103b8a:	80 fb 19             	cmp    $0x19,%blf0103b8a6509,290171
f0103b8d:	77 08                	ja     f0103b97 <strtol+0xc5>f0103b8d6510,290220
			dig = *s - 'A' + 10;dig6511,290282
f0103b8f:	0f be d2             	movsbl %dl,%edxf0103b8f6512,290306
f0103b92:	83 ea 37             	sub    $0x37,%edxf0103b926513,290354
f0103b95:	eb cb                	jmp    f0103b62 <strtol+0x90>f0103b956514,290404
f0103b97:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)f0103b976519,290523
f0103b9b:	74 05                	je     f0103ba2 <strtol+0xd0>f0103b9b6520,290577
f0103b9d:	8b 75 0c             	mov    0xc(%ebp),%esif0103b9d6522,290663
f0103ba0:	89 0e                	mov    %ecx,(%esi)f0103ba06523,290717
f0103ba2:	89 c2                	mov    %eax,%edxf0103ba26525,290796
f0103ba4:	f7 da                	neg    %edxf0103ba46526,290845
f0103ba6:	85 ff                	test   %edi,%edif0103ba66527,290889
f0103ba8:	0f 45 c2             	cmovne %edx,%eaxf0103ba86528,290938
f0103bab:	5b                   	pop    %ebxf0103bab6530,290989
f0103bac:	5e                   	pop    %esif0103bac6531,291033
f0103bad:	5f                   	pop    %edif0103bad6532,291077
f0103bae:	5d                   	pop    %ebpf0103bae6533,291121
f0103baf:	c3                   	ret    f0103baf6534,291165
f0103bb0 <__udivdi3>:f0103bb06536,291206
f0103bb0:	55                   	push   %ebpf0103bb06537,291228
f0103bb1:	57                   	push   %edif0103bb16538,291272
f0103bb2:	56                   	push   %esif0103bb26539,291316
f0103bb3:	53                   	push   %ebxf0103bb36540,291360
f0103bb4:	83 ec 1c             	sub    $0x1c,%espf0103bb46541,291404
f0103bb7:	8b 54 24 3c          	mov    0x3c(%esp),%edxf0103bb76542,291454
f0103bbb:	8b 6c 24 30          	mov    0x30(%esp),%ebpf0103bbb6543,291509
f0103bbf:	8b 74 24 34          	mov    0x34(%esp),%esif0103bbf6544,291564
f0103bc3:	8b 5c 24 38          	mov    0x38(%esp),%ebxf0103bc36545,291619
f0103bc7:	85 d2                	test   %edx,%edxf0103bc76546,291674
f0103bc9:	75 35                	jne    f0103c00 <__udivdi3+0x50>f0103bc96547,291723
f0103bcb:	39 f3                	cmp    %esi,%ebxf0103bcb6548,291788
f0103bcd:	0f 87 bd 00 00 00    	ja     f0103c90 <__udivdi3+0xe0>f0103bcd6549,291837
f0103bd3:	85 db                	test   %ebx,%ebxf0103bd36550,291902
f0103bd5:	89 d9                	mov    %ebx,%ecxf0103bd56551,291951
f0103bd7:	75 0b                	jne    f0103be4 <__udivdi3+0x34>f0103bd76552,292000
f0103bd9:	b8 01 00 00 00       	mov    $0x1,%eaxf0103bd96553,292065
f0103bde:	31 d2                	xor    %edx,%edxf0103bde6554,292114
f0103be0:	f7 f3                	div    %ebxf0103be06555,292163
f0103be2:	89 c1                	mov    %eax,%ecxf0103be26556,292207
f0103be4:	31 d2                	xor    %edx,%edxf0103be46557,292256
f0103be6:	89 f0                	mov    %esi,%eaxf0103be66558,292305
f0103be8:	f7 f1                	div    %ecxf0103be86559,292354
f0103bea:	89 c6                	mov    %eax,%esif0103bea6560,292398
f0103bec:	89 e8                	mov    %ebp,%eaxf0103bec6561,292447
f0103bee:	89 f7                	mov    %esi,%edif0103bee6562,292496
f0103bf0:	f7 f1                	div    %ecxf0103bf06563,292545
f0103bf2:	89 fa                	mov    %edi,%edxf0103bf26564,292589
f0103bf4:	83 c4 1c             	add    $0x1c,%espf0103bf46565,292638
f0103bf7:	5b                   	pop    %ebxf0103bf76566,292688
f0103bf8:	5e                   	pop    %esif0103bf86567,292732
f0103bf9:	5f                   	pop    %edif0103bf96568,292776
f0103bfa:	5d                   	pop    %ebpf0103bfa6569,292820
f0103bfb:	c3                   	ret    f0103bfb6570,292864
f0103bfc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esif0103bfc6571,292904
f0103c00:	39 f2                	cmp    %esi,%edxf0103c006572,292965
f0103c02:	77 7c                	ja     f0103c80 <__udivdi3+0xd0>f0103c026573,293014
f0103c04:	0f bd fa             	bsr    %edx,%edif0103c046574,293079
f0103c07:	83 f7 1f             	xor    $0x1f,%edif0103c076575,293128
f0103c0a:	0f 84 98 00 00 00    	je     f0103ca8 <__udivdi3+0xf8>f0103c0a6576,293178
f0103c10:	89 f9                	mov    %edi,%ecxf0103c106577,293243
f0103c12:	b8 20 00 00 00       	mov    $0x20,%eaxf0103c126578,293292
f0103c17:	29 f8                	sub    %edi,%eaxf0103c176579,293342
f0103c19:	d3 e2                	shl    %cl,%edxf0103c196580,293391
f0103c1b:	89 54 24 08          	mov    %edx,0x8(%esp)f0103c1b6581,293439
f0103c1f:	89 c1                	mov    %eax,%ecxf0103c1f6582,293493
f0103c21:	89 da                	mov    %ebx,%edxf0103c216583,293542
f0103c23:	d3 ea                	shr    %cl,%edxf0103c236584,293591
f0103c25:	8b 4c 24 08          	mov    0x8(%esp),%ecxf0103c256585,293639
f0103c29:	09 d1                	or     %edx,%ecxf0103c296586,293693
f0103c2b:	89 f2                	mov    %esi,%edxf0103c2b6587,293742
f0103c2d:	89 4c 24 08          	mov    %ecx,0x8(%esp)f0103c2d6588,293791
f0103c31:	89 f9                	mov    %edi,%ecxf0103c316589,293845
f0103c33:	d3 e3                	shl    %cl,%ebxf0103c336590,293894
f0103c35:	89 c1                	mov    %eax,%ecxf0103c356591,293942
f0103c37:	d3 ea                	shr    %cl,%edxf0103c376592,293991
f0103c39:	89 f9                	mov    %edi,%ecxf0103c396593,294039
f0103c3b:	89 5c 24 0c          	mov    %ebx,0xc(%esp)f0103c3b6594,294088
f0103c3f:	d3 e6                	shl    %cl,%esif0103c3f6595,294142
f0103c41:	89 eb                	mov    %ebp,%ebxf0103c416596,294190
f0103c43:	89 c1                	mov    %eax,%ecxf0103c436597,294239
f0103c45:	d3 eb                	shr    %cl,%ebxf0103c456598,294288
f0103c47:	09 de                	or     %ebx,%esif0103c476599,294336
f0103c49:	89 f0                	mov    %esi,%eaxf0103c496600,294385
f0103c4b:	f7 74 24 08          	divl   0x8(%esp)f0103c4b6601,294434
f0103c4f:	89 d6                	mov    %edx,%esif0103c4f6602,294483
f0103c51:	89 c3                	mov    %eax,%ebxf0103c516603,294532
f0103c53:	f7 64 24 0c          	mull   0xc(%esp)f0103c536604,294581
f0103c57:	39 d6                	cmp    %edx,%esif0103c576605,294630
f0103c59:	72 0c                	jb     f0103c67 <__udivdi3+0xb7>f0103c596606,294679
f0103c5b:	89 f9                	mov    %edi,%ecxf0103c5b6607,294744
f0103c5d:	d3 e5                	shl    %cl,%ebpf0103c5d6608,294793
f0103c5f:	39 c5                	cmp    %eax,%ebpf0103c5f6609,294841
f0103c61:	73 5d                	jae    f0103cc0 <__udivdi3+0x110>f0103c616610,294890
f0103c63:	39 d6                	cmp    %edx,%esif0103c636611,294956
f0103c65:	75 59                	jne    f0103cc0 <__udivdi3+0x110>f0103c656612,295005
f0103c67:	8d 43 ff             	lea    -0x1(%ebx),%eaxf0103c676613,295071
f0103c6a:	31 ff                	xor    %edi,%edif0103c6a6614,295126
f0103c6c:	89 fa                	mov    %edi,%edxf0103c6c6615,295175
f0103c6e:	83 c4 1c             	add    $0x1c,%espf0103c6e6616,295224
f0103c71:	5b                   	pop    %ebxf0103c716617,295274
f0103c72:	5e                   	pop    %esif0103c726618,295318
f0103c73:	5f                   	pop    %edif0103c736619,295362
f0103c74:	5d                   	pop    %ebpf0103c746620,295406
f0103c75:	c3                   	ret    f0103c756621,295450
f0103c76:	8d 76 00             	lea    0x0(%esi),%esif0103c766622,295490
f0103c79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edif0103c796623,295544
f0103c80:	31 ff                	xor    %edi,%edif0103c806624,295605
f0103c82:	31 c0                	xor    %eax,%eaxf0103c826625,295654
f0103c84:	89 fa                	mov    %edi,%edxf0103c846626,295703
f0103c86:	83 c4 1c             	add    $0x1c,%espf0103c866627,295752
f0103c89:	5b                   	pop    %ebxf0103c896628,295802
f0103c8a:	5e                   	pop    %esif0103c8a6629,295846
f0103c8b:	5f                   	pop    %edif0103c8b6630,295890
f0103c8c:	5d                   	pop    %ebpf0103c8c6631,295934
f0103c8d:	c3                   	ret    f0103c8d6632,295978
f0103c8e:	66 90                	xchg   %ax,%axf0103c8e6633,296018
f0103c90:	31 ff                	xor    %edi,%edif0103c906634,296065
f0103c92:	89 e8                	mov    %ebp,%eaxf0103c926635,296114
f0103c94:	89 f2                	mov    %esi,%edxf0103c946636,296163
f0103c96:	f7 f3                	div    %ebxf0103c966637,296212
f0103c98:	89 fa                	mov    %edi,%edxf0103c986638,296256
f0103c9a:	83 c4 1c             	add    $0x1c,%espf0103c9a6639,296305
f0103c9d:	5b                   	pop    %ebxf0103c9d6640,296355
f0103c9e:	5e                   	pop    %esif0103c9e6641,296399
f0103c9f:	5f                   	pop    %edif0103c9f6642,296443
f0103ca0:	5d                   	pop    %ebpf0103ca06643,296487
f0103ca1:	c3                   	ret    f0103ca16644,296531
f0103ca2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esif0103ca26645,296571
f0103ca8:	39 f2                	cmp    %esi,%edxf0103ca86646,296625
f0103caa:	72 06                	jb     f0103cb2 <__udivdi3+0x102>f0103caa6647,296674
f0103cac:	31 c0                	xor    %eax,%eaxf0103cac6648,296740
f0103cae:	39 eb                	cmp    %ebp,%ebxf0103cae6649,296789
f0103cb0:	77 d2                	ja     f0103c84 <__udivdi3+0xd4>f0103cb06650,296838
f0103cb2:	b8 01 00 00 00       	mov    $0x1,%eaxf0103cb26651,296903
f0103cb7:	eb cb                	jmp    f0103c84 <__udivdi3+0xd4>f0103cb76652,296952
f0103cb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esif0103cb96653,297017
f0103cc0:	89 d8                	mov    %ebx,%eaxf0103cc06654,297078
f0103cc2:	31 ff                	xor    %edi,%edif0103cc26655,297127
f0103cc4:	eb be                	jmp    f0103c84 <__udivdi3+0xd4>f0103cc46656,297176
f0103cc6:	66 90                	xchg   %ax,%axf0103cc66657,297241
f0103cc8:	66 90                	xchg   %ax,%axf0103cc86658,297288
f0103cca:	66 90                	xchg   %ax,%axf0103cca6659,297335
f0103ccc:	66 90                	xchg   %ax,%axf0103ccc6660,297382
f0103cce:	66 90                	xchg   %ax,%axf0103cce6661,297429
f0103cd0 <__umoddi3>:f0103cd06663,297477
f0103cd0:	55                   	push   %ebpf0103cd06664,297499
f0103cd1:	57                   	push   %edif0103cd16665,297543
f0103cd2:	56                   	push   %esif0103cd26666,297587
f0103cd3:	53                   	push   %ebxf0103cd36667,297631
f0103cd4:	83 ec 1c             	sub    $0x1c,%espf0103cd46668,297675
f0103cd7:	8b 6c 24 3c          	mov    0x3c(%esp),%ebpf0103cd76669,297725
f0103cdb:	8b 74 24 30          	mov    0x30(%esp),%esif0103cdb6670,297780
f0103cdf:	8b 5c 24 34          	mov    0x34(%esp),%ebxf0103cdf6671,297835
f0103ce3:	8b 7c 24 38          	mov    0x38(%esp),%edif0103ce36672,297890
f0103ce7:	85 ed                	test   %ebp,%ebpf0103ce76673,297945
f0103ce9:	89 f0                	mov    %esi,%eaxf0103ce96674,297994
f0103ceb:	89 da                	mov    %ebx,%edxf0103ceb6675,298043
f0103ced:	75 19                	jne    f0103d08 <__umoddi3+0x38>f0103ced6676,298092
f0103cef:	39 df                	cmp    %ebx,%edif0103cef6677,298157
f0103cf1:	0f 86 b1 00 00 00    	jbe    f0103da8 <__umoddi3+0xd8>f0103cf16678,298206
f0103cf7:	f7 f7                	div    %edif0103cf76679,298271
f0103cf9:	89 d0                	mov    %edx,%eaxf0103cf96680,298315
f0103cfb:	31 d2                	xor    %edx,%edxf0103cfb6681,298364
f0103cfd:	83 c4 1c             	add    $0x1c,%espf0103cfd6682,298413
f0103d00:	5b                   	pop    %ebxf0103d006683,298463
f0103d01:	5e                   	pop    %esif0103d016684,298507
f0103d02:	5f                   	pop    %edif0103d026685,298551
f0103d03:	5d                   	pop    %ebpf0103d036686,298595
f0103d04:	c3                   	ret    f0103d046687,298639
f0103d05:	8d 76 00             	lea    0x0(%esi),%esif0103d056688,298679
f0103d08:	39 dd                	cmp    %ebx,%ebpf0103d086689,298733
f0103d0a:	77 f1                	ja     f0103cfd <__umoddi3+0x2d>f0103d0a6690,298782
f0103d0c:	0f bd cd             	bsr    %ebp,%ecxf0103d0c6691,298847
f0103d0f:	83 f1 1f             	xor    $0x1f,%ecxf0103d0f6692,298896
f0103d12:	89 4c 24 04          	mov    %ecx,0x4(%esp)f0103d126693,298946
f0103d16:	0f 84 b4 00 00 00    	je     f0103dd0 <__umoddi3+0x100>f0103d166694,299000
f0103d1c:	b8 20 00 00 00       	mov    $0x20,%eaxf0103d1c6695,299066
f0103d21:	89 c2                	mov    %eax,%edxf0103d216696,299116
f0103d23:	8b 44 24 04          	mov    0x4(%esp),%eaxf0103d236697,299165
f0103d27:	29 c2                	sub    %eax,%edxf0103d276698,299219
f0103d29:	89 c1                	mov    %eax,%ecxf0103d296699,299268
f0103d2b:	89 f8                	mov    %edi,%eaxf0103d2b6700,299317
f0103d2d:	d3 e5                	shl    %cl,%ebpf0103d2d6701,299366
f0103d2f:	89 d1                	mov    %edx,%ecxf0103d2f6702,299414
f0103d31:	89 54 24 0c          	mov    %edx,0xc(%esp)f0103d316703,299463
f0103d35:	d3 e8                	shr    %cl,%eaxf0103d356704,299517
f0103d37:	09 c5                	or     %eax,%ebpf0103d376705,299565
f0103d39:	8b 44 24 04          	mov    0x4(%esp),%eaxf0103d396706,299614
f0103d3d:	89 c1                	mov    %eax,%ecxf0103d3d6707,299668
f0103d3f:	d3 e7                	shl    %cl,%edif0103d3f6708,299717
f0103d41:	89 d1                	mov    %edx,%ecxf0103d416709,299765
f0103d43:	89 7c 24 08          	mov    %edi,0x8(%esp)f0103d436710,299814
f0103d47:	89 df                	mov    %ebx,%edif0103d476711,299868
f0103d49:	d3 ef                	shr    %cl,%edif0103d496712,299917
f0103d4b:	89 c1                	mov    %eax,%ecxf0103d4b6713,299965
f0103d4d:	89 f0                	mov    %esi,%eaxf0103d4d6714,300014
f0103d4f:	d3 e3                	shl    %cl,%ebxf0103d4f6715,300063
f0103d51:	89 d1                	mov    %edx,%ecxf0103d516716,300111
f0103d53:	89 fa                	mov    %edi,%edxf0103d536717,300160
f0103d55:	d3 e8                	shr    %cl,%eaxf0103d556718,300209
f0103d57:	0f b6 4c 24 04       	movzbl 0x4(%esp),%ecxf0103d576719,300257
f0103d5c:	09 d8                	or     %ebx,%eaxf0103d5c6720,300311
f0103d5e:	f7 f5                	div    %ebpf0103d5e6721,300360
f0103d60:	d3 e6                	shl    %cl,%esif0103d606722,300404
f0103d62:	89 d1                	mov    %edx,%ecxf0103d626723,300452
f0103d64:	f7 64 24 08          	mull   0x8(%esp)f0103d646724,300501
f0103d68:	39 d1                	cmp    %edx,%ecxf0103d686725,300550
f0103d6a:	89 c3                	mov    %eax,%ebxf0103d6a6726,300599
f0103d6c:	89 d7                	mov    %edx,%edif0103d6c6727,300648
f0103d6e:	72 06                	jb     f0103d76 <__umoddi3+0xa6>f0103d6e6728,300697
f0103d70:	75 0e                	jne    f0103d80 <__umoddi3+0xb0>f0103d706729,300762
f0103d72:	39 c6                	cmp    %eax,%esif0103d726730,300827
f0103d74:	73 0a                	jae    f0103d80 <__umoddi3+0xb0>f0103d746731,300876
f0103d76:	2b 44 24 08          	sub    0x8(%esp),%eaxf0103d766732,300941
f0103d7a:	19 ea                	sbb    %ebp,%edxf0103d7a6733,300995
f0103d7c:	89 d7                	mov    %edx,%edif0103d7c6734,301044
f0103d7e:	89 c3                	mov    %eax,%ebxf0103d7e6735,301093
f0103d80:	89 ca                	mov    %ecx,%edxf0103d806736,301142
f0103d82:	0f b6 4c 24 0c       	movzbl 0xc(%esp),%ecxf0103d826737,301191
f0103d87:	29 de                	sub    %ebx,%esif0103d876738,301245
f0103d89:	19 fa                	sbb    %edi,%edxf0103d896739,301294
f0103d8b:	8b 5c 24 04          	mov    0x4(%esp),%ebxf0103d8b6740,301343
f0103d8f:	89 d0                	mov    %edx,%eaxf0103d8f6741,301397
f0103d91:	d3 e0                	shl    %cl,%eaxf0103d916742,301446
f0103d93:	89 d9                	mov    %ebx,%ecxf0103d936743,301494
f0103d95:	d3 ee                	shr    %cl,%esif0103d956744,301543
f0103d97:	d3 ea                	shr    %cl,%edxf0103d976745,301591
f0103d99:	09 f0                	or     %esi,%eaxf0103d996746,301639
f0103d9b:	83 c4 1c             	add    $0x1c,%espf0103d9b6747,301688
f0103d9e:	5b                   	pop    %ebxf0103d9e6748,301738
f0103d9f:	5e                   	pop    %esif0103d9f6749,301782
f0103da0:	5f                   	pop    %edif0103da06750,301826
f0103da1:	5d                   	pop    %ebpf0103da16751,301870
f0103da2:	c3                   	ret    f0103da26752,301914
f0103da3:	90                   	nopf0103da36753,301954
f0103da4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esif0103da46754,301990
f0103da8:	85 ff                	test   %edi,%edif0103da86755,302051
f0103daa:	89 f9                	mov    %edi,%ecxf0103daa6756,302100
f0103dac:	75 0b                	jne    f0103db9 <__umoddi3+0xe9>f0103dac6757,302149
f0103dae:	b8 01 00 00 00       	mov    $0x1,%eaxf0103dae6758,302214
f0103db3:	31 d2                	xor    %edx,%edxf0103db36759,302263
f0103db5:	f7 f7                	div    %edif0103db56760,302312
f0103db7:	89 c1                	mov    %eax,%ecxf0103db76761,302356
f0103db9:	89 d8                	mov    %ebx,%eaxf0103db96762,302405
f0103dbb:	31 d2                	xor    %edx,%edxf0103dbb6763,302454
f0103dbd:	f7 f1                	div    %ecxf0103dbd6764,302503
f0103dbf:	89 f0                	mov    %esi,%eaxf0103dbf6765,302547
f0103dc1:	f7 f1                	div    %ecxf0103dc16766,302596
f0103dc3:	e9 31 ff ff ff       	jmp    f0103cf9 <__umoddi3+0x29>f0103dc36767,302640
f0103dc8:	90                   	nopf0103dc86768,302705
f0103dc9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esif0103dc96769,302741
f0103dd0:	39 dd                	cmp    %ebx,%ebpf0103dd06770,302802
f0103dd2:	72 08                	jb     f0103ddc <__umoddi3+0x10c>f0103dd26771,302851
f0103dd4:	39 f7                	cmp    %esi,%edif0103dd46772,302917
f0103dd6:	0f 87 21 ff ff ff    	ja     f0103cfd <__umoddi3+0x2d>f0103dd66773,302966
f0103ddc:	89 da                	mov    %ebx,%edxf0103ddc6774,303031
f0103dde:	89 f0                	mov    %esi,%eaxf0103dde6775,303080
f0103de0:	29 f8                	sub    %edi,%eaxf0103de06776,303129
f0103de2:	19 ea                	sbb    %ebp,%edxf0103de26777,303178
f0103de4:	e9 14 ff ff ff       	jmp    f0103cfd <__umoddi3+0x2d>f0103de46778,303227

fs/test.c,99
static char *msg = "This is the NEW message of the day!\n\n";msg6,63
fs_test(void)fs_test9,131

user/sendpage.c,265
const char *str1 = "hello child environment! how are you?";str16,128
const char *str2 = "hello parent environment! I'm good.";str27,188
#define TEMP_ADDR	TEMP_ADDR9,247
#define TEMP_ADDR_CHILD	TEMP_ADDR_CHILD10,283
umain(int argc, char **argv)umain13,331

conf/env.mk,14
V = @V9,359

conf/lab.mk,71
LAB=2LAB1,0
PACKAGEDATE=Wed Sep 12 14:51:29 EDT 2018PACKAGEDATE2,6

kern/console.h,275
#define _CONSOLE_H__CONSOLE_H_4,68
#define MONO_BASE	MONO_BASE11,215
#define MONO_BUF	MONO_BUF12,239
#define CGA_BASE	CGA_BASE13,264
#define CGA_BUF	CGA_BUF14,287
#define CRT_ROWS	CRT_ROWS16,313
#define CRT_COLS	CRT_COLS17,333
#define CRT_SIZE	CRT_SIZE18,353

kern/kclock.c,116
mc146818_read(unsigned reg)mc146818_read11,169
mc146818_write(unsigned reg, unsigned datum)mc146818_write18,250

kern/monitor.c,821
#define CMDBUF_SIZE	CMDBUF_SIZE14,314
struct Command {Command17,371
	const char *name;name18,388
	const char *name;Command::name18,388
	const char *desc;desc19,407
	const char *desc;Command::desc19,407
	int (*func)(int argc, char** argv, struct Trapframe* tf);func21,465
	int (*func)(int argc, char** argv, struct Trapframe* tf);Command::func21,465
static struct Command commands[] = {commands24,528
mon_help(int argc, char **argv, struct Trapframe *tf)mon_help32,764
mon_kerninfo(int argc, char **argv, struct Trapframe *tf)mon_kerninfo42,951
mon_backtrace(int argc, char **argv, struct Trapframe *tf)mon_backtrace58,1572
#define WHITESPACE WHITESPACE68,1719
#define MAXARGS MAXARGS69,1748
runcmd(char *buf, struct Trapframe *tf)runcmd72,1779
monitor(struct Trapframe *tf)monitor111,2571

kern/kdebug.h,1042
#define JOS_KERN_KDEBUG_HJOS_KERN_KDEBUG_H2,26
struct Eipdebuginfo {Eipdebuginfo7,137
	const char *eip_file;		// Source code filename for EIPeip_file8,159
	const char *eip_file;		// Source code filename for EIPEipdebuginfo::eip_file8,159
	int eip_line;			// Source code linenumber for EIPeip_line9,215
	int eip_line;			// Source code linenumber for EIPEipdebuginfo::eip_line9,215
	const char *eip_fn_name;	// Name of function containing EIPeip_fn_name11,267
	const char *eip_fn_name;	// Name of function containing EIPEipdebuginfo::eip_fn_name11,267
	int eip_fn_namelen;		// Length of function nameeip_fn_namelen13,366
	int eip_fn_namelen;		// Length of function nameEipdebuginfo::eip_fn_namelen13,366
	uintptr_t eip_fn_addr;		// Address of start of functioneip_fn_addr14,415
	uintptr_t eip_fn_addr;		// Address of start of functionEipdebuginfo::eip_fn_addr14,415
	int eip_fn_narg;		// Number of function argumentseip_fn_narg15,472
	int eip_fn_narg;		// Number of function argumentsEipdebuginfo::eip_fn_narg15,472

kern/console.c,2436
delay(void)delay16,352
#define COM1	COM126,448
#define COM_RX	COM_RX28,469
#define COM_TX	COM_TX29,518
#define COM_DLL	COM_DLL30,569
#define COM_DLM	COM_DLM31,623
#define COM_IER	COM_IER32,678
#define   COM_IER_RDI	COM_IER_RDI33,731
#define COM_IIR	COM_IIR34,794
#define COM_FCR	COM_FCR35,842
#define COM_LCR	COM_LCR36,891
#define	  COM_LCR_DLAB	COM_LCR_DLAB37,940
#define	  COM_LCR_WLEN8	COM_LCR_WLEN838,998
#define COM_MCR	COM_MCR39,1051
#define	  COM_MCR_RTS	COM_MCR_RTS40,1101
#define	  COM_MCR_DTR	COM_MCR_DTR41,1146
#define	  COM_MCR_OUT2	COM_MCR_OUT242,1191
#define COM_LSR	COM_LSR43,1238
#define   COM_LSR_DATA	COM_LSR_DATA44,1285
#define   COM_LSR_TXRDY	COM_LSR_TXRDY45,1333
#define   COM_LSR_TSRE	COM_LSR_TSRE46,1389
static bool serial_exists;serial_exists48,1439
serial_proc_data(void)serial_proc_data51,1478
serial_intr(void)serial_intr59,1592
serial_putc(int c)serial_putc66,1678
serial_init(void)serial_init79,1843
lpt_putc(int c)lpt_putc112,2633
static unsigned addr_6845;addr_6845128,2853
static uint16_t *crt_buf;crt_buf129,2880
static uint16_t crt_pos;crt_pos130,2906
cga_init(void)cga_init133,2944
cga_putc(int c)cga_putc163,3430
#define NO	NO214,4399
#define SHIFT	SHIFT216,4414
#define CTL	CTL217,4436
#define ALT	ALT218,4456
#define CAPSLOCK	CAPSLOCK220,4477
#define NUMLOCK	NUMLOCK221,4501
#define SCROLLLOCK	SCROLLLOCK222,4525
#define E0ESC	E0ESC224,4552
static uint8_t shiftcode[256] =shiftcode226,4575
static uint8_t togglecode[256] =togglecode236,4706
static uint8_t normalmap[256] =normalmap243,4805
static uint8_t shiftmap[256] =shiftmap264,5690
#define C(C285,6574
static uint8_t ctlmap[256] =ctlmap287,6598
static uint8_t *charcode[4] = {charcode304,7327
kbd_proc_data(void)kbd_proc_data316,7524
kbd_intr(void)kbd_intr368,8510
kbd_init(void)kbd_init374,8569
#define CONSBUFSIZE CONSBUFSIZE385,8809
	uint8_t buf[CONSBUFSIZE];buf388,8850
	uint8_t buf[CONSBUFSIZE];__anon3::buf388,8850
	uint32_t rpos;rpos389,8877
	uint32_t rpos;__anon3::rpos389,8877
	uint32_t wpos;wpos390,8893
	uint32_t wpos;__anon3::wpos390,8893
} cons;cons391,8909
cons_intr(int (*proc)(void))cons_intr396,9037
cons_getc(void)cons_getc411,9300
cons_putc(int c)cons_putc433,9754
cons_init(void)cons_init442,9860
cputchar(int c)cputchar456,10056
getchar(void)getchar462,10096
iscons(int fdnum)iscons472,10191

kern/entrypgdir.c,163
pte_t entry_pgtable[NPTENTRIES];entry_pgtable4,49
pde_t entry_pgdir[NPDENTRIES] = {entry_pgdir21,934
pte_t entry_pgtable[NPTENTRIES] = {entry_pgtable33,1329

kern/monitor.h,51
#define JOS_KERN_MONITOR_HJOS_KERN_MONITOR_H2,27

kern/pmap.h,397
#define JOS_KERN_PMAP_HJOS_KERN_PMAP_H4,72
#define PADDR(PADDR25,645
_paddr(const char *file, int line, void *kva)_paddr28,722
#define KADDR(KADDR37,1057
_kaddr(const char *file, int line, physaddr_t pa)_kaddr40,1127
	ALLOC_ZERO = 1<<0,ALLOC_ZERO50,1366
page2pa(struct PageInfo *pp)page2pa66,1815
pa2page(physaddr_t pa)pa2page72,1913
page2kva(struct PageInfo *pp)page2kva80,2057

kern/pmap.c,1558
size_t npages;			// Amount of physical memory (in pages)npages13,262
static size_t npages_basemem;	// Amount of base memory (in pages)npages_basemem14,319
pde_t *kern_pgdir;		// Kernel's initial page directorykern_pgdir17,427
struct PageInfo *pages;		// Physical page state arraypages18,482
static struct PageInfo *page_free_list;	// Free list of physical pagespage_free_list19,536
nvram_read(int r)nvram_read27,796
i386_detect_memory(void)i386_detect_memory33,887
boot_alloc(uint32_t n)boot_alloc85,2707
mem_init(void)mem_init126,4082
page_init(void)page_init240,8644
page_alloc(int alloc_flags)page_alloc292,10453
page_free(struct PageInfo *pp)page_free313,10849
page_decref(struct PageInfo* pp)page_decref332,11314
pgdir_walk(pde_t *pgdir, const void *va, int create)pgdir_walk361,12450
boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)boot_map_region404,13482
page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)page_insert435,14578
page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)page_lookup457,15221
page_remove(pde_t *pgdir, void *va)page_remove480,15969
tlb_invalidate(pde_t *pgdir, void *va)tlb_invalidate494,16317
check_page_free_list(bool only_low_memory)check_page_free_list510,16750
check_page_alloc(void)check_page_alloc572,18511
check_kern_pgdir(void)check_kern_pgdir654,20328
check_va2pa(pde_t *pgdir, uintptr_t va)check_va2pa702,21583
check_page(void)check_page718,21864
check_page_installed_pgdir(void)check_page_installed_pgdir870,26659

kern/entry.S,533
#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))SRL7,120
#define	RELOC(x) ((x) - KERNBASE)RELOC18,566
#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)MULTIBOOT_HEADER_MAGIC20,601
#define MULTIBOOT_HEADER_FLAGS (0)MULTIBOOT_HEADER_FLAGS21,645
#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))CHECKSUM22,680
_start = RELOC(entry)_start40,1231
entry:entry43,1267
relocated:relocated69,2169
spin:	jmp	spinspin83,2501
bootstack:bootstack92,2734
bootstacktop:bootstacktop95,2788

kern/init.c,211
i386_init(void)i386_init14,227
const char *panicstr;panicstr42,921
_panic(const char *file, int line, const char *fmt,...)_panic49,1069
_warn(const char *file, int line, const char *fmt,...)_warn74,1502

kern/kdebug.c,181
stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,stab_binsearch51,1753
debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)debuginfo_eip105,3021

kern/kclock.h,420
#define JOS_KERN_KCLOCK_HJOS_KERN_KCLOCK_H4,74
#define	IO_RTC	IO_RTC9,203
#define	MC_NVRAM_START	MC_NVRAM_START11,242
#define	MC_NVRAM_SIZE	MC_NVRAM_SIZE12,301
#define NVRAM_BASELO	NVRAM_BASELO15,393
#define NVRAM_BASEHI	NVRAM_BASEHI16,465
#define NVRAM_EXTLO	NVRAM_EXTLO19,609
#define NVRAM_EXTHI	NVRAM_EXTHI20,680
#define NVRAM_EXT16LO	NVRAM_EXT16LO23,826
#define NVRAM_EXT16HI	NVRAM_EXT16HI24,900

kern/printf.c,136
putch(int ch, int *cnt)putch10,212
vcprintf(const char *fmt, va_list ap)vcprintf17,269
cprintf(const char *fmt, ...)cprintf26,385

grade-lab2,306
r = Runner(save("jos.out"),r5,47
def test_jos():test_jos9,140
def test_check_page_alloc():test_check_page_alloc13,228
def test_check_page():test_check_page17,352
def test_check_kern_pgdir():test_check_kern_pgdir21,470
def test_check_page_installed_pgdir():test_check_page_installed_pgdir25,596

gradelib.py,2816
__all__ = []__all__7,194
TESTS = []TESTS15,361
CURRENT_TEST = NoneCURRENT_TEST18,424
def test(points, title=None, parent=None):test20,445
    def register_test(fn, title=title):register_test26,703
        def run_test():run_test33,923
def end_part(name):end_part79,2398
    def show_part():show_part80,2418
def run_tests():run_tests89,2709
def get_current_test():get_current_test120,3671
def assert_equal(got, expect, msg=""):assert_equal131,3928
def assert_lines_match(text, *regexps, **kw):assert_lines_match140,4221
    def assert_lines_match_kw(no=[]):assert_lines_match_kw145,4445
MAKE_TIMESTAMP = 0MAKE_TIMESTAMP196,6022
def pre_make():pre_make198,6042
def post_make():post_make203,6197
def make(*target):make209,6385
def show_command(cmd):show_command215,6497
def maybe_unlink(*paths):maybe_unlink219,6593
COLORS = {"default": "\033[0m", "red": "\033[31m", "green": "\033[32m"}COLORS227,6784
def color(name, text):color229,6857
def reset_fs():reset_fs234,7032
class QEMU(object):QEMU244,7277
    _GDBPORT = None_GDBPORT245,7297
    def __init__(self, *make_args):__init__247,7318
    def get_gdb_port():get_gdb_port273,8258
    def fileno(self):fileno285,8713
    def handle_read(self):handle_read289,8803
    def wait(self):wait299,9115
    def kill(self):kill304,9216
class GDBClient(object):GDBClient308,9293
    def __init__(self, port, timeout=15):__init__309,9318
    def fileno(self):fileno322,9717
    def handle_read(self):handle_read326,9800
    def __send(self, cmd):__send348,10398
    def __send_break(self):__send_break352,10538
    def close(self):close355,10602
    def cont(self):cont360,10705
    def breakpoint(self, addr):breakpoint363,10751
class TerminateTest(Exception):TerminateTest373,10952
class Runner():Runner376,10994
    def __init__(self, *default_monitors):__init__377,11010
    def run_qemu(self, *monitors, **kw):run_qemu380,11105
        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):run_qemu_kw389,11629
    def __monitor_start(self, output):__monitor_start436,13129
    def __react(self, reactors, timeout):__react446,13439
    def user_test(self, binary, *monitors, **kw):user_test466,14081
    def match(self, *args, **kwargs):match476,14579
def save(path):save488,14924
    def setup_save(runner):setup_save492,15062
    def save_on_finish(fail):save_on_finish498,15236
def stop_breakpoint(addr):stop_breakpoint511,15660
    def setup_breakpoint(runner):setup_breakpoint515,15800
def call_on_line(regexp, callback):call_on_line525,16182
    def setup_call_on_line(runner):setup_call_on_line529,16316
        def handle_output(output):handle_output531,16378
def stop_on_line(regexp):stop_on_line541,16743
    def stop(line):stop545,16856

.dir-locals.el,0

GNUmakefile,1598
OBJDIR := objOBJDIR8,197
LABSETUP ?= ./LABSETUP22,403
TOP = .TOP24,419
GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >/dev/null 2>&1; \GCCPREFIX36,874
QEMU := $(shell if which qemu >/dev/null 2>&1; \QEMU52,1637
GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)GDBPORT67,2275
CC	:= $(GCCPREFIX)gcc -pipeCC69,2324
GDB	:= $(GCCPREFIX)gdbGDB70,2352
AS	:= $(GCCPREFIX)asAS71,2375
AR	:= $(GCCPREFIX)arAR72,2396
LD	:= $(GCCPREFIX)ldLD73,2417
OBJCOPY	:= $(GCCPREFIX)objcopyOBJCOPY74,2438
OBJDUMP	:= $(GCCPREFIX)objdumpOBJDUMP75,2469
NM	:= $(GCCPREFIX)nmNM76,2500
NCC	:= gcc $(CC_VER) -pipeNCC79,2540
NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -WallNATIVE_CFLAGS80,2567
TAR	:= gtarTAR81,2632
PERL	:= perlPERL82,2644
CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MDCFLAGS87,2831
LDFLAGS := -m elf_i386LDFLAGS100,3389
ULDFLAGS := -T user/user.ldULDFLAGS103,3450
GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)GCC_LIB105,3479
OBJDIRS :=OBJDIRS108,3599
KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabsKERN_CFLAGS124,3990
USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabsUSER_CFLAGS125,4036
QEMUOPTS = -drive file=$(OBJDIR)/kern/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)QEMUOPTS143,4546
IMAGES = $(OBJDIR)/kern/kernel.imgIMAGES145,4759
WEBSUB := https://6828.scripts.mit.edu/2018/handin.pyWEBSUB223,6476
UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu/6.828/2018/jos.git (fetch)" | awk '{split($$0,a," "); print a[1]}')UPSTREAM256,7498
